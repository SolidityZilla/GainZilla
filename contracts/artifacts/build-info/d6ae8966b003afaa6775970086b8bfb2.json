{
	"id": "d6ae8966b003afaa6775970086b8bfb2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/gainzilla.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n/*\n\n  /$$$$$$            /$$           /$$$$$$$$ /$$ /$$ /$$          \n /$$__  $$          |__/          |_____ $$ |__/| $$| $$          \n| $$  \\__/  /$$$$$$  /$$ /$$$$$$$      /$$/  /$$| $$| $$  /$$$$$$ \n| $$ /$$$$ |____  $$| $$| $$__  $$    /$$/  | $$| $$| $$ |____  $$\n| $$|_  $$  /$$$$$$$| $$| $$  \\ $$   /$$/   | $$| $$| $$  /$$$$$$$\n| $$  \\ $$ /$$__  $$| $$| $$  | $$  /$$/    | $$| $$| $$ /$$__  $$\n|  $$$$$$/|  $$$$$$$| $$| $$  | $$ /$$$$$$$$| $$| $$| $$|  $$$$$$$\n \\______/  \\_______/|__/|__/  |__/|________/|__/|__/|__/ \\_______/\n                                                                    \nTG :- https://t.me/Gainzilla_Entry\n\n*/\n\npragma solidity ^0.8.4;\n\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n}\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        return c;\n    }\n}\n\ncontract Ownable is Context {\n    address private _owner;\n    address private _previousOwner;\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    constructor() {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n    \n    function renounceOwnership() public virtual onlyOwner() {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n}\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n\ninterface IUniswapV2Factory {\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n}\n\ninterface IUniswapV2Router02 {\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external;\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n    function addLiquidityETH(\n        address token,\n        uint256 amountTokenDesired,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n\nabstract contract IERC20Extented is IERC20 {\n    function decimals() external view virtual returns (uint8);\n    function name() external view virtual returns (string memory);\n    function symbol() external view virtual returns (string memory);\n}\n\ncontract gainZilla is Context, IERC20, IERC20Extented, Ownable {\n    using SafeMath for uint256;\n    string private constant _name = \"GainZilla\";\n    string private constant _symbol = \"GAINZILLA\";\n    uint8 private constant _decimals = 9;\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n    mapping(address => bool) private _isExcludedFromFee;\n    uint256 private constant _tTotal = 1000000000 * 10**9; // 1 Billion Supply\n    uint256 private _firstBlock;\n    uint256 private _botBlocks;\n    uint256 public _maxWalletAmount = 10000001 * 10**9;\n    uint256 public numTokensToSwap = 1000000 * 10**9; // 0.1% - 1 Million (Swap and Liquify)\n\n    // buy fees\n    uint256 public _buyLiquidityFee = 0; // divided by 1000\n    uint256 private _previousBuyLiquidityFee = _buyLiquidityFee;\n    uint256 public _buyEcosystemFee = 0; // divided by 1000\n    uint256 private _previousBuyEcosystemFee = _buyEcosystemFee;\n    uint256 public _buyMarketingFee = 0; // divided by 1000\n    uint256 private _previousBuyMarketingFee = _buyMarketingFee;\n    uint256 public _buyTeamFee = 0; // divided by 1000\n    uint256 private _previousBuyTeamFee = _buyTeamFee;\n\n    // sell fees\n    uint256 public _sellLiquidityFee = 0; // divided by 1000\n    uint256 private _previousSellLiquidityFee = _sellLiquidityFee;\n    uint256 public _sellEcosystemFee = 0; // divided by 1000\n    uint256 private _previousSellEcosystemFee = _sellEcosystemFee;\n    uint256 public _sellMarketingFee = 0; // divided by 1000\n    uint256 private _previousSellMarketingFee = _sellMarketingFee;\n    uint256 public _sellTeamFee = 0; // divided by 1000\n    uint256 private _previousSellTeamFee = _sellTeamFee;\n    uint256 public transferFeeIncreaseFactor = 0; // divided by 100\n\n    struct FeeBreakdown {\n        uint256 tLiquidity;\n        uint256 tMarketing;\n        uint256 tTeam;\n        uint256 tEcosystem;\n        uint256 tAmount;\n    }\n\n    struct StrongHandsConfig {\n        bool enabled;\n        uint32 duration;\n        mapping(address => uint256) walletList;\n    }\n    StrongHandsConfig public cooldown;\n\n    struct DiamondFloor {\n        bool enabled;\n        uint16 triggerPercentage;\n        uint256 athPrice;\n        bool sellStopped;\n        uint256 blockedAth;\n    }\n    DiamondFloor public diamondFloor;\n\n    mapping(address => bool) private bots;\n    address payable private _marketingAddress = payable(owner());\n    address payable private _teamAddress = payable(owner());\n    address payable private _ecosystemAddress = payable(owner());\n    address payable private _lpRecipient = payable(owner());\n    IUniswapV2Router02 private uniswapV2Router;\n    address public uniswapV2Pair;\n    uint256 private _maxTxAmount;\n\n    bool public tradingOpen = false;\n    bool private inSwap = false;\n    bool public canPause = true;\n    bool public canBlackList = true;\n    bool public canChangeTax = true;\n\n    event MaxTxAmountUpdated(uint256 _maxTxAmount);\n    event BuyFeesUpdated(uint256 _buyMarketingFee, uint256 _buyLiquidityFee, uint256 _buyTeamFee, uint256 _buyEcosystemFee);\n    event SellFeesUpdated(uint256 _sellMarketingFee, uint256 _sellLiquidityFee, uint256 _sellTeamFee, uint256 _sellEcosystemFee);\n\n    modifier lockTheSwap {\n        inSwap = true;\n        _;\n        inSwap = false;\n    }\n    constructor() {\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E);\n        uniswapV2Router = _uniswapV2Router;\n        _approve(address(this), address(uniswapV2Router), _tTotal);\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type(uint256).max);\n\n        _maxTxAmount = _tTotal; // start off transaction limit at 100% of total supply\n        _maxWalletAmount = _tTotal; // 100%\n\n        _balances[_msgSender()] = _tTotal;\n        _isExcludedFromFee[owner()] = true;\n        _isExcludedFromFee[address(this)] = true;\n        emit Transfer(address(0), _msgSender(), _tTotal);\n    }\n\n    function name() override external pure returns (string memory) {\n        return _name;\n    }\n\n    function symbol() override external pure returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() override external pure returns (uint8) {\n        return _decimals;\n    }\n\n    function totalSupply() external pure override returns (uint256) {\n        return _tTotal;\n    }\n\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    function isBot(address account) public view returns (bool) {\n        return bots[account];\n    }\n    \n    function transfer(address recipient, uint256 amount) external override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    function allowance(address owner, address spender) external view override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) external override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    function removeAllFee() private {\n        _previousBuyMarketingFee = _buyMarketingFee;\n        _previousBuyLiquidityFee = _buyLiquidityFee;\n        _previousBuyTeamFee = _buyTeamFee;\n        _previousBuyEcosystemFee = _buyEcosystemFee;\n        \n        _buyMarketingFee = 0;\n        _buyLiquidityFee = 0;\n        _buyTeamFee = 0;\n        _buyEcosystemFee = 0;\n\n        _previousSellMarketingFee = _sellMarketingFee;\n        _previousSellLiquidityFee = _sellLiquidityFee;\n        _previousSellTeamFee = _sellTeamFee;\n        _previousSellEcosystemFee = _sellEcosystemFee;\n        \n        _sellMarketingFee = 0;\n        _sellLiquidityFee = 0;\n        _sellTeamFee = 0;\n        _sellEcosystemFee = 0;\n    }\n    \n    function restoreAllFee() private {\n        _buyMarketingFee = _previousBuyMarketingFee;\n        _buyLiquidityFee = _previousBuyLiquidityFee;\n        _buyTeamFee = _previousBuyTeamFee;\n        _buyEcosystemFee = _previousBuyEcosystemFee;\n\n        _sellMarketingFee = _previousSellMarketingFee;\n        _sellLiquidityFee = _previousSellLiquidityFee;\n        _sellTeamFee = _previousSellTeamFee;\n        _sellEcosystemFee = _previousSellEcosystemFee;\n    }\n\n    function _approve(address owner, address spender, uint256 amount) private {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n    \n    function _transfer(address from, address to, uint256 amount) private {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n        require(amount > 0, \"Transfer amount must be greater than zero\");\n\n        bool takeFee = true;\n\n        if (from != owner() && to != owner() && from != address(this) && to != address(this)) {\n            require(tradingOpen, \"Trading is not active\");\n            if (from == uniswapV2Pair && to != address(uniswapV2Router)) {//buys\n\n                if (block.timestamp <= _firstBlock.add(_botBlocks)) {\n                    bots[to] = true;\n                }\n\n                if (!_isExcludedFromFee[to]) {\n                    require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\");\n                }\n            }\n            \n            if (!inSwap && from != uniswapV2Pair && to == uniswapV2Pair) { //sells\n                require(!bots[from] && !bots[to]);\n\n                // Added cooldown check here\n                if (cooldown.enabled) {\n                    require(block.timestamp >= cooldown.walletList[from], \"Strong Hands Protocol active\");\n                    cooldown.walletList[from] = block.timestamp + cooldown.duration;\n                }\n\n                // Diamond Floor check\n                if (diamondFloor.enabled) {\n                    require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\");\n                    _checkPriceConditions();\n                }\n                \n                uint256 contractTokenBalance = balanceOf(address(this));\n\n                if (contractTokenBalance >= numTokensToSwap) {\n                    if (contractTokenBalance > 0) {\n                        if (_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) > 0) {\n                            uint256 autoLPamount = _sellLiquidityFee.mul(contractTokenBalance).div(_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee));\n                            uint256 minusLP = 0;\n                            if (contractTokenBalance >= autoLPamount) {\n                                minusLP = contractTokenBalance.sub(autoLPamount);\n                            }\n                            swapAndLiquify(autoLPamount, minusLP);\n                        }\n                    }\n                    uint256 contractETHBalance = address(this).balance;\n                    if (contractETHBalance > 0) {\n                        sendETHToFee(address(this).balance);\n                    }\n                }\n                    \n            }\n\n            if(from != uniswapV2Pair && to != uniswapV2Pair) { //transfers\n                \n                if (!_isExcludedFromFee[to]) {\n                    require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\");\n                }\n            }\n        }\n\n        if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {\n            takeFee = false;\n        }\n        \n        _tokenTransfer(from, to, amount, takeFee);\n    }   \n\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = uniswapV2Router.WETH();\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount, 0, path, address(this), block.timestamp);\n    }\n\n    function _checkPriceConditions() private {\n        uint256 currentPrice = pairPrice();\n        if (currentPrice == 0) return;\n\n        if (currentPrice > diamondFloor.athPrice) {\n            diamondFloor.athPrice = currentPrice;\n            diamondFloor.sellStopped = false;\n            return;\n        }\n\n        uint256 thresholdPrice = diamondFloor.athPrice\n            .mul(1000).sub(diamondFloor.triggerPercentage)\n            .div(1000);\n\n        if (currentPrice < thresholdPrice) {\n            diamondFloor.sellStopped = true;\n            diamondFloor.blockedAth = diamondFloor.athPrice;\n        }\n\n        if (diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2)) {\n            diamondFloor.sellStopped = false;\n            diamondFloor.athPrice = currentPrice;\n        }\n    }\n\n    function pairPrice() public view returns (uint256) {\n        (uint112 reserve0, uint112 reserve1,) = IUniswapV2Pair(uniswapV2Pair).getReserves();\n        if (reserve0 == 0 || reserve1 == 0) return 0;\n        \n        return IUniswapV2Pair(uniswapV2Pair).token0() == address(this) ?\n            uint256(reserve1).mul(1e18).div(uint256(reserve0)) :\n            uint256(reserve0).mul(1e18).div(uint256(reserve1));\n    }\n    \n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\n\n        // add the liquidity\n        uniswapV2Router.addLiquidityETH{value: ethAmount}(\n              address(this),\n              tokenAmount,\n              0, // slippage is unavoidable\n              0, // slippage is unavoidable\n              _lpRecipient,\n              block.timestamp\n          );\n    }\n  \n    function swapAndLiquify(uint256 lpAmount, uint256 contractTokenBalance) private lockTheSwap {\n        uint256 half = lpAmount.div(2);\n        uint256 otherHalf = lpAmount.sub(half);\n        uint256 initialBalance = address(this).balance;\n        swapTokensForEth(contractTokenBalance.add(half));\n        uint256 newBalance = address(this).balance.sub(initialBalance);\n        if (otherHalf > 0) {\n            addLiquidity(otherHalf, newBalance.mul(half).div(contractTokenBalance.add(half)));\n        }\n    }\n\n    function sendETHToFee(uint256 amount) private {\n        uint256 totalFees = _sellMarketingFee.add(_sellEcosystemFee).add(_sellTeamFee);\n        if (totalFees != 0) {\n            uint256 marketingPortion = amount.mul(_sellMarketingFee).div(totalFees);\n            uint256 teamPortion = amount.mul(_sellTeamFee).div(totalFees);\n            uint256 ecoPortion = amount.sub(marketingPortion).sub(teamPortion);\n            if (marketingPortion > 0) {\n                _marketingAddress.transfer(marketingPortion);\n            }\n            if (teamPortion > 0) {\n                _teamAddress.transfer(teamPortion);\n            }\n            if (ecoPortion > 0) {\n                _ecosystemAddress.transfer(ecoPortion);\n            }\n        }\n    }\n\n    function openTrading(uint256 botBlocks) external onlyOwner() {\n        _firstBlock = block.timestamp;\n        _botBlocks = botBlocks;\n        tradingOpen = true;\n    }\n\n    function enableToken() external onlyOwner() {\n        tradingOpen = true;\n    }\n\n    function disableToken() external onlyOwner() {\n        require(canPause, \"this contract cannot be paused\");\n        tradingOpen = false;\n    }\n\n    function disablePauseAbility() onlyOwner() external {\n        canPause = false;\n    }\n\n    function manualswap() external onlyOwner() {\n        uint256 contractBalance = balanceOf(address(this));\n        if (contractBalance > 0) {\n            swapTokensForEth(contractBalance);\n        }\n    }\n\n    function manualsend() external onlyOwner() {\n        uint256 contractETHBalance = address(this).balance;\n        if (contractETHBalance > 0) {\n            payable(address(owner())).transfer(contractETHBalance);\n        }\n    }\n\n    function manualSendToken(address token) external onlyOwner() {\n        uint256 amount = IERC20(token).balanceOf(address(this));\n        IERC20(token).transfer(owner(), amount);\n    }\n\n    function _tokenTransfer(address sender, address recipient, uint256 amount, bool takeFee) private {\n        if (!takeFee) { \n                removeAllFee();\n        }\n        _transferStandard(sender, recipient, amount);\n        restoreAllFee();\n    }\n\n    function _transferStandard(address sender, address recipient, uint256 amount) private {\n        FeeBreakdown memory fees;\n        if (sender == uniswapV2Pair && recipient != address(uniswapV2Router)) {//buys\n            fees.tMarketing = amount.mul(_buyMarketingFee).div(1000);\n            fees.tLiquidity = amount.mul(_buyLiquidityFee).div(1000);\n            fees.tTeam = amount.mul(_buyTeamFee).div(1000);\n            fees.tEcosystem = amount.mul(_buyEcosystemFee).div(1000);\n        }\n        if (sender != uniswapV2Pair && recipient == uniswapV2Pair) {//sells\n            fees.tMarketing = amount.mul(_sellMarketingFee).div(1000);\n            fees.tLiquidity = amount.mul(_sellLiquidityFee).div(1000);\n            fees.tTeam = amount.mul(_sellTeamFee).div(1000);\n            fees.tEcosystem = amount.mul(_sellEcosystemFee).div(1000);\n        }\n        if (sender != uniswapV2Pair && recipient != uniswapV2Pair) {//transfer\n            fees.tMarketing = (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor).div(100);\n            fees.tLiquidity = (amount.mul(_sellLiquidityFee).div(1000)).mul(transferFeeIncreaseFactor).div(100);\n            fees.tTeam = (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor).div(100);\n            fees.tEcosystem = (amount.mul(_sellEcosystemFee).div(1000)).mul(transferFeeIncreaseFactor).div(100);\n        }\n        \n        fees.tAmount = amount.sub(fees.tMarketing).sub(fees.tLiquidity).sub(fees.tTeam).sub(fees.tEcosystem);\n        \n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(fees.tAmount);\n        _balances[address(this)] = _balances[address(this)].add(fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem));\n        \n        emit Transfer(sender, recipient, fees.tAmount);\n    }\n    \n    receive() external payable {}\n\n    function excludeFromFee(address account) public onlyOwner() {\n        _isExcludedFromFee[account] = true;\n    }\n\n    function includeInFee(address account) external onlyOwner() {\n        _isExcludedFromFee[account] = false;\n    }\n    \n    function removeBot(address account) external onlyOwner() {\n        bots[account] = false;\n    }\n\n    function addBot(address account) external onlyOwner() {\n        require(canBlackList, \"this contract cannot blacklist addresses\");\n        bots[account] = true;\n    }\n\n    function disableBlackListing() onlyOwner() external {\n        canBlackList = false;\n    }\n    \n    function setTransferTransactionMultiplier(uint256 _multiplier) external onlyOwner() {\n        transferFeeIncreaseFactor = _multiplier;\n    }\n\n    function setMaxWalletAmount(uint256 maxWalletAmount) external onlyOwner() {\n        require(maxWalletAmount >= _tTotal.div(1000), \"Amount must be greater than 0.1% of supply\");\n        require(maxWalletAmount <= _tTotal, \"Amount must be less than or equal to totalSupply\");\n        _maxWalletAmount = maxWalletAmount;\n    }\n\n    function setBuyTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {\n        uint256 totalFee = marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee);\n        require(totalFee <= 250, \"Sum of buy fees must be less than or equal to 25%\");\n        require(canChangeTax, \"This function is diabled\");\n\n        _buyMarketingFee = marketingFee;\n        _buyLiquidityFee = liquidityFee;\n        _buyTeamFee = teamFee;\n        _buyEcosystemFee = ecosystemFee;\n        \n        _previousBuyMarketingFee = _buyMarketingFee;\n        _previousBuyLiquidityFee = _buyLiquidityFee;\n        _previousBuyTeamFee = _buyTeamFee;\n        _previousBuyEcosystemFee = _buyEcosystemFee;\n        \n        emit BuyFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee);\n    }\n\n    function setSellTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {\n        uint256 totalFee = marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee);\n        require(totalFee <= 250, \"Sum of sell fees must be less than or equal to 25%\");\n        require(canChangeTax, \"This function is diabled\");\n\n        _sellMarketingFee = marketingFee;\n        _sellLiquidityFee = liquidityFee;\n        _sellTeamFee = teamFee;\n        _sellEcosystemFee = ecosystemFee;\n        \n        _previousSellMarketingFee = _sellMarketingFee;\n        _previousSellLiquidityFee = _sellLiquidityFee;\n        _previousSellTeamFee = _sellTeamFee;\n        _previousSellEcosystemFee = _sellEcosystemFee;\n        \n        emit SellFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee);\n    }\n\n    function disableTaxChange() onlyOwner() external {\n        canChangeTax = false;\n    }\n\n    function updateEcosystemAddress(address payable ecosystemAddress) external onlyOwner() {\n        _ecosystemAddress = ecosystemAddress;\n    }\n    \n    function updateMarketingAddress(address payable marketingAddress) external onlyOwner() {\n        _marketingAddress = marketingAddress;\n    }\n    \n    function updateTeamAddress(address payable teamAddress) external onlyOwner() {\n        _teamAddress = teamAddress;\n    } \n\n    function updateLpRecipient(address payable lpRecipient) external onlyOwner() {\n        _lpRecipient = lpRecipient;\n    }\n\n    function updateNumTokensToSwap(uint256 numTokens) external onlyOwner() {\n        numTokensToSwap = numTokens;\n    }\n\n    function configureStrongHands(bool enabled, uint32 duration) external onlyOwner {\n        cooldown.enabled = enabled;\n        cooldown.duration = duration * 1 minutes;\n    }\n\n    function cooldownRemaining(address account) public view returns (\n        uint256 days_, \n        uint256 hours_, \n        uint256 minutes_, \n        uint256 seconds_\n    ) {\n        uint256 remaining = cooldown.walletList[account] > block.timestamp ? \n            cooldown.walletList[account].sub(block.timestamp) : 0;\n        \n        days_ = remaining.div(86400);\n        remaining %= 86400;\n        hours_ = remaining.div(3600);\n        remaining %= 3600;\n        minutes_ = remaining.div(60);\n        seconds_ = remaining % 60;\n    }\n\n    function ATHvariance() public view returns (int256) {\n    if (diamondFloor.athPrice == 0) return 0;\n    uint256 currentPrice = pairPrice();\n    \n    return currentPrice > diamondFloor.athPrice ?\n        // Positive percentage (increase)\n        int256(\n            currentPrice.sub(diamondFloor.athPrice)\n            .mul(100e1) // Multiply by 100 to get percentage and 1e1 for decimals\n            .div(diamondFloor.athPrice)\n        ) :\n        // Negative percentage (decrease)\n        -int256(\n            diamondFloor.athPrice.sub(currentPrice)\n            .mul(100e1) // Multiply by 100 to get percentage and 1e1 for decimals\n            .div(diamondFloor.athPrice)\n        );\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 10000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/gainzilla.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x4af3813bc629daf871e64a58e0d92d39eca9f85fde0ad0d2955616d20015346d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a20cca7f093d482ce096c66efd1e88c77f58c1928b22ba07b561f8813bccc101\",\"dweb:/ipfs/QmSeMMGCKjnwUZnwZMqwTCeYrhTcp1WxvgL5Bb9rwDNhe2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x4af3813bc629daf871e64a58e0d92d39eca9f85fde0ad0d2955616d20015346d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a20cca7f093d482ce096c66efd1e88c77f58c1928b22ba07b561f8813bccc101\",\"dweb:/ipfs/QmSeMMGCKjnwUZnwZMqwTCeYrhTcp1WxvgL5Bb9rwDNhe2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Extented": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IERC20Extented\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x4af3813bc629daf871e64a58e0d92d39eca9f85fde0ad0d2955616d20015346d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a20cca7f093d482ce096c66efd1e88c77f58c1928b22ba07b561f8813bccc101\",\"dweb:/ipfs/QmSeMMGCKjnwUZnwZMqwTCeYrhTcp1WxvgL5Bb9rwDNhe2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Factory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPair(address,address)": "c9c65396"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x4af3813bc629daf871e64a58e0d92d39eca9f85fde0ad0d2955616d20015346d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a20cca7f093d482ce096c66efd1e88c77f58c1928b22ba07b561f8813bccc101\",\"dweb:/ipfs/QmSeMMGCKjnwUZnwZMqwTCeYrhTcp1WxvgL5Bb9rwDNhe2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x4af3813bc629daf871e64a58e0d92d39eca9f85fde0ad0d2955616d20015346d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a20cca7f093d482ce096c66efd1e88c77f58c1928b22ba07b561f8813bccc101\",\"dweb:/ipfs/QmSeMMGCKjnwUZnwZMqwTCeYrhTcp1WxvgL5Bb9rwDNhe2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x4af3813bc629daf871e64a58e0d92d39eca9f85fde0ad0d2955616d20015346d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a20cca7f093d482ce096c66efd1e88c77f58c1928b22ba07b561f8813bccc101\",\"dweb:/ipfs/QmSeMMGCKjnwUZnwZMqwTCeYrhTcp1WxvgL5Bb9rwDNhe2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/gainzilla.sol\":2611:4000  contract Ownable is Context {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/gainzilla.sol\":2799:2948  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/gainzilla.sol\":2823:2840  address msgSender */\n  0x00\n    /* \"contracts/gainzilla.sol\":2865:2883  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n  caller\n    /* \"contracts/gainzilla.sol\":2865:2883  _owner = msgSender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/gainzilla.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n  swap1\n  swap2\n  dup3\n  swap2\n    /* \"contracts/gainzilla.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/gainzilla.sol\":2823:2840  address msgSender */\n  dup3\n  swap1\n    /* \"contracts/gainzilla.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"contracts/gainzilla.sol\":2799:2948  constructor() {... */\n  pop\n    /* \"contracts/gainzilla.sol\":2611:4000  contract Ownable is Context {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/gainzilla.sol\":2611:4000  contract Ownable is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/gainzilla.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n    tag_4:\n        /* \"contracts/gainzilla.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      sload\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n      0x40\n      dup1\n      mload\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":494:568   */\n      dup3\n      mstore\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":482:484   */\n      0x20\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n      add\n      swap1\n      return\n        /* \"contracts/gainzilla.sol\":3302:3500  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_5:\n      tag_6\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n    tag_7:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      sload(0x00)\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":1188:1190   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1170:1191   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1207:1225   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1200:1230   */\n      mstore\n        /* \"#utility.yul\":1266:1300   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1246:1264   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1239:1301   */\n      mstore\n        /* \"#utility.yul\":1318:1336   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/gainzilla.sol\":3959:3960  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":3943:3949  _owner */\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/gainzilla.sol\":3943:3949  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/gainzilla.sol\":3959:3960  0 */\n      dup4\n      swap1\n        /* \"contracts/gainzilla.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/gainzilla.sol\":3989:3990  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":3972:3991  _owner = address(0) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":3302:3500  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      sload(0x00)\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":1188:1190   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1170:1191   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1207:1225   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1200:1230   */\n      mstore\n        /* \"#utility.yul\":1266:1300   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1246:1264   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1239:1301   */\n      mstore\n        /* \"#utility.yul\":1318:1336   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_20\n        /* \"#utility.yul\":1160:1342   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_26:\n        /* \"contracts/gainzilla.sol\":3390:3412  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":781:783   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":763:784   */\n      mstore\n        /* \"#utility.yul\":820:822   */\n      0x26\n        /* \"#utility.yul\":800:818   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":793:823   */\n      mstore\n        /* \"#utility.yul\":859:893   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":839:857   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":832:894   */\n      mstore\n        /* \"#utility.yul\":930:938   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":910:928   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":903:939   */\n      mstore\n        /* \"#utility.yul\":956:975   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_20\n        /* \"#utility.yul\":753:981   */\n      jump\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_29:\n        /* \"contracts/gainzilla.sol\":3465:3493  _transferOwnership(newOwner) */\n      tag_32\n        /* \"contracts/gainzilla.sol\":3484:3492  newOwner */\n      dup2\n        /* \"contracts/gainzilla.sol\":3465:3483  _transferOwnership */\n      tag_33\n        /* \"contracts/gainzilla.sol\":3465:3493  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/gainzilla.sol\":3302:3500  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":3654:3841  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_33:\n        /* \"contracts/gainzilla.sol\":3727:3743  address oldOwner */\n      0x00\n        /* \"contracts/gainzilla.sol\":3746:3752  _owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/gainzilla.sol\":3762:3779  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/gainzilla.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/gainzilla.sol\":3746:3752  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/gainzilla.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/gainzilla.sol\":3727:3743  address oldOwner */\n      swap1\n        /* \"contracts/gainzilla.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/gainzilla.sol\":3654:3841  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:343   */\n    tag_14:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_38:\n        /* \"#utility.yul\":191:200   */\n      dup2\n        /* \"#utility.yul\":178:201   */\n      calldataload\n        /* \"#utility.yul\":241:283   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":234:239   */\n      dup2\n        /* \"#utility.yul\":230:284   */\n      and\n        /* \"#utility.yul\":223:228   */\n      dup2\n        /* \"#utility.yul\":220:285   */\n      eq\n        /* \"#utility.yul\":210:212   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":304:310   */\n      dup2\n        /* \"#utility.yul\":296:302   */\n      dup3\n        /* \"#utility.yul\":289:311   */\n      revert\n        /* \"#utility.yul\":210:212   */\n    tag_39:\n        /* \"#utility.yul\":332:337   */\n      swap4\n        /* \"#utility.yul\":84:343   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b38a307233e325cea0e104ef497d643e7b4c56c013476a7b064aab15fe31efdc64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061039a806100616000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461007c575b600080fd5b61004e61008f565b005b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61004e61008a366004610329565b610184565b60005473ffffffffffffffffffffffffffffffffffffffff163314610115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610205576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161010c565b73ffffffffffffffffffffffffffffffffffffffff81166102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161010c565b6102b1816102b4565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033a578081fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461035d578182fd5b939250505056fea2646970667358221220b38a307233e325cea0e104ef497d643e7b4c56c013476a7b064aab15fe31efdc64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x39A DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x8A CALLDATASIZE PUSH1 0x4 PUSH2 0x329 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x115 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x205 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x10C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x10C JUMP JUMPDEST PUSH2 0x2B1 DUP2 PUSH2 0x2B4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x35D JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 DUP11 ADDRESS PUSH19 0x33E325CEA0E104EF497D643E7B4C56C013476A PUSH28 0x64AAB15FE31EFDC64736F6C63430008040033000000000000000000 ",
							"sourceMap": "2611:1389:0:-:0;;;2799:149;;;;;;;;;-1:-1:-1;2823:17:0;2865:18;;-1:-1:-1;;;;;;2865:18:0;818:10;2865:18;;;;;2898:43;;818:10;;;;2898:43;;2823:17;;2898:43;2799:149;2611:1389;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1344:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:259:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "287:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "296:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "304:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "289:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "289:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "289:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "223:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "234:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "241:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "230:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "230:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "220:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "220:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "213:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "213:73:1"
															},
															"nodeType": "YulIf",
															"src": "210:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "322:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "332:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "322:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "449:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "459:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "471:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "482:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "467:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "459:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "501:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "524:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "512:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "512:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "494:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "494:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "418:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "429:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "440:4:1",
														"type": ""
													}
												],
												"src": "348:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "753:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "770:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "781:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "763:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "763:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "804:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "815:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "800:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "820:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "793:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "843:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "854:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "839:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "859:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "832:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "832:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "832:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "914:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "925:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "910:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "910:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "930:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "903:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "948:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "960:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "971:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "956:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "956:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "948:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "730:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "744:4:1",
														"type": ""
													}
												],
												"src": "579:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1160:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1177:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1188:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1170:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1170:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1170:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1211:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1222:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1207:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1207:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1227:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1200:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1250:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1261:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1246:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1266:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1239:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1310:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1322:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1333:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1318:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1310:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1137:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1151:4:1",
														"type": ""
													}
												],
												"src": "986:356:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461007c575b600080fd5b61004e61008f565b005b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61004e61008a366004610329565b610184565b60005473ffffffffffffffffffffffffffffffffffffffff163314610115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610205576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161010c565b73ffffffffffffffffffffffffffffffffffffffff81166102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161010c565b6102b1816102b4565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033a578081fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461035d578182fd5b939250505056fea2646970667358221220b38a307233e325cea0e104ef497d643e7b4c56c013476a7b064aab15fe31efdc64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x8A CALLDATASIZE PUSH1 0x4 PUSH2 0x329 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x115 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x205 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x10C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x10C JUMP JUMPDEST PUSH2 0x2B1 DUP2 PUSH2 0x2B4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x35D JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 DUP11 ADDRESS PUSH19 0x33E325CEA0E104EF497D643E7B4C56C013476A PUSH28 0x64AAB15FE31EFDC64736F6C63430008040033000000000000000000 ",
							"sourceMap": "2611:1389:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3851:147;;;:::i;:::-;;2954:77;2992:7;3018:6;2954:77;;;3018:6;;;;494:74:1;;2954:77:0;;;;;482:2:1;2954:77:0;;;3302:198;;;;;;:::i;:::-;;:::i;3851:147::-;3076:6;;:22;:6;818:10;3076:22;3068:67;;;;;;;1188:2:1;3068:67:0;;;1170:21:1;;;1207:18;;;1200:30;1266:34;1246:18;;;1239:62;1318:18;;3068:67:0;;;;;;;;;3959:1:::1;3943:6:::0;;3922:40:::1;::::0;::::1;3943:6:::0;;::::1;::::0;3922:40:::1;::::0;3959:1;;3922:40:::1;3989:1;3972:19:::0;;;::::1;::::0;;3851:147::o;3302:198::-;3076:6;;:22;:6;818:10;3076:22;3068:67;;;;;;;1188:2:1;3068:67:0;;;1170:21:1;;;1207:18;;;1200:30;1266:34;1246:18;;;1239:62;1318:18;;3068:67:0;1160:182:1;3068:67:0;3390:22:::1;::::0;::::1;3382:73;;;::::0;::::1;::::0;;781:2:1;3382:73:0::1;::::0;::::1;763:21:1::0;820:2;800:18;;;793:30;859:34;839:18;;;832:62;930:8;910:18;;;903:36;956:19;;3382:73:0::1;753:228:1::0;3382:73:0::1;3465:28;3484:8;3465:18;:28::i;:::-;3302:198:::0;:::o;3654:187::-;3727:16;3746:6;;;3762:17;;;;;;;;;;3794:40;;3746:6;;;;;;;3794:40;;3727:16;3794:40;3654:187;;:::o;14:329:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;241:42;234:5;230:54;223:5;220:65;210:2;;304:6;296;289:22;210:2;332:5;84:259;-1:-1:-1;;;84:259:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "184400",
								"executionCost": "22599",
								"totalCost": "206999"
							},
							"external": {
								"owner()": "980",
								"renounceOwnership()": "24104",
								"transferOwnership(address)": "23533"
							},
							"internal": {
								"_transferOwnership(address)": "22394"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b38a307233e325cea0e104ef497d643e7b4c56c013476a7b064aab15fe31efdc64736f6c63430008040033",
									".code": [
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 494,
											"end": 568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 482,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1190,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1225,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 1225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1300,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 3990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1190,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1225,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 1225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1300,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1160,
											"end": 1342,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 763,
											"end": 784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 820,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 800,
											"end": 818,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 800,
											"end": 818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 800,
											"end": 818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 793,
											"end": 823,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 859,
											"end": 893,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 839,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 839,
											"end": 857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 839,
											"end": 857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 832,
											"end": 894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 930,
											"end": 938,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 910,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 910,
											"end": 928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 910,
											"end": 928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 903,
											"end": 939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 956,
											"end": 975,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 956,
											"end": 975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 981,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3484,
											"end": 3492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 343,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 14,
											"end": 343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 191,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 241,
											"end": 283,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 234,
											"end": 239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 230,
											"end": 284,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 285,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 210,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 304,
											"end": 310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 296,
											"end": 302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 289,
											"end": 311,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 210,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 332,
											"end": 337,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 84,
											"end": 343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 343,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x4af3813bc629daf871e64a58e0d92d39eca9f85fde0ad0d2955616d20015346d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a20cca7f093d482ce096c66efd1e88c77f58c1928b22ba07b561f8813bccc101\",\"dweb:/ipfs/QmSeMMGCKjnwUZnwZMqwTCeYrhTcp1WxvgL5Bb9rwDNhe2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 228,
								"contract": "contracts/gainzilla.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 230,
								"contract": "contracts/gainzilla.sol:Ownable",
								"label": "_previousOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/gainzilla.sol\":1505:2609  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/gainzilla.sol\":1505:2609  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201870f2704264ed76d3c54ef0ed17666e50d2ae13279c852faba657cd6944589e64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201870f2704264ed76d3c54ef0ed17666e50d2ae13279c852faba657cd6944589e64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR PUSH17 0xF2704264ED76D3C54EF0ED17666E50D2AE SGT 0x27 SWAP13 DUP6 0x2F 0xAB 0xA6 JUMPI 0xCD PUSH10 0x44589E64736F6C634300 ADDMOD DIV STOP CALLER ",
							"sourceMap": "1505:1104:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1505:1104:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201870f2704264ed76d3c54ef0ed17666e50d2ae13279c852faba657cd6944589e64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR PUSH17 0xF2704264ED76D3C54EF0ED17666E50D2AE SGT 0x27 SWAP13 DUP6 0x2F 0xAB 0xA6 JUMPI 0xCD PUSH10 0x44589E64736F6C634300 ADDMOD DIV STOP CALLER ",
							"sourceMap": "1505:1104:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201870f2704264ed76d3c54ef0ed17666e50d2ae13279c852faba657cd6944589e64736f6c63430008040033",
									".code": [
										{
											"begin": 1505,
											"end": 2609,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x4af3813bc629daf871e64a58e0d92d39eca9f85fde0ad0d2955616d20015346d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a20cca7f093d482ce096c66efd1e88c77f58c1928b22ba07b561f8813bccc101\",\"dweb:/ipfs/QmSeMMGCKjnwUZnwZMqwTCeYrhTcp1WxvgL5Bb9rwDNhe2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"gainZilla": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_buyMarketingFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_buyLiquidityFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_buyTeamFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_buyEcosystemFee",
									"type": "uint256"
								}
							],
							"name": "BuyFeesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_maxTxAmount",
									"type": "uint256"
								}
							],
							"name": "MaxTxAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_sellMarketingFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_sellLiquidityFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_sellTeamFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_sellEcosystemFee",
									"type": "uint256"
								}
							],
							"name": "SellFeesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ATHvariance",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_buyEcosystemFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_buyLiquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_buyMarketingFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_buyTeamFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_maxWalletAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellEcosystemFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellLiquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellMarketingFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellTeamFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addBot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "canBlackList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "canChangeTax",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "canPause",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint32",
									"name": "duration",
									"type": "uint32"
								}
							],
							"name": "configureStrongHands",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cooldown",
							"outputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint32",
									"name": "duration",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "cooldownRemaining",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "days_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "hours_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minutes_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "seconds_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "diamondFloor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint16",
									"name": "triggerPercentage",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "athPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "sellStopped",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "blockedAth",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableBlackListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disablePauseAbility",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableTaxChange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enableToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeFromFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeInFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBot",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "manualSendToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "manualsend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "manualswap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "numTokensToSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "botBlocks",
									"type": "uint256"
								}
							],
							"name": "openTrading",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pairPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeBot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "marketingFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "teamFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ecosystemFee",
									"type": "uint256"
								}
							],
							"name": "setBuyTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxWalletAmount",
									"type": "uint256"
								}
							],
							"name": "setMaxWalletAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "marketingFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "teamFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ecosystemFee",
									"type": "uint256"
								}
							],
							"name": "setSellTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_multiplier",
									"type": "uint256"
								}
							],
							"name": "setTransferTransactionMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferFeeIncreaseFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Pair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "ecosystemAddress",
									"type": "address"
								}
							],
							"name": "updateEcosystemAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "lpRecipient",
									"type": "address"
								}
							],
							"name": "updateLpRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "marketingAddress",
									"type": "address"
								}
							],
							"name": "updateMarketingAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numTokens",
									"type": "uint256"
								}
							],
							"name": "updateNumTokensToSwap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "teamAddress",
									"type": "address"
								}
							],
							"name": "updateTeamAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/gainzilla.sol\":8181:30040  contract gainZilla is Context, IERC20, IERC20Extented, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/gainzilla.sol\":8784:8800  10000001 * 10**9 */\n  0x2386f2ab5bca00\n    /* \"contracts/gainzilla.sol\":8750:8800  uint256 public _maxWalletAmount = 10000001 * 10**9 */\n  0x07\n  sstore\n    /* \"contracts/gainzilla.sol\":8839:8854  1000000 * 10**9 */\n  0x038d7ea4c68000\n    /* \"contracts/gainzilla.sol\":8806:8854  uint256 public numTokensToSwap = 1000000 * 10**9 */\n  0x08\n  sstore\n    /* \"contracts/gainzilla.sol\":8950:8951  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":8916:8951  uint256 public _buyLiquidityFee = 0 */\n  0x09\n  sstore\n    /* \"contracts/gainzilla.sol\":9019:9035  _buyLiquidityFee */\n  sload(0x09)\n    /* \"contracts/gainzilla.sol\":8976:9035  uint256 private _previousBuyLiquidityFee = _buyLiquidityFee */\n  0x0a\n  sstore\n    /* \"contracts/gainzilla.sol\":9075:9076  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9041:9076  uint256 public _buyEcosystemFee = 0 */\n  0x0b\n  sstore\n    /* \"contracts/gainzilla.sol\":9144:9160  _buyEcosystemFee */\n  sload(0x0b)\n    /* \"contracts/gainzilla.sol\":9101:9160  uint256 private _previousBuyEcosystemFee = _buyEcosystemFee */\n  0x0c\n  sstore\n    /* \"contracts/gainzilla.sol\":9200:9201  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9166:9201  uint256 public _buyMarketingFee = 0 */\n  0x0d\n  sstore\n    /* \"contracts/gainzilla.sol\":9269:9285  _buyMarketingFee */\n  sload(0x0d)\n    /* \"contracts/gainzilla.sol\":9226:9285  uint256 private _previousBuyMarketingFee = _buyMarketingFee */\n  0x0e\n  sstore\n    /* \"contracts/gainzilla.sol\":9320:9321  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9291:9321  uint256 public _buyTeamFee = 0 */\n  0x0f\n  sstore\n    /* \"contracts/gainzilla.sol\":9384:9395  _buyTeamFee */\n  sload(0x0f)\n    /* \"contracts/gainzilla.sol\":9346:9395  uint256 private _previousBuyTeamFee = _buyTeamFee */\n  0x10\n  sstore\n    /* \"contracts/gainzilla.sol\":9454:9455  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9419:9455  uint256 public _sellLiquidityFee = 0 */\n  0x11\n  sstore\n    /* \"contracts/gainzilla.sol\":9524:9541  _sellLiquidityFee */\n  sload(0x11)\n    /* \"contracts/gainzilla.sol\":9480:9541  uint256 private _previousSellLiquidityFee = _sellLiquidityFee */\n  0x12\n  sstore\n    /* \"contracts/gainzilla.sol\":9582:9583  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9547:9583  uint256 public _sellEcosystemFee = 0 */\n  0x13\n  sstore\n    /* \"contracts/gainzilla.sol\":9652:9669  _sellEcosystemFee */\n  sload(0x13)\n    /* \"contracts/gainzilla.sol\":9608:9669  uint256 private _previousSellEcosystemFee = _sellEcosystemFee */\n  0x14\n  sstore\n    /* \"contracts/gainzilla.sol\":9710:9711  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9675:9711  uint256 public _sellMarketingFee = 0 */\n  0x15\n  sstore\n    /* \"contracts/gainzilla.sol\":9780:9797  _sellMarketingFee */\n  sload(0x15)\n    /* \"contracts/gainzilla.sol\":9736:9797  uint256 private _previousSellMarketingFee = _sellMarketingFee */\n  0x16\n  sstore\n    /* \"contracts/gainzilla.sol\":9833:9834  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9803:9834  uint256 public _sellTeamFee = 0 */\n  0x17\n  sstore\n    /* \"contracts/gainzilla.sol\":9898:9910  _sellTeamFee */\n  sload(0x17)\n    /* \"contracts/gainzilla.sol\":9859:9910  uint256 private _previousSellTeamFee = _sellTeamFee */\n  0x18\n  sstore\n    /* \"contracts/gainzilla.sol\":9959:9960  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9916:9960  uint256 public transferFeeIncreaseFactor = 0 */\n  0x19\n  sstore\n    /* \"contracts/gainzilla.sol\":10624:10631  owner() */\n  tag_1\n    /* \"contracts/gainzilla.sol\":10624:10629  owner */\n  shl(0x20, tag_2)\n    /* \"contracts/gainzilla.sol\":10624:10631  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_1:\n    /* \"contracts/gainzilla.sol\":10572:10632  address payable private _marketingAddress = payable(owner()) */\n  0x21\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  or\n  swap1\n  swap2\n  sstore\n  0x00\n    /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n  sload\n    /* \"contracts/gainzilla.sol\":10638:10693  address payable private _teamAddress = payable(owner()) */\n  0x22\n  dup1\n  sload\n    /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n  swap2\n  swap1\n  swap4\n  and\n    /* \"contracts/gainzilla.sol\":10638:10693  address payable private _teamAddress = payable(owner()) */\n  swap1\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/gainzilla.sol\":10699:10759  address payable private _ecosystemAddress = payable(owner()) */\n  0x23\n  dup1\n  sload\n  dup3\n  and\n  dup4\n  or\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":10765:10820  address payable private _lpRecipient = payable(owner()) */\n  0x24\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":10943:10974  bool public tradingOpen = false */\n  0x28\n  dup1\n  sload\n  not(0xffffffffff)\n    /* \"contracts/gainzilla.sol\":11083:11114  bool public canChangeTax = true */\n  and\n  0x0101010000\n  or\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":11520:12296  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_6\n  jumpi\n  0x00\n  dup1\n  revert\ntag_6:\n  pop\n    /* \"contracts/gainzilla.sol\":2823:2840  address msgSender */\n  0x00\n    /* \"contracts/gainzilla.sol\":2865:2883  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n  caller\n    /* \"contracts/gainzilla.sol\":2865:2883  _owner = msgSender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/gainzilla.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n  swap1\n  swap2\n  dup3\n  swap2\n    /* \"contracts/gainzilla.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/gainzilla.sol\":2823:2840  address msgSender */\n  dup3\n  swap1\n    /* \"contracts/gainzilla.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/gainzilla.sol\":11654:11669  uniswapV2Router */\n  0x25\n    /* \"contracts/gainzilla.sol\":11654:11688  uniswapV2Router = _uniswapV2Router */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/gainzilla.sol\":11601:11643  0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  0x10ed43c718714eb63d5aa57b78b54704e256024e\n    /* \"contracts/gainzilla.sol\":11654:11688  uniswapV2Router = _uniswapV2Router */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/gainzilla.sol\":11698:11756  _approve(address(this), address(uniswapV2Router), _tTotal) */\n  tag_13\n    /* \"contracts/gainzilla.sol\":11715:11719  this */\n  address\n    /* \"contracts/gainzilla.sol\":11601:11643  0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  dup3\n    /* \"contracts/gainzilla.sol\":8641:8659  1000000000 * 10**9 */\n  0x0de0b6b3a7640000\n    /* \"contracts/gainzilla.sol\":11698:11706  _approve */\n  tag_14\n    /* \"contracts/gainzilla.sol\":11698:11756  _approve(address(this), address(uniswapV2Router), _tTotal) */\n  jump\t// in\ntag_13:\n    /* \"contracts/gainzilla.sol\":11800:11816  _uniswapV2Router */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":11800:11824  _uniswapV2Router.factory */\n  and\n  0xc45a0155\n    /* \"contracts/gainzilla.sol\":11800:11826  _uniswapV2Router.factory() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_15\n  jumpi\n  0x00\n  dup1\n  revert\ntag_15:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_17\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_17:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":11782:11838  IUniswapV2Factory(_uniswapV2Router.factory()).createPair */\n  and\n  0xc9c65396\n    /* \"contracts/gainzilla.sol\":11847:11851  this */\n  address\n    /* \"contracts/gainzilla.sol\":11854:11870  _uniswapV2Router */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":11854:11875  _uniswapV2Router.WETH */\n  and\n  0xad5c4648\n    /* \"contracts/gainzilla.sol\":11854:11877  _uniswapV2Router.WETH() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup1\n  revert\ntag_20:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_22\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_22:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_23\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_23:\n    /* \"contracts/gainzilla.sol\":11782:11878  IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n  mload(0x40)\n  not(sub(shl(0xe0, 0x01), 0x01))\n  0xe0\n  dup6\n  swap1\n  shl\n  and\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":861:876   */\n  swap3\n  dup4\n  and\n    /* \"contracts/gainzilla.sol\":11782:11878  IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":843:877   */\n  mstore\n    /* \"#utility.yul\":913:928   */\n  swap2\n  and\n    /* \"#utility.yul\":893:911   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":886:929   */\n  mstore\n    /* \"#utility.yul\":778:796   */\n  0x44\n  add\n    /* \"contracts/gainzilla.sol\":11782:11878  IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_26\n  jumpi\n  0x00\n  dup1\n  revert\ntag_26:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_28\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_28:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_29\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_29:\n    /* \"contracts/gainzilla.sol\":11766:11779  uniswapV2Pair */\n  0x26\n    /* \"contracts/gainzilla.sol\":11766:11878  uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/gainzilla.sol\":11926:11941  uniswapV2Router */\n  sload(0x25)\n    /* \"contracts/gainzilla.sol\":11888:11961  IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type(uint256).max) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n    /* \"contracts/gainzilla.sol\":11926:11941  uniswapV2Router */\n  swap3\n  and\n    /* \"contracts/gainzilla.sol\":11888:11961  IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type(uint256).max) */\n  0x04\n  dup4\n  add\n    /* \"#utility.yul\":1114:1165   */\n  mstore\n  not(0x00)\n    /* \"#utility.yul\":1181:1199   */\n  0x24\n  dup4\n  add\n    /* \"#utility.yul\":1174:1208   */\n  mstore\n    /* \"contracts/gainzilla.sol\":11766:11878  uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n  swap1\n    /* \"contracts/gainzilla.sol\":11888:11917  IERC20(uniswapV2Pair).approve */\n  0x095ea7b3\n  swap1\n    /* \"#utility.yul\":1087:1105   */\n  0x44\n  add\n    /* \"contracts/gainzilla.sol\":11888:11961  IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type(uint256).max) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_32\n  jumpi\n  0x00\n  dup1\n  revert\ntag_32:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_34\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_34:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  pop\n    /* \"contracts/gainzilla.sol\":8641:8659  1000000000 * 10**9 */\n  0x0de0b6b3a7640000\n    /* \"contracts/gainzilla.sol\":11972:11984  _maxTxAmount */\n  0x27\n    /* \"contracts/gainzilla.sol\":11972:11994  _maxTxAmount = _tTotal */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":12059:12075  _maxWalletAmount */\n  0x07\n    /* \"contracts/gainzilla.sol\":12059:12085  _maxWalletAmount = _tTotal */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n  caller\n  0x00\n    /* \"contracts/gainzilla.sol\":12104:12127  _balances[_msgSender()] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/gainzilla.sol\":12104:12113  _balances */\n  0x02\n  0x20\n    /* \"contracts/gainzilla.sol\":12104:12127  _balances[_msgSender()] */\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/gainzilla.sol\":12104:12137  _balances[_msgSender()] = _tTotal */\n  dup6\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n  dup3\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"contracts/gainzilla.sol\":12147:12174  _isExcludedFromFee[owner()] */\n  dup4\n  mstore\n    /* \"contracts/gainzilla.sol\":12147:12165  _isExcludedFromFee */\n  0x04\n    /* \"contracts/gainzilla.sol\":12147:12174  _isExcludedFromFee[owner()] */\n  dup3\n  mstore\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/gainzilla.sol\":12147:12181  _isExcludedFromFee[owner()] = true */\n  dup1\n  sload\n    /* \"contracts/gainzilla.sol\":12177:12181  true */\n  0x01\n  not(0xff)\n    /* \"contracts/gainzilla.sol\":12147:12181  _isExcludedFromFee[owner()] = true */\n  swap2\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/gainzilla.sol\":12218:12222  this */\n  address\n    /* \"contracts/gainzilla.sol\":12191:12224  _isExcludedFromFee[address(this)] */\n  dup6\n  mstore\n  dup3\n  dup6\n  keccak256\n    /* \"contracts/gainzilla.sol\":12191:12231  _isExcludedFromFee[address(this)] = true */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":12246:12289  Transfer(address(0), _msgSender(), _tTotal) */\n  mload\n    /* \"#utility.yul\":2173:2198   */\n  swap4\n  dup5\n  mstore\n    /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n  swap2\n  swap3\n  swap1\n  swap2\n    /* \"contracts/gainzilla.sol\":12246:12289  Transfer(address(0), _msgSender(), _tTotal) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":2146:2164   */\n  add\n    /* \"contracts/gainzilla.sol\":12246:12289  Transfer(address(0), _msgSender(), _tTotal) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/gainzilla.sol\":11520:12296  constructor() {... */\n  pop\n    /* \"contracts/gainzilla.sol\":8181:30040  contract gainZilla is Context, IERC20, IERC20Extented, Ownable {... */\n  jump(tag_53)\n    /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\ntag_2:\n    /* \"contracts/gainzilla.sol\":2992:2999  address */\n  0x00\n    /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap1\n    /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n  jump\t// out\n    /* \"contracts/gainzilla.sol\":14904:15234  function _approve(address owner, address spender, uint256 amount) private {... */\ntag_14:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":14996:15015  owner != address(0) */\n  dup4\n  and\n    /* \"contracts/gainzilla.sol\":14988:15056  require(owner != address(0), \"ERC20: approve from the zero address\") */\n  tag_46\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1824:1826   */\n  0x20\n    /* \"contracts/gainzilla.sol\":14988:15056  require(owner != address(0), \"ERC20: approve from the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1806:1827   */\n  mstore\n    /* \"#utility.yul\":1863:1865   */\n  0x24\n    /* \"#utility.yul\":1843:1861   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":1836:1866   */\n  mstore\n    /* \"#utility.yul\":1902:1936   */\n  0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n    /* \"#utility.yul\":1882:1900   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1875:1937   */\n  mstore\n  shl(0xe0, 0x72657373)\n    /* \"#utility.yul\":1953:1971   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1946:1980   */\n  mstore\n    /* \"#utility.yul\":1997:2016   */\n  0x84\n  add\n    /* \"contracts/gainzilla.sol\":14988:15056  require(owner != address(0), \"ERC20: approve from the zero address\") */\ntag_47:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_46:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":15074:15095  spender != address(0) */\n  dup3\n  and\n    /* \"contracts/gainzilla.sol\":15066:15134  require(spender != address(0), \"ERC20: approve to the zero address\") */\n  tag_49\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1421:1423   */\n  0x20\n    /* \"contracts/gainzilla.sol\":15066:15134  require(spender != address(0), \"ERC20: approve to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1403:1424   */\n  mstore\n    /* \"#utility.yul\":1460:1462   */\n  0x22\n    /* \"#utility.yul\":1440:1458   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1433:1463   */\n  mstore\n    /* \"#utility.yul\":1499:1533   */\n  0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n    /* \"#utility.yul\":1479:1497   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1472:1534   */\n  mstore\n  shl(0xf0, 0x7373)\n    /* \"#utility.yul\":1550:1568   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1543:1575   */\n  mstore\n    /* \"#utility.yul\":1592:1611   */\n  0x84\n  add\n    /* \"contracts/gainzilla.sol\":15066:15134  require(spender != address(0), \"ERC20: approve to the zero address\") */\n  tag_47\n    /* \"#utility.yul\":1393:1617   */\n  jump\n    /* \"contracts/gainzilla.sol\":15066:15134  require(spender != address(0), \"ERC20: approve to the zero address\") */\ntag_49:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":15144:15162  _allowances[owner] */\n  dup4\n  dup2\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"contracts/gainzilla.sol\":15144:15155  _allowances */\n  0x03\n    /* \"contracts/gainzilla.sol\":15144:15162  _allowances[owner] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/gainzilla.sol\":15144:15171  _allowances[owner][spender] */\n  swap5\n  dup8\n  and\n  dup1\n  dup5\n  mstore\n  swap5\n  dup3\n  mstore\n  swap2\n  dup3\n  swap1\n  keccak256\n    /* \"contracts/gainzilla.sol\":15144:15180  _allowances[owner][spender] = amount */\n  dup6\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":15195:15227  Approval(owner, spender, amount) */\n  swap1\n  mload\n    /* \"#utility.yul\":2173:2198   */\n  dup5\n  dup2\n  mstore\n    /* \"contracts/gainzilla.sol\":15195:15227  Approval(owner, spender, amount) */\n  0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n  swap2\n    /* \"#utility.yul\":2146:2164   */\n  add\n    /* \"contracts/gainzilla.sol\":15195:15227  Approval(owner, spender, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/gainzilla.sol\":14904:15234  function _approve(address owner, address spender, uint256 amount) private {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:324   */\ntag_19:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:107   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":158:164   */\n  dup1\n    /* \"#utility.yul\":150:156   */\n  dup2\n    /* \"#utility.yul\":143:165   */\n  revert\n    /* \"#utility.yul\":105:107   */\ntag_55:\n    /* \"#utility.yul\":189:205   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":234:265   */\n  dup2\n  and\n    /* \"#utility.yul\":224:266   */\n  dup2\n  eq\n    /* \"#utility.yul\":214:216   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":285:291   */\n  dup2\n    /* \"#utility.yul\":277:283   */\n  dup3\n    /* \"#utility.yul\":270:292   */\n  revert\n    /* \"#utility.yul\":214:216   */\ntag_56:\n    /* \"#utility.yul\":313:318   */\n  swap4\n    /* \"#utility.yul\":95:324   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":329:626   */\ntag_36:\n    /* \"#utility.yul\":396:402   */\n  0x00\n    /* \"#utility.yul\":449:451   */\n  0x20\n    /* \"#utility.yul\":437:446   */\n  dup3\n    /* \"#utility.yul\":428:435   */\n  dup5\n    /* \"#utility.yul\":424:447   */\n  sub\n    /* \"#utility.yul\":420:452   */\n  slt\n    /* \"#utility.yul\":417:419   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":470:476   */\n  dup1\n    /* \"#utility.yul\":462:468   */\n  dup2\n    /* \"#utility.yul\":455:477   */\n  revert\n    /* \"#utility.yul\":417:419   */\ntag_58:\n    /* \"#utility.yul\":507:516   */\n  dup2\n    /* \"#utility.yul\":501:517   */\n  mload\n    /* \"#utility.yul\":560:565   */\n  dup1\n    /* \"#utility.yul\":553:566   */\n  iszero\n    /* \"#utility.yul\":546:567   */\n  iszero\n    /* \"#utility.yul\":539:544   */\n  dup2\n    /* \"#utility.yul\":536:568   */\n  eq\n    /* \"#utility.yul\":526:528   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":587:593   */\n  dup2\n    /* \"#utility.yul\":579:585   */\n  dup3\n    /* \"#utility.yul\":572:594   */\n  revert\n    /* \"#utility.yul\":2128:2204   */\ntag_53:\n    /* \"contracts/gainzilla.sol\":8181:30040  contract gainZilla is Context, IERC20, IERC20Extented, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/gainzilla.sol\":8181:30040  contract gainZilla is Context, IERC20, IERC20Extented, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x80670f3c\n      gt\n      tag_60\n      jumpi\n      dup1\n      0xc95457ff\n      gt\n      tag_61\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_62\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_63\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_56\n      jumpi\n      dup1\n      0xf480fec2\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xffb54a99\n      eq\n      tag_58\n      jumpi\n      dup1\n      0xffecf516\n      eq\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      dup1\n      0xdd62ed3e\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xe315a6da\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xe4bf1bed\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xea2f0b37\n      eq\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      dup1\n      0xd1633649\n      gt\n      tag_64\n      jumpi\n      dup1\n      0xd1633649\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xd55cb78a\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xdb0045ec\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xdc44b6a0\n      eq\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      dup1\n      0xc95457ff\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xcab03471\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xcdb3858f\n      eq\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      dup1\n      0x9d82190f\n      gt\n      tag_65\n      jumpi\n      dup1\n      0xc3c8cd80\n      gt\n      tag_66\n      jumpi\n      dup1\n      0xc3c8cd80\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xc469b6dd\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xc5d24189\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xc8607952\n      eq\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup1\n      0x9d82190f\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xa850673d\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup1\n      0x8e360253\n      gt\n      tag_67\n      jumpi\n      dup1\n      0x8e360253\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x9491f94d\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x99a7b9bc\n      eq\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      dup1\n      0x80670f3c\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x88790a68\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      dup1\n      0x39a53c4e\n      gt\n      tag_68\n      jumpi\n      dup1\n      0x6c0a24eb\n      gt\n      tag_69\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_70\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x729cb3f2\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x72b2aecc\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x787a08a6\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      dup1\n      0x6c0a24eb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x6fc3eaec\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      dup1\n      0x437823ec\n      gt\n      tag_71\n      jumpi\n      dup1\n      0x437823ec\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x49bd5a5e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x5fecd926\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x6aabff3f\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup1\n      0x39a53c4e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x3bbac579\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x3e0f966d\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      dup1\n      0x248dd232\n      gt\n      tag_72\n      jumpi\n      dup1\n      0x29409395\n      gt\n      tag_73\n      jumpi\n      dup1\n      0x29409395\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x301ad558\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x323be1c5\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      dup1\n      0x248dd232\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x27a14fc2\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2843631d\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      dup1\n      0x14eb76ac\n      gt\n      tag_74\n      jumpi\n      dup1\n      0x14eb76ac\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2369bf83\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      dup1\n      0x01a6c43b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/gainzilla.sol\":8806:8854  uint256 public numTokensToSwap = 1000000 * 10**9 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      sload(0x08)\n      dup2\n      jump\n    tag_78:\n      mload(0x40)\n        /* \"#utility.yul\":6702:6727   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":6690:6692   */\n      0x20\n        /* \"#utility.yul\":6675:6693   */\n      add\n        /* \"contracts/gainzilla.sol\":8806:8854  uint256 public numTokensToSwap = 1000000 * 10**9 */\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/gainzilla.sol\":12302:12394  function name() override external pure returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n        /* \"contracts/gainzilla.sol\":12382:12387  _name */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x09\n      dup2\n      mstore\n      0x4761696e5a696c6c610000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/gainzilla.sol\":12302:12394  function name() override external pure returns (string memory) {... */\n    tag_83:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":13251:13411  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      mload(0x40)\n        /* \"#utility.yul\":5754:5768   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5747:5769   */\n      iszero\n        /* \"#utility.yul\":5729:5770   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5717:5719   */\n      0x20\n        /* \"#utility.yul\":5702:5720   */\n      add\n        /* \"contracts/gainzilla.sol\":13251:13411  function approve(address spender, uint256 amount) external override returns (bool) {... */\n      tag_80\n        /* \"#utility.yul\":5684:5776   */\n      jump\n        /* \"contracts/gainzilla.sol\":28253:28373  function updateTeamAddress(address payable teamAddress) external onlyOwner() {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/gainzilla.sol\":12600:12695  function totalSupply() external pure override returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n        /* \"contracts/gainzilla.sol\":8641:8659  1000000000 * 10**9 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":12600:12695  function totalSupply() external pure override returns (uint256) {... */\n      jump(tag_78)\n        /* \"contracts/gainzilla.sol\":28103:28243  function updateMarketingAddress(address payable marketingAddress) external onlyOwner() {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_95\n      tag_105\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":13417:13725  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_88\n      tag_109\n      calldatasize\n      0x04\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9547:9583  uint256 public _sellEcosystemFee = 0 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_78\n      sload(0x13)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":25859:26182  function setMaxWalletAmount(uint256 maxWalletAmount) external onlyOwner() {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_95\n      tag_119\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9041:9076  uint256 public _buyEcosystemFee = 0 */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_78\n      sload(0x0b)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":22766:22948  function manualSendToken(address token) external onlyOwner() {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_95\n      tag_128\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_128:\n      tag_130\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":11046:11077  bool public canBlackList = true */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      sload(0x28)\n      tag_88\n      swap1\n      0x01000000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":12502:12594  function decimals() override external pure returns (uint8) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      mload(0x40)\n        /* \"contracts/gainzilla.sol\":8417:8418  9 */\n      0x09\n        /* \"#utility.yul\":17040:17076   */\n      dup2\n      mstore\n        /* \"#utility.yul\":17028:17030   */\n      0x20\n        /* \"#utility.yul\":17013:17031   */\n      add\n        /* \"contracts/gainzilla.sol\":12502:12594  function decimals() override external pure returns (uint8) {... */\n      tag_80\n        /* \"#utility.yul\":16995:17082   */\n      jump\n        /* \"contracts/gainzilla.sol\":11013:11040  bool public canPause = true */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      sload(0x28)\n      tag_88\n      swap1\n      0x010000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":11083:11114  bool public canChangeTax = true */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      sload(0x28)\n      tag_88\n      swap1\n      0x0100000000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":12824:12920  function isBot(address account) public view returns (bool) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_88\n      tag_150\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":12900:12913  bots[account] */\n      and\n        /* \"contracts/gainzilla.sol\":12877:12881  bool */\n      0x00\n        /* \"contracts/gainzilla.sol\":12900:12913  bots[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":12900:12904  bots */\n      0x20\n        /* \"contracts/gainzilla.sol\":12900:12913  bots[account] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":12824:12920  function isBot(address account) public view returns (bool) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":22087:22229  function disableToken() external onlyOwner() {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_95\n      tag_155\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":25102:25213  function excludeFromFee(address account) public onlyOwner() {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_95\n      tag_158\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_158:\n      tag_159\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":10874:10902  address public uniswapV2Pair */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      sload(0x26)\n      tag_161\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_161:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4577:4632   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4559:4633   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4547:4549   */\n      0x20\n        /* \"#utility.yul\":4532:4550   */\n      add\n        /* \"contracts/gainzilla.sol\":10874:10902  address public uniswapV2Pair */\n      tag_80\n        /* \"#utility.yul\":4514:4639   */\n      jump\n        /* \"contracts/gainzilla.sol\":25341:25436  function removeBot(address account) external onlyOwner() {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_95\n      tag_167\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_167:\n      tag_168\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":22235:22320  function disablePauseAbility() onlyOwner() external {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_95\n      tag_171\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":8750:8800  uint256 public _maxWalletAmount = 10000001 * 10**9 */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      tag_78\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":22534:22760  function manualsend() external onlyOwner() {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      pop\n      tag_95\n      tag_178\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":12701:12818  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      tag_78\n      tag_181\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":12793:12811  _balances[account] */\n      and\n        /* \"contracts/gainzilla.sol\":12767:12774  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":12793:12811  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":12793:12802  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":12793:12811  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/gainzilla.sol\":12701:12818  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      tag_95\n      tag_186\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":28627:28800  function configureStrongHands(bool enabled, uint32 duration) external onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      tag_95\n      tag_189\n      calldatasize\n      0x04\n      tag_190\n      jump\t// in\n    tag_189:\n      tag_191\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9916:9960  uint256 public transferFeeIncreaseFactor = 0 */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      tag_78\n      sload(0x19)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":10282:10315  StrongHandsConfig public cooldown */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      sload(0x1a)\n      tag_197\n      swap1\n      0xff\n      dup2\n      and\n      swap1\n      0x0100\n      swap1\n      div\n      0xffffffff\n      and\n      dup3\n      jump\n    tag_197:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6471:6485   */\n      swap3\n      iszero\n        /* \"#utility.yul\":6464:6486   */\n      iszero\n        /* \"#utility.yul\":6446:6487   */\n      dup4\n      mstore\n        /* \"#utility.yul\":6535:6545   */\n      0xffffffff\n        /* \"#utility.yul\":6523:6546   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6518:6520   */\n      0x20\n        /* \"#utility.yul\":6503:6521   */\n      dup4\n      add\n        /* \"#utility.yul\":6496:6547   */\n      mstore\n        /* \"#utility.yul\":6419:6437   */\n      add\n        /* \"contracts/gainzilla.sol\":10282:10315  StrongHandsConfig public cooldown */\n      tag_80\n        /* \"#utility.yul\":6401:6553   */\n      jump\n        /* \"contracts/gainzilla.sol\":29350:30038  function ATHvariance() public view returns (int256) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n      pop\n      tag_78\n      tag_203\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9419:9455  uint256 public _sellLiquidityFee = 0 */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      tag_78\n      sload(0x11)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n      pop\n        /* \"contracts/gainzilla.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n      jump(tag_161)\n        /* \"contracts/gainzilla.sol\":22002:22081  function enableToken() external onlyOwner() {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n      pop\n      tag_95\n      tag_216\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":19681:20097  function pairPrice() public view returns (uint256) {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_217\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_217:\n      pop\n      tag_78\n      tag_219\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":12400:12496  function symbol() override external pure returns (string memory) {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n      pop\n        /* \"contracts/gainzilla.sol\":12482:12489  _symbol */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x09\n      dup2\n      mstore\n      0x4741494e5a494c4c410000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/gainzilla.sol\":12400:12496  function symbol() override external pure returns (string memory) {... */\n      jump(tag_83)\n        /* \"contracts/gainzilla.sol\":27861:27947  function disableTaxChange() onlyOwner() external {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_225\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_225:\n      pop\n      tag_95\n      tag_227\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":28806:29344  function cooldownRemaining(address account) public view returns (... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_228\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_228:\n      pop\n      tag_229\n      tag_230\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_230:\n      tag_231\n      jump\t// in\n    tag_229:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":16733:16758   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":16789:16791   */\n      0x20\n        /* \"#utility.yul\":16774:16792   */\n      dup6\n      add\n        /* \"#utility.yul\":16767:16801   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":16817:16835   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":16810:16844   */\n      mstore\n        /* \"#utility.yul\":16875:16877   */\n      0x60\n        /* \"#utility.yul\":16860:16878   */\n      dup3\n      add\n        /* \"#utility.yul\":16853:16887   */\n      mstore\n        /* \"#utility.yul\":16720:16723   */\n      0x80\n        /* \"#utility.yul\":16705:16724   */\n      add\n        /* \"contracts/gainzilla.sol\":28806:29344  function cooldownRemaining(address account) public view returns (... */\n      tag_80\n        /* \"#utility.yul\":16687:16893   */\n      jump\n        /* \"contracts/gainzilla.sol\":25713:25853  function setTransferTransactionMultiplier(uint256 _multiplier) external onlyOwner() {... */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      pop\n      tag_95\n      tag_236\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n    tag_236:\n      tag_237\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":12930:13096  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_238\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_238:\n      pop\n      tag_88\n      tag_240\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_240:\n      tag_241\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":22326:22528  function manualswap() external onlyOwner() {... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_243\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_243:\n      pop\n      tag_95\n      tag_245\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9291:9321  uint256 public _buyTeamFee = 0 */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_246\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_246:\n      pop\n      tag_78\n      sload(0x0f)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":9166:9201  uint256 public _buyMarketingFee = 0 */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_250\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_250:\n      pop\n      tag_78\n      sload(0x0d)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":9675:9711  uint256 public _sellMarketingFee = 0 */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_254\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_254:\n      pop\n      tag_78\n      sload(0x15)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":10490:10522  DiamondFloor public diamondFloor */\n    tag_45:\n      callvalue\n      dup1\n      iszero\n      tag_258\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_258:\n      pop\n      sload(0x1c)\n      sload(0x1d)\n      sload(0x1e)\n      sload(0x1f)\n      tag_259\n      swap4\n      0xff\n      dup1\n      dup3\n      and\n      swap5\n      0x0100\n      swap1\n      swap3\n      div\n      0xffff\n      and\n      swap4\n      swap2\n      swap3\n      swap2\n      and\n      swap1\n      dup6\n      jump\n    tag_259:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6051:6065   */\n      swap6\n      iszero\n        /* \"#utility.yul\":6044:6066   */\n      iszero\n        /* \"#utility.yul\":6026:6067   */\n      dup7\n      mstore\n        /* \"#utility.yul\":6115:6121   */\n      0xffff\n        /* \"#utility.yul\":6103:6122   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":6098:6100   */\n      0x20\n        /* \"#utility.yul\":6083:6101   */\n      dup7\n      add\n        /* \"#utility.yul\":6076:6123   */\n      mstore\n        /* \"#utility.yul\":6139:6157   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":6132:6166   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6209:6223   */\n      iszero\n        /* \"#utility.yul\":6202:6224   */\n      iszero\n        /* \"#utility.yul\":6197:6199   */\n      0x60\n        /* \"#utility.yul\":6182:6200   */\n      dup4\n      add\n        /* \"#utility.yul\":6175:6225   */\n      mstore\n        /* \"#utility.yul\":6256:6259   */\n      0x80\n        /* \"#utility.yul\":6241:6260   */\n      dup3\n      add\n        /* \"#utility.yul\":6234:6269   */\n      mstore\n        /* \"#utility.yul\":6013:6016   */\n      0xa0\n        /* \"#utility.yul\":5998:6017   */\n      add\n        /* \"contracts/gainzilla.sol\":10490:10522  DiamondFloor public diamondFloor */\n      tag_80\n        /* \"#utility.yul\":5980:6275   */\n      jump\n        /* \"contracts/gainzilla.sol\":9803:9834  uint256 public _sellTeamFee = 0 */\n    tag_46:\n      callvalue\n      dup1\n      iszero\n      tag_263\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_263:\n      pop\n      tag_78\n      sload(0x17)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":28380:28500  function updateLpRecipient(address payable lpRecipient) external onlyOwner() {... */\n    tag_47:\n      callvalue\n      dup1\n      iszero\n      tag_267\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_267:\n      pop\n      tag_95\n      tag_269\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_269:\n      tag_270\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":21829:21996  function openTrading(uint256 botBlocks) external onlyOwner() {... */\n    tag_48:\n      callvalue\n      dup1\n      iszero\n      tag_271\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_271:\n      pop\n      tag_95\n      tag_273\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n    tag_273:\n      tag_274\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":25614:25703  function disableBlackListing() onlyOwner() external {... */\n    tag_49:\n      callvalue\n      dup1\n      iszero\n      tag_275\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_275:\n      pop\n      tag_95\n      tag_277\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":27953:28093  function updateEcosystemAddress(address payable ecosystemAddress) external onlyOwner() {... */\n    tag_50:\n      callvalue\n      dup1\n      iszero\n      tag_278\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_278:\n      pop\n      tag_95\n      tag_280\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_280:\n      tag_281\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":8916:8951  uint256 public _buyLiquidityFee = 0 */\n    tag_51:\n      callvalue\n      dup1\n      iszero\n      tag_282\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_282:\n      pop\n      tag_78\n      sload(0x09)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":13102:13245  function allowance(address owner, address spender) external view override returns (uint256) {... */\n    tag_52:\n      callvalue\n      dup1\n      iszero\n      tag_286\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_286:\n      pop\n      tag_78\n      tag_288\n      calldatasize\n      0x04\n      tag_289\n      jump\t// in\n    tag_288:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":13211:13229  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/gainzilla.sol\":13185:13192  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":13211:13229  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":13211:13222  _allowances */\n      0x03\n        /* \"contracts/gainzilla.sol\":13211:13229  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/gainzilla.sol\":13211:13238  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/gainzilla.sol\":13102:13245  function allowance(address owner, address spender) external view override returns (uint256) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":28506:28621  function updateNumTokensToSwap(uint256 numTokens) external onlyOwner() {... */\n    tag_53:\n      callvalue\n      dup1\n      iszero\n      tag_292\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_292:\n      pop\n      tag_95\n      tag_294\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n    tag_294:\n      tag_295\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":26188:27011  function setBuyTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {... */\n    tag_54:\n      callvalue\n      dup1\n      iszero\n      tag_296\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_296:\n      pop\n      tag_95\n      tag_298\n      calldatasize\n      0x04\n      tag_299\n      jump\t// in\n    tag_298:\n      tag_300\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":25219:25331  function includeInFee(address account) external onlyOwner() {... */\n    tag_55:\n      callvalue\n      dup1\n      iszero\n      tag_301\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_301:\n      pop\n      tag_95\n      tag_303\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_303:\n      tag_304\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":3302:3500  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_56:\n      callvalue\n      dup1\n      iszero\n      tag_305\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_305:\n      pop\n      tag_95\n      tag_307\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_307:\n      tag_308\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":27017:27855  function setSellTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {... */\n    tag_57:\n      callvalue\n      dup1\n      iszero\n      tag_309\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_309:\n      pop\n      tag_95\n      tag_311\n      calldatasize\n      0x04\n      tag_299\n      jump\t// in\n    tag_311:\n      tag_312\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":10943:10974  bool public tradingOpen = false */\n    tag_58:\n      callvalue\n      dup1\n      iszero\n      tag_313\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_313:\n      pop\n      sload(0x28)\n      tag_88\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":25442:25608  function addBot(address account) external onlyOwner() {... */\n    tag_59:\n      callvalue\n      dup1\n      iszero\n      tag_317\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_317:\n      pop\n      tag_95\n      tag_319\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_319:\n      tag_320\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":13251:13411  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_91:\n        /* \"contracts/gainzilla.sol\":13328:13332  bool */\n      0x00\n        /* \"contracts/gainzilla.sol\":13344:13383  _approve(_msgSender(), spender, amount) */\n      tag_323\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":13367:13374  spender */\n      dup5\n        /* \"contracts/gainzilla.sol\":13376:13382  amount */\n      dup5\n        /* \"contracts/gainzilla.sol\":13344:13352  _approve */\n      tag_326\n        /* \"contracts/gainzilla.sol\":13344:13383  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_323:\n      pop\n        /* \"contracts/gainzilla.sol\":13400:13404  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":13251:13411  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_322:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":28253:28373  function updateTeamAddress(address payable teamAddress) external onlyOwner() {... */\n    tag_98:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_329:\n        /* \"contracts/gainzilla.sol\":28340:28352  _teamAddress */\n      0x22\n        /* \"contracts/gainzilla.sol\":28340:28366  _teamAddress = teamAddress */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":28253:28373  function updateTeamAddress(address payable teamAddress) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":28103:28243  function updateMarketingAddress(address payable marketingAddress) external onlyOwner() {... */\n    tag_106:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_336:\n        /* \"contracts/gainzilla.sol\":28200:28217  _marketingAddress */\n      0x21\n        /* \"contracts/gainzilla.sol\":28200:28236  _marketingAddress = marketingAddress */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":28103:28243  function updateMarketingAddress(address payable marketingAddress) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":13417:13725  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_111:\n        /* \"contracts/gainzilla.sol\":13517:13521  bool */\n      0x00\n        /* \"contracts/gainzilla.sol\":13533:13569  _transfer(sender, recipient, amount) */\n      tag_340\n        /* \"contracts/gainzilla.sol\":13543:13549  sender */\n      dup5\n        /* \"contracts/gainzilla.sol\":13551:13560  recipient */\n      dup5\n        /* \"contracts/gainzilla.sol\":13562:13568  amount */\n      dup5\n        /* \"contracts/gainzilla.sol\":13533:13542  _transfer */\n      tag_341\n        /* \"contracts/gainzilla.sol\":13533:13569  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_340:\n        /* \"contracts/gainzilla.sol\":13579:13697  _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\")) */\n      tag_342\n        /* \"contracts/gainzilla.sol\":13588:13594  sender */\n      dup5\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":13608:13696  _allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\") */\n      tag_344\n        /* \"contracts/gainzilla.sol\":13646:13652  amount */\n      dup6\n        /* \"contracts/gainzilla.sol\":13608:13696  _allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":13608:13627  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":13608:13619  _allowances */\n      0x03\n        /* \"contracts/gainzilla.sol\":13608:13627  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":13608:13641  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/gainzilla.sol\":13608:13645  _allowances[sender][_msgSender()].sub */\n      tag_346\n        /* \"contracts/gainzilla.sol\":13608:13696  _allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_344:\n        /* \"contracts/gainzilla.sol\":13579:13587  _approve */\n      tag_326\n        /* \"contracts/gainzilla.sol\":13579:13697  _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_342:\n      pop\n        /* \"contracts/gainzilla.sol\":13714:13718  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":13417:13725  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":25859:26182  function setMaxWalletAmount(uint256 maxWalletAmount) external onlyOwner() {... */\n    tag_121:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_349:\n        /* \"contracts/gainzilla.sol\":25970:25987  _tTotal.div(1000) */\n      tag_352\n        /* \"contracts/gainzilla.sol\":8641:8659  1000000000 * 10**9 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":25982:25986  1000 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":25970:25981  _tTotal.div */\n      tag_353\n        /* \"contracts/gainzilla.sol\":25970:25987  _tTotal.div(1000) */\n      jump\t// in\n    tag_352:\n        /* \"contracts/gainzilla.sol\":25951:25966  maxWalletAmount */\n      dup2\n        /* \"contracts/gainzilla.sol\":25951:25987  maxWalletAmount >= _tTotal.div(1000) */\n      lt\n      iszero\n        /* \"contracts/gainzilla.sol\":25943:26034  require(maxWalletAmount >= _tTotal.div(1000), \"Amount must be greater than 0.1% of supply\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11439:11441   */\n      0x20\n        /* \"contracts/gainzilla.sol\":25943:26034  require(maxWalletAmount >= _tTotal.div(1000), \"Amount must be greater than 0.1% of supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11421:11442   */\n      mstore\n        /* \"#utility.yul\":11478:11480   */\n      0x2a\n        /* \"#utility.yul\":11458:11476   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11451:11481   */\n      mstore\n        /* \"#utility.yul\":11517:11551   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e20302e3125\n        /* \"#utility.yul\":11497:11515   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11490:11552   */\n      mstore\n        /* \"#utility.yul\":11588:11600   */\n      0x206f6620737570706c7900000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11568:11586   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11561:11601   */\n      mstore\n        /* \"#utility.yul\":11618:11637   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":25943:26034  require(maxWalletAmount >= _tTotal.div(1000), \"Amount must be greater than 0.1% of supply\") */\n      tag_330\n        /* \"#utility.yul\":11411:11643   */\n      jump\n        /* \"contracts/gainzilla.sol\":25943:26034  require(maxWalletAmount >= _tTotal.div(1000), \"Amount must be greater than 0.1% of supply\") */\n    tag_354:\n        /* \"contracts/gainzilla.sol\":8641:8659  1000000000 * 10**9 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":26052:26067  maxWalletAmount */\n      dup2\n        /* \"contracts/gainzilla.sol\":26052:26078  maxWalletAmount <= _tTotal */\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":26044:26131  require(maxWalletAmount <= _tTotal, \"Amount must be less than or equal to totalSupply\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13023:13025   */\n      0x20\n        /* \"contracts/gainzilla.sol\":26044:26131  require(maxWalletAmount <= _tTotal, \"Amount must be less than or equal to totalSupply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13005:13026   */\n      mstore\n        /* \"#utility.yul\":13062:13064   */\n      0x30\n        /* \"#utility.yul\":13042:13060   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13035:13065   */\n      mstore\n        /* \"#utility.yul\":13101:13135   */\n      0x416d6f756e74206d757374206265206c657373207468616e206f722065717561\n        /* \"#utility.yul\":13081:13099   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13074:13136   */\n      mstore\n        /* \"#utility.yul\":13172:13190   */\n      0x6c20746f20746f74616c537570706c7900000000000000000000000000000000\n        /* \"#utility.yul\":13152:13170   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13145:13191   */\n      mstore\n        /* \"#utility.yul\":13208:13227   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":26044:26131  require(maxWalletAmount <= _tTotal, \"Amount must be less than or equal to totalSupply\") */\n      tag_330\n        /* \"#utility.yul\":12995:13233   */\n      jump\n        /* \"contracts/gainzilla.sol\":26044:26131  require(maxWalletAmount <= _tTotal, \"Amount must be less than or equal to totalSupply\") */\n    tag_357:\n        /* \"contracts/gainzilla.sol\":26141:26157  _maxWalletAmount */\n      0x07\n        /* \"contracts/gainzilla.sol\":26141:26175  _maxWalletAmount = maxWalletAmount */\n      sstore\n        /* \"contracts/gainzilla.sol\":25859:26182  function setMaxWalletAmount(uint256 maxWalletAmount) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":22766:22948  function manualSendToken(address token) external onlyOwner() {... */\n    tag_130:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_362\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_362:\n        /* \"contracts/gainzilla.sol\":22854:22892  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":22886:22890  this */\n      address\n        /* \"contracts/gainzilla.sol\":22854:22892  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4559:4633   */\n      mstore\n        /* \"contracts/gainzilla.sol\":22837:22851  uint256 amount */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":22854:22877  IERC20(token).balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4532:4550   */\n      0x24\n      add\n        /* \"contracts/gainzilla.sol\":22854:22892  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_366\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_366:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_368\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_368:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_369\n      swap2\n      swap1\n      tag_370\n      jump\t// in\n    tag_369:\n        /* \"contracts/gainzilla.sol\":22837:22892  uint256 amount = IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":22909:22914  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":22902:22924  IERC20(token).transfer */\n      and\n      0xa9059cbb\n        /* \"contracts/gainzilla.sol\":22925:22932  owner() */\n      tag_371\n        /* \"contracts/gainzilla.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":22925:22932  owner() */\n    tag_371:\n        /* \"contracts/gainzilla.sol\":22902:22941  IERC20(token).transfer(owner(), amount) */\n      mload(0x40)\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4836:4891   */\n      swap1\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":22902:22941  IERC20(token).transfer(owner(), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4818:4892   */\n      mstore\n        /* \"#utility.yul\":4908:4926   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4901:4935   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":4791:4809   */\n      0x44\n      add\n        /* \"contracts/gainzilla.sol\":22902:22941  IERC20(token).transfer(owner(), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_374\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_374:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_376\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_376:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_377\n      swap2\n      swap1\n      tag_378\n      jump\t// in\n    tag_377:\n      pop\n        /* \"contracts/gainzilla.sol\":3145:3146  _ */\n      pop\n        /* \"contracts/gainzilla.sol\":22766:22948  function manualSendToken(address token) external onlyOwner() {... */\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":22087:22229  function disableToken() external onlyOwner() {... */\n    tag_155:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_383\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_383:\n        /* \"contracts/gainzilla.sol\":22150:22158  canPause */\n      sload(0x28)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":22142:22193  require(canPause, \"this contract cannot be paused\") */\n      tag_386\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7607:7609   */\n      0x20\n        /* \"contracts/gainzilla.sol\":22142:22193  require(canPause, \"this contract cannot be paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7589:7610   */\n      mstore\n        /* \"#utility.yul\":7646:7648   */\n      0x1e\n        /* \"#utility.yul\":7626:7644   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7619:7649   */\n      mstore\n        /* \"#utility.yul\":7685:7717   */\n      0x7468697320636f6e74726163742063616e6e6f74206265207061757365640000\n        /* \"#utility.yul\":7665:7683   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7658:7718   */\n      mstore\n        /* \"#utility.yul\":7735:7753   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":22142:22193  require(canPause, \"this contract cannot be paused\") */\n      tag_330\n        /* \"#utility.yul\":7579:7759   */\n      jump\n        /* \"contracts/gainzilla.sol\":22142:22193  require(canPause, \"this contract cannot be paused\") */\n    tag_386:\n        /* \"contracts/gainzilla.sol\":22203:22214  tradingOpen */\n      0x28\n        /* \"contracts/gainzilla.sol\":22203:22222  tradingOpen = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":22087:22229  function disableToken() external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":25102:25213  function excludeFromFee(address account) public onlyOwner() {... */\n    tag_159:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_391\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_391:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":25172:25199  _isExcludedFromFee[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":25172:25190  _isExcludedFromFee */\n      0x04\n        /* \"contracts/gainzilla.sol\":25172:25199  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":25172:25206  _isExcludedFromFee[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":25202:25206  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":25172:25206  _isExcludedFromFee[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":25102:25213  function excludeFromFee(address account) public onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":25341:25436  function removeBot(address account) external onlyOwner() {... */\n    tag_168:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_396\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_396:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":25408:25421  bots[account] */\n      and\n        /* \"contracts/gainzilla.sol\":25424:25429  false */\n      0x00\n        /* \"contracts/gainzilla.sol\":25408:25421  bots[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":25408:25412  bots */\n      0x20\n        /* \"contracts/gainzilla.sol\":25408:25421  bots[account] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":25408:25429  bots[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":25341:25436  function removeBot(address account) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":22235:22320  function disablePauseAbility() onlyOwner() external {... */\n    tag_171:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_401\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_401:\n        /* \"contracts/gainzilla.sol\":22297:22305  canPause */\n      0x28\n        /* \"contracts/gainzilla.sol\":22297:22313  canPause = false */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":22235:22320  function disablePauseAbility() onlyOwner() external {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":22534:22760  function manualsend() external onlyOwner() {... */\n    tag_178:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_406\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_406:\n        /* \"contracts/gainzilla.sol\":22616:22637  address(this).balance */\n      selfbalance\n        /* \"contracts/gainzilla.sol\":22651:22673  contractETHBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/gainzilla.sol\":22647:22754  if (contractETHBalance > 0) {... */\n      tag_409\n      jumpi\n        /* \"contracts/gainzilla.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":22689:22743  payable(address(owner())).transfer(contractETHBalance) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/gainzilla.sol\":22689:22743  payable(address(owner())).transfer(contractETHBalance) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/gainzilla.sol\":22724:22742  contractETHBalance */\n      dup5\n      swap2\n        /* \"contracts/gainzilla.sol\":22689:22743  payable(address(owner())).transfer(contractETHBalance) */\n      dup2\n        /* \"contracts/gainzilla.sol\":2992:2999  address */\n      dup2\n        /* \"contracts/gainzilla.sol\":22689:22743  payable(address(owner())).transfer(contractETHBalance) */\n      dup2\n        /* \"contracts/gainzilla.sol\":22724:22742  contractETHBalance */\n      dup6\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      dup9\n        /* \"contracts/gainzilla.sol\":22689:22743  payable(address(owner())).transfer(contractETHBalance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_412\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_412:\n      pop\n        /* \"contracts/gainzilla.sol\":22647:22754  if (contractETHBalance > 0) {... */\n    tag_409:\n        /* \"contracts/gainzilla.sol\":3145:3146  _ */\n      pop\n        /* \"contracts/gainzilla.sol\":22534:22760  function manualsend() external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n    tag_186:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_416\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_416:\n        /* \"contracts/gainzilla.sol\":3959:3960  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":3943:3949  _owner */\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3943:3949  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/gainzilla.sol\":3959:3960  0 */\n      dup4\n      swap1\n        /* \"contracts/gainzilla.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/gainzilla.sol\":3989:3990  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":3972:3991  _owner = address(0) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":28627:28800  function configureStrongHands(bool enabled, uint32 duration) external onlyOwner {... */\n    tag_191:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_421\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_421:\n        /* \"contracts/gainzilla.sol\":28717:28725  cooldown */\n      0x1a\n        /* \"contracts/gainzilla.sol\":28717:28743  cooldown.enabled = enabled */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup4\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":28773:28793  duration * 1 minutes */\n      tag_424\n        /* \"contracts/gainzilla.sol\":28773:28781  duration */\n      dup2\n        /* \"contracts/gainzilla.sol\":28784:28793  1 minutes */\n      0x3c\n        /* \"contracts/gainzilla.sol\":28773:28793  duration * 1 minutes */\n      tag_425\n      jump\t// in\n    tag_424:\n        /* \"contracts/gainzilla.sol\":28753:28761  cooldown */\n      0x1a\n        /* \"contracts/gainzilla.sol\":28753:28793  cooldown.duration = duration * 1 minutes */\n      dup1\n      sload\n      0xffffffff\n      swap3\n      swap1\n      swap3\n      and\n      0x0100\n      mul\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ff\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":28627:28800  function configureStrongHands(bool enabled, uint32 duration) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":29350:30038  function ATHvariance() public view returns (int256) {... */\n    tag_203:\n        /* \"contracts/gainzilla.sol\":29412:29433  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/gainzilla.sol\":29394:29400  int256 */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":29408:29448  if (diamondFloor.athPrice == 0) return 0 */\n      tag_427\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":29447:29448  0 */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":29350:30038  function ATHvariance() public view returns (int256) {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":29408:29448  if (diamondFloor.athPrice == 0) return 0 */\n    tag_427:\n        /* \"contracts/gainzilla.sol\":29454:29474  uint256 currentPrice */\n      0x00\n        /* \"contracts/gainzilla.sol\":29477:29488  pairPrice() */\n      tag_428\n        /* \"contracts/gainzilla.sol\":29477:29486  pairPrice */\n      tag_219\n        /* \"contracts/gainzilla.sol\":29477:29488  pairPrice() */\n      jump\t// in\n    tag_428:\n        /* \"contracts/gainzilla.sol\":29521:29542  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/gainzilla.sol\":29454:29488  uint256 currentPrice = pairPrice() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":29506:29542  currentPrice > diamondFloor.athPrice */\n      dup2\n      gt\n        /* \"contracts/gainzilla.sol\":29506:30031  currentPrice > diamondFloor.athPrice ?... */\n      tag_429\n      jumpi\n        /* \"contracts/gainzilla.sol\":29999:30020  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/gainzilla.sol\":29860:30021  diamondFloor.athPrice.sub(currentPrice)... */\n      tag_430\n      swap1\n        /* \"contracts/gainzilla.sol\":29860:29923  diamondFloor.athPrice.sub(currentPrice)... */\n      tag_431\n        /* \"contracts/gainzilla.sol\":29917:29922  100e1 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":29860:29899  diamondFloor.athPrice.sub(currentPrice) */\n      tag_432\n        /* \"contracts/gainzilla.sol\":29999:30020  diamondFloor.athPrice */\n      dup4\n        /* \"contracts/gainzilla.sol\":29886:29898  currentPrice */\n      dup7\n        /* \"contracts/gainzilla.sol\":29860:29885  diamondFloor.athPrice.sub */\n      tag_433\n        /* \"contracts/gainzilla.sol\":29860:29899  diamondFloor.athPrice.sub(currentPrice) */\n      jump\t// in\n    tag_432:\n        /* \"contracts/gainzilla.sol\":29860:29916  diamondFloor.athPrice.sub(currentPrice)... */\n      swap1\n      tag_434\n        /* \"contracts/gainzilla.sol\":29860:29923  diamondFloor.athPrice.sub(currentPrice)... */\n      jump\t// in\n    tag_431:\n        /* \"contracts/gainzilla.sol\":29860:29998  diamondFloor.athPrice.sub(currentPrice)... */\n      swap1\n      tag_353\n        /* \"contracts/gainzilla.sol\":29860:30021  diamondFloor.athPrice.sub(currentPrice)... */\n      jump\t// in\n    tag_430:\n        /* \"contracts/gainzilla.sol\":29839:30031  -int256(... */\n      tag_435\n      swap1\n      tag_436\n      jump\t// in\n    tag_435:\n        /* \"contracts/gainzilla.sol\":29506:30031  currentPrice > diamondFloor.athPrice ?... */\n      jump(tag_438)\n    tag_429:\n        /* \"contracts/gainzilla.sol\":29754:29775  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/gainzilla.sol\":29615:29776  currentPrice.sub(diamondFloor.athPrice)... */\n      tag_438\n      swap1\n        /* \"contracts/gainzilla.sol\":29615:29678  currentPrice.sub(diamondFloor.athPrice)... */\n      tag_431\n        /* \"contracts/gainzilla.sol\":29672:29677  100e1 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":29615:29654  currentPrice.sub(diamondFloor.athPrice) */\n      tag_432\n        /* \"contracts/gainzilla.sol\":29615:29627  currentPrice */\n      dup6\n        /* \"contracts/gainzilla.sol\":29754:29775  diamondFloor.athPrice */\n      dup5\n        /* \"contracts/gainzilla.sol\":29615:29631  currentPrice.sub */\n      tag_433\n        /* \"contracts/gainzilla.sol\":29615:29654  currentPrice.sub(diamondFloor.athPrice) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":29615:29776  currentPrice.sub(diamondFloor.athPrice)... */\n    tag_438:\n        /* \"contracts/gainzilla.sol\":29499:30031  return currentPrice > diamondFloor.athPrice ?... */\n      swap2\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":29350:30038  function ATHvariance() public view returns (int256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":22002:22081  function enableToken() external onlyOwner() {... */\n    tag_216:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_444\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_444:\n        /* \"contracts/gainzilla.sol\":22056:22067  tradingOpen */\n      0x28\n        /* \"contracts/gainzilla.sol\":22056:22074  tradingOpen = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":22070:22074  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":22056:22074  tradingOpen = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":22002:22081  function enableToken() external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":19681:20097  function pairPrice() public view returns (uint256) {... */\n    tag_219:\n        /* \"contracts/gainzilla.sol\":19723:19730  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":19743:19759  uint112 reserve0 */\n      dup1\n        /* \"contracts/gainzilla.sol\":19761:19777  uint112 reserve1 */\n      0x00\n        /* \"contracts/gainzilla.sol\":19797:19810  uniswapV2Pair */\n      0x26\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":19782:19823  IUniswapV2Pair(uniswapV2Pair).getReserves */\n      and\n      0x0902f1ac\n        /* \"contracts/gainzilla.sol\":19782:19825  IUniswapV2Pair(uniswapV2Pair).getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_448\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_448:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_450\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_450:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_451\n      swap2\n      swap1\n      tag_452\n      jump\t// in\n    tag_451:\n        /* \"contracts/gainzilla.sol\":19742:19825  (uint112 reserve0, uint112 reserve1,) = IUniswapV2Pair(uniswapV2Pair).getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":19839:19847  reserve0 */\n      dup2\n        /* \"contracts/gainzilla.sol\":19839:19852  reserve0 == 0 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gainzilla.sol\":19851:19852  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":19839:19852  reserve0 == 0 */\n      eq\n        /* \"contracts/gainzilla.sol\":19839:19869  reserve0 == 0 || reserve1 == 0 */\n      dup1\n      tag_453\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":19856:19869  reserve1 == 0 */\n      0xffffffffffffffffffffffffffff\n      dup2\n      and\n      iszero\n        /* \"contracts/gainzilla.sol\":19839:19869  reserve0 == 0 || reserve1 == 0 */\n    tag_453:\n        /* \"contracts/gainzilla.sol\":19835:19879  if (reserve0 == 0 || reserve1 == 0) return 0 */\n      iszero\n      tag_454\n      jumpi\n        /* \"contracts/gainzilla.sol\":19878:19879  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":19871:19879  return 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":19681:20097  function pairPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":19835:19879  if (reserve0 == 0 || reserve1 == 0) return 0 */\n    tag_454:\n        /* \"contracts/gainzilla.sol\":19920:19933  uniswapV2Pair */\n      sload(0x26)\n        /* \"contracts/gainzilla.sol\":19905:19943  IUniswapV2Pair(uniswapV2Pair).token0() */\n      0x40\n      dup1\n      mload\n      0x0dfe168100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/gainzilla.sol\":19955:19959  this */\n      address\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":19920:19933  uniswapV2Pair */\n      and\n      swap2\n        /* \"contracts/gainzilla.sol\":19905:19941  IUniswapV2Pair(uniswapV2Pair).token0 */\n      0x0dfe1681\n      swap2\n        /* \"contracts/gainzilla.sol\":19905:19943  IUniswapV2Pair(uniswapV2Pair).token0() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/gainzilla.sol\":19920:19933  uniswapV2Pair */\n      dup7\n        /* \"contracts/gainzilla.sol\":19905:19943  IUniswapV2Pair(uniswapV2Pair).token0() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_455\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_455:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_457\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_457:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_458\n      swap2\n      swap1\n      tag_459\n      jump\t// in\n    tag_458:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":19905:19960  IUniswapV2Pair(uniswapV2Pair).token0() == address(this) */\n      and\n      eq\n        /* \"contracts/gainzilla.sol\":19905:20090  IUniswapV2Pair(uniswapV2Pair).token0() == address(this) ?... */\n      tag_460\n      jumpi\n        /* \"contracts/gainzilla.sol\":20040:20090  uint256(reserve0).mul(1e18).div(uint256(reserve1)) */\n      tag_461\n        /* \"contracts/gainzilla.sol\":20072:20089  uint256(reserve1) */\n      0xffffffffffffffffffffffffffff\n      dup1\n      dup4\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":20040:20067  uint256(reserve0).mul(1e18) */\n      tag_431\n      swap1\n        /* \"contracts/gainzilla.sol\":20040:20057  uint256(reserve0) */\n      dup6\n      and\n        /* \"contracts/gainzilla.sol\":20062:20066  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":20040:20061  uint256(reserve0).mul */\n      tag_434\n        /* \"contracts/gainzilla.sol\":20040:20067  uint256(reserve0).mul(1e18) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":20040:20090  uint256(reserve0).mul(1e18).div(uint256(reserve1)) */\n    tag_461:\n        /* \"contracts/gainzilla.sol\":19905:20090  IUniswapV2Pair(uniswapV2Pair).token0() == address(this) ?... */\n      jump(tag_464)\n    tag_460:\n        /* \"contracts/gainzilla.sol\":19975:20025  uint256(reserve1).mul(1e18).div(uint256(reserve0)) */\n      tag_464\n        /* \"contracts/gainzilla.sol\":20007:20024  uint256(reserve0) */\n      0xffffffffffffffffffffffffffff\n      dup1\n      dup5\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":19975:20002  uint256(reserve1).mul(1e18) */\n      tag_431\n      swap1\n        /* \"contracts/gainzilla.sol\":19975:19992  uint256(reserve1) */\n      dup5\n      and\n        /* \"contracts/gainzilla.sol\":19997:20001  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":19975:19996  uint256(reserve1).mul */\n      tag_434\n        /* \"contracts/gainzilla.sol\":19975:20002  uint256(reserve1).mul(1e18) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":19975:20025  uint256(reserve1).mul(1e18).div(uint256(reserve0)) */\n    tag_464:\n        /* \"contracts/gainzilla.sol\":19898:20090  return IUniswapV2Pair(uniswapV2Pair).token0() == address(this) ?... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":19681:20097  function pairPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":27861:27947  function disableTaxChange() onlyOwner() external {... */\n    tag_227:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_469\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_469:\n        /* \"contracts/gainzilla.sol\":27920:27932  canChangeTax */\n      0x28\n        /* \"contracts/gainzilla.sol\":27920:27940  canChangeTax = false */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27861:27947  function disableTaxChange() onlyOwner() external {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":28806:29344  function cooldownRemaining(address account) public view returns (... */\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":29009:29037  cooldown.walletList[account] */\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":28880:28893  uint256 days_ */\n      0x00\n        /* \"contracts/gainzilla.sol\":29009:29037  cooldown.walletList[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":29009:29028  cooldown.walletList */\n      0x1b\n        /* \"contracts/gainzilla.sol\":29009:29037  cooldown.walletList[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":28880:28893  uint256 days_ */\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"contracts/gainzilla.sol\":29040:29055  block.timestamp */\n      timestamp\n      lt\n        /* \"contracts/gainzilla.sol\":29009:29124  cooldown.walletList[account] > block.timestamp ? ... */\n      tag_473\n      jumpi\n        /* \"contracts/gainzilla.sol\":29123:29124  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":29009:29124  cooldown.walletList[account] > block.timestamp ? ... */\n      jump(tag_475)\n    tag_473:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":29071:29099  cooldown.walletList[account] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":29071:29090  cooldown.walletList */\n      0x1b\n        /* \"contracts/gainzilla.sol\":29071:29099  cooldown.walletList[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":29071:29120  cooldown.walletList[account].sub(block.timestamp) */\n      tag_475\n      swap1\n        /* \"contracts/gainzilla.sol\":29104:29119  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":29071:29103  cooldown.walletList[account].sub */\n      tag_433\n        /* \"contracts/gainzilla.sol\":29071:29120  cooldown.walletList[account].sub(block.timestamp) */\n      jump\t// in\n    tag_475:\n        /* \"contracts/gainzilla.sol\":28989:29124  uint256 remaining = cooldown.walletList[account] > block.timestamp ? ... */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":29151:29171  remaining.div(86400) */\n      tag_476\n        /* \"contracts/gainzilla.sol\":28989:29124  uint256 remaining = cooldown.walletList[account] > block.timestamp ? ... */\n      dup2\n        /* \"contracts/gainzilla.sol\":29165:29170  86400 */\n      0x015180\n        /* \"contracts/gainzilla.sol\":29151:29164  remaining.div */\n      tag_353\n        /* \"contracts/gainzilla.sol\":29151:29171  remaining.div(86400) */\n      jump\t// in\n    tag_476:\n        /* \"contracts/gainzilla.sol\":29143:29171  days_ = remaining.div(86400) */\n      swap5\n      pop\n        /* \"contracts/gainzilla.sol\":29181:29199  remaining %= 86400 */\n      tag_477\n        /* \"contracts/gainzilla.sol\":29194:29199  86400 */\n      0x015180\n        /* \"contracts/gainzilla.sol\":29181:29199  remaining %= 86400 */\n      dup3\n      tag_478\n      jump\t// in\n    tag_477:\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":29218:29237  remaining.div(3600) */\n      tag_479\n        /* \"contracts/gainzilla.sol\":29181:29199  remaining %= 86400 */\n      dup2\n        /* \"contracts/gainzilla.sol\":29232:29236  3600 */\n      0x0e10\n        /* \"contracts/gainzilla.sol\":29218:29231  remaining.div */\n      tag_353\n        /* \"contracts/gainzilla.sol\":29218:29237  remaining.div(3600) */\n      jump\t// in\n    tag_479:\n        /* \"contracts/gainzilla.sol\":29209:29237  hours_ = remaining.div(3600) */\n      swap4\n      pop\n        /* \"contracts/gainzilla.sol\":29247:29264  remaining %= 3600 */\n      tag_480\n        /* \"contracts/gainzilla.sol\":29260:29264  3600 */\n      0x0e10\n        /* \"contracts/gainzilla.sol\":29247:29264  remaining %= 3600 */\n      dup3\n      tag_478\n      jump\t// in\n    tag_480:\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":29285:29302  remaining.div(60) */\n      tag_481\n        /* \"contracts/gainzilla.sol\":29247:29264  remaining %= 3600 */\n      dup2\n        /* \"contracts/gainzilla.sol\":29299:29301  60 */\n      0x3c\n        /* \"contracts/gainzilla.sol\":29285:29298  remaining.div */\n      tag_353\n        /* \"contracts/gainzilla.sol\":29285:29302  remaining.div(60) */\n      jump\t// in\n    tag_481:\n        /* \"contracts/gainzilla.sol\":29274:29302  minutes_ = remaining.div(60) */\n      swap3\n      pop\n        /* \"contracts/gainzilla.sol\":29323:29337  remaining % 60 */\n      tag_482\n        /* \"contracts/gainzilla.sol\":29335:29337  60 */\n      0x3c\n        /* \"contracts/gainzilla.sol\":29323:29332  remaining */\n      dup3\n        /* \"contracts/gainzilla.sol\":29323:29337  remaining % 60 */\n      tag_478\n      jump\t// in\n    tag_482:\n        /* \"contracts/gainzilla.sol\":29312:29337  seconds_ = remaining % 60 */\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":28806:29344  function cooldownRemaining(address account) public view returns (... */\n      pop\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":25713:25853  function setTransferTransactionMultiplier(uint256 _multiplier) external onlyOwner() {... */\n    tag_237:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_485\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_485:\n        /* \"contracts/gainzilla.sol\":25807:25832  transferFeeIncreaseFactor */\n      0x19\n        /* \"contracts/gainzilla.sol\":25807:25846  transferFeeIncreaseFactor = _multiplier */\n      sstore\n        /* \"contracts/gainzilla.sol\":25713:25853  function setTransferTransactionMultiplier(uint256 _multiplier) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":12930:13096  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_241:\n        /* \"contracts/gainzilla.sol\":13010:13014  bool */\n      0x00\n        /* \"contracts/gainzilla.sol\":13026:13068  _transfer(_msgSender(), recipient, amount) */\n      tag_323\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":13050:13059  recipient */\n      dup5\n        /* \"contracts/gainzilla.sol\":13061:13067  amount */\n      dup5\n        /* \"contracts/gainzilla.sol\":13026:13035  _transfer */\n      tag_341\n        /* \"contracts/gainzilla.sol\":13026:13068  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":22326:22528  function manualswap() external onlyOwner() {... */\n    tag_245:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_493\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_493:\n        /* \"contracts/gainzilla.sol\":22423:22427  this */\n      address\n        /* \"contracts/gainzilla.sol\":22379:22402  uint256 contractBalance */\n      0x00\n        /* \"contracts/gainzilla.sol\":12793:12811  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":12793:12802  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":12793:12811  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":22443:22462  contractBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/gainzilla.sol\":22439:22522  if (contractBalance > 0) {... */\n      tag_409\n      jumpi\n        /* \"contracts/gainzilla.sol\":22478:22511  swapTokensForEth(contractBalance) */\n      tag_409\n        /* \"contracts/gainzilla.sol\":22495:22510  contractBalance */\n      dup2\n        /* \"contracts/gainzilla.sol\":22478:22494  swapTokensForEth */\n      tag_499\n        /* \"contracts/gainzilla.sol\":22478:22511  swapTokensForEth(contractBalance) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":28380:28500  function updateLpRecipient(address payable lpRecipient) external onlyOwner() {... */\n    tag_270:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_502\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_502:\n        /* \"contracts/gainzilla.sol\":28467:28479  _lpRecipient */\n      0x24\n        /* \"contracts/gainzilla.sol\":28467:28493  _lpRecipient = lpRecipient */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":28380:28500  function updateLpRecipient(address payable lpRecipient) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":21829:21996  function openTrading(uint256 botBlocks) external onlyOwner() {... */\n    tag_274:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_507\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_507:\n        /* \"contracts/gainzilla.sol\":21914:21929  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":21900:21911  _firstBlock */\n      0x05\n        /* \"contracts/gainzilla.sol\":21900:21929  _firstBlock = block.timestamp */\n      sstore\n        /* \"contracts/gainzilla.sol\":21939:21949  _botBlocks */\n      0x06\n        /* \"contracts/gainzilla.sol\":21939:21961  _botBlocks = botBlocks */\n      sstore\n        /* \"contracts/gainzilla.sol\":21971:21982  tradingOpen */\n      0x28\n        /* \"contracts/gainzilla.sol\":21971:21989  tradingOpen = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":21985:21989  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":21971:21989  tradingOpen = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":21829:21996  function openTrading(uint256 botBlocks) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":25614:25703  function disableBlackListing() onlyOwner() external {... */\n    tag_277:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_512\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_512:\n        /* \"contracts/gainzilla.sol\":25676:25688  canBlackList */\n      0x28\n        /* \"contracts/gainzilla.sol\":25676:25696  canBlackList = false */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":25614:25703  function disableBlackListing() onlyOwner() external {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":27953:28093  function updateEcosystemAddress(address payable ecosystemAddress) external onlyOwner() {... */\n    tag_281:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_517\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_517:\n        /* \"contracts/gainzilla.sol\":28050:28067  _ecosystemAddress */\n      0x23\n        /* \"contracts/gainzilla.sol\":28050:28086  _ecosystemAddress = ecosystemAddress */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27953:28093  function updateEcosystemAddress(address payable ecosystemAddress) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":28506:28621  function updateNumTokensToSwap(uint256 numTokens) external onlyOwner() {... */\n    tag_295:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_523\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_523:\n        /* \"contracts/gainzilla.sol\":28587:28602  numTokensToSwap */\n      0x08\n        /* \"contracts/gainzilla.sol\":28587:28614  numTokensToSwap = numTokens */\n      sstore\n        /* \"contracts/gainzilla.sol\":28506:28621  function updateNumTokensToSwap(uint256 numTokens) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":26188:27011  function setBuyTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {... */\n    tag_300:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_528\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_528:\n        /* \"contracts/gainzilla.sol\":26323:26339  uint256 totalFee */\n      0x00\n        /* \"contracts/gainzilla.sol\":26342:26403  marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n      tag_531\n        /* \"contracts/gainzilla.sol\":26390:26402  ecosystemFee */\n      dup3\n        /* \"contracts/gainzilla.sol\":26342:26385  marketingFee.add(liquidityFee).add(teamFee) */\n      tag_533\n        /* \"contracts/gainzilla.sol\":26377:26384  teamFee */\n      dup6\n        /* \"contracts/gainzilla.sol\":26342:26385  marketingFee.add(liquidityFee).add(teamFee) */\n      dup2\n        /* \"contracts/gainzilla.sol\":26342:26354  marketingFee */\n      dup10\n        /* \"contracts/gainzilla.sol\":26359:26371  liquidityFee */\n      dup10\n        /* \"contracts/gainzilla.sol\":26342:26358  marketingFee.add */\n      tag_534\n        /* \"contracts/gainzilla.sol\":26342:26372  marketingFee.add(liquidityFee) */\n      jump\t// in\n    tag_533:\n        /* \"contracts/gainzilla.sol\":26342:26376  marketingFee.add(liquidityFee).add */\n      swap1\n      tag_534\n        /* \"contracts/gainzilla.sol\":26342:26385  marketingFee.add(liquidityFee).add(teamFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":26342:26403  marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n    tag_531:\n        /* \"contracts/gainzilla.sol\":26323:26403  uint256 totalFee = marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":26433:26436  250 */\n      0xfa\n        /* \"contracts/gainzilla.sol\":26421:26429  totalFee */\n      dup2\n        /* \"contracts/gainzilla.sol\":26421:26436  totalFee <= 250 */\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":26413:26490  require(totalFee <= 250, \"Sum of buy fees must be less than or equal to 25%\") */\n      tag_535\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8370:8372   */\n      0x20\n        /* \"contracts/gainzilla.sol\":26413:26490  require(totalFee <= 250, \"Sum of buy fees must be less than or equal to 25%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8352:8373   */\n      mstore\n        /* \"#utility.yul\":8409:8411   */\n      0x31\n        /* \"#utility.yul\":8389:8407   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8382:8412   */\n      mstore\n        /* \"#utility.yul\":8448:8482   */\n      0x53756d206f66206275792066656573206d757374206265206c65737320746861\n        /* \"#utility.yul\":8428:8446   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8421:8483   */\n      mstore\n        /* \"#utility.yul\":8519:8538   */\n      0x6e206f7220657175616c20746f20323525000000000000000000000000000000\n        /* \"#utility.yul\":8499:8517   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8492:8539   */\n      mstore\n        /* \"#utility.yul\":8556:8575   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":26413:26490  require(totalFee <= 250, \"Sum of buy fees must be less than or equal to 25%\") */\n      tag_330\n        /* \"#utility.yul\":8342:8581   */\n      jump\n        /* \"contracts/gainzilla.sol\":26413:26490  require(totalFee <= 250, \"Sum of buy fees must be less than or equal to 25%\") */\n    tag_535:\n        /* \"contracts/gainzilla.sol\":26508:26520  canChangeTax */\n      sload(0x28)\n      0x0100000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":26500:26549  require(canChangeTax, \"This function is diabled\") */\n      tag_538\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14255:14257   */\n      0x20\n        /* \"contracts/gainzilla.sol\":26500:26549  require(canChangeTax, \"This function is diabled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14237:14258   */\n      mstore\n        /* \"#utility.yul\":14294:14296   */\n      0x18\n        /* \"#utility.yul\":14274:14292   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14267:14297   */\n      mstore\n        /* \"#utility.yul\":14333:14359   */\n      0x546869732066756e6374696f6e20697320646961626c65640000000000000000\n        /* \"#utility.yul\":14313:14331   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14306:14360   */\n      mstore\n        /* \"#utility.yul\":14377:14395   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":26500:26549  require(canChangeTax, \"This function is diabled\") */\n      tag_330\n        /* \"#utility.yul\":14227:14401   */\n      jump\n        /* \"contracts/gainzilla.sol\":26500:26549  require(canChangeTax, \"This function is diabled\") */\n    tag_538:\n        /* \"contracts/gainzilla.sol\":26560:26576  _buyMarketingFee */\n      0x0d\n        /* \"contracts/gainzilla.sol\":26560:26591  _buyMarketingFee = marketingFee */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26601:26617  _buyLiquidityFee */\n      0x09\n        /* \"contracts/gainzilla.sol\":26601:26632  _buyLiquidityFee = liquidityFee */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26642:26653  _buyTeamFee */\n      0x0f\n        /* \"contracts/gainzilla.sol\":26642:26663  _buyTeamFee = teamFee */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26673:26689  _buyEcosystemFee */\n      0x0b\n        /* \"contracts/gainzilla.sol\":26673:26704  _buyEcosystemFee = ecosystemFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26723:26747  _previousBuyMarketingFee */\n      0x0e\n        /* \"contracts/gainzilla.sol\":26723:26766  _previousBuyMarketingFee = _buyMarketingFee */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26776:26800  _previousBuyLiquidityFee */\n      0x0a\n        /* \"contracts/gainzilla.sol\":26776:26819  _previousBuyLiquidityFee = _buyLiquidityFee */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26829:26848  _previousBuyTeamFee */\n      0x10\n        /* \"contracts/gainzilla.sol\":26829:26862  _previousBuyTeamFee = _buyTeamFee */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26872:26896  _previousBuyEcosystemFee */\n      0x0c\n        /* \"contracts/gainzilla.sol\":26872:26915  _previousBuyEcosystemFee = _buyEcosystemFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26939:27004  BuyFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":16733:16758   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":16789:16791   */\n      0x20\n        /* \"#utility.yul\":16774:16792   */\n      dup2\n      add\n        /* \"#utility.yul\":16767:16801   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":16817:16835   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":16810:16844   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":16875:16877   */\n      0x60\n        /* \"#utility.yul\":16860:16878   */\n      dup2\n      add\n        /* \"#utility.yul\":16853:16887   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/gainzilla.sol\":26939:27004  BuyFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n      0x892b2caa2d791bf7b8d9a49c4db7a4513ff1ae2e0e068ed217f9d5ab4c1a28f0\n      swap1\n        /* \"#utility.yul\":16720:16723   */\n      0x80\n        /* \"#utility.yul\":16705:16724   */\n      add\n        /* \"contracts/gainzilla.sol\":26939:27004  BuyFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n    tag_541:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/gainzilla.sol\":3145:3146  _ */\n      pop\n        /* \"contracts/gainzilla.sol\":26188:27011  function setBuyTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":25219:25331  function includeInFee(address account) external onlyOwner() {... */\n    tag_304:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_544\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_544:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":25289:25316  _isExcludedFromFee[account] */\n      and\n        /* \"contracts/gainzilla.sol\":25319:25324  false */\n      0x00\n        /* \"contracts/gainzilla.sol\":25289:25316  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":25289:25307  _isExcludedFromFee */\n      0x04\n        /* \"contracts/gainzilla.sol\":25289:25316  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":25289:25324  _isExcludedFromFee[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":25219:25331  function includeInFee(address account) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":3302:3500  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_308:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_549\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_549:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3390:3412  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_552\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9138:9140   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9120:9141   */\n      mstore\n        /* \"#utility.yul\":9177:9179   */\n      0x26\n        /* \"#utility.yul\":9157:9175   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9150:9180   */\n      mstore\n        /* \"#utility.yul\":9216:9250   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":9196:9214   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9189:9251   */\n      mstore\n        /* \"#utility.yul\":9287:9295   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9267:9285   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9260:9296   */\n      mstore\n        /* \"#utility.yul\":9313:9332   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_330\n        /* \"#utility.yul\":9110:9338   */\n      jump\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_552:\n        /* \"contracts/gainzilla.sol\":3465:3493  _transferOwnership(newOwner) */\n      tag_409\n        /* \"contracts/gainzilla.sol\":3484:3492  newOwner */\n      dup2\n        /* \"contracts/gainzilla.sol\":3465:3483  _transferOwnership */\n      tag_556\n        /* \"contracts/gainzilla.sol\":3465:3493  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":27017:27855  function setSellTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {... */\n    tag_312:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_559\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_559:\n        /* \"contracts/gainzilla.sol\":27153:27169  uint256 totalFee */\n      0x00\n        /* \"contracts/gainzilla.sol\":27172:27233  marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n      tag_562\n        /* \"contracts/gainzilla.sol\":27220:27232  ecosystemFee */\n      dup3\n        /* \"contracts/gainzilla.sol\":27172:27215  marketingFee.add(liquidityFee).add(teamFee) */\n      tag_533\n        /* \"contracts/gainzilla.sol\":27207:27214  teamFee */\n      dup6\n        /* \"contracts/gainzilla.sol\":27172:27215  marketingFee.add(liquidityFee).add(teamFee) */\n      dup2\n        /* \"contracts/gainzilla.sol\":27172:27184  marketingFee */\n      dup10\n        /* \"contracts/gainzilla.sol\":27189:27201  liquidityFee */\n      dup10\n        /* \"contracts/gainzilla.sol\":27172:27188  marketingFee.add */\n      tag_534\n        /* \"contracts/gainzilla.sol\":27172:27202  marketingFee.add(liquidityFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":27172:27233  marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n    tag_562:\n        /* \"contracts/gainzilla.sol\":27153:27233  uint256 totalFee = marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":27263:27266  250 */\n      0xfa\n        /* \"contracts/gainzilla.sol\":27251:27259  totalFee */\n      dup2\n        /* \"contracts/gainzilla.sol\":27251:27266  totalFee <= 250 */\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":27243:27321  require(totalFee <= 250, \"Sum of sell fees must be less than or equal to 25%\") */\n      tag_565\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11020:11022   */\n      0x20\n        /* \"contracts/gainzilla.sol\":27243:27321  require(totalFee <= 250, \"Sum of sell fees must be less than or equal to 25%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11002:11023   */\n      mstore\n        /* \"#utility.yul\":11059:11061   */\n      0x32\n        /* \"#utility.yul\":11039:11057   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11032:11062   */\n      mstore\n        /* \"#utility.yul\":11098:11132   */\n      0x53756d206f662073656c6c2066656573206d757374206265206c657373207468\n        /* \"#utility.yul\":11078:11096   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11071:11133   */\n      mstore\n        /* \"#utility.yul\":11169:11189   */\n      0x616e206f7220657175616c20746f203235250000000000000000000000000000\n        /* \"#utility.yul\":11149:11167   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11142:11190   */\n      mstore\n        /* \"#utility.yul\":11207:11226   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":27243:27321  require(totalFee <= 250, \"Sum of sell fees must be less than or equal to 25%\") */\n      tag_330\n        /* \"#utility.yul\":10992:11232   */\n      jump\n        /* \"contracts/gainzilla.sol\":27243:27321  require(totalFee <= 250, \"Sum of sell fees must be less than or equal to 25%\") */\n    tag_565:\n        /* \"contracts/gainzilla.sol\":27339:27351  canChangeTax */\n      sload(0x28)\n      0x0100000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":27331:27380  require(canChangeTax, \"This function is diabled\") */\n      tag_568\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14255:14257   */\n      0x20\n        /* \"contracts/gainzilla.sol\":27331:27380  require(canChangeTax, \"This function is diabled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14237:14258   */\n      mstore\n        /* \"#utility.yul\":14294:14296   */\n      0x18\n        /* \"#utility.yul\":14274:14292   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14267:14297   */\n      mstore\n        /* \"#utility.yul\":14333:14359   */\n      0x546869732066756e6374696f6e20697320646961626c65640000000000000000\n        /* \"#utility.yul\":14313:14331   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14306:14360   */\n      mstore\n        /* \"#utility.yul\":14377:14395   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":27331:27380  require(canChangeTax, \"This function is diabled\") */\n      tag_330\n        /* \"#utility.yul\":14227:14401   */\n      jump\n        /* \"contracts/gainzilla.sol\":27331:27380  require(canChangeTax, \"This function is diabled\") */\n    tag_568:\n        /* \"contracts/gainzilla.sol\":27391:27408  _sellMarketingFee */\n      0x15\n        /* \"contracts/gainzilla.sol\":27391:27423  _sellMarketingFee = marketingFee */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27433:27450  _sellLiquidityFee */\n      0x11\n        /* \"contracts/gainzilla.sol\":27433:27465  _sellLiquidityFee = liquidityFee */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27475:27487  _sellTeamFee */\n      0x17\n        /* \"contracts/gainzilla.sol\":27475:27497  _sellTeamFee = teamFee */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27507:27524  _sellEcosystemFee */\n      0x13\n        /* \"contracts/gainzilla.sol\":27507:27539  _sellEcosystemFee = ecosystemFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27558:27583  _previousSellMarketingFee */\n      0x16\n        /* \"contracts/gainzilla.sol\":27558:27603  _previousSellMarketingFee = _sellMarketingFee */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27613:27638  _previousSellLiquidityFee */\n      0x12\n        /* \"contracts/gainzilla.sol\":27613:27658  _previousSellLiquidityFee = _sellLiquidityFee */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27668:27688  _previousSellTeamFee */\n      0x18\n        /* \"contracts/gainzilla.sol\":27668:27703  _previousSellTeamFee = _sellTeamFee */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27713:27738  _previousSellEcosystemFee */\n      0x14\n        /* \"contracts/gainzilla.sol\":27713:27758  _previousSellEcosystemFee = _sellEcosystemFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27782:27848  SellFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":16733:16758   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":16789:16791   */\n      0x20\n        /* \"#utility.yul\":16774:16792   */\n      dup2\n      add\n        /* \"#utility.yul\":16767:16801   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":16817:16835   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":16810:16844   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":16875:16877   */\n      0x60\n        /* \"#utility.yul\":16860:16878   */\n      dup2\n      add\n        /* \"#utility.yul\":16853:16887   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/gainzilla.sol\":27782:27848  SellFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n      0x439932620c72dddea29980c098bca1a482729646d1216b226d723c6d278a30d1\n      swap1\n        /* \"#utility.yul\":16720:16723   */\n      0x80\n        /* \"#utility.yul\":16705:16724   */\n      add\n        /* \"contracts/gainzilla.sol\":27782:27848  SellFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n      tag_541\n        /* \"#utility.yul\":16687:16893   */\n      jump\n        /* \"contracts/gainzilla.sol\":25442:25608  function addBot(address account) external onlyOwner() {... */\n    tag_320:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_573\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12234:12255   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12264:12294   */\n      mstore\n        /* \"#utility.yul\":12330:12364   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12310:12328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12303:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n        /* \"#utility.yul\":12224:12406   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_573:\n        /* \"contracts/gainzilla.sol\":25514:25526  canBlackList */\n      sload(0x28)\n      0x01000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":25506:25571  require(canBlackList, \"this contract cannot blacklist addresses\") */\n      tag_576\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13440:13442   */\n      0x20\n        /* \"contracts/gainzilla.sol\":25506:25571  require(canBlackList, \"this contract cannot blacklist addresses\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13422:13443   */\n      mstore\n        /* \"#utility.yul\":13479:13481   */\n      0x28\n        /* \"#utility.yul\":13459:13477   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13452:13482   */\n      mstore\n        /* \"#utility.yul\":13518:13552   */\n      0x7468697320636f6e74726163742063616e6e6f7420626c61636b6c6973742061\n        /* \"#utility.yul\":13498:13516   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13491:13553   */\n      mstore\n        /* \"#utility.yul\":13589:13599   */\n      0x6464726573736573000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13569:13587   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13562:13600   */\n      mstore\n        /* \"#utility.yul\":13617:13636   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":25506:25571  require(canBlackList, \"this contract cannot blacklist addresses\") */\n      tag_330\n        /* \"#utility.yul\":13412:13642   */\n      jump\n        /* \"contracts/gainzilla.sol\":25506:25571  require(canBlackList, \"this contract cannot blacklist addresses\") */\n    tag_576:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":25581:25594  bots[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":25581:25585  bots */\n      0x20\n        /* \"contracts/gainzilla.sol\":25581:25594  bots[account] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":25581:25601  bots[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":25597:25601  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":25581:25601  bots[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":25442:25608  function addBot(address account) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":14904:15234  function _approve(address owner, address spender, uint256 amount) private {... */\n    tag_326:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":14996:15015  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":14988:15056  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_581\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14608:14610   */\n      0x20\n        /* \"contracts/gainzilla.sol\":14988:15056  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14590:14611   */\n      mstore\n        /* \"#utility.yul\":14647:14649   */\n      0x24\n        /* \"#utility.yul\":14627:14645   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":14620:14650   */\n      mstore\n        /* \"#utility.yul\":14686:14720   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":14666:14684   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14659:14721   */\n      mstore\n        /* \"#utility.yul\":14757:14763   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14737:14755   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14730:14764   */\n      mstore\n        /* \"#utility.yul\":14781:14800   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":14988:15056  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_330\n        /* \"#utility.yul\":14580:14806   */\n      jump\n        /* \"contracts/gainzilla.sol\":14988:15056  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_581:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15074:15095  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/gainzilla.sol\":15066:15134  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_584\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9545:9547   */\n      0x20\n        /* \"contracts/gainzilla.sol\":15066:15134  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9527:9548   */\n      mstore\n        /* \"#utility.yul\":9584:9586   */\n      0x22\n        /* \"#utility.yul\":9564:9582   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9557:9587   */\n      mstore\n        /* \"#utility.yul\":9623:9657   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":9603:9621   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9596:9658   */\n      mstore\n        /* \"#utility.yul\":9694:9698   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9674:9692   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9667:9699   */\n      mstore\n        /* \"#utility.yul\":9716:9735   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":15066:15134  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_330\n        /* \"#utility.yul\":9517:9741   */\n      jump\n        /* \"contracts/gainzilla.sol\":15066:15134  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_584:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15144:15162  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":15144:15155  _allowances */\n      0x03\n        /* \"contracts/gainzilla.sol\":15144:15162  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/gainzilla.sol\":15144:15171  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":15144:15180  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":15195:15227  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":6702:6727   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":15195:15227  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":6675:6693   */\n      add\n        /* \"contracts/gainzilla.sol\":15195:15227  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/gainzilla.sol\":14904:15234  function _approve(address owner, address spender, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":15244:18451  function _transfer(address from, address to, uint256 amount) private {... */\n    tag_341:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15331:15349  from != address(0) */\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":15323:15391  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_589\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13849:13851   */\n      0x20\n        /* \"contracts/gainzilla.sol\":15323:15391  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13831:13852   */\n      mstore\n        /* \"#utility.yul\":13888:13890   */\n      0x25\n        /* \"#utility.yul\":13868:13886   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13861:13891   */\n      mstore\n        /* \"#utility.yul\":13927:13961   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13907:13925   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13900:13962   */\n      mstore\n        /* \"#utility.yul\":13998:14005   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13978:13996   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13971:14006   */\n      mstore\n        /* \"#utility.yul\":14023:14042   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":15323:15391  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_330\n        /* \"#utility.yul\":13821:14048   */\n      jump\n        /* \"contracts/gainzilla.sol\":15323:15391  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_589:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15409:15425  to != address(0) */\n      dup3\n      and\n        /* \"contracts/gainzilla.sol\":15401:15465  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_592\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7966:7968   */\n      0x20\n        /* \"contracts/gainzilla.sol\":15401:15465  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7948:7969   */\n      mstore\n        /* \"#utility.yul\":8005:8007   */\n      0x23\n        /* \"#utility.yul\":7985:8003   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7978:8008   */\n      mstore\n        /* \"#utility.yul\":8044:8078   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":8024:8042   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8017:8079   */\n      mstore\n        /* \"#utility.yul\":8115:8120   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8095:8113   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8088:8121   */\n      mstore\n        /* \"#utility.yul\":8138:8157   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":15401:15465  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_330\n        /* \"#utility.yul\":7938:8163   */\n      jump\n        /* \"contracts/gainzilla.sol\":15401:15465  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_592:\n        /* \"contracts/gainzilla.sol\":15492:15493  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":15483:15489  amount */\n      dup2\n        /* \"contracts/gainzilla.sol\":15483:15493  amount > 0 */\n      gt\n        /* \"contracts/gainzilla.sol\":15475:15539  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_595\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12613:12615   */\n      0x20\n        /* \"contracts/gainzilla.sol\":15475:15539  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12595:12616   */\n      mstore\n        /* \"#utility.yul\":12652:12654   */\n      0x29\n        /* \"#utility.yul\":12632:12650   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12625:12655   */\n      mstore\n        /* \"#utility.yul\":12691:12725   */\n      0x5472616e7366657220616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":12671:12689   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12664:12726   */\n      mstore\n        /* \"#utility.yul\":12762:12773   */\n      0x7468616e207a65726f0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12742:12760   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12735:12774   */\n      mstore\n        /* \"#utility.yul\":12791:12810   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":15475:15539  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_330\n        /* \"#utility.yul\":12585:12816   */\n      jump\n        /* \"contracts/gainzilla.sol\":15475:15539  require(amount > 0, \"Transfer amount must be greater than zero\") */\n    tag_595:\n        /* \"contracts/gainzilla.sol\":15565:15569  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":15592:15599  owner() */\n      tag_598\n        /* \"contracts/gainzilla.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":15592:15599  owner() */\n    tag_598:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15584:15599  from != owner() */\n      and\n        /* \"contracts/gainzilla.sol\":15584:15588  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15584:15599  from != owner() */\n      and\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":15584:15616  from != owner() && to != owner() */\n      dup1\n      iszero\n      tag_599\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15603:15616  to != owner() */\n      dup5\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":15603:15616  to != owner() */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":15584:15616  from != owner() && to != owner() */\n    tag_599:\n        /* \"contracts/gainzilla.sol\":15584:15641  from != owner() && to != owner() && from != address(this) */\n      dup1\n      iszero\n      tag_601\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15620:15641  from != address(this) */\n      dup5\n      and\n        /* \"contracts/gainzilla.sol\":15636:15640  this */\n      address\n        /* \"contracts/gainzilla.sol\":15620:15641  from != address(this) */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":15584:15641  from != owner() && to != owner() && from != address(this) */\n    tag_601:\n        /* \"contracts/gainzilla.sol\":15584:15664  from != owner() && to != owner() && from != address(this) && to != address(this) */\n      dup1\n      iszero\n      tag_602\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15645:15664  to != address(this) */\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":15659:15663  this */\n      address\n        /* \"contracts/gainzilla.sol\":15645:15664  to != address(this) */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":15584:15664  from != owner() && to != owner() && from != address(this) && to != address(this) */\n    tag_602:\n        /* \"contracts/gainzilla.sol\":15580:18279  if (from != owner() && to != owner() && from != address(this) && to != address(this)) {... */\n      iszero\n      tag_658\n      jumpi\n        /* \"contracts/gainzilla.sol\":15688:15699  tradingOpen */\n      and(0xff, sload(0x28))\n        /* \"contracts/gainzilla.sol\":15680:15725  require(tradingOpen, \"Trading is not active\") */\n      tag_604\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8788:8790   */\n      0x20\n        /* \"contracts/gainzilla.sol\":15680:15725  require(tradingOpen, \"Trading is not active\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8770:8791   */\n      mstore\n        /* \"#utility.yul\":8827:8829   */\n      0x15\n        /* \"#utility.yul\":8807:8825   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8800:8830   */\n      mstore\n        /* \"#utility.yul\":8866:8889   */\n      0x54726164696e67206973206e6f74206163746976650000000000000000000000\n        /* \"#utility.yul\":8846:8864   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8839:8890   */\n      mstore\n        /* \"#utility.yul\":8907:8925   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":15680:15725  require(tradingOpen, \"Trading is not active\") */\n      tag_330\n        /* \"#utility.yul\":8760:8931   */\n      jump\n        /* \"contracts/gainzilla.sol\":15680:15725  require(tradingOpen, \"Trading is not active\") */\n    tag_604:\n        /* \"contracts/gainzilla.sol\":15751:15764  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15743:15764  from == uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":15751:15764  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":15743:15764  from == uniswapV2Pair */\n      eq\n        /* \"contracts/gainzilla.sol\":15743:15798  from == uniswapV2Pair && to != address(uniswapV2Router) */\n      dup1\n      iszero\n      tag_607\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":15782:15797  uniswapV2Router */\n      sload(0x25)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15768:15798  to != address(uniswapV2Router) */\n      dup5\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":15782:15797  uniswapV2Router */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":15768:15798  to != address(uniswapV2Router) */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":15743:15798  from == uniswapV2Pair && to != address(uniswapV2Router) */\n    tag_607:\n        /* \"contracts/gainzilla.sol\":15739:16159  if (from == uniswapV2Pair && to != address(uniswapV2Router)) {//buys... */\n      iszero\n      tag_614\n      jumpi\n        /* \"contracts/gainzilla.sol\":15864:15874  _botBlocks */\n      sload(0x06)\n        /* \"contracts/gainzilla.sol\":15848:15859  _firstBlock */\n      sload(0x05)\n        /* \"contracts/gainzilla.sol\":15848:15875  _firstBlock.add(_botBlocks) */\n      tag_609\n      swap2\n        /* \"contracts/gainzilla.sol\":15848:15863  _firstBlock.add */\n      tag_534\n        /* \"contracts/gainzilla.sol\":15848:15875  _firstBlock.add(_botBlocks) */\n      jump\t// in\n    tag_609:\n        /* \"contracts/gainzilla.sol\":15829:15844  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":15829:15875  block.timestamp <= _firstBlock.add(_botBlocks) */\n      gt\n        /* \"contracts/gainzilla.sol\":15825:15933  if (block.timestamp <= _firstBlock.add(_botBlocks)) {... */\n      tag_610\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15899:15907  bots[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":15899:15903  bots */\n      0x20\n        /* \"contracts/gainzilla.sol\":15899:15907  bots[to] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":15899:15914  bots[to] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":15910:15914  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":15899:15914  bots[to] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":15825:15933  if (block.timestamp <= _firstBlock.add(_botBlocks)) {... */\n    tag_610:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15956:15978  _isExcludedFromFee[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":15956:15974  _isExcludedFromFee */\n      0x04\n        /* \"contracts/gainzilla.sol\":15956:15978  _isExcludedFromFee[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":15951:16145  if (!_isExcludedFromFee[to]) {... */\n      tag_614\n      jumpi\n        /* \"contracts/gainzilla.sol\":16039:16055  _maxWalletAmount */\n      sload(0x07)\n        /* \"contracts/gainzilla.sol\":16010:16035  balanceOf(to).add(amount) */\n      tag_612\n        /* \"contracts/gainzilla.sol\":16028:16034  amount */\n      dup4\n        /* \"contracts/gainzilla.sol\":16010:16023  balanceOf(to) */\n      tag_533\n        /* \"contracts/gainzilla.sol\":16020:16022  to */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":12793:12811  _balances[account] */\n      and\n        /* \"contracts/gainzilla.sol\":12767:12774  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":12793:12811  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":12793:12802  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":12793:12811  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/gainzilla.sol\":12701:12818  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":16010:16035  balanceOf(to).add(amount) */\n    tag_612:\n        /* \"contracts/gainzilla.sol\":16010:16055  balanceOf(to).add(amount) <= _maxWalletAmount */\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":16002:16126  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n      tag_614\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15013:15015   */\n      0x20\n        /* \"contracts/gainzilla.sol\":16002:16126  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14995:15016   */\n      mstore\n        /* \"#utility.yul\":15052:15054   */\n      0x42\n        /* \"#utility.yul\":15032:15050   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15025:15055   */\n      mstore\n        /* \"#utility.yul\":15091:15125   */\n      0x2e77616c6c65742062616c616e6365206166746572207472616e73666572206d\n        /* \"#utility.yul\":15071:15089   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15064:15126   */\n      mstore\n        /* \"#utility.yul\":15162:15196   */\n      0x757374206265206c657373207468616e206d61782077616c6c657420616d6f75\n        /* \"#utility.yul\":15142:15160   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15135:15197   */\n      mstore\n        /* \"#utility.yul\":15234:15238   */\n      0x6e74000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15213:15232   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":15206:15239   */\n      mstore\n        /* \"#utility.yul\":15256:15275   */\n      0xa4\n      add\n        /* \"contracts/gainzilla.sol\":16002:16126  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n      tag_330\n        /* \"#utility.yul\":14985:15281   */\n      jump\n        /* \"contracts/gainzilla.sol\":16002:16126  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n    tag_614:\n        /* \"contracts/gainzilla.sol\":16190:16196  inSwap */\n      sload(0x28)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":16189:16196  !inSwap */\n      iszero\n        /* \"contracts/gainzilla.sol\":16189:16221  !inSwap && from != uniswapV2Pair */\n      dup1\n      iszero\n      tag_617\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":16208:16221  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":16200:16221  from != uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":16208:16221  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":16200:16221  from != uniswapV2Pair */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":16189:16221  !inSwap && from != uniswapV2Pair */\n    tag_617:\n        /* \"contracts/gainzilla.sol\":16189:16244  !inSwap && from != uniswapV2Pair && to == uniswapV2Pair */\n      dup1\n      iszero\n      tag_618\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":16231:16244  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":16225:16244  to == uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":16231:16244  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":16225:16244  to == uniswapV2Pair */\n      eq\n        /* \"contracts/gainzilla.sol\":16189:16244  !inSwap && from != uniswapV2Pair && to == uniswapV2Pair */\n    tag_618:\n        /* \"contracts/gainzilla.sol\":16185:17951  if (!inSwap && from != uniswapV2Pair && to == uniswapV2Pair) { //sells... */\n      iszero\n      tag_619\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":16281:16291  bots[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":16281:16285  bots */\n      0x20\n        /* \"contracts/gainzilla.sol\":16281:16291  bots[from] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":16280:16291  !bots[from] */\n      iszero\n        /* \"contracts/gainzilla.sol\":16280:16304  !bots[from] && !bots[to] */\n      dup1\n      iszero\n      tag_620\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":16296:16304  bots[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":16296:16300  bots */\n      0x20\n        /* \"contracts/gainzilla.sol\":16296:16304  bots[to] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":16295:16304  !bots[to] */\n      iszero\n        /* \"contracts/gainzilla.sol\":16280:16304  !bots[from] && !bots[to] */\n    tag_620:\n        /* \"contracts/gainzilla.sol\":16272:16305  require(!bots[from] && !bots[to]) */\n      tag_621\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_621:\n        /* \"contracts/gainzilla.sol\":16373:16381  cooldown */\n      0x1a\n        /* \"contracts/gainzilla.sol\":16373:16389  cooldown.enabled */\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":16369:16602  if (cooldown.enabled) {... */\n      iszero\n      tag_622\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":16440:16465  cooldown.walletList[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":16440:16459  cooldown.walletList */\n      0x1b\n        /* \"contracts/gainzilla.sol\":16440:16465  cooldown.walletList[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":16421:16436  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":16421:16465  block.timestamp >= cooldown.walletList[from] */\n      lt\n      iszero\n        /* \"contracts/gainzilla.sol\":16413:16498  require(block.timestamp >= cooldown.walletList[from], \"Strong Hands Protocol active\") */\n      tag_623\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9948:9950   */\n      0x20\n        /* \"contracts/gainzilla.sol\":16413:16498  require(block.timestamp >= cooldown.walletList[from], \"Strong Hands Protocol active\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9930:9951   */\n      mstore\n        /* \"#utility.yul\":9987:9989   */\n      0x1c\n        /* \"#utility.yul\":9967:9985   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9960:9990   */\n      mstore\n        /* \"#utility.yul\":10026:10056   */\n      0x5374726f6e672048616e64732050726f746f636f6c2061637469766500000000\n        /* \"#utility.yul\":10006:10024   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9999:10057   */\n      mstore\n        /* \"#utility.yul\":10074:10092   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":16413:16498  require(block.timestamp >= cooldown.walletList[from], \"Strong Hands Protocol active\") */\n      tag_330\n        /* \"#utility.yul\":9920:10098   */\n      jump\n        /* \"contracts/gainzilla.sol\":16413:16498  require(block.timestamp >= cooldown.walletList[from], \"Strong Hands Protocol active\") */\n    tag_623:\n        /* \"contracts/gainzilla.sol\":16566:16574  cooldown */\n      0x1a\n        /* \"contracts/gainzilla.sol\":16566:16583  cooldown.duration */\n      sload\n        /* \"contracts/gainzilla.sol\":16548:16583  block.timestamp + cooldown.duration */\n      tag_626\n      swap1\n        /* \"contracts/gainzilla.sol\":16566:16583  cooldown.duration */\n      0x0100\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/gainzilla.sol\":16548:16563  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":16548:16583  block.timestamp + cooldown.duration */\n      tag_627\n      jump\t// in\n    tag_626:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":16520:16545  cooldown.walletList[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":16520:16539  cooldown.walletList */\n      0x1b\n        /* \"contracts/gainzilla.sol\":16520:16545  cooldown.walletList[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":16520:16583  cooldown.walletList[from] = block.timestamp + cooldown.duration */\n      sstore\n        /* \"contracts/gainzilla.sol\":16369:16602  if (cooldown.enabled) {... */\n    tag_622:\n        /* \"contracts/gainzilla.sol\":16663:16675  diamondFloor */\n      0x1c\n        /* \"contracts/gainzilla.sol\":16663:16683  diamondFloor.enabled */\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":16659:16839  if (diamondFloor.enabled) {... */\n      iszero\n      tag_632\n      jumpi\n        /* \"contracts/gainzilla.sol\":16716:16740  diamondFloor.sellStopped */\n      and(0xff, sload(0x1e))\n        /* \"contracts/gainzilla.sol\":16715:16740  !diamondFloor.sellStopped */\n      iszero\n        /* \"contracts/gainzilla.sol\":16707:16775  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n      tag_629\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10661:10663   */\n      0x20\n        /* \"contracts/gainzilla.sol\":16707:16775  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10643:10664   */\n      mstore\n        /* \"#utility.yul\":10700:10702   */\n      0x1e\n        /* \"#utility.yul\":10680:10698   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10673:10703   */\n      mstore\n        /* \"#utility.yul\":10739:10771   */\n      0x53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f720000\n        /* \"#utility.yul\":10719:10737   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10712:10772   */\n      mstore\n        /* \"#utility.yul\":10789:10807   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":16707:16775  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n      tag_330\n        /* \"#utility.yul\":10633:10813   */\n      jump\n        /* \"contracts/gainzilla.sol\":16707:16775  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n    tag_629:\n        /* \"contracts/gainzilla.sol\":16797:16820  _checkPriceConditions() */\n      tag_632\n        /* \"contracts/gainzilla.sol\":16797:16818  _checkPriceConditions */\n      tag_633\n        /* \"contracts/gainzilla.sol\":16797:16820  _checkPriceConditions() */\n      jump\t// in\n    tag_632:\n        /* \"contracts/gainzilla.sol\":16922:16926  this */\n      address\n        /* \"contracts/gainzilla.sol\":16873:16901  uint256 contractTokenBalance */\n      0x00\n        /* \"contracts/gainzilla.sol\":12793:12811  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":12793:12802  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":12793:12811  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":16975:16990  numTokensToSwap */\n      sload(0x08)\n        /* \"contracts/gainzilla.sol\":16951:16990  contractTokenBalance >= numTokensToSwap */\n      dup2\n      lt\n        /* \"contracts/gainzilla.sol\":16947:17916  if (contractTokenBalance >= numTokensToSwap) {... */\n      tag_635\n      jumpi\n        /* \"contracts/gainzilla.sol\":17018:17042  contractTokenBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/gainzilla.sol\":17014:17693  if (contractTokenBalance > 0) {... */\n      tag_640\n      jumpi\n        /* \"contracts/gainzilla.sol\":17158:17159  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":17074:17155  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) */\n      tag_637\n        /* \"contracts/gainzilla.sol\":17137:17154  _sellLiquidityFee */\n      sload(0x11)\n        /* \"contracts/gainzilla.sol\":17074:17132  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee) */\n      tag_533\n        /* \"contracts/gainzilla.sol\":17114:17131  _sellEcosystemFee */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":17074:17109  _sellMarketingFee.add(_sellTeamFee) */\n      tag_533\n        /* \"contracts/gainzilla.sol\":17096:17108  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/gainzilla.sol\":17074:17091  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/gainzilla.sol\":17074:17095  _sellMarketingFee.add */\n      tag_534\n      swap1\n        /* \"contracts/gainzilla.sol\":17074:17109  _sellMarketingFee.add(_sellTeamFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":17074:17155  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) */\n    tag_637:\n        /* \"contracts/gainzilla.sol\":17074:17159  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) > 0 */\n      gt\n        /* \"contracts/gainzilla.sol\":17070:17671  if (_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) > 0) {... */\n      iszero\n      tag_640\n      jumpi\n        /* \"contracts/gainzilla.sol\":17191:17211  uint256 autoLPamount */\n      0x00\n        /* \"contracts/gainzilla.sol\":17214:17344  _sellLiquidityFee.mul(contractTokenBalance).div(_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee)) */\n      tag_641\n        /* \"contracts/gainzilla.sol\":17262:17343  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) */\n      tag_642\n        /* \"contracts/gainzilla.sol\":17325:17342  _sellLiquidityFee */\n      sload(0x11)\n        /* \"contracts/gainzilla.sol\":17262:17320  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee) */\n      tag_533\n        /* \"contracts/gainzilla.sol\":17302:17319  _sellEcosystemFee */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":17262:17297  _sellMarketingFee.add(_sellTeamFee) */\n      tag_533\n        /* \"contracts/gainzilla.sol\":17284:17296  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/gainzilla.sol\":17262:17279  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/gainzilla.sol\":17262:17283  _sellMarketingFee.add */\n      tag_534\n      swap1\n        /* \"contracts/gainzilla.sol\":17262:17297  _sellMarketingFee.add(_sellTeamFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":17262:17343  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) */\n    tag_642:\n        /* \"contracts/gainzilla.sol\":17214:17231  _sellLiquidityFee */\n      sload(0x11)\n        /* \"contracts/gainzilla.sol\":17214:17257  _sellLiquidityFee.mul(contractTokenBalance) */\n      tag_431\n      swap1\n        /* \"contracts/gainzilla.sol\":17236:17256  contractTokenBalance */\n      dup6\n        /* \"contracts/gainzilla.sol\":17214:17235  _sellLiquidityFee.mul */\n      tag_434\n        /* \"contracts/gainzilla.sol\":17214:17257  _sellLiquidityFee.mul(contractTokenBalance) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":17214:17344  _sellLiquidityFee.mul(contractTokenBalance).div(_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee)) */\n    tag_641:\n        /* \"contracts/gainzilla.sol\":17191:17344  uint256 autoLPamount = _sellLiquidityFee.mul(contractTokenBalance).div(_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee)) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":17374:17389  uint256 minusLP */\n      0x00\n        /* \"contracts/gainzilla.sol\":17451:17463  autoLPamount */\n      dup2\n        /* \"contracts/gainzilla.sol\":17427:17447  contractTokenBalance */\n      dup4\n        /* \"contracts/gainzilla.sol\":17427:17463  contractTokenBalance >= autoLPamount */\n      lt\n        /* \"contracts/gainzilla.sol\":17423:17578  if (contractTokenBalance >= autoLPamount) {... */\n      tag_646\n      jumpi\n        /* \"contracts/gainzilla.sol\":17509:17547  contractTokenBalance.sub(autoLPamount) */\n      tag_647\n        /* \"contracts/gainzilla.sol\":17509:17529  contractTokenBalance */\n      dup4\n        /* \"contracts/gainzilla.sol\":17534:17546  autoLPamount */\n      dup4\n        /* \"contracts/gainzilla.sol\":17509:17533  contractTokenBalance.sub */\n      tag_433\n        /* \"contracts/gainzilla.sol\":17509:17547  contractTokenBalance.sub(autoLPamount) */\n      jump\t// in\n    tag_647:\n        /* \"contracts/gainzilla.sol\":17499:17547  minusLP = contractTokenBalance.sub(autoLPamount) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":17423:17578  if (contractTokenBalance >= autoLPamount) {... */\n    tag_646:\n        /* \"contracts/gainzilla.sol\":17607:17644  swapAndLiquify(autoLPamount, minusLP) */\n      tag_648\n        /* \"contracts/gainzilla.sol\":17622:17634  autoLPamount */\n      dup3\n        /* \"contracts/gainzilla.sol\":17636:17643  minusLP */\n      dup3\n        /* \"contracts/gainzilla.sol\":17607:17621  swapAndLiquify */\n      tag_649\n        /* \"contracts/gainzilla.sol\":17607:17644  swapAndLiquify(autoLPamount, minusLP) */\n      jump\t// in\n    tag_648:\n        /* \"contracts/gainzilla.sol\":17070:17671  if (_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) > 0) {... */\n      pop\n      pop\n    tag_640:\n        /* \"contracts/gainzilla.sol\":17743:17764  address(this).balance */\n      selfbalance\n        /* \"contracts/gainzilla.sol\":17790:17812  contractETHBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/gainzilla.sol\":17786:17898  if (contractETHBalance > 0) {... */\n      tag_651\n      jumpi\n        /* \"contracts/gainzilla.sol\":17840:17875  sendETHToFee(address(this).balance) */\n      tag_651\n        /* \"contracts/gainzilla.sol\":17853:17874  address(this).balance */\n      selfbalance\n        /* \"contracts/gainzilla.sol\":17840:17852  sendETHToFee */\n      tag_652\n        /* \"contracts/gainzilla.sol\":17840:17875  sendETHToFee(address(this).balance) */\n      jump\t// in\n    tag_651:\n        /* \"contracts/gainzilla.sol\":16947:17916  if (contractTokenBalance >= numTokensToSwap) {... */\n      pop\n    tag_635:\n        /* \"contracts/gainzilla.sol\":16185:17951  if (!inSwap && from != uniswapV2Pair && to == uniswapV2Pair) { //sells... */\n      pop\n    tag_619:\n        /* \"contracts/gainzilla.sol\":17976:17989  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":17968:17989  from != uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":17976:17989  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":17968:17989  from != uniswapV2Pair */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/gainzilla.sol\":17968:18012  from != uniswapV2Pair && to != uniswapV2Pair */\n      tag_653\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":17999:18012  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":17993:18012  to != uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":17999:18012  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":17993:18012  to != uniswapV2Pair */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":17968:18012  from != uniswapV2Pair && to != uniswapV2Pair */\n    tag_653:\n        /* \"contracts/gainzilla.sol\":17965:18269  if(from != uniswapV2Pair && to != uniswapV2Pair) { //transfers... */\n      iszero\n      tag_658\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":18066:18088  _isExcludedFromFee[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":18066:18084  _isExcludedFromFee */\n      0x04\n        /* \"contracts/gainzilla.sol\":18066:18088  _isExcludedFromFee[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":18061:18255  if (!_isExcludedFromFee[to]) {... */\n      tag_658\n      jumpi\n        /* \"contracts/gainzilla.sol\":18149:18165  _maxWalletAmount */\n      sload(0x07)\n        /* \"contracts/gainzilla.sol\":18120:18145  balanceOf(to).add(amount) */\n      tag_656\n        /* \"contracts/gainzilla.sol\":18138:18144  amount */\n      dup4\n        /* \"contracts/gainzilla.sol\":18120:18133  balanceOf(to) */\n      tag_533\n        /* \"contracts/gainzilla.sol\":18130:18132  to */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":12793:12811  _balances[account] */\n      and\n        /* \"contracts/gainzilla.sol\":12767:12774  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":12793:12811  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":12793:12802  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":12793:12811  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/gainzilla.sol\":12701:12818  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":18120:18145  balanceOf(to).add(amount) */\n    tag_656:\n        /* \"contracts/gainzilla.sol\":18120:18165  balanceOf(to).add(amount) <= _maxWalletAmount */\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":18112:18236  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n      tag_658\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15013:15015   */\n      0x20\n        /* \"contracts/gainzilla.sol\":18112:18236  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14995:15016   */\n      mstore\n        /* \"#utility.yul\":15052:15054   */\n      0x42\n        /* \"#utility.yul\":15032:15050   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15025:15055   */\n      mstore\n        /* \"#utility.yul\":15091:15125   */\n      0x2e77616c6c65742062616c616e6365206166746572207472616e73666572206d\n        /* \"#utility.yul\":15071:15089   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15064:15126   */\n      mstore\n        /* \"#utility.yul\":15162:15196   */\n      0x757374206265206c657373207468616e206d61782077616c6c657420616d6f75\n        /* \"#utility.yul\":15142:15160   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15135:15197   */\n      mstore\n        /* \"#utility.yul\":15234:15238   */\n      0x6e74000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15213:15232   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":15206:15239   */\n      mstore\n        /* \"#utility.yul\":15256:15275   */\n      0xa4\n      add\n        /* \"contracts/gainzilla.sol\":18112:18236  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n      tag_330\n        /* \"#utility.yul\":14985:15281   */\n      jump\n        /* \"contracts/gainzilla.sol\":18112:18236  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n    tag_658:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":18293:18317  _isExcludedFromFee[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":18293:18311  _isExcludedFromFee */\n      0x04\n        /* \"contracts/gainzilla.sol\":18293:18317  _isExcludedFromFee[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/gainzilla.sol\":18293:18343  _isExcludedFromFee[from] || _isExcludedFromFee[to] */\n      tag_660\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":18321:18343  _isExcludedFromFee[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":18321:18339  _isExcludedFromFee */\n      0x04\n        /* \"contracts/gainzilla.sol\":18321:18343  _isExcludedFromFee[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":18293:18343  _isExcludedFromFee[from] || _isExcludedFromFee[to] */\n    tag_660:\n        /* \"contracts/gainzilla.sol\":18289:18385  if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {... */\n      iszero\n      tag_661\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":18369:18374  false */\n      0x00\n        /* \"contracts/gainzilla.sol\":18289:18385  if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {... */\n    tag_661:\n        /* \"contracts/gainzilla.sol\":18403:18444  _tokenTransfer(from, to, amount, takeFee) */\n      tag_662\n        /* \"contracts/gainzilla.sol\":18418:18422  from */\n      dup5\n        /* \"contracts/gainzilla.sol\":18424:18426  to */\n      dup5\n        /* \"contracts/gainzilla.sol\":18428:18434  amount */\n      dup5\n        /* \"contracts/gainzilla.sol\":18436:18443  takeFee */\n      dup5\n        /* \"contracts/gainzilla.sol\":18403:18417  _tokenTransfer */\n      tag_663\n        /* \"contracts/gainzilla.sol\":18403:18444  _tokenTransfer(from, to, amount, takeFee) */\n      jump\t// in\n    tag_662:\n        /* \"contracts/gainzilla.sol\":15244:18451  function _transfer(address from, address to, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":1849:2035  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_346:\n        /* \"contracts/gainzilla.sol\":1935:1942  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":1970:1982  errorMessage */\n      dup2\n        /* \"contracts/gainzilla.sol\":1962:1968  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":1954:1983  require(b <= a, errorMessage) */\n      tag_665\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_330\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_665:\n      pop\n        /* \"contracts/gainzilla.sol\":1993:2002  uint256 c */\n      0x00\n        /* \"contracts/gainzilla.sol\":2005:2010  a - b */\n      tag_667\n        /* \"contracts/gainzilla.sol\":2009:2010  b */\n      dup5\n        /* \"contracts/gainzilla.sol\":2005:2006  a */\n      dup7\n        /* \"contracts/gainzilla.sol\":2005:2010  a - b */\n      tag_668\n      jump\t// in\n    tag_667:\n        /* \"contracts/gainzilla.sol\":1993:2010  uint256 c = a - b */\n      swap6\n        /* \"contracts/gainzilla.sol\":1849:2035  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":2286:2416  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_353:\n        /* \"contracts/gainzilla.sol\":2344:2351  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":2370:2409  div(a, b, \"SafeMath: division by zero\") */\n      tag_670\n        /* \"contracts/gainzilla.sol\":2374:2375  a */\n      dup4\n        /* \"contracts/gainzilla.sol\":2377:2378  b */\n      dup4\n        /* \"contracts/gainzilla.sol\":2370:2409  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/gainzilla.sol\":2370:2373  div */\n      tag_671\n        /* \"contracts/gainzilla.sol\":2370:2409  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_670:\n        /* \"contracts/gainzilla.sol\":2363:2409  return div(a, b, \"SafeMath: division by zero\") */\n      swap4\n        /* \"contracts/gainzilla.sol\":2286:2416  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":1709:1843  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_433:\n        /* \"contracts/gainzilla.sol\":1767:1774  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":1793:1836  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_670\n        /* \"contracts/gainzilla.sol\":1797:1798  a */\n      dup4\n        /* \"contracts/gainzilla.sol\":1800:1801  b */\n      dup4\n        /* \"contracts/gainzilla.sol\":1793:1836  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/gainzilla.sol\":1793:1796  sub */\n      tag_346\n        /* \"contracts/gainzilla.sol\":1793:1836  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":2041:2280  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_434:\n        /* \"contracts/gainzilla.sol\":2099:2106  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":2122:2128  a == 0 */\n      dup3\n        /* \"contracts/gainzilla.sol\":2118:2163  if (a == 0) {... */\n      tag_675\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":2151:2152  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":2144:2152  return 0 */\n      jump(tag_322)\n        /* \"contracts/gainzilla.sol\":2118:2163  if (a == 0) {... */\n    tag_675:\n        /* \"contracts/gainzilla.sol\":2172:2181  uint256 c */\n      0x00\n        /* \"contracts/gainzilla.sol\":2184:2189  a * b */\n      tag_676\n        /* \"contracts/gainzilla.sol\":2188:2189  b */\n      dup4\n        /* \"contracts/gainzilla.sol\":2184:2185  a */\n      dup6\n        /* \"contracts/gainzilla.sol\":2184:2189  a * b */\n      tag_677\n      jump\t// in\n    tag_676:\n        /* \"contracts/gainzilla.sol\":2172:2189  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":2216:2217  b */\n      dup3\n        /* \"contracts/gainzilla.sol\":2207:2212  c / a */\n      tag_678\n        /* \"contracts/gainzilla.sol\":2211:2212  a */\n      dup6\n        /* \"contracts/gainzilla.sol\":2172:2189  uint256 c = a * b */\n      dup4\n        /* \"contracts/gainzilla.sol\":2207:2212  c / a */\n      tag_679\n      jump\t// in\n    tag_678:\n        /* \"contracts/gainzilla.sol\":2207:2217  c / a == b */\n      eq\n        /* \"contracts/gainzilla.sol\":2199:2255  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_670\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11850:11852   */\n      0x20\n        /* \"contracts/gainzilla.sol\":2199:2255  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11832:11853   */\n      mstore\n        /* \"#utility.yul\":11889:11891   */\n      0x21\n        /* \"#utility.yul\":11869:11887   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11862:11892   */\n      mstore\n        /* \"#utility.yul\":11928:11962   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":11908:11926   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11901:11963   */\n      mstore\n        /* \"#utility.yul\":11999:12002   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11979:11997   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11972:12003   */\n      mstore\n        /* \"#utility.yul\":12020:12039   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":2199:2255  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_330\n        /* \"#utility.yul\":11822:12045   */\n      jump\n        /* \"contracts/gainzilla.sol\":18460:18861  function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {... */\n    tag_499:\n        /* \"contracts/gainzilla.sol\":11460:11466  inSwap */\n      0x28\n        /* \"contracts/gainzilla.sol\":11460:11473  inSwap = true */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":18561:18577  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/gainzilla.sol\":18575:18576  2 */\n      0x02\n        /* \"contracts/gainzilla.sol\":18561:18577  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n      0x00\n      swap3\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":18537:18577  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":18605:18609  this */\n      address\n        /* \"contracts/gainzilla.sol\":18587:18591  path */\n      dup2\n        /* \"contracts/gainzilla.sol\":18592:18593  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":18587:18594  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_687\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_687:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":18587:18610  path[0] = address(this) */\n      swap3\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":18587:18594  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      dup2\n      add\n        /* \"contracts/gainzilla.sol\":18587:18610  path[0] = address(this) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/gainzilla.sol\":18630:18645  uniswapV2Router */\n      sload(0x25)\n        /* \"contracts/gainzilla.sol\":18630:18652  uniswapV2Router.WETH() */\n      0x40\n      dup1\n      mload\n      0xad5c464800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/gainzilla.sol\":18630:18645  uniswapV2Router */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"contracts/gainzilla.sol\":18630:18650  uniswapV2Router.WETH */\n      0xad5c4648\n      swap3\n        /* \"contracts/gainzilla.sol\":18630:18652  uniswapV2Router.WETH() */\n      0x04\n      dup1\n      dup4\n      add\n      swap4\n        /* \"contracts/gainzilla.sol\":18587:18594  path[0] */\n      swap2\n      swap3\n        /* \"contracts/gainzilla.sol\":18630:18652  uniswapV2Router.WETH() */\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/gainzilla.sol\":18630:18645  uniswapV2Router */\n      dup7\n        /* \"contracts/gainzilla.sol\":18630:18652  uniswapV2Router.WETH() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_688\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_688:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_690\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_690:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_691\n      swap2\n      swap1\n      tag_459\n      jump\t// in\n    tag_691:\n        /* \"contracts/gainzilla.sol\":18620:18624  path */\n      dup2\n        /* \"contracts/gainzilla.sol\":18625:18626  1 */\n      0x01\n        /* \"contracts/gainzilla.sol\":18620:18627  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_692\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_692:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":18620:18652  path[1] = uniswapV2Router.WETH() */\n      swap3\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":18620:18627  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/gainzilla.sol\":18620:18652  path[1] = uniswapV2Router.WETH() */\n      mstore\n        /* \"contracts/gainzilla.sol\":18694:18709  uniswapV2Router */\n      sload(0x25)\n        /* \"contracts/gainzilla.sol\":18662:18724  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      tag_693\n      swap2\n        /* \"contracts/gainzilla.sol\":18679:18683  this */\n      address\n      swap2\n        /* \"contracts/gainzilla.sol\":18694:18709  uniswapV2Router */\n      and\n        /* \"contracts/gainzilla.sol\":18712:18723  tokenAmount */\n      dup5\n        /* \"contracts/gainzilla.sol\":18662:18670  _approve */\n      tag_326\n        /* \"contracts/gainzilla.sol\":18662:18724  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      jump\t// in\n    tag_693:\n        /* \"contracts/gainzilla.sol\":18734:18749  uniswapV2Router */\n      sload(0x25)\n        /* \"contracts/gainzilla.sol\":18734:18854  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount, 0, path, address(this), block.timestamp) */\n      mload(0x40)\n      0x791ac94700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":18734:18749  uniswapV2Router */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":18734:18800  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens */\n      0x791ac947\n      swap1\n        /* \"contracts/gainzilla.sol\":18734:18854  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount, 0, path, address(this), block.timestamp) */\n      tag_694\n      swap1\n        /* \"contracts/gainzilla.sol\":18801:18812  tokenAmount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":18734:18749  uniswapV2Router */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":18817:18821  path */\n      dup7\n      swap1\n        /* \"contracts/gainzilla.sol\":18831:18835  this */\n      address\n      swap1\n        /* \"contracts/gainzilla.sol\":18838:18853  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/gainzilla.sol\":18734:18854  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount, 0, path, address(this), block.timestamp) */\n      0x04\n      add\n      tag_695\n      jump\t// in\n    tag_694:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_696\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_696:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_698\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_698:\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":11494:11500  inSwap */\n      0x28\n        /* \"contracts/gainzilla.sol\":11494:11508  inSwap = false */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff\n      and\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":18460:18861  function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":1528:1703  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_534:\n        /* \"contracts/gainzilla.sol\":1586:1593  uint256 */\n      0x00\n      dup1\n        /* \"contracts/gainzilla.sol\":1617:1622  a + b */\n      tag_700\n        /* \"contracts/gainzilla.sol\":1621:1622  b */\n      dup4\n        /* \"contracts/gainzilla.sol\":1617:1618  a */\n      dup6\n        /* \"contracts/gainzilla.sol\":1617:1622  a + b */\n      tag_627\n      jump\t// in\n    tag_700:\n        /* \"contracts/gainzilla.sol\":1605:1622  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":1645:1646  a */\n      dup4\n        /* \"contracts/gainzilla.sol\":1640:1641  c */\n      dup2\n        /* \"contracts/gainzilla.sol\":1640:1646  c >= a */\n      lt\n      iszero\n        /* \"contracts/gainzilla.sol\":1632:1678  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_670\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10305:10307   */\n      0x20\n        /* \"contracts/gainzilla.sol\":1632:1678  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10287:10308   */\n      mstore\n        /* \"#utility.yul\":10344:10346   */\n      0x1b\n        /* \"#utility.yul\":10324:10342   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10317:10347   */\n      mstore\n        /* \"#utility.yul\":10383:10412   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":10363:10381   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10356:10413   */\n      mstore\n        /* \"#utility.yul\":10430:10448   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":1632:1678  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_330\n        /* \"#utility.yul\":10277:10454   */\n      jump\n        /* \"contracts/gainzilla.sol\":3654:3841  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_556:\n        /* \"contracts/gainzilla.sol\":3727:3743  address oldOwner */\n      0x00\n        /* \"contracts/gainzilla.sol\":3746:3752  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3762:3779  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/gainzilla.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/gainzilla.sol\":3746:3752  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/gainzilla.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/gainzilla.sol\":3727:3743  address oldOwner */\n      swap1\n        /* \"contracts/gainzilla.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/gainzilla.sol\":3654:3841  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":18867:19675  function _checkPriceConditions() private {... */\n    tag_633:\n        /* \"contracts/gainzilla.sol\":18918:18938  uint256 currentPrice */\n      0x00\n        /* \"contracts/gainzilla.sol\":18941:18952  pairPrice() */\n      tag_706\n        /* \"contracts/gainzilla.sol\":18941:18950  pairPrice */\n      tag_219\n        /* \"contracts/gainzilla.sol\":18941:18952  pairPrice() */\n      jump\t// in\n    tag_706:\n        /* \"contracts/gainzilla.sol\":18918:18952  uint256 currentPrice = pairPrice() */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":18966:18983  currentPrice == 0 */\n      dup1\n        /* \"contracts/gainzilla.sol\":18962:18992  if (currentPrice == 0) return; */\n      tag_707\n      jumpi\n        /* \"contracts/gainzilla.sol\":18985:18992  return; */\n      pop\n        /* \"contracts/gainzilla.sol\":18867:19675  function _checkPriceConditions() private {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":18962:18992  if (currentPrice == 0) return; */\n    tag_707:\n        /* \"contracts/gainzilla.sol\":19021:19042  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/gainzilla.sol\":19006:19042  currentPrice > diamondFloor.athPrice */\n      dup2\n      gt\n        /* \"contracts/gainzilla.sol\":19002:19171  if (currentPrice > diamondFloor.athPrice) {... */\n      iszero\n      tag_708\n      jumpi\n        /* \"contracts/gainzilla.sol\":19058:19079  diamondFloor.athPrice */\n      0x1d\n        /* \"contracts/gainzilla.sol\":19058:19094  diamondFloor.athPrice = currentPrice */\n      sstore\n        /* \"contracts/gainzilla.sol\":19108:19132  diamondFloor.sellStopped */\n      0x1e\n        /* \"contracts/gainzilla.sol\":19108:19140  diamondFloor.sellStopped = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":18867:19675  function _checkPriceConditions() private {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":19002:19171  if (currentPrice > diamondFloor.athPrice) {... */\n    tag_708:\n        /* \"contracts/gainzilla.sol\":19255:19267  diamondFloor */\n      0x1c\n        /* \"contracts/gainzilla.sol\":19255:19285  diamondFloor.triggerPercentage */\n      sload\n        /* \"contracts/gainzilla.sol\":19206:19227  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/gainzilla.sol\":19181:19203  uint256 thresholdPrice */\n      0x00\n      swap2\n        /* \"contracts/gainzilla.sol\":19206:19309  diamondFloor.athPrice... */\n      tag_709\n      swap2\n        /* \"contracts/gainzilla.sol\":19304:19308  1000 */\n      0x03e8\n      swap2\n        /* \"contracts/gainzilla.sol\":19206:19286  diamondFloor.athPrice... */\n      tag_431\n      swap2\n        /* \"contracts/gainzilla.sol\":19255:19285  diamondFloor.triggerPercentage */\n      0x0100\n      swap1\n      swap2\n      div\n      0xffff\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":19206:19250  diamondFloor.athPrice... */\n      tag_711\n      swap1\n        /* \"contracts/gainzilla.sol\":19304:19308  1000 */\n      dup5\n        /* \"contracts/gainzilla.sol\":19206:19244  diamondFloor.athPrice... */\n      tag_434\n        /* \"contracts/gainzilla.sol\":19206:19250  diamondFloor.athPrice... */\n      jump\t// in\n    tag_711:\n        /* \"contracts/gainzilla.sol\":19206:19254  diamondFloor.athPrice... */\n      swap1\n      tag_433\n        /* \"contracts/gainzilla.sol\":19206:19286  diamondFloor.athPrice... */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":19206:19309  diamondFloor.athPrice... */\n    tag_709:\n        /* \"contracts/gainzilla.sol\":19181:19309  uint256 thresholdPrice = diamondFloor.athPrice... */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":19339:19353  thresholdPrice */\n      dup1\n        /* \"contracts/gainzilla.sol\":19324:19336  currentPrice */\n      dup3\n        /* \"contracts/gainzilla.sol\":19324:19353  currentPrice < thresholdPrice */\n      lt\n        /* \"contracts/gainzilla.sol\":19320:19472  if (currentPrice < thresholdPrice) {... */\n      iszero\n      tag_712\n      jumpi\n        /* \"contracts/gainzilla.sol\":19369:19393  diamondFloor.sellStopped */\n      0x1e\n        /* \"contracts/gainzilla.sol\":19369:19400  diamondFloor.sellStopped = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":19396:19400  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":19369:19400  diamondFloor.sellStopped = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":19440:19461  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/gainzilla.sol\":19414:19437  diamondFloor.blockedAth */\n      0x1f\n        /* \"contracts/gainzilla.sol\":19414:19461  diamondFloor.blockedAth = diamondFloor.athPrice */\n      sstore\n        /* \"contracts/gainzilla.sol\":19320:19472  if (currentPrice < thresholdPrice) {... */\n    tag_712:\n        /* \"contracts/gainzilla.sol\":19486:19510  diamondFloor.sellStopped */\n      and(0xff, sload(0x1e))\n        /* \"contracts/gainzilla.sol\":19486:19560  diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2) */\n      dup1\n      iszero\n      tag_713\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":19530:19553  diamondFloor.blockedAth */\n      sload(0x1f)\n        /* \"contracts/gainzilla.sol\":19530:19560  diamondFloor.blockedAth.mul(2) */\n      tag_714\n      swap1\n        /* \"contracts/gainzilla.sol\":19558:19559  2 */\n      0x02\n        /* \"contracts/gainzilla.sol\":19530:19557  diamondFloor.blockedAth.mul */\n      tag_434\n        /* \"contracts/gainzilla.sol\":19530:19560  diamondFloor.blockedAth.mul(2) */\n      jump\t// in\n    tag_714:\n        /* \"contracts/gainzilla.sol\":19514:19526  currentPrice */\n      dup3\n        /* \"contracts/gainzilla.sol\":19514:19560  currentPrice >= diamondFloor.blockedAth.mul(2) */\n      lt\n      iszero\n        /* \"contracts/gainzilla.sol\":19486:19560  diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2) */\n    tag_713:\n        /* \"contracts/gainzilla.sol\":19482:19669  if (diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2)) {... */\n      iszero\n      tag_412\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":19576:19600  diamondFloor.sellStopped */\n      0x1e\n        /* \"contracts/gainzilla.sol\":19576:19608  diamondFloor.sellStopped = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":19622:19643  diamondFloor.athPrice */\n      0x1d\n        /* \"contracts/gainzilla.sol\":19622:19658  diamondFloor.athPrice = currentPrice */\n      sstore\n        /* \"contracts/gainzilla.sol\":18867:19675  function _checkPriceConditions() private {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":20568:21075  function swapAndLiquify(uint256 lpAmount, uint256 contractTokenBalance) private lockTheSwap {... */\n    tag_649:\n        /* \"contracts/gainzilla.sol\":11460:11466  inSwap */\n      0x28\n        /* \"contracts/gainzilla.sol\":11460:11473  inSwap = true */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff\n      and\n      0x0100\n      or\n      swap1\n      sstore\n      0x00\n        /* \"contracts/gainzilla.sol\":20685:20700  lpAmount.div(2) */\n      tag_718\n        /* \"contracts/gainzilla.sol\":20685:20693  lpAmount */\n      dup4\n        /* \"contracts/gainzilla.sol\":20698:20699  2 */\n      0x02\n        /* \"contracts/gainzilla.sol\":20685:20697  lpAmount.div */\n      tag_353\n        /* \"contracts/gainzilla.sol\":20685:20700  lpAmount.div(2) */\n      jump\t// in\n    tag_718:\n        /* \"contracts/gainzilla.sol\":20670:20700  uint256 half = lpAmount.div(2) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":20710:20727  uint256 otherHalf */\n      0x00\n        /* \"contracts/gainzilla.sol\":20730:20748  lpAmount.sub(half) */\n      tag_719\n        /* \"contracts/gainzilla.sol\":20730:20738  lpAmount */\n      dup5\n        /* \"contracts/gainzilla.sol\":20670:20700  uint256 half = lpAmount.div(2) */\n      dup4\n        /* \"contracts/gainzilla.sol\":20730:20742  lpAmount.sub */\n      tag_433\n        /* \"contracts/gainzilla.sol\":20730:20748  lpAmount.sub(half) */\n      jump\t// in\n    tag_719:\n        /* \"contracts/gainzilla.sol\":20710:20748  uint256 otherHalf = lpAmount.sub(half) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":20783:20804  address(this).balance */\n      selfbalance\n        /* \"contracts/gainzilla.sol\":20814:20862  swapTokensForEth(contractTokenBalance.add(half)) */\n      tag_720\n        /* \"contracts/gainzilla.sol\":20831:20861  contractTokenBalance.add(half) */\n      tag_721\n        /* \"contracts/gainzilla.sol\":20831:20851  contractTokenBalance */\n      dup6\n        /* \"contracts/gainzilla.sol\":20856:20860  half */\n      dup6\n        /* \"contracts/gainzilla.sol\":20831:20855  contractTokenBalance.add */\n      tag_534\n        /* \"contracts/gainzilla.sol\":20831:20861  contractTokenBalance.add(half) */\n      jump\t// in\n    tag_721:\n        /* \"contracts/gainzilla.sol\":20814:20830  swapTokensForEth */\n      tag_499\n        /* \"contracts/gainzilla.sol\":20814:20862  swapTokensForEth(contractTokenBalance.add(half)) */\n      jump\t// in\n    tag_720:\n        /* \"contracts/gainzilla.sol\":20872:20890  uint256 newBalance */\n      0x00\n        /* \"contracts/gainzilla.sol\":20893:20934  address(this).balance.sub(initialBalance) */\n      tag_722\n        /* \"contracts/gainzilla.sol\":20893:20914  address(this).balance */\n      selfbalance\n        /* \"contracts/gainzilla.sol\":20919:20933  initialBalance */\n      dup4\n        /* \"contracts/gainzilla.sol\":20893:20918  address(this).balance.sub */\n      tag_433\n        /* \"contracts/gainzilla.sol\":20893:20934  address(this).balance.sub(initialBalance) */\n      jump\t// in\n    tag_722:\n        /* \"contracts/gainzilla.sol\":20872:20934  uint256 newBalance = address(this).balance.sub(initialBalance) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":20948:20961  otherHalf > 0 */\n      dup3\n      iszero\n        /* \"contracts/gainzilla.sol\":20944:21069  if (otherHalf > 0) {... */\n      tag_698\n      jumpi\n        /* \"contracts/gainzilla.sol\":20977:21058  addLiquidity(otherHalf, newBalance.mul(half).div(contractTokenBalance.add(half))) */\n      tag_698\n        /* \"contracts/gainzilla.sol\":20990:20999  otherHalf */\n      dup4\n        /* \"contracts/gainzilla.sol\":21001:21057  newBalance.mul(half).div(contractTokenBalance.add(half)) */\n      tag_725\n        /* \"contracts/gainzilla.sol\":21026:21056  contractTokenBalance.add(half) */\n      tag_726\n        /* \"contracts/gainzilla.sol\":21026:21046  contractTokenBalance */\n      dup9\n        /* \"contracts/gainzilla.sol\":21051:21055  half */\n      dup9\n        /* \"contracts/gainzilla.sol\":21026:21050  contractTokenBalance.add */\n      tag_534\n        /* \"contracts/gainzilla.sol\":21026:21056  contractTokenBalance.add(half) */\n      jump\t// in\n    tag_726:\n        /* \"contracts/gainzilla.sol\":21001:21021  newBalance.mul(half) */\n      tag_431\n        /* \"contracts/gainzilla.sol\":21001:21011  newBalance */\n      dup6\n        /* \"contracts/gainzilla.sol\":21016:21020  half */\n      dup10\n        /* \"contracts/gainzilla.sol\":21001:21015  newBalance.mul */\n      tag_434\n        /* \"contracts/gainzilla.sol\":21001:21021  newBalance.mul(half) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":21001:21057  newBalance.mul(half).div(contractTokenBalance.add(half)) */\n    tag_725:\n        /* \"contracts/gainzilla.sol\":20977:20989  addLiquidity */\n      tag_728\n        /* \"contracts/gainzilla.sol\":20977:21058  addLiquidity(otherHalf, newBalance.mul(half).div(contractTokenBalance.add(half))) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":21081:21823  function sendETHToFee(uint256 amount) private {... */\n    tag_652:\n        /* \"contracts/gainzilla.sol\":21137:21154  uint256 totalFees */\n      0x00\n        /* \"contracts/gainzilla.sol\":21157:21215  _sellMarketingFee.add(_sellEcosystemFee).add(_sellTeamFee) */\n      tag_730\n        /* \"contracts/gainzilla.sol\":21202:21214  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/gainzilla.sol\":21157:21197  _sellMarketingFee.add(_sellEcosystemFee) */\n      tag_533\n        /* \"contracts/gainzilla.sol\":21179:21196  _sellEcosystemFee */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":21157:21174  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/gainzilla.sol\":21157:21178  _sellMarketingFee.add */\n      tag_534\n      swap1\n        /* \"contracts/gainzilla.sol\":21157:21197  _sellMarketingFee.add(_sellEcosystemFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":21157:21215  _sellMarketingFee.add(_sellEcosystemFee).add(_sellTeamFee) */\n    tag_730:\n        /* \"contracts/gainzilla.sol\":21137:21215  uint256 totalFees = _sellMarketingFee.add(_sellEcosystemFee).add(_sellTeamFee) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":21229:21243  totalFees != 0 */\n      dup1\n      iszero\n        /* \"contracts/gainzilla.sol\":21225:21817  if (totalFees != 0) {... */\n      tag_412\n      jumpi\n        /* \"contracts/gainzilla.sol\":21259:21283  uint256 marketingPortion */\n      0x00\n        /* \"contracts/gainzilla.sol\":21286:21330  amount.mul(_sellMarketingFee).div(totalFees) */\n      tag_733\n        /* \"contracts/gainzilla.sol\":21320:21329  totalFees */\n      dup3\n        /* \"contracts/gainzilla.sol\":21286:21315  amount.mul(_sellMarketingFee) */\n      tag_431\n        /* \"contracts/gainzilla.sol\":21297:21314  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/gainzilla.sol\":21286:21292  amount */\n      dup7\n        /* \"contracts/gainzilla.sol\":21286:21296  amount.mul */\n      tag_434\n      swap1\n        /* \"contracts/gainzilla.sol\":21286:21315  amount.mul(_sellMarketingFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":21286:21330  amount.mul(_sellMarketingFee).div(totalFees) */\n    tag_733:\n        /* \"contracts/gainzilla.sol\":21259:21330  uint256 marketingPortion = amount.mul(_sellMarketingFee).div(totalFees) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":21344:21363  uint256 teamPortion */\n      0x00\n        /* \"contracts/gainzilla.sol\":21366:21405  amount.mul(_sellTeamFee).div(totalFees) */\n      tag_735\n        /* \"contracts/gainzilla.sol\":21395:21404  totalFees */\n      dup4\n        /* \"contracts/gainzilla.sol\":21366:21390  amount.mul(_sellTeamFee) */\n      tag_431\n        /* \"contracts/gainzilla.sol\":21377:21389  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/gainzilla.sol\":21366:21372  amount */\n      dup8\n        /* \"contracts/gainzilla.sol\":21366:21376  amount.mul */\n      tag_434\n      swap1\n        /* \"contracts/gainzilla.sol\":21366:21390  amount.mul(_sellTeamFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":21366:21405  amount.mul(_sellTeamFee).div(totalFees) */\n    tag_735:\n        /* \"contracts/gainzilla.sol\":21344:21405  uint256 teamPortion = amount.mul(_sellTeamFee).div(totalFees) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":21419:21437  uint256 ecoPortion */\n      0x00\n        /* \"contracts/gainzilla.sol\":21440:21485  amount.sub(marketingPortion).sub(teamPortion) */\n      tag_737\n        /* \"contracts/gainzilla.sol\":21344:21405  uint256 teamPortion = amount.mul(_sellTeamFee).div(totalFees) */\n      dup3\n        /* \"contracts/gainzilla.sol\":21440:21468  amount.sub(marketingPortion) */\n      tag_711\n        /* \"contracts/gainzilla.sol\":21440:21446  amount */\n      dup8\n        /* \"contracts/gainzilla.sol\":21451:21467  marketingPortion */\n      dup7\n        /* \"contracts/gainzilla.sol\":21440:21450  amount.sub */\n      tag_433\n        /* \"contracts/gainzilla.sol\":21440:21468  amount.sub(marketingPortion) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":21440:21485  amount.sub(marketingPortion).sub(teamPortion) */\n    tag_737:\n        /* \"contracts/gainzilla.sol\":21419:21485  uint256 ecoPortion = amount.sub(marketingPortion).sub(teamPortion) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":21503:21523  marketingPortion > 0 */\n      dup3\n      iszero\n        /* \"contracts/gainzilla.sol\":21499:21602  if (marketingPortion > 0) {... */\n      tag_739\n      jumpi\n        /* \"contracts/gainzilla.sol\":21543:21560  _marketingAddress */\n      sload(0x21)\n        /* \"contracts/gainzilla.sol\":21543:21587  _marketingAddress.transfer(marketingPortion) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":21543:21560  _marketingAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":21543:21587  _marketingAddress.transfer(marketingPortion) */\n      dup5\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/gainzilla.sol\":21570:21586  marketingPortion */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":21543:21560  _marketingAddress */\n      0x00\n        /* \"contracts/gainzilla.sol\":21543:21587  _marketingAddress.transfer(marketingPortion) */\n      dup2\n        /* \"contracts/gainzilla.sol\":21543:21560  _marketingAddress */\n      dup2\n        /* \"contracts/gainzilla.sol\":21543:21587  _marketingAddress.transfer(marketingPortion) */\n      dup2\n        /* \"contracts/gainzilla.sol\":21570:21586  marketingPortion */\n      dup6\n        /* \"contracts/gainzilla.sol\":21543:21560  _marketingAddress */\n      dup9\n        /* \"contracts/gainzilla.sol\":21543:21587  _marketingAddress.transfer(marketingPortion) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_741\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_741:\n      pop\n        /* \"contracts/gainzilla.sol\":21499:21602  if (marketingPortion > 0) {... */\n    tag_739:\n        /* \"contracts/gainzilla.sol\":21619:21634  teamPortion > 0 */\n      dup2\n      iszero\n        /* \"contracts/gainzilla.sol\":21615:21703  if (teamPortion > 0) {... */\n      tag_742\n      jumpi\n        /* \"contracts/gainzilla.sol\":21654:21666  _teamAddress */\n      sload(0x22)\n        /* \"contracts/gainzilla.sol\":21654:21688  _teamAddress.transfer(teamPortion) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":21654:21666  _teamAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":21654:21688  _teamAddress.transfer(teamPortion) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/gainzilla.sol\":21676:21687  teamPortion */\n      dup5\n      swap1\n        /* \"contracts/gainzilla.sol\":21654:21666  _teamAddress */\n      0x00\n        /* \"contracts/gainzilla.sol\":21654:21688  _teamAddress.transfer(teamPortion) */\n      dup2\n        /* \"contracts/gainzilla.sol\":21654:21666  _teamAddress */\n      dup2\n        /* \"contracts/gainzilla.sol\":21654:21688  _teamAddress.transfer(teamPortion) */\n      dup2\n        /* \"contracts/gainzilla.sol\":21676:21687  teamPortion */\n      dup6\n        /* \"contracts/gainzilla.sol\":21654:21666  _teamAddress */\n      dup9\n        /* \"contracts/gainzilla.sol\":21654:21688  _teamAddress.transfer(teamPortion) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_744\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_744:\n      pop\n        /* \"contracts/gainzilla.sol\":21615:21703  if (teamPortion > 0) {... */\n    tag_742:\n        /* \"contracts/gainzilla.sol\":21720:21734  ecoPortion > 0 */\n      dup1\n      iszero\n        /* \"contracts/gainzilla.sol\":21716:21807  if (ecoPortion > 0) {... */\n      tag_745\n      jumpi\n        /* \"contracts/gainzilla.sol\":21754:21771  _ecosystemAddress */\n      sload(0x23)\n        /* \"contracts/gainzilla.sol\":21754:21792  _ecosystemAddress.transfer(ecoPortion) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":21754:21771  _ecosystemAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":21754:21792  _ecosystemAddress.transfer(ecoPortion) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/gainzilla.sol\":21781:21791  ecoPortion */\n      dup4\n      swap1\n        /* \"contracts/gainzilla.sol\":21754:21771  _ecosystemAddress */\n      0x00\n        /* \"contracts/gainzilla.sol\":21754:21792  _ecosystemAddress.transfer(ecoPortion) */\n      dup2\n        /* \"contracts/gainzilla.sol\":21754:21771  _ecosystemAddress */\n      dup2\n        /* \"contracts/gainzilla.sol\":21754:21792  _ecosystemAddress.transfer(ecoPortion) */\n      dup2\n        /* \"contracts/gainzilla.sol\":21781:21791  ecoPortion */\n      dup6\n        /* \"contracts/gainzilla.sol\":21754:21771  _ecosystemAddress */\n      dup9\n        /* \"contracts/gainzilla.sol\":21754:21792  _ecosystemAddress.transfer(ecoPortion) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_747\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_747:\n      pop\n        /* \"contracts/gainzilla.sol\":21716:21807  if (ecoPortion > 0) {... */\n    tag_745:\n        /* \"contracts/gainzilla.sol\":21225:21817  if (totalFees != 0) {... */\n      pop\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":21081:21823  function sendETHToFee(uint256 amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":22954:23204  function _tokenTransfer(address sender, address recipient, uint256 amount, bool takeFee) private {... */\n    tag_663:\n        /* \"contracts/gainzilla.sol\":23066:23073  takeFee */\n      dup1\n        /* \"contracts/gainzilla.sol\":23061:23119  if (!takeFee) { ... */\n      tag_750\n      jumpi\n        /* \"contracts/gainzilla.sol\":23094:23108  removeAllFee() */\n      tag_750\n        /* \"contracts/gainzilla.sol\":13800:13816  _buyMarketingFee */\n      0x0d\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":13773:13797  _previousBuyMarketingFee */\n      0x0e\n        /* \"contracts/gainzilla.sol\":13773:13816  _previousBuyMarketingFee = _buyMarketingFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":13853:13869  _buyLiquidityFee */\n      0x09\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":13826:13850  _previousBuyLiquidityFee */\n      0x0a\n        /* \"contracts/gainzilla.sol\":13826:13869  _previousBuyLiquidityFee = _buyLiquidityFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":13901:13912  _buyTeamFee */\n      0x0f\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":13879:13898  _previousBuyTeamFee */\n      0x10\n        /* \"contracts/gainzilla.sol\":13879:13912  _previousBuyTeamFee = _buyTeamFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":13949:13965  _buyEcosystemFee */\n      0x0b\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":13922:13946  _previousBuyEcosystemFee */\n      0x0c\n        /* \"contracts/gainzilla.sol\":13922:13965  _previousBuyEcosystemFee = _buyEcosystemFee */\n      sstore\n      0x00\n        /* \"contracts/gainzilla.sol\":13984:14004  _buyMarketingFee = 0 */\n      swap4\n      dup5\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":14014:14034  _buyLiquidityFee = 0 */\n      swap2\n      dup4\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":14044:14059  _buyTeamFee = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":14069:14089  _buyEcosystemFee = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":14128:14145  _sellMarketingFee */\n      0x15\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":14100:14125  _previousSellMarketingFee */\n      0x16\n        /* \"contracts/gainzilla.sol\":14100:14145  _previousSellMarketingFee = _sellMarketingFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14183:14200  _sellLiquidityFee */\n      0x11\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":14155:14180  _previousSellLiquidityFee */\n      0x12\n        /* \"contracts/gainzilla.sol\":14155:14200  _previousSellLiquidityFee = _sellLiquidityFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14233:14245  _sellTeamFee */\n      0x17\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":14210:14230  _previousSellTeamFee */\n      0x18\n        /* \"contracts/gainzilla.sol\":14210:14245  _previousSellTeamFee = _sellTeamFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14283:14300  _sellEcosystemFee */\n      0x13\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":14255:14280  _previousSellEcosystemFee */\n      0x14\n        /* \"contracts/gainzilla.sol\":14255:14300  _previousSellEcosystemFee = _sellEcosystemFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14319:14340  _sellMarketingFee = 0 */\n      swap3\n      dup5\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":14350:14371  _sellLiquidityFee = 0 */\n      swap1\n      dup4\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":14381:14397  _sellTeamFee = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":14407:14428  _sellEcosystemFee = 0 */\n      sstore\n        /* \"contracts/gainzilla.sol\":13731:14435  function removeAllFee() private {... */\n      jump\n        /* \"contracts/gainzilla.sol\":23094:23108  removeAllFee() */\n    tag_750:\n        /* \"contracts/gainzilla.sol\":23128:23172  _transferStandard(sender, recipient, amount) */\n      tag_752\n        /* \"contracts/gainzilla.sol\":23146:23152  sender */\n      dup5\n        /* \"contracts/gainzilla.sol\":23154:23163  recipient */\n      dup5\n        /* \"contracts/gainzilla.sol\":23165:23171  amount */\n      dup5\n        /* \"contracts/gainzilla.sol\":23128:23145  _transferStandard */\n      tag_753\n        /* \"contracts/gainzilla.sol\":23128:23172  _transferStandard(sender, recipient, amount) */\n      jump\t// in\n    tag_752:\n        /* \"contracts/gainzilla.sol\":23182:23197  restoreAllFee() */\n      tag_662\n        /* \"contracts/gainzilla.sol\":14507:14531  _previousBuyMarketingFee */\n      sload(0x0e)\n        /* \"contracts/gainzilla.sol\":14488:14504  _buyMarketingFee */\n      0x0d\n        /* \"contracts/gainzilla.sol\":14488:14531  _buyMarketingFee = _previousBuyMarketingFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14560:14584  _previousBuyLiquidityFee */\n      sload(0x0a)\n        /* \"contracts/gainzilla.sol\":14541:14557  _buyLiquidityFee */\n      0x09\n        /* \"contracts/gainzilla.sol\":14541:14584  _buyLiquidityFee = _previousBuyLiquidityFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14608:14627  _previousBuyTeamFee */\n      sload(0x10)\n        /* \"contracts/gainzilla.sol\":14594:14605  _buyTeamFee */\n      0x0f\n        /* \"contracts/gainzilla.sol\":14594:14627  _buyTeamFee = _previousBuyTeamFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14656:14680  _previousBuyEcosystemFee */\n      sload(0x0c)\n        /* \"contracts/gainzilla.sol\":14637:14653  _buyEcosystemFee */\n      0x0b\n        /* \"contracts/gainzilla.sol\":14637:14680  _buyEcosystemFee = _previousBuyEcosystemFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14711:14736  _previousSellMarketingFee */\n      sload(0x16)\n        /* \"contracts/gainzilla.sol\":14691:14708  _sellMarketingFee */\n      0x15\n        /* \"contracts/gainzilla.sol\":14691:14736  _sellMarketingFee = _previousSellMarketingFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14766:14791  _previousSellLiquidityFee */\n      sload(0x12)\n        /* \"contracts/gainzilla.sol\":14746:14763  _sellLiquidityFee */\n      0x11\n        /* \"contracts/gainzilla.sol\":14746:14791  _sellLiquidityFee = _previousSellLiquidityFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14816:14836  _previousSellTeamFee */\n      sload(0x18)\n        /* \"contracts/gainzilla.sol\":14801:14813  _sellTeamFee */\n      0x17\n        /* \"contracts/gainzilla.sol\":14801:14836  _sellTeamFee = _previousSellTeamFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14866:14891  _previousSellEcosystemFee */\n      sload(0x14)\n        /* \"contracts/gainzilla.sol\":14846:14863  _sellEcosystemFee */\n      0x13\n        /* \"contracts/gainzilla.sol\":14846:14891  _sellEcosystemFee = _previousSellEcosystemFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14445:14898  function restoreAllFee() private {... */\n      jump\n        /* \"contracts/gainzilla.sol\":2422:2607  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_671:\n        /* \"contracts/gainzilla.sol\":2508:2515  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":2542:2554  errorMessage */\n      dup2\n        /* \"contracts/gainzilla.sol\":2535:2540  b > 0 */\n      dup4\n        /* \"contracts/gainzilla.sol\":2527:2555  require(b > 0, errorMessage) */\n      tag_757\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_330\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_757:\n      pop\n        /* \"contracts/gainzilla.sol\":2565:2574  uint256 c */\n      0x00\n        /* \"contracts/gainzilla.sol\":2577:2582  a / b */\n      tag_667\n        /* \"contracts/gainzilla.sol\":2581:2582  b */\n      dup5\n        /* \"contracts/gainzilla.sol\":2577:2578  a */\n      dup7\n        /* \"contracts/gainzilla.sol\":2577:2582  a / b */\n      tag_679\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":20107:20560  function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {... */\n    tag_728:\n        /* \"contracts/gainzilla.sol\":20219:20234  uniswapV2Router */\n      sload(0x25)\n        /* \"contracts/gainzilla.sol\":20187:20249  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      tag_761\n      swap1\n        /* \"contracts/gainzilla.sol\":20204:20208  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":20219:20234  uniswapV2Router */\n      and\n        /* \"contracts/gainzilla.sol\":20237:20248  tokenAmount */\n      dup5\n        /* \"contracts/gainzilla.sol\":20187:20195  _approve */\n      tag_326\n        /* \"contracts/gainzilla.sol\":20187:20249  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      jump\t// in\n    tag_761:\n        /* \"contracts/gainzilla.sol\":20289:20304  uniswapV2Router */\n      sload(0x25)\n        /* \"contracts/gainzilla.sol\":20498:20510  _lpRecipient */\n      0x24\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":20289:20553  uniswapV2Router.addLiquidityETH{value: ethAmount}(... */\n      mload(0x40)\n      0xf305d71900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":20362:20366  this */\n      address\n        /* \"contracts/gainzilla.sol\":20289:20553  uniswapV2Router.addLiquidityETH{value: ethAmount}(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5318:5352   */\n      mstore\n        /* \"#utility.yul\":5368:5386   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":5361:5395   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/gainzilla.sol\":20289:20304  uniswapV2Router */\n      0x00\n        /* \"#utility.yul\":5411:5429   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":5404:5438   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5454:5472   */\n      0x64\n      dup4\n      add\n        /* \"#utility.yul\":5447:5481   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":20498:20510  _lpRecipient */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5497:5516   */\n      0x84\n      dup4\n      add\n        /* \"#utility.yul\":5490:5534   */\n      mstore\n        /* \"contracts/gainzilla.sol\":20526:20541  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":5550:5569   */\n      0xa4\n      dup4\n      add\n        /* \"#utility.yul\":5543:5578   */\n      mstore\n        /* \"contracts/gainzilla.sol\":20289:20304  uniswapV2Router */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":20289:20320  uniswapV2Router.addLiquidityETH */\n      0xf305d719\n      swap1\n        /* \"contracts/gainzilla.sol\":20328:20337  ethAmount */\n      dup4\n      swap1\n        /* \"#utility.yul\":5229:5248   */\n      0xc4\n      add\n        /* \"contracts/gainzilla.sol\":20289:20553  uniswapV2Router.addLiquidityETH{value: ethAmount}(... */\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_764\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_764:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_766\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_766:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_745\n      swap2\n      swap1\n      tag_768\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23210:25057  function _transferStandard(address sender, address recipient, uint256 amount) private {... */\n    tag_753:\n        /* \"contracts/gainzilla.sol\":23306:23330  FeeBreakdown memory fees */\n      tag_771\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_771:\n        /* \"contracts/gainzilla.sol\":23354:23367  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":23344:23367  sender == uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":23354:23367  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":23344:23367  sender == uniswapV2Pair */\n      eq\n        /* \"contracts/gainzilla.sol\":23344:23408  sender == uniswapV2Pair && recipient != address(uniswapV2Router) */\n      dup1\n      iszero\n      tag_773\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":23392:23407  uniswapV2Router */\n      sload(0x25)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":23371:23408  recipient != address(uniswapV2Router) */\n      dup5\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":23392:23407  uniswapV2Router */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":23371:23408  recipient != address(uniswapV2Router) */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":23344:23408  sender == uniswapV2Pair && recipient != address(uniswapV2Router) */\n    tag_773:\n        /* \"contracts/gainzilla.sol\":23340:23697  if (sender == uniswapV2Pair && recipient != address(uniswapV2Router)) {//buys... */\n      iszero\n      tag_774\n      jumpi\n        /* \"contracts/gainzilla.sol\":23448:23486  amount.mul(_buyMarketingFee).div(1000) */\n      tag_775\n        /* \"contracts/gainzilla.sol\":23481:23485  1000 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":23448:23476  amount.mul(_buyMarketingFee) */\n      tag_431\n        /* \"contracts/gainzilla.sol\":23459:23475  _buyMarketingFee */\n      sload(0x0d)\n        /* \"contracts/gainzilla.sol\":23448:23454  amount */\n      dup6\n        /* \"contracts/gainzilla.sol\":23448:23458  amount.mul */\n      tag_434\n      swap1\n        /* \"contracts/gainzilla.sol\":23448:23476  amount.mul(_buyMarketingFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23448:23486  amount.mul(_buyMarketingFee).div(1000) */\n    tag_775:\n        /* \"contracts/gainzilla.sol\":23430:23445  fees.tMarketing */\n      0x20\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":23430:23486  fees.tMarketing = amount.mul(_buyMarketingFee).div(1000) */\n      mstore\n        /* \"contracts/gainzilla.sol\":23529:23545  _buyLiquidityFee */\n      sload(0x09)\n        /* \"contracts/gainzilla.sol\":23518:23556  amount.mul(_buyLiquidityFee).div(1000) */\n      tag_777\n      swap1\n        /* \"contracts/gainzilla.sol\":23551:23555  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/gainzilla.sol\":23518:23546  amount.mul(_buyLiquidityFee) */\n      tag_431\n      swap1\n        /* \"contracts/gainzilla.sol\":23518:23524  amount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":23518:23528  amount.mul */\n      tag_434\n        /* \"contracts/gainzilla.sol\":23518:23546  amount.mul(_buyLiquidityFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23518:23556  amount.mul(_buyLiquidityFee).div(1000) */\n    tag_777:\n        /* \"contracts/gainzilla.sol\":23500:23556  fees.tLiquidity = amount.mul(_buyLiquidityFee).div(1000) */\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":23594:23605  _buyTeamFee */\n      sload(0x0f)\n        /* \"contracts/gainzilla.sol\":23583:23616  amount.mul(_buyTeamFee).div(1000) */\n      tag_779\n      swap1\n        /* \"contracts/gainzilla.sol\":23611:23615  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/gainzilla.sol\":23583:23606  amount.mul(_buyTeamFee) */\n      tag_431\n      swap1\n        /* \"contracts/gainzilla.sol\":23583:23589  amount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":23583:23593  amount.mul */\n      tag_434\n        /* \"contracts/gainzilla.sol\":23583:23606  amount.mul(_buyTeamFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23583:23616  amount.mul(_buyTeamFee).div(1000) */\n    tag_779:\n        /* \"contracts/gainzilla.sol\":23570:23580  fees.tTeam */\n      0x40\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":23570:23616  fees.tTeam = amount.mul(_buyTeamFee).div(1000) */\n      mstore\n        /* \"contracts/gainzilla.sol\":23659:23675  _buyEcosystemFee */\n      sload(0x0b)\n        /* \"contracts/gainzilla.sol\":23648:23686  amount.mul(_buyEcosystemFee).div(1000) */\n      tag_781\n      swap1\n        /* \"contracts/gainzilla.sol\":23681:23685  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/gainzilla.sol\":23648:23676  amount.mul(_buyEcosystemFee) */\n      tag_431\n      swap1\n        /* \"contracts/gainzilla.sol\":23648:23654  amount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":23648:23658  amount.mul */\n      tag_434\n        /* \"contracts/gainzilla.sol\":23648:23676  amount.mul(_buyEcosystemFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23648:23686  amount.mul(_buyEcosystemFee).div(1000) */\n    tag_781:\n        /* \"contracts/gainzilla.sol\":23630:23645  fees.tEcosystem */\n      0x60\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":23630:23686  fees.tEcosystem = amount.mul(_buyEcosystemFee).div(1000) */\n      mstore\n        /* \"contracts/gainzilla.sol\":23340:23697  if (sender == uniswapV2Pair && recipient != address(uniswapV2Router)) {//buys... */\n    tag_774:\n        /* \"contracts/gainzilla.sol\":23720:23733  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":23710:23733  sender != uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":23720:23733  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":23710:23733  sender != uniswapV2Pair */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/gainzilla.sol\":23710:23763  sender != uniswapV2Pair && recipient == uniswapV2Pair */\n      tag_783\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":23750:23763  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":23737:23763  recipient == uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":23750:23763  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":23737:23763  recipient == uniswapV2Pair */\n      eq\n        /* \"contracts/gainzilla.sol\":23710:23763  sender != uniswapV2Pair && recipient == uniswapV2Pair */\n    tag_783:\n        /* \"contracts/gainzilla.sol\":23706:24057  if (sender != uniswapV2Pair && recipient == uniswapV2Pair) {//sells... */\n      iszero\n      tag_784\n      jumpi\n        /* \"contracts/gainzilla.sol\":23804:23843  amount.mul(_sellMarketingFee).div(1000) */\n      tag_785\n        /* \"contracts/gainzilla.sol\":23838:23842  1000 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":23804:23833  amount.mul(_sellMarketingFee) */\n      tag_431\n        /* \"contracts/gainzilla.sol\":23815:23832  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/gainzilla.sol\":23804:23810  amount */\n      dup6\n        /* \"contracts/gainzilla.sol\":23804:23814  amount.mul */\n      tag_434\n      swap1\n        /* \"contracts/gainzilla.sol\":23804:23833  amount.mul(_sellMarketingFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23804:23843  amount.mul(_sellMarketingFee).div(1000) */\n    tag_785:\n        /* \"contracts/gainzilla.sol\":23786:23801  fees.tMarketing */\n      0x20\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":23786:23843  fees.tMarketing = amount.mul(_sellMarketingFee).div(1000) */\n      mstore\n        /* \"contracts/gainzilla.sol\":23886:23903  _sellLiquidityFee */\n      sload(0x11)\n        /* \"contracts/gainzilla.sol\":23875:23914  amount.mul(_sellLiquidityFee).div(1000) */\n      tag_787\n      swap1\n        /* \"contracts/gainzilla.sol\":23909:23913  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/gainzilla.sol\":23875:23904  amount.mul(_sellLiquidityFee) */\n      tag_431\n      swap1\n        /* \"contracts/gainzilla.sol\":23875:23881  amount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":23875:23885  amount.mul */\n      tag_434\n        /* \"contracts/gainzilla.sol\":23875:23904  amount.mul(_sellLiquidityFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23875:23914  amount.mul(_sellLiquidityFee).div(1000) */\n    tag_787:\n        /* \"contracts/gainzilla.sol\":23857:23914  fees.tLiquidity = amount.mul(_sellLiquidityFee).div(1000) */\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":23952:23964  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/gainzilla.sol\":23941:23975  amount.mul(_sellTeamFee).div(1000) */\n      tag_789\n      swap1\n        /* \"contracts/gainzilla.sol\":23970:23974  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/gainzilla.sol\":23941:23965  amount.mul(_sellTeamFee) */\n      tag_431\n      swap1\n        /* \"contracts/gainzilla.sol\":23941:23947  amount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":23941:23951  amount.mul */\n      tag_434\n        /* \"contracts/gainzilla.sol\":23941:23965  amount.mul(_sellTeamFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23941:23975  amount.mul(_sellTeamFee).div(1000) */\n    tag_789:\n        /* \"contracts/gainzilla.sol\":23928:23938  fees.tTeam */\n      0x40\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":23928:23975  fees.tTeam = amount.mul(_sellTeamFee).div(1000) */\n      mstore\n        /* \"contracts/gainzilla.sol\":24018:24035  _sellEcosystemFee */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":24007:24046  amount.mul(_sellEcosystemFee).div(1000) */\n      tag_791\n      swap1\n        /* \"contracts/gainzilla.sol\":24041:24045  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/gainzilla.sol\":24007:24036  amount.mul(_sellEcosystemFee) */\n      tag_431\n      swap1\n        /* \"contracts/gainzilla.sol\":24007:24013  amount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":24007:24017  amount.mul */\n      tag_434\n        /* \"contracts/gainzilla.sol\":24007:24036  amount.mul(_sellEcosystemFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":24007:24046  amount.mul(_sellEcosystemFee).div(1000) */\n    tag_791:\n        /* \"contracts/gainzilla.sol\":23989:24004  fees.tEcosystem */\n      0x60\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":23989:24046  fees.tEcosystem = amount.mul(_sellEcosystemFee).div(1000) */\n      mstore\n        /* \"contracts/gainzilla.sol\":23706:24057  if (sender != uniswapV2Pair && recipient == uniswapV2Pair) {//sells... */\n    tag_784:\n        /* \"contracts/gainzilla.sol\":24080:24093  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":24070:24093  sender != uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":24080:24093  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":24070:24093  sender != uniswapV2Pair */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/gainzilla.sol\":24070:24123  sender != uniswapV2Pair && recipient != uniswapV2Pair */\n      tag_793\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":24110:24123  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":24097:24123  recipient != uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":24110:24123  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":24097:24123  recipient != uniswapV2Pair */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":24070:24123  sender != uniswapV2Pair && recipient != uniswapV2Pair */\n    tag_793:\n        /* \"contracts/gainzilla.sol\":24066:24588  if (sender != uniswapV2Pair && recipient != uniswapV2Pair) {//transfer... */\n      iszero\n      tag_794\n      jumpi\n        /* \"contracts/gainzilla.sol\":24167:24248  (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      tag_795\n        /* \"contracts/gainzilla.sol\":24244:24247  100 */\n      0x64\n        /* \"contracts/gainzilla.sol\":24167:24239  (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      tag_431\n        /* \"contracts/gainzilla.sol\":24213:24238  transferFeeIncreaseFactor */\n      sload(0x19)\n        /* \"contracts/gainzilla.sol\":24168:24207  amount.mul(_sellMarketingFee).div(1000) */\n      tag_432\n        /* \"contracts/gainzilla.sol\":24202:24206  1000 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":24168:24197  amount.mul(_sellMarketingFee) */\n      tag_431\n        /* \"contracts/gainzilla.sol\":24179:24196  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/gainzilla.sol\":24168:24174  amount */\n      dup10\n        /* \"contracts/gainzilla.sol\":24168:24178  amount.mul */\n      tag_434\n      swap1\n        /* \"contracts/gainzilla.sol\":24168:24197  amount.mul(_sellMarketingFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":24167:24248  (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n    tag_795:\n        /* \"contracts/gainzilla.sol\":24149:24153  fees */\n      dup2\n        /* \"contracts/gainzilla.sol\":24149:24164  fees.tMarketing */\n      0x20\n      add\n        /* \"contracts/gainzilla.sol\":24149:24248  fees.tMarketing = (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":24280:24361  (amount.mul(_sellLiquidityFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      tag_799\n        /* \"contracts/gainzilla.sol\":24357:24360  100 */\n      0x64\n        /* \"contracts/gainzilla.sol\":24280:24352  (amount.mul(_sellLiquidityFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      tag_431\n        /* \"contracts/gainzilla.sol\":24326:24351  transferFeeIncreaseFactor */\n      sload(0x19)\n        /* \"contracts/gainzilla.sol\":24281:24320  amount.mul(_sellLiquidityFee).div(1000) */\n      tag_432\n        /* \"contracts/gainzilla.sol\":24315:24319  1000 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":24281:24310  amount.mul(_sellLiquidityFee) */\n      tag_431\n        /* \"contracts/gainzilla.sol\":24292:24309  _sellLiquidityFee */\n      sload(0x11)\n        /* \"contracts/gainzilla.sol\":24281:24287  amount */\n      dup10\n        /* \"contracts/gainzilla.sol\":24281:24291  amount.mul */\n      tag_434\n      swap1\n        /* \"contracts/gainzilla.sol\":24281:24310  amount.mul(_sellLiquidityFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":24280:24361  (amount.mul(_sellLiquidityFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n    tag_799:\n        /* \"contracts/gainzilla.sol\":24262:24361  fees.tLiquidity = (amount.mul(_sellLiquidityFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":24429:24454  transferFeeIncreaseFactor */\n      sload(0x19)\n        /* \"contracts/gainzilla.sol\":24400:24412  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/gainzilla.sol\":24388:24464  (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      tag_803\n      swap2\n        /* \"contracts/gainzilla.sol\":24460:24463  100 */\n      0x64\n      swap2\n        /* \"contracts/gainzilla.sol\":24388:24455  (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      tag_431\n      swap2\n        /* \"contracts/gainzilla.sol\":24429:24454  transferFeeIncreaseFactor */\n      swap1\n        /* \"contracts/gainzilla.sol\":24389:24423  amount.mul(_sellTeamFee).div(1000) */\n      tag_432\n      swap1\n        /* \"contracts/gainzilla.sol\":24418:24422  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/gainzilla.sol\":24388:24455  (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      dup5\n      swap1\n        /* \"contracts/gainzilla.sol\":24389:24395  amount */\n      dup10\n      swap1\n        /* \"contracts/gainzilla.sol\":24389:24399  amount.mul */\n      tag_434\n        /* \"contracts/gainzilla.sol\":24389:24413  amount.mul(_sellTeamFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":24388:24464  (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n    tag_803:\n        /* \"contracts/gainzilla.sol\":24375:24379  fees */\n      dup2\n        /* \"contracts/gainzilla.sol\":24375:24385  fees.tTeam */\n      0x40\n      add\n        /* \"contracts/gainzilla.sol\":24375:24464  fees.tTeam = (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":24496:24577  (amount.mul(_sellEcosystemFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      tag_807\n        /* \"contracts/gainzilla.sol\":24573:24576  100 */\n      0x64\n        /* \"contracts/gainzilla.sol\":24496:24568  (amount.mul(_sellEcosystemFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      tag_431\n        /* \"contracts/gainzilla.sol\":24542:24567  transferFeeIncreaseFactor */\n      sload(0x19)\n        /* \"contracts/gainzilla.sol\":24497:24536  amount.mul(_sellEcosystemFee).div(1000) */\n      tag_432\n        /* \"contracts/gainzilla.sol\":24531:24535  1000 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":24497:24526  amount.mul(_sellEcosystemFee) */\n      tag_431\n        /* \"contracts/gainzilla.sol\":24508:24525  _sellEcosystemFee */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":24497:24503  amount */\n      dup10\n        /* \"contracts/gainzilla.sol\":24497:24507  amount.mul */\n      tag_434\n      swap1\n        /* \"contracts/gainzilla.sol\":24497:24526  amount.mul(_sellEcosystemFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":24496:24577  (amount.mul(_sellEcosystemFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n    tag_807:\n        /* \"contracts/gainzilla.sol\":24478:24493  fees.tEcosystem */\n      0x60\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":24478:24577  fees.tEcosystem = (amount.mul(_sellEcosystemFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      mstore\n        /* \"contracts/gainzilla.sol\":24066:24588  if (sender != uniswapV2Pair && recipient != uniswapV2Pair) {//transfer... */\n    tag_794:\n        /* \"contracts/gainzilla.sol\":24621:24706  amount.sub(fees.tMarketing).sub(fees.tLiquidity).sub(fees.tTeam).sub(fees.tEcosystem) */\n      tag_811\n        /* \"contracts/gainzilla.sol\":24690:24694  fees */\n      dup2\n        /* \"contracts/gainzilla.sol\":24690:24705  fees.tEcosystem */\n      0x60\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24621:24685  amount.sub(fees.tMarketing).sub(fees.tLiquidity).sub(fees.tTeam) */\n      tag_711\n        /* \"contracts/gainzilla.sol\":24674:24678  fees */\n      dup4\n        /* \"contracts/gainzilla.sol\":24674:24684  fees.tTeam */\n      0x40\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24621:24669  amount.sub(fees.tMarketing).sub(fees.tLiquidity) */\n      tag_711\n        /* \"contracts/gainzilla.sol\":24653:24657  fees */\n      dup6\n        /* \"contracts/gainzilla.sol\":24653:24668  fees.tLiquidity */\n      0x00\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24621:24648  amount.sub(fees.tMarketing) */\n      tag_711\n        /* \"contracts/gainzilla.sol\":24632:24636  fees */\n      dup8\n        /* \"contracts/gainzilla.sol\":24632:24647  fees.tMarketing */\n      0x20\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24621:24627  amount */\n      dup10\n        /* \"contracts/gainzilla.sol\":24621:24631  amount.sub */\n      tag_433\n      swap1\n        /* \"contracts/gainzilla.sol\":24621:24648  amount.sub(fees.tMarketing) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":24621:24706  amount.sub(fees.tMarketing).sub(fees.tLiquidity).sub(fees.tTeam).sub(fees.tEcosystem) */\n    tag_811:\n        /* \"contracts/gainzilla.sol\":24606:24618  fees.tAmount */\n      0x80\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":24606:24706  fees.tAmount = amount.sub(fees.tMarketing).sub(fees.tLiquidity).sub(fees.tTeam).sub(fees.tEcosystem) */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":24745:24762  _balances[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":24745:24754  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":24745:24762  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":24745:24774  _balances[sender].sub(amount) */\n      tag_815\n      swap1\n        /* \"contracts/gainzilla.sol\":24767:24773  amount */\n      dup4\n        /* \"contracts/gainzilla.sol\":24745:24766  _balances[sender].sub */\n      tag_433\n        /* \"contracts/gainzilla.sol\":24745:24774  _balances[sender].sub(amount) */\n      jump\t// in\n    tag_815:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":24725:24742  _balances[sender] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":24725:24734  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":24725:24742  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/gainzilla.sol\":24725:24774  _balances[sender] = _balances[sender].sub(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/gainzilla.sol\":24832:24844  fees.tAmount */\n      0x80\n      dup5\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24807:24827  _balances[recipient] */\n      swap2\n      dup7\n      and\n      dup2\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":24807:24845  _balances[recipient].add(fees.tAmount) */\n      tag_816\n      swap2\n        /* \"contracts/gainzilla.sol\":24807:24831  _balances[recipient].add */\n      tag_534\n        /* \"contracts/gainzilla.sol\":24807:24845  _balances[recipient].add(fees.tAmount) */\n      jump\t// in\n    tag_816:\n        /* \"contracts/gainzilla.sol\":24784:24793  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":24784:24804  _balances[recipient] */\n      0x00\n        /* \"contracts/gainzilla.sol\":24794:24803  recipient */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":24784:24804  _balances[recipient] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gainzilla.sol\":24784:24845  _balances[recipient] = _balances[recipient].add(fees.tAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/gainzilla.sol\":24882:24985  _balances[address(this)].add(fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem)) */\n      tag_817\n        /* \"contracts/gainzilla.sol\":24911:24984  fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem) */\n      tag_818\n        /* \"contracts/gainzilla.sol\":24968:24972  fees */\n      dup3\n        /* \"contracts/gainzilla.sol\":24968:24983  fees.tEcosystem */\n      0x60\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24911:24963  fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam) */\n      tag_533\n        /* \"contracts/gainzilla.sol\":24952:24956  fees */\n      dup5\n        /* \"contracts/gainzilla.sol\":24952:24962  fees.tTeam */\n      0x40\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24911:24947  fees.tMarketing.add(fees.tLiquidity) */\n      tag_533\n        /* \"contracts/gainzilla.sol\":24931:24935  fees */\n      dup7\n        /* \"contracts/gainzilla.sol\":24931:24946  fees.tLiquidity */\n      0x00\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24911:24915  fees */\n      dup8\n        /* \"contracts/gainzilla.sol\":24911:24926  fees.tMarketing */\n      0x20\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24911:24930  fees.tMarketing.add */\n      tag_534\n      swap1\n        /* \"contracts/gainzilla.sol\":24911:24947  fees.tMarketing.add(fees.tLiquidity) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":24911:24984  fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem) */\n    tag_818:\n        /* \"contracts/gainzilla.sol\":24900:24904  this */\n      address\n        /* \"contracts/gainzilla.sol\":24882:24906  _balances[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":24882:24891  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":24882:24906  _balances[address(this)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/gainzilla.sol\":24882:24910  _balances[address(this)].add */\n      tag_534\n        /* \"contracts/gainzilla.sol\":24882:24985  _balances[address(this)].add(fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem)) */\n      jump\t// in\n    tag_817:\n        /* \"contracts/gainzilla.sol\":24873:24877  this */\n      address\n        /* \"contracts/gainzilla.sol\":24855:24879  _balances[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":24855:24864  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":24855:24879  _balances[address(this)] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":24855:24985  _balances[address(this)] = _balances[address(this)].add(fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem)) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/gainzilla.sol\":25037:25049  fees.tAmount */\n      0x80\n      dup4\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":25009:25050  Transfer(sender, recipient, fees.tAmount) */\n      swap1\n      mload\n        /* \"#utility.yul\":6702:6727   */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":25009:25050  Transfer(sender, recipient, fees.tAmount) */\n      dup6\n      dup2\n      and\n      swap3\n      swap1\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":6675:6693   */\n      add\n        /* \"contracts/gainzilla.sol\":25009:25050  Transfer(sender, recipient, fees.tAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/gainzilla.sol\":23210:25057  function _transferStandard(address sender, address recipient, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:202   */\n    tag_824:\n        /* \"#utility.yul\":93:106   */\n      dup1\n      mload\n        /* \"#utility.yul\":146:176   */\n      0xffffffffffffffffffffffffffff\n        /* \"#utility.yul\":135:177   */\n      dup2\n      and\n        /* \"#utility.yul\":125:178   */\n      dup2\n      eq\n        /* \"#utility.yul\":115:117   */\n      tag_826\n      jumpi\n        /* \"#utility.yul\":192:193   */\n      0x00\n        /* \"#utility.yul\":189:190   */\n      dup1\n        /* \"#utility.yul\":182:194   */\n      revert\n        /* \"#utility.yul\":115:117   */\n    tag_826:\n        /* \"#utility.yul\":74:202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":207:464   */\n    tag_129:\n        /* \"#utility.yul\":266:272   */\n      0x00\n        /* \"#utility.yul\":319:321   */\n      0x20\n        /* \"#utility.yul\":307:316   */\n      dup3\n        /* \"#utility.yul\":298:305   */\n      dup5\n        /* \"#utility.yul\":294:317   */\n      sub\n        /* \"#utility.yul\":290:322   */\n      slt\n        /* \"#utility.yul\":287:289   */\n      iszero\n      tag_828\n      jumpi\n        /* \"#utility.yul\":340:346   */\n      dup1\n        /* \"#utility.yul\":332:338   */\n      dup2\n        /* \"#utility.yul\":325:347   */\n      revert\n        /* \"#utility.yul\":287:289   */\n    tag_828:\n        /* \"#utility.yul\":384:393   */\n      dup2\n        /* \"#utility.yul\":371:394   */\n      calldataload\n        /* \"#utility.yul\":403:434   */\n      tag_670\n        /* \"#utility.yul\":428:433   */\n      dup2\n        /* \"#utility.yul\":403:434   */\n      tag_830\n      jump\t// in\n        /* \"#utility.yul\":469:730   */\n    tag_459:\n        /* \"#utility.yul\":539:545   */\n      0x00\n        /* \"#utility.yul\":592:594   */\n      0x20\n        /* \"#utility.yul\":580:589   */\n      dup3\n        /* \"#utility.yul\":571:578   */\n      dup5\n        /* \"#utility.yul\":567:590   */\n      sub\n        /* \"#utility.yul\":563:595   */\n      slt\n        /* \"#utility.yul\":560:562   */\n      iszero\n      tag_832\n      jumpi\n        /* \"#utility.yul\":613:619   */\n      dup1\n        /* \"#utility.yul\":605:611   */\n      dup2\n        /* \"#utility.yul\":598:620   */\n      revert\n        /* \"#utility.yul\":560:562   */\n    tag_832:\n        /* \"#utility.yul\":650:659   */\n      dup2\n        /* \"#utility.yul\":644:660   */\n      mload\n        /* \"#utility.yul\":669:700   */\n      tag_670\n        /* \"#utility.yul\":694:699   */\n      dup2\n        /* \"#utility.yul\":669:700   */\n      tag_830\n      jump\t// in\n        /* \"#utility.yul\":1005:1403   */\n    tag_289:\n        /* \"#utility.yul\":1073:1079   */\n      0x00\n        /* \"#utility.yul\":1081:1087   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1122:1131   */\n      dup4\n        /* \"#utility.yul\":1113:1120   */\n      dup6\n        /* \"#utility.yul\":1109:1132   */\n      sub\n        /* \"#utility.yul\":1105:1137   */\n      slt\n        /* \"#utility.yul\":1102:1104   */\n      iszero\n      tag_838\n      jumpi\n        /* \"#utility.yul\":1155:1161   */\n      dup1\n        /* \"#utility.yul\":1147:1153   */\n      dup2\n        /* \"#utility.yul\":1140:1162   */\n      revert\n        /* \"#utility.yul\":1102:1104   */\n    tag_838:\n        /* \"#utility.yul\":1199:1208   */\n      dup3\n        /* \"#utility.yul\":1186:1209   */\n      calldataload\n        /* \"#utility.yul\":1218:1249   */\n      tag_839\n        /* \"#utility.yul\":1243:1248   */\n      dup2\n        /* \"#utility.yul\":1218:1249   */\n      tag_830\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":1268:1273   */\n      swap2\n      pop\n        /* \"#utility.yul\":1325:1327   */\n      0x20\n        /* \"#utility.yul\":1310:1328   */\n      dup4\n      add\n        /* \"#utility.yul\":1297:1329   */\n      calldataload\n        /* \"#utility.yul\":1338:1371   */\n      tag_840\n        /* \"#utility.yul\":1297:1329   */\n      dup2\n        /* \"#utility.yul\":1338:1371   */\n      tag_830\n      jump\t// in\n    tag_840:\n        /* \"#utility.yul\":1390:1397   */\n      dup1\n        /* \"#utility.yul\":1380:1397   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1092:1403   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1408:1874   */\n    tag_110:\n        /* \"#utility.yul\":1485:1491   */\n      0x00\n        /* \"#utility.yul\":1493:1499   */\n      dup1\n        /* \"#utility.yul\":1501:1507   */\n      0x00\n        /* \"#utility.yul\":1554:1556   */\n      0x60\n        /* \"#utility.yul\":1542:1551   */\n      dup5\n        /* \"#utility.yul\":1533:1540   */\n      dup7\n        /* \"#utility.yul\":1529:1552   */\n      sub\n        /* \"#utility.yul\":1525:1557   */\n      slt\n        /* \"#utility.yul\":1522:1524   */\n      iszero\n      tag_842\n      jumpi\n        /* \"#utility.yul\":1575:1581   */\n      dup1\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1560:1582   */\n      revert\n        /* \"#utility.yul\":1522:1524   */\n    tag_842:\n        /* \"#utility.yul\":1619:1628   */\n      dup4\n        /* \"#utility.yul\":1606:1629   */\n      calldataload\n        /* \"#utility.yul\":1638:1669   */\n      tag_843\n        /* \"#utility.yul\":1663:1668   */\n      dup2\n        /* \"#utility.yul\":1638:1669   */\n      tag_830\n      jump\t// in\n    tag_843:\n        /* \"#utility.yul\":1688:1693   */\n      swap3\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x20\n        /* \"#utility.yul\":1730:1748   */\n      dup5\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1758:1791   */\n      tag_844\n        /* \"#utility.yul\":1717:1749   */\n      dup2\n        /* \"#utility.yul\":1758:1791   */\n      tag_830\n      jump\t// in\n    tag_844:\n        /* \"#utility.yul\":1512:1874   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1810:1817   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1864:1866   */\n      0x40\n        /* \"#utility.yul\":1849:1867   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1836:1868   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1512:1874   */\n      jump\t// out\n        /* \"#utility.yul\":1879:2204   */\n    tag_90:\n        /* \"#utility.yul\":1947:1953   */\n      0x00\n        /* \"#utility.yul\":1955:1961   */\n      dup1\n        /* \"#utility.yul\":2008:2010   */\n      0x40\n        /* \"#utility.yul\":1996:2005   */\n      dup4\n        /* \"#utility.yul\":1987:1994   */\n      dup6\n        /* \"#utility.yul\":1983:2006   */\n      sub\n        /* \"#utility.yul\":1979:2011   */\n      slt\n        /* \"#utility.yul\":1976:1978   */\n      iszero\n      tag_846\n      jumpi\n        /* \"#utility.yul\":2029:2035   */\n      dup2\n        /* \"#utility.yul\":2021:2027   */\n      dup3\n        /* \"#utility.yul\":2014:2036   */\n      revert\n        /* \"#utility.yul\":1976:1978   */\n    tag_846:\n        /* \"#utility.yul\":2073:2082   */\n      dup3\n        /* \"#utility.yul\":2060:2083   */\n      calldataload\n        /* \"#utility.yul\":2092:2123   */\n      tag_847\n        /* \"#utility.yul\":2117:2122   */\n      dup2\n        /* \"#utility.yul\":2092:2123   */\n      tag_830\n      jump\t// in\n    tag_847:\n        /* \"#utility.yul\":2142:2147   */\n      swap5\n        /* \"#utility.yul\":2194:2196   */\n      0x20\n        /* \"#utility.yul\":2179:2197   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2166:2198   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1966:2204   */\n      jump\t// out\n        /* \"#utility.yul\":2209:2464   */\n    tag_378:\n        /* \"#utility.yul\":2276:2282   */\n      0x00\n        /* \"#utility.yul\":2329:2331   */\n      0x20\n        /* \"#utility.yul\":2317:2326   */\n      dup3\n        /* \"#utility.yul\":2308:2315   */\n      dup5\n        /* \"#utility.yul\":2304:2327   */\n      sub\n        /* \"#utility.yul\":2300:2332   */\n      slt\n        /* \"#utility.yul\":2297:2299   */\n      iszero\n      tag_849\n      jumpi\n        /* \"#utility.yul\":2350:2356   */\n      dup1\n        /* \"#utility.yul\":2342:2348   */\n      dup2\n        /* \"#utility.yul\":2335:2357   */\n      revert\n        /* \"#utility.yul\":2297:2299   */\n    tag_849:\n        /* \"#utility.yul\":2387:2396   */\n      dup2\n        /* \"#utility.yul\":2381:2397   */\n      mload\n        /* \"#utility.yul\":2406:2434   */\n      tag_670\n        /* \"#utility.yul\":2428:2433   */\n      dup2\n        /* \"#utility.yul\":2406:2434   */\n      tag_851\n      jump\t// in\n        /* \"#utility.yul\":2469:2859   */\n    tag_190:\n        /* \"#utility.yul\":2533:2539   */\n      0x00\n        /* \"#utility.yul\":2541:2547   */\n      dup1\n        /* \"#utility.yul\":2594:2596   */\n      0x40\n        /* \"#utility.yul\":2582:2591   */\n      dup4\n        /* \"#utility.yul\":2573:2580   */\n      dup6\n        /* \"#utility.yul\":2569:2592   */\n      sub\n        /* \"#utility.yul\":2565:2597   */\n      slt\n        /* \"#utility.yul\":2562:2564   */\n      iszero\n      tag_853\n      jumpi\n        /* \"#utility.yul\":2615:2621   */\n      dup2\n        /* \"#utility.yul\":2607:2613   */\n      dup3\n        /* \"#utility.yul\":2600:2622   */\n      revert\n        /* \"#utility.yul\":2562:2564   */\n    tag_853:\n        /* \"#utility.yul\":2659:2668   */\n      dup3\n        /* \"#utility.yul\":2646:2669   */\n      calldataload\n        /* \"#utility.yul\":2678:2706   */\n      tag_854\n        /* \"#utility.yul\":2700:2705   */\n      dup2\n        /* \"#utility.yul\":2678:2706   */\n      tag_851\n      jump\t// in\n    tag_854:\n        /* \"#utility.yul\":2725:2730   */\n      swap2\n      pop\n        /* \"#utility.yul\":2782:2784   */\n      0x20\n        /* \"#utility.yul\":2767:2785   */\n      dup4\n      add\n        /* \"#utility.yul\":2754:2786   */\n      calldataload\n        /* \"#utility.yul\":2795:2827   */\n      tag_840\n        /* \"#utility.yul\":2754:2786   */\n      dup2\n        /* \"#utility.yul\":2795:2827   */\n      tag_856\n      jump\t// in\n        /* \"#utility.yul\":2864:3293   */\n    tag_452:\n        /* \"#utility.yul\":2951:2957   */\n      0x00\n        /* \"#utility.yul\":2959:2965   */\n      dup1\n        /* \"#utility.yul\":2967:2973   */\n      0x00\n        /* \"#utility.yul\":3020:3022   */\n      0x60\n        /* \"#utility.yul\":3008:3017   */\n      dup5\n        /* \"#utility.yul\":2999:3006   */\n      dup7\n        /* \"#utility.yul\":2995:3018   */\n      sub\n        /* \"#utility.yul\":2991:3023   */\n      slt\n        /* \"#utility.yul\":2988:2990   */\n      iszero\n      tag_858\n      jumpi\n        /* \"#utility.yul\":3041:3047   */\n      dup3\n        /* \"#utility.yul\":3033:3039   */\n      dup4\n        /* \"#utility.yul\":3026:3048   */\n      revert\n        /* \"#utility.yul\":2988:2990   */\n    tag_858:\n        /* \"#utility.yul\":3069:3109   */\n      tag_859\n        /* \"#utility.yul\":3099:3108   */\n      dup5\n        /* \"#utility.yul\":3069:3109   */\n      tag_824\n      jump\t// in\n    tag_859:\n        /* \"#utility.yul\":3059:3109   */\n      swap3\n      pop\n        /* \"#utility.yul\":3128:3177   */\n      tag_860\n        /* \"#utility.yul\":3173:3175   */\n      0x20\n        /* \"#utility.yul\":3162:3171   */\n      dup6\n        /* \"#utility.yul\":3158:3176   */\n      add\n        /* \"#utility.yul\":3128:3177   */\n      tag_824\n      jump\t// in\n    tag_860:\n        /* \"#utility.yul\":3118:3177   */\n      swap2\n      pop\n        /* \"#utility.yul\":3220:3222   */\n      0x40\n        /* \"#utility.yul\":3209:3218   */\n      dup5\n        /* \"#utility.yul\":3205:3223   */\n      add\n        /* \"#utility.yul\":3199:3224   */\n      mload\n        /* \"#utility.yul\":3233:3263   */\n      tag_861\n        /* \"#utility.yul\":3257:3262   */\n      dup2\n        /* \"#utility.yul\":3233:3263   */\n      tag_856\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":3282:3287   */\n      dup1\n        /* \"#utility.yul\":3272:3287   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2978:3293   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3298:3488   */\n    tag_120:\n        /* \"#utility.yul\":3357:3363   */\n      0x00\n        /* \"#utility.yul\":3410:3412   */\n      0x20\n        /* \"#utility.yul\":3398:3407   */\n      dup3\n        /* \"#utility.yul\":3389:3396   */\n      dup5\n        /* \"#utility.yul\":3385:3408   */\n      sub\n        /* \"#utility.yul\":3381:3413   */\n      slt\n        /* \"#utility.yul\":3378:3380   */\n      iszero\n      tag_863\n      jumpi\n        /* \"#utility.yul\":3431:3437   */\n      dup1\n        /* \"#utility.yul\":3423:3429   */\n      dup2\n        /* \"#utility.yul\":3416:3438   */\n      revert\n        /* \"#utility.yul\":3378:3380   */\n    tag_863:\n      pop\n        /* \"#utility.yul\":3459:3482   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3368:3488   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3493:3687   */\n    tag_370:\n        /* \"#utility.yul\":3563:3569   */\n      0x00\n        /* \"#utility.yul\":3616:3618   */\n      0x20\n        /* \"#utility.yul\":3604:3613   */\n      dup3\n        /* \"#utility.yul\":3595:3602   */\n      dup5\n        /* \"#utility.yul\":3591:3614   */\n      sub\n        /* \"#utility.yul\":3587:3619   */\n      slt\n        /* \"#utility.yul\":3584:3586   */\n      iszero\n      tag_865\n      jumpi\n        /* \"#utility.yul\":3637:3643   */\n      dup1\n        /* \"#utility.yul\":3629:3635   */\n      dup2\n        /* \"#utility.yul\":3622:3644   */\n      revert\n        /* \"#utility.yul\":3584:3586   */\n    tag_865:\n      pop\n        /* \"#utility.yul\":3665:3681   */\n      mload\n      swap2\n        /* \"#utility.yul\":3574:3687   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3692:4008   */\n    tag_768:\n        /* \"#utility.yul\":3780:3786   */\n      0x00\n        /* \"#utility.yul\":3788:3794   */\n      dup1\n        /* \"#utility.yul\":3796:3802   */\n      0x00\n        /* \"#utility.yul\":3849:3851   */\n      0x60\n        /* \"#utility.yul\":3837:3846   */\n      dup5\n        /* \"#utility.yul\":3828:3835   */\n      dup7\n        /* \"#utility.yul\":3824:3847   */\n      sub\n        /* \"#utility.yul\":3820:3852   */\n      slt\n        /* \"#utility.yul\":3817:3819   */\n      iszero\n      tag_867\n      jumpi\n        /* \"#utility.yul\":3870:3876   */\n      dup3\n        /* \"#utility.yul\":3862:3868   */\n      dup4\n        /* \"#utility.yul\":3855:3877   */\n      revert\n        /* \"#utility.yul\":3817:3819   */\n    tag_867:\n        /* \"#utility.yul\":3904:3913   */\n      dup4\n        /* \"#utility.yul\":3898:3914   */\n      mload\n        /* \"#utility.yul\":3888:3914   */\n      swap3\n      pop\n        /* \"#utility.yul\":3954:3956   */\n      0x20\n        /* \"#utility.yul\":3943:3952   */\n      dup5\n        /* \"#utility.yul\":3939:3957   */\n      add\n        /* \"#utility.yul\":3933:3958   */\n      mload\n        /* \"#utility.yul\":3923:3958   */\n      swap2\n      pop\n        /* \"#utility.yul\":3998:4000   */\n      0x40\n        /* \"#utility.yul\":3987:3996   */\n      dup5\n        /* \"#utility.yul\":3983:4001   */\n      add\n        /* \"#utility.yul\":3977:4002   */\n      mload\n        /* \"#utility.yul\":3967:4002   */\n      swap1\n      pop\n        /* \"#utility.yul\":3807:4008   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4013:4408   */\n    tag_299:\n        /* \"#utility.yul\":4099:4105   */\n      0x00\n        /* \"#utility.yul\":4107:4113   */\n      dup1\n        /* \"#utility.yul\":4115:4121   */\n      0x00\n        /* \"#utility.yul\":4123:4129   */\n      dup1\n        /* \"#utility.yul\":4176:4179   */\n      0x80\n        /* \"#utility.yul\":4164:4173   */\n      dup6\n        /* \"#utility.yul\":4155:4162   */\n      dup8\n        /* \"#utility.yul\":4151:4174   */\n      sub\n        /* \"#utility.yul\":4147:4180   */\n      slt\n        /* \"#utility.yul\":4144:4146   */\n      iszero\n      tag_869\n      jumpi\n        /* \"#utility.yul\":4198:4204   */\n      dup1\n        /* \"#utility.yul\":4190:4196   */\n      dup2\n        /* \"#utility.yul\":4183:4205   */\n      revert\n        /* \"#utility.yul\":4144:4146   */\n    tag_869:\n      pop\n      pop\n        /* \"#utility.yul\":4226:4249   */\n      dup3\n      calldataload\n      swap5\n        /* \"#utility.yul\":4296:4298   */\n      0x20\n        /* \"#utility.yul\":4281:4299   */\n      dup5\n      add\n        /* \"#utility.yul\":4268:4300   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":4347:4349   */\n      0x40\n        /* \"#utility.yul\":4332:4350   */\n      dup5\n      add\n        /* \"#utility.yul\":4319:4351   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":4398:4400   */\n      0x60\n        /* \"#utility.yul\":4383:4401   */\n      add\n        /* \"#utility.yul\":4370:4402   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":4134:4408   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6738:7400   */\n    tag_86:\n        /* \"#utility.yul\":6850:6854   */\n      0x00\n        /* \"#utility.yul\":6879:6881   */\n      0x20\n        /* \"#utility.yul\":6908:6910   */\n      dup1\n        /* \"#utility.yul\":6897:6906   */\n      dup4\n        /* \"#utility.yul\":6890:6911   */\n      mstore\n        /* \"#utility.yul\":6940:6946   */\n      dup4\n        /* \"#utility.yul\":6934:6947   */\n      mload\n        /* \"#utility.yul\":6983:6989   */\n      dup1\n        /* \"#utility.yul\":6978:6980   */\n      dup3\n        /* \"#utility.yul\":6967:6976   */\n      dup6\n        /* \"#utility.yul\":6963:6981   */\n      add\n        /* \"#utility.yul\":6956:6990   */\n      mstore\n        /* \"#utility.yul\":7008:7012   */\n      dup3\n        /* \"#utility.yul\":7021:7161   */\n    tag_878:\n        /* \"#utility.yul\":7035:7041   */\n      dup2\n        /* \"#utility.yul\":7032:7033   */\n      dup2\n        /* \"#utility.yul\":7029:7042   */\n      lt\n        /* \"#utility.yul\":7021:7161   */\n      iszero\n      tag_880\n      jumpi\n        /* \"#utility.yul\":7130:7144   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":7126:7149   */\n      dup4\n      add\n        /* \"#utility.yul\":7120:7150   */\n      mload\n        /* \"#utility.yul\":7096:7113   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":7115:7117   */\n      0x40\n        /* \"#utility.yul\":7092:7118   */\n      add\n        /* \"#utility.yul\":7085:7151   */\n      mstore\n        /* \"#utility.yul\":7050:7060   */\n      dup3\n      add\n        /* \"#utility.yul\":7021:7161   */\n      jump(tag_878)\n    tag_880:\n        /* \"#utility.yul\":7179:7185   */\n      dup2\n        /* \"#utility.yul\":7176:7177   */\n      dup2\n        /* \"#utility.yul\":7173:7186   */\n      gt\n        /* \"#utility.yul\":7170:7172   */\n      iszero\n      tag_881\n      jumpi\n        /* \"#utility.yul\":7249:7253   */\n      dup4\n        /* \"#utility.yul\":7244:7246   */\n      0x40\n        /* \"#utility.yul\":7235:7241   */\n      dup4\n        /* \"#utility.yul\":7224:7233   */\n      dup8\n        /* \"#utility.yul\":7220:7242   */\n      add\n        /* \"#utility.yul\":7216:7247   */\n      add\n        /* \"#utility.yul\":7209:7254   */\n      mstore\n        /* \"#utility.yul\":7170:7172   */\n    tag_881:\n      pop\n        /* \"#utility.yul\":7316:7318   */\n      0x1f\n        /* \"#utility.yul\":7304:7319   */\n      add\n        /* \"#utility.yul\":7321:7387   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":7300:7388   */\n      and\n        /* \"#utility.yul\":7285:7389   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":7391:7393   */\n      0x40\n        /* \"#utility.yul\":7281:7394   */\n      add\n      swap4\n        /* \"#utility.yul\":6859:7400   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15468:16497   */\n    tag_695:\n        /* \"#utility.yul\":15730:15734   */\n      0x00\n        /* \"#utility.yul\":15778:15781   */\n      0xa0\n        /* \"#utility.yul\":15767:15776   */\n      dup3\n        /* \"#utility.yul\":15763:15782   */\n      add\n        /* \"#utility.yul\":15809:15815   */\n      dup8\n        /* \"#utility.yul\":15798:15807   */\n      dup4\n        /* \"#utility.yul\":15791:15816   */\n      mstore\n        /* \"#utility.yul\":15835:15837   */\n      0x20\n        /* \"#utility.yul\":15873:15879   */\n      dup8\n        /* \"#utility.yul\":15868:15870   */\n      dup2\n        /* \"#utility.yul\":15857:15866   */\n      dup6\n        /* \"#utility.yul\":15853:15871   */\n      add\n        /* \"#utility.yul\":15846:15880   */\n      mstore\n        /* \"#utility.yul\":15916:15919   */\n      0xa0\n        /* \"#utility.yul\":15911:15913   */\n      0x40\n        /* \"#utility.yul\":15900:15909   */\n      dup6\n        /* \"#utility.yul\":15896:15914   */\n      add\n        /* \"#utility.yul\":15889:15920   */\n      mstore\n        /* \"#utility.yul\":15940:15946   */\n      dup2\n        /* \"#utility.yul\":15975:15981   */\n      dup8\n        /* \"#utility.yul\":15969:15982   */\n      mload\n        /* \"#utility.yul\":16006:16012   */\n      dup1\n        /* \"#utility.yul\":15998:16004   */\n      dup5\n        /* \"#utility.yul\":15991:16013   */\n      mstore\n        /* \"#utility.yul\":16044:16047   */\n      0xc0\n        /* \"#utility.yul\":16033:16042   */\n      dup7\n        /* \"#utility.yul\":16029:16048   */\n      add\n        /* \"#utility.yul\":16022:16048   */\n      swap2\n      pop\n        /* \"#utility.yul\":16083:16085   */\n      dup3\n        /* \"#utility.yul\":16075:16081   */\n      dup10\n        /* \"#utility.yul\":16071:16086   */\n      add\n        /* \"#utility.yul\":16057:16086   */\n      swap4\n      pop\n        /* \"#utility.yul\":16104:16108   */\n      dup5\n        /* \"#utility.yul\":16117:16335   */\n    tag_904:\n        /* \"#utility.yul\":16131:16137   */\n      dup2\n        /* \"#utility.yul\":16128:16129   */\n      dup2\n        /* \"#utility.yul\":16125:16138   */\n      lt\n        /* \"#utility.yul\":16117:16335   */\n      iszero\n      tag_906\n      jumpi\n        /* \"#utility.yul\":16196:16209   */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16192:16254   */\n      and\n        /* \"#utility.yul\":16180:16255   */\n      dup4\n      mstore\n        /* \"#utility.yul\":16310:16325   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":16275:16287   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":16153:16154   */\n      0x01\n        /* \"#utility.yul\":16146:16155   */\n      add\n        /* \"#utility.yul\":16117:16335   */\n      jump(tag_904)\n    tag_906:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16391:16446   */\n      swap7\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":16386:16388   */\n      0x60\n        /* \"#utility.yul\":16371:16389   */\n      dup6\n      add\n        /* \"#utility.yul\":16364:16447   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16478:16481   */\n      0x80\n        /* \"#utility.yul\":16463:16482   */\n      add\n        /* \"#utility.yul\":16456:16491   */\n      mstore\n        /* \"#utility.yul\":16352:16355   */\n      swap4\n        /* \"#utility.yul\":15739:16497   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17087:17215   */\n    tag_627:\n        /* \"#utility.yul\":17127:17130   */\n      0x00\n        /* \"#utility.yul\":17158:17159   */\n      dup3\n        /* \"#utility.yul\":17154:17160   */\n      not\n        /* \"#utility.yul\":17151:17152   */\n      dup3\n        /* \"#utility.yul\":17148:17161   */\n      gt\n        /* \"#utility.yul\":17145:17147   */\n      iszero\n      tag_911\n      jumpi\n        /* \"#utility.yul\":17164:17182   */\n      tag_911\n      tag_912\n      jump\t// in\n    tag_911:\n      pop\n        /* \"#utility.yul\":17200:17209   */\n      add\n      swap1\n        /* \"#utility.yul\":17135:17215   */\n      jump\t// out\n        /* \"#utility.yul\":17220:17340   */\n    tag_679:\n        /* \"#utility.yul\":17260:17261   */\n      0x00\n        /* \"#utility.yul\":17286:17287   */\n      dup3\n        /* \"#utility.yul\":17276:17278   */\n      tag_915\n      jumpi\n        /* \"#utility.yul\":17291:17309   */\n      tag_915\n      tag_916\n      jump\t// in\n    tag_915:\n      pop\n        /* \"#utility.yul\":17325:17334   */\n      div\n      swap1\n        /* \"#utility.yul\":17266:17340   */\n      jump\t// out\n        /* \"#utility.yul\":17345:17573   */\n    tag_677:\n        /* \"#utility.yul\":17385:17392   */\n      0x00\n        /* \"#utility.yul\":17511:17512   */\n      dup2\n        /* \"#utility.yul\":17443:17509   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17439:17513   */\n      div\n        /* \"#utility.yul\":17436:17437   */\n      dup4\n        /* \"#utility.yul\":17433:17514   */\n      gt\n        /* \"#utility.yul\":17428:17429   */\n      dup3\n        /* \"#utility.yul\":17421:17430   */\n      iszero\n        /* \"#utility.yul\":17414:17431   */\n      iszero\n        /* \"#utility.yul\":17410:17515   */\n      and\n        /* \"#utility.yul\":17407:17409   */\n      iszero\n      tag_919\n      jumpi\n        /* \"#utility.yul\":17518:17536   */\n      tag_919\n      tag_912\n      jump\t// in\n    tag_919:\n      pop\n        /* \"#utility.yul\":17558:17567   */\n      mul\n      swap1\n        /* \"#utility.yul\":17397:17573   */\n      jump\t// out\n        /* \"#utility.yul\":17578:17840   */\n    tag_425:\n        /* \"#utility.yul\":17617:17624   */\n      0x00\n        /* \"#utility.yul\":17649:17659   */\n      0xffffffff\n        /* \"#utility.yul\":17686:17688   */\n      dup1\n        /* \"#utility.yul\":17683:17684   */\n      dup4\n        /* \"#utility.yul\":17679:17689   */\n      and\n        /* \"#utility.yul\":17716:17718   */\n      dup2\n        /* \"#utility.yul\":17713:17714   */\n      dup6\n        /* \"#utility.yul\":17709:17719   */\n      and\n        /* \"#utility.yul\":17772:17775   */\n      dup2\n        /* \"#utility.yul\":17768:17770   */\n      dup4\n        /* \"#utility.yul\":17764:17776   */\n      div\n        /* \"#utility.yul\":17759:17762   */\n      dup2\n        /* \"#utility.yul\":17756:17777   */\n      gt\n        /* \"#utility.yul\":17749:17752   */\n      dup3\n        /* \"#utility.yul\":17742:17753   */\n      iszero\n        /* \"#utility.yul\":17735:17754   */\n      iszero\n        /* \"#utility.yul\":17731:17778   */\n      and\n        /* \"#utility.yul\":17728:17730   */\n      iszero\n      tag_922\n      jumpi\n        /* \"#utility.yul\":17781:17799   */\n      tag_922\n      tag_912\n      jump\t// in\n    tag_922:\n        /* \"#utility.yul\":17821:17834   */\n      mul\n      swap5\n        /* \"#utility.yul\":17629:17840   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17845:17970   */\n    tag_668:\n        /* \"#utility.yul\":17885:17889   */\n      0x00\n        /* \"#utility.yul\":17913:17914   */\n      dup3\n        /* \"#utility.yul\":17910:17911   */\n      dup3\n        /* \"#utility.yul\":17907:17915   */\n      lt\n        /* \"#utility.yul\":17904:17906   */\n      iszero\n      tag_925\n      jumpi\n        /* \"#utility.yul\":17918:17936   */\n      tag_925\n      tag_912\n      jump\t// in\n    tag_925:\n      pop\n        /* \"#utility.yul\":17955:17964   */\n      sub\n      swap1\n        /* \"#utility.yul\":17894:17970   */\n      jump\t// out\n        /* \"#utility.yul\":17975:18087   */\n    tag_478:\n        /* \"#utility.yul\":18007:18008   */\n      0x00\n        /* \"#utility.yul\":18033:18034   */\n      dup3\n        /* \"#utility.yul\":18023:18025   */\n      tag_928\n      jumpi\n        /* \"#utility.yul\":18038:18056   */\n      tag_928\n      tag_916\n      jump\t// in\n    tag_928:\n      pop\n        /* \"#utility.yul\":18072:18081   */\n      mod\n      swap1\n        /* \"#utility.yul\":18013:18087   */\n      jump\t// out\n        /* \"#utility.yul\":18092:18285   */\n    tag_436:\n        /* \"#utility.yul\":18127:18130   */\n      0x00\n        /* \"#utility.yul\":18158:18224   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18151:18156   */\n      dup3\n        /* \"#utility.yul\":18148:18225   */\n      eq\n        /* \"#utility.yul\":18145:18147   */\n      iszero\n      tag_931\n      jumpi\n        /* \"#utility.yul\":18228:18246   */\n      tag_931\n      tag_912\n      jump\t// in\n    tag_931:\n        /* \"#utility.yul\":18264:18279   */\n      sub\n      swap1\n        /* \"#utility.yul\":18135:18285   */\n      jump\t// out\n        /* \"#utility.yul\":18290:18474   */\n    tag_912:\n        /* \"#utility.yul\":18342:18419   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18339:18340   */\n      0x00\n        /* \"#utility.yul\":18332:18420   */\n      mstore\n        /* \"#utility.yul\":18439:18443   */\n      0x11\n        /* \"#utility.yul\":18436:18437   */\n      0x04\n        /* \"#utility.yul\":18429:18444   */\n      mstore\n        /* \"#utility.yul\":18463:18467   */\n      0x24\n        /* \"#utility.yul\":18460:18461   */\n      0x00\n        /* \"#utility.yul\":18453:18468   */\n      revert\n        /* \"#utility.yul\":18479:18663   */\n    tag_916:\n        /* \"#utility.yul\":18531:18608   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18528:18529   */\n      0x00\n        /* \"#utility.yul\":18521:18609   */\n      mstore\n        /* \"#utility.yul\":18628:18632   */\n      0x12\n        /* \"#utility.yul\":18625:18626   */\n      0x04\n        /* \"#utility.yul\":18618:18633   */\n      mstore\n        /* \"#utility.yul\":18652:18656   */\n      0x24\n        /* \"#utility.yul\":18649:18650   */\n      0x00\n        /* \"#utility.yul\":18642:18657   */\n      revert\n        /* \"#utility.yul\":18668:18822   */\n    tag_830:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18747:18752   */\n      dup2\n        /* \"#utility.yul\":18743:18797   */\n      and\n        /* \"#utility.yul\":18736:18741   */\n      dup2\n        /* \"#utility.yul\":18733:18798   */\n      eq\n        /* \"#utility.yul\":18723:18725   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":18812:18813   */\n      0x00\n        /* \"#utility.yul\":18809:18810   */\n      dup1\n        /* \"#utility.yul\":18802:18814   */\n      revert\n        /* \"#utility.yul\":18827:18945   */\n    tag_851:\n        /* \"#utility.yul\":18913:18918   */\n      dup1\n        /* \"#utility.yul\":18906:18919   */\n      iszero\n        /* \"#utility.yul\":18899:18920   */\n      iszero\n        /* \"#utility.yul\":18892:18897   */\n      dup2\n        /* \"#utility.yul\":18889:18921   */\n      eq\n        /* \"#utility.yul\":18879:18881   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":18935:18936   */\n      0x00\n        /* \"#utility.yul\":18932:18933   */\n      dup1\n        /* \"#utility.yul\":18925:18937   */\n      revert\n        /* \"#utility.yul\":18950:19071   */\n    tag_856:\n        /* \"#utility.yul\":19035:19045   */\n      0xffffffff\n        /* \"#utility.yul\":19028:19033   */\n      dup2\n        /* \"#utility.yul\":19024:19046   */\n      and\n        /* \"#utility.yul\":19017:19022   */\n      dup2\n        /* \"#utility.yul\":19014:19047   */\n      eq\n        /* \"#utility.yul\":19004:19006   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":19061:19062   */\n      0x00\n        /* \"#utility.yul\":19058:19059   */\n      dup1\n        /* \"#utility.yul\":19051:19063   */\n      revert\n    stop\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n\n    auxdata: 0xa2646970667358221220894b57c4ff6e6aa8c5d68bd6d06793f5b17eec86097caabdd2b4bde29c00c7bf64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2206:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "150:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "158:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "176:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "195:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "189:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "180:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "268:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "277:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "285:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "270:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "270:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "270:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "227:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "238:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "253:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "258:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "249:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "249:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "262:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "245:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "245:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "224:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "224:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "217:50:1"
															},
															"nodeType": "YulIf",
															"src": "214:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "303:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "313:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "303:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:310:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "407:219:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "453:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "462:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "455:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "455:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "455:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "428:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "437:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "424:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "449:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "420:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "420:32:1"
															},
															"nodeType": "YulIf",
															"src": "417:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "488:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "507:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "501:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "501:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "492:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "579:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "587:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "572:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "539:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "560:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "553:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "553:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "546:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "546:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "536:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "536:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:40:1"
															},
															"nodeType": "YulIf",
															"src": "526:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "605:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "615:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "605:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "373:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "384:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "396:6:1",
														"type": ""
													}
												],
												"src": "329:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "760:175:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "770:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "782:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "793:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "778:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "770:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "805:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "823:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "828:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "819:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "819:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "832:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "815:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "815:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "809:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "850:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "865:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "873:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "861:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "861:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "843:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "843:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "897:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "908:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "893:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "893:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "917:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "925:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "886:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "886:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "886:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "721:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "732:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "740:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "751:4:1",
														"type": ""
													}
												],
												"src": "631:304:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1069:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1091:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1087:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1136:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1152:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1157:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1148:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1148:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1161:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1144:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1144:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1132:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1114:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1114:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1185:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1196:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1181:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1181:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1201:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1174:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1174:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1174:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1030:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1041:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1060:4:1",
														"type": ""
													}
												],
												"src": "940:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1393:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1410:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1421:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1403:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1444:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1455:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1440:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1433:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1433:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1483:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1494:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1479:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1479:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1499:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1472:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1472:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1554:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1565:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1550:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1550:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1570:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1543:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1543:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1584:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1596:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1592:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1584:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1384:4:1",
														"type": ""
													}
												],
												"src": "1219:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1796:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1813:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1824:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1806:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1806:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1847:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1858:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1843:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1863:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1836:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1886:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1897:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1882:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1882:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1902:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1875:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1875:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1957:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1968:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1953:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1953:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1973:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1946:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1946:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1989:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2001:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1997:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1989:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1773:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1787:4:1",
														"type": ""
													}
												],
												"src": "1622:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2128:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2138:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2150:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2161:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2146:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2146:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2138:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2180:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2191:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2173:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2097:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2108:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2119:4:1",
														"type": ""
													}
												],
												"src": "2027:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052662386f2ab5bca0060075566038d7ea4c680006008556000600955600954600a556000600b55600b54600c556000600d55600d54600e556000600f55600f5460105560006011556011546012556000601355601354601455600060155560155460165560006017556017546018556000601955620000876200042260201b60201c565b602180546001600160a01b03199081166001600160a01b039384161790915560005460228054919093169082168117909255602380548216831790556024805490911690911790556028805464ffffffffff1916640101010000179055348015620000f157600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350602580546001600160a01b0319167310ed43c718714eb63d5aa57b78b54704e256024e908117909155620001713082670de0b6b3a764000062000431565b806001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015620001ab57600080fd5b505afa158015620001c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001e691906200055d565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200022f57600080fd5b505afa15801562000244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200026a91906200055d565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381600087803b158015620002b357600080fd5b505af1158015620002c8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ee91906200055d565b602680546001600160a01b0319166001600160a01b0392831690811790915560255460405163095ea7b360e01b81529216600483015260001960248301529063095ea7b390604401602060405180830381600087803b1580156200035157600080fd5b505af115801562000366573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038c91906200058d565b50670de0b6b3a76400006027819055600781905533600081815260026020908152604080832085905582546001600160a01b03168352600482528083208054600160ff1991821681179092553085528285208054909116909117905551938452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350620005af565b6000546001600160a01b031690565b6001600160a01b038316620004995760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b038216620004fc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840162000490565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000602082840312156200056f578081fd5b81516001600160a01b038116811462000586578182fd5b9392505050565b6000602082840312156200059f578081fd5b8151801515811462000586578182fd5b613acf80620005bf6000396000f3fe60806040526004361061037a5760003560e01c806380670f3c116101d1578063c95457ff11610102578063dd62ed3e116100a0578063f2fde38b1161006f578063f2fde38b14610ab0578063f480fec214610ad0578063ffb54a9914610af0578063ffecf51614610b0a57600080fd5b8063dd62ed3e14610a0a578063e315a6da14610a50578063e4bf1bed14610a70578063ea2f0b3714610a9057600080fd5b8063d1633649116100dc578063d16336491461099f578063d55cb78a146109bf578063db0045ec146109d4578063dc44b6a0146109f457600080fd5b8063c95457ff14610904578063cab0347114610969578063cdb3858f1461097f57600080fd5b80639d82190f1161016f578063c3c8cd8011610149578063c3c8cd80146108ad578063c469b6dd146108c2578063c5d24189146108d8578063c8607952146108ee57600080fd5b80639d82190f1461082d578063a850673d1461086d578063a9059cbb1461088d57600080fd5b80638e360253116101ab5780638e360253146107a85780639491f94d146107bd57806395d89b41146107d257806399a7b9bc1461081857600080fd5b806380670f3c1461075f57806388790a68146107745780638da5cb5b1461078a57600080fd5b806339a53c4e116102ab5780636c0a24eb11610249578063715018a611610223578063715018a6146106d1578063729cb3f2146106e657806372b2aecc14610706578063787a08a61461071c57600080fd5b80636c0a24eb146106705780636fc3eaec1461068657806370a082311461069b57600080fd5b8063437823ec11610285578063437823ec146105e357806349bd5a5e146106035780635fecd9261461063b5780636aabff3f1461065b57600080fd5b806339a53c4e146105745780633bbac579146105965780633e0f966d146105ce57600080fd5b8063248dd2321161031857806329409395116102f257806329409395146104f7578063301ad55814610517578063313ce56714610538578063323be1c51461055457600080fd5b8063248dd232146104ab57806327a14fc2146104c15780632843631d146104e157600080fd5b806314eb76ac1161035457806314eb76ac1461042e57806318160ddd146104505780632369bf831461046b57806323b872dd1461048b57600080fd5b806301a6c43b1461038657806306fdde03146103af578063095ea7b3146103fe57600080fd5b3661038157005b600080fd5b34801561039257600080fd5b5061039c60085481565b6040519081526020015b60405180910390f35b3480156103bb57600080fd5b5060408051808201909152600981527f4761696e5a696c6c61000000000000000000000000000000000000000000000060208201525b6040516103a69190613807565b34801561040a57600080fd5b5061041e6104193660046136bf565b610b2a565b60405190151581526020016103a6565b34801561043a57600080fd5b5061044e61044936600461360f565b610b41565b005b34801561045c57600080fd5b50670de0b6b3a764000061039c565b34801561047757600080fd5b5061044e61048636600461360f565b610bda565b34801561049757600080fd5b5061041e6104a636600461367f565b610c6e565b3480156104b757600080fd5b5061039c60135481565b3480156104cd57600080fd5b5061044e6104dc366004613779565b610cd7565b3480156104ed57600080fd5b5061039c600b5481565b34801561050357600080fd5b5061044e61051236600461360f565b610e3d565b34801561052357600080fd5b5060285461041e906301000000900460ff1681565b34801561054457600080fd5b50604051600981526020016103a6565b34801561056057600080fd5b5060285461041e9062010000900460ff1681565b34801561058057600080fd5b5060285461041e90640100000000900460ff1681565b3480156105a257600080fd5b5061041e6105b136600461360f565b6001600160a01b0316600090815260208052604090205460ff1690565b3480156105da57600080fd5b5061044e610fea565b3480156105ef57600080fd5b5061044e6105fe36600461360f565b6110a8565b34801561060f57600080fd5b50602654610623906001600160a01b031681565b6040516001600160a01b0390911681526020016103a6565b34801561064757600080fd5b5061044e61065636600461360f565b611126565b34801561066757600080fd5b5061044e6111a0565b34801561067c57600080fd5b5061039c60075481565b34801561069257600080fd5b5061044e611224565b3480156106a757600080fd5b5061039c6106b636600461360f565b6001600160a01b031660009081526002602052604090205490565b3480156106dd57600080fd5b5061044e6112c3565b3480156106f257600080fd5b5061044e610701366004613706565b61137f565b34801561071257600080fd5b5061039c60195481565b34801561072857600080fd5b50601a546107439060ff811690610100900463ffffffff1682565b60408051921515835263ffffffff9091166020830152016103a6565b34801561076b57600080fd5b5061039c611431565b34801561078057600080fd5b5061039c60115481565b34801561079657600080fd5b506000546001600160a01b0316610623565b3480156107b457600080fd5b5061044e6114a5565b3480156107c957600080fd5b5061039c61150e565b3480156107de57600080fd5b5060408051808201909152600981527f4741494e5a494c4c41000000000000000000000000000000000000000000000060208201526103f1565b34801561082457600080fd5b5061044e6116dc565b34801561083957600080fd5b5061084d61084836600461360f565b611760565b6040805194855260208501939093529183015260608201526080016103a6565b34801561087957600080fd5b5061044e610888366004613779565b61180f565b34801561089957600080fd5b5061041e6108a83660046136bf565b61186e565b3480156108b957600080fd5b5061044e61187b565b3480156108ce57600080fd5b5061039c600f5481565b3480156108e457600080fd5b5061039c600d5481565b3480156108fa57600080fd5b5061039c60155481565b34801561091057600080fd5b50601c54601d54601e54601f5461093a9360ff8082169461010090920461ffff1693919291169085565b60408051951515865261ffff90941660208601529284019190915215156060830152608082015260a0016103a6565b34801561097557600080fd5b5061039c60175481565b34801561098b57600080fd5b5061044e61099a36600461360f565b6118f4565b3480156109ab57600080fd5b5061044e6109ba366004613779565b611988565b3480156109cb57600080fd5b5061044e6119f8565b3480156109e057600080fd5b5061044e6109ef36600461360f565b611a7c565b348015610a0057600080fd5b5061039c60095481565b348015610a1657600080fd5b5061039c610a25366004613647565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b348015610a5c57600080fd5b5061044e610a6b366004613779565b611b10565b348015610a7c57600080fd5b5061044e610a8b3660046137d6565b611b6f565b348015610a9c57600080fd5b5061044e610aab36600461360f565b611d2c565b348015610abc57600080fd5b5061044e610acb36600461360f565b611da7565b348015610adc57600080fd5b5061044e610aeb3660046137d6565b611e86565b348015610afc57600080fd5b5060285461041e9060ff1681565b348015610b1657600080fd5b5061044e610b2536600461360f565b612032565b6000610b3733848461212e565b5060015b92915050565b6000546001600160a01b03163314610ba05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b602280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610c345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b602180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000610c7b848484612286565b610ccd8433610cc885604051806060016040528060288152602001613a72602891396001600160a01b038a16600090815260036020908152604080832033845290915290205491906129bb565b61212e565b5060019392505050565b6000546001600160a01b03163314610d315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b610d45670de0b6b3a76400006103e86129f5565b811015610dba5760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d7573742062652067726561746572207468616e20302e312560448201527f206f6620737570706c79000000000000000000000000000000000000000000006064820152608401610b97565b670de0b6b3a7640000811115610e385760405162461bcd60e51b815260206004820152603060248201527f416d6f756e74206d757374206265206c657373207468616e206f72206571756160448201527f6c20746f20746f74616c537570706c79000000000000000000000000000000006064820152608401610b97565b600755565b6000546001600160a01b03163314610e975760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b158015610ef257600080fd5b505afa158015610f06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2a9190613791565b9050816001600160a01b031663a9059cbb610f4d6000546001600160a01b031690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b158015610fad57600080fd5b505af1158015610fc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe591906136ea565b505050565b6000546001600160a01b031633146110445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b60285462010000900460ff1661109c5760405162461bcd60e51b815260206004820152601e60248201527f7468697320636f6e74726163742063616e6e6f742062652070617573656400006044820152606401610b97565b6028805460ff19169055565b6000546001600160a01b031633146111025760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6000546001600160a01b031633146111805760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6001600160a01b031660009081526020805260409020805460ff19169055565b6000546001600160a01b031633146111fa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff169055565b6000546001600160a01b0316331461127e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b4780156112c057600080546040516001600160a01b039091169183156108fc02918491818181858888f193505050501580156112be573d6000803e3d6000fd5b505b50565b6000546001600160a01b0316331461131d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6000546001600160a01b031633146113d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b601a805460ff19168315151790556113f281603c613951565b601a805463ffffffff92909216610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ff9092169190911790555050565b601d546000906114415750600090565b600061144b61150e565b601d54909150811161148857601d5461147a906114746103e861146e8386612a3e565b90612a80565b906129f5565b611483906139a8565b61149f565b601d5461149f906114746103e861146e8584612a3e565b91505090565b6000546001600160a01b031633146114ff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6028805460ff19166001179055565b6000806000602660009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561156157600080fd5b505afa158015611575573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115999190613733565b5091509150816dffffffffffffffffffffffffffff16600014806115cb57506dffffffffffffffffffffffffffff8116155b156115d95760009250505090565b602654604080517f0dfe1681000000000000000000000000000000000000000000000000000000008152905130926001600160a01b031691630dfe1681916004808301926020929190829003018186803b15801561163657600080fd5b505afa15801561164a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166e919061362b565b6001600160a01b0316146116ab576116a66dffffffffffffffffffffffffffff80831690611474908516670de0b6b3a7640000612a80565b6116d5565b6116d56dffffffffffffffffffffffffffff80841690611474908416670de0b6b3a7640000612a80565b9250505090565b6000546001600160a01b031633146117365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff169055565b6001600160a01b0381166000908152601b60205260408120548190819081908190421061178e5760006117b1565b6001600160a01b0386166000908152601b60205260409020546117b19042612a3e565b90506117c081620151806129f5565b94506117cf6201518082613994565b90506117dd81610e106129f5565b93506117eb610e1082613994565b90506117f881603c6129f5565b9250611805603c82613994565b9150509193509193565b6000546001600160a01b031633146118695760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b601955565b6000610b37338484612286565b6000546001600160a01b031633146118d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b3060009081526002602052604090205480156112c0576112c081612b1b565b6000546001600160a01b0316331461194e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b602480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546001600160a01b031633146119e25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b426005556006556028805460ff19166001179055565b6000546001600160a01b03163314611a525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff169055565b6000546001600160a01b03163314611ad65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b602380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611b6a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b600855565b6000546001600160a01b03163314611bc95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6000611be182611bdb85818989612d58565b90612d58565b905060fa811115611c5a5760405162461bcd60e51b815260206004820152603160248201527f53756d206f66206275792066656573206d757374206265206c6573732074686160448201527f6e206f7220657175616c20746f203235250000000000000000000000000000006064820152608401610b97565b602854640100000000900460ff16611cb45760405162461bcd60e51b815260206004820152601860248201527f546869732066756e6374696f6e20697320646961626c656400000000000000006044820152606401610b97565b600d8590556009849055600f839055600b829055600e859055600a8490556010839055600c8290556040805186815260208101869052908101849052606081018390527f892b2caa2d791bf7b8d9a49c4db7a4513ff1ae2e0e068ed217f9d5ab4c1a28f0906080015b60405180910390a15050505050565b6000546001600160a01b03163314611d865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6001600160a01b03166000908152600460205260409020805460ff19169055565b6000546001600160a01b03163314611e015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6001600160a01b038116611e7d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610b97565b6112c081612db7565b6000546001600160a01b03163314611ee05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6000611ef282611bdb85818989612d58565b905060fa811115611f6b5760405162461bcd60e51b815260206004820152603260248201527f53756d206f662073656c6c2066656573206d757374206265206c65737320746860448201527f616e206f7220657175616c20746f2032352500000000000000000000000000006064820152608401610b97565b602854640100000000900460ff16611fc55760405162461bcd60e51b815260206004820152601860248201527f546869732066756e6374696f6e20697320646961626c656400000000000000006044820152606401610b97565b601585905560118490556017839055601382905560168590556012849055601883905560148290556040805186815260208101869052908101849052606081018390527f439932620c72dddea29980c098bca1a482729646d1216b226d723c6d278a30d190608001611d1d565b6000546001600160a01b0316331461208c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6028546301000000900460ff1661210b5760405162461bcd60e51b815260206004820152602860248201527f7468697320636f6e74726163742063616e6e6f7420626c61636b6c697374206160448201527f64647265737365730000000000000000000000000000000000000000000000006064820152608401610b97565b6001600160a01b031660009081526020805260409020805460ff19166001179055565b6001600160a01b0383166121a95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610b97565b6001600160a01b0382166122255760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610b97565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166123025760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610b97565b6001600160a01b03821661237e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610b97565b600081116123f45760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d75737420626520677265617465722060448201527f7468616e207a65726f00000000000000000000000000000000000000000000006064820152608401610b97565b60016124086000546001600160a01b031690565b6001600160a01b0316846001600160a01b03161415801561243757506000546001600160a01b03848116911614155b801561244c57506001600160a01b0384163014155b801561246157506001600160a01b0383163014155b156129615760285460ff166124b85760405162461bcd60e51b815260206004820152601560248201527f54726164696e67206973206e6f742061637469766500000000000000000000006044820152606401610b97565b6026546001600160a01b0385811691161480156124e357506025546001600160a01b03848116911614155b15612600576006546005546124f791612d58565b4211612520576001600160a01b03831660009081526020805260409020805460ff191660011790555b6001600160a01b03831660009081526004602052604090205460ff166126005760075461256683611bdb866001600160a01b031660009081526002602052604090205490565b11156126005760405162461bcd60e51b815260206004820152604260248201527f2e77616c6c65742062616c616e6365206166746572207472616e73666572206d60448201527f757374206265206c657373207468616e206d61782077616c6c657420616d6f7560648201527f6e74000000000000000000000000000000000000000000000000000000000000608482015260a401610b97565b602854610100900460ff1615801561262657506026546001600160a01b03858116911614155b801561263f57506026546001600160a01b038481169116145b15612850576001600160a01b038416600090815260208052604090205460ff1615801561268457506001600160a01b038316600090815260208052604090205460ff16155b61268d57600080fd5b601a5460ff1615612732576001600160a01b0384166000908152601b60205260409020544210156127005760405162461bcd60e51b815260206004820152601c60248201527f5374726f6e672048616e64732050726f746f636f6c20616374697665000000006044820152606401610b97565b601a5461271890610100900463ffffffff16426138e8565b6001600160a01b0385166000908152601b60205260409020555b601c5460ff161561279857601e5460ff16156127905760405162461bcd60e51b815260206004820152601e60248201527f53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f7200006044820152606401610b97565b612798612e1f565b30600090815260026020526040902054600854811061284e57801561283c5760006127dc601154611bdb601354611bdb601754601554612d5890919063ffffffff16565b111561283c57600061281761280a601154611bdb601354611bdb601754601554612d5890919063ffffffff16565b6011546114749085612a80565b9050600081831061282f5761282c8383612a3e565b90505b6128398282612ece565b50505b47801561284c5761284c47612f5e565b505b505b6026546001600160a01b0385811691161480159061287c57506026546001600160a01b03848116911614155b15612961576001600160a01b03831660009081526004602052604090205460ff16612961576007546128c783611bdb866001600160a01b031660009081526002602052604090205490565b11156129615760405162461bcd60e51b815260206004820152604260248201527f2e77616c6c65742062616c616e6365206166746572207472616e73666572206d60448201527f757374206265206c657373207468616e206d61782077616c6c657420616d6f7560648201527f6e74000000000000000000000000000000000000000000000000000000000000608482015260a401610b97565b6001600160a01b03841660009081526004602052604090205460ff16806129a057506001600160a01b03831660009081526004602052604090205460ff165b156129a9575060005b6129b58484848461309e565b50505050565b600081848411156129df5760405162461bcd60e51b8152600401610b979190613807565b5060006129ec848661397d565b95945050505050565b6000612a3783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061313c565b9392505050565b6000612a3783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506129bb565b600082612a8f57506000610b3b565b6000612a9b8385613914565b905082612aa88583613900565b14612a375760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152608401610b97565b602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790556040805160028082526060820183526000926020830190803683370190505090503081600081518110612ba3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6001600160a01b03928316602091820292909201810191909152602554604080517fad5c46480000000000000000000000000000000000000000000000000000000081529051919093169263ad5c4648926004808301939192829003018186803b158015612c1057600080fd5b505afa158015612c24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c48919061362b565b81600181518110612c82577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6001600160a01b039283166020918202929092010152602554612ca8913091168461212e565b6025546040517f791ac9470000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063791ac94790612cfa908590600090869030904290600401613878565b600060405180830381600087803b158015612d1457600080fd5b505af1158015612d28573d6000803e3d6000fd5b5050602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550505050565b600080612d6583856138e8565b905083811015612a375760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610b97565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000612e2961150e565b905080612e335750565b601d54811115612e4c57601d55601e805460ff19169055565b601c54601d54600091612e7c916103e8916114749161010090910461ffff1690612e769084612a80565b90612a3e565b905080821015612e9a57601e805460ff19166001179055601d54601f555b601e5460ff168015612eb95750601f54612eb5906002612a80565b8210155b156112be5750601e805460ff19169055601d55565b602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790556000612f078360026129f5565b90506000612f158483612a3e565b905047612f2a612f258585612d58565b612b1b565b6000612f364783612a3e565b90508215612d2857612d2883612f59612f4f8888612d58565b6114748589612a80565b61316a565b6000612f7d601754611bdb601354601554612d5890919063ffffffff16565b905080156112be576000612fa08261147460155486612a8090919063ffffffff16565b90506000612fbd8361147460175487612a8090919063ffffffff16565b90506000612fcf82612e768786612a3e565b90508215613013576021546040516001600160a01b039091169084156108fc029085906000818181858888f19350505050158015613011573d6000803e3d6000fd5b505b8115613055576022546040516001600160a01b039091169083156108fc029084906000818181858888f19350505050158015613053573d6000803e3d6000fd5b505b8015613097576023546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015613095573d6000803e3d6000fd5b505b5050505050565b806130fc576130fc600d8054600e5560098054600a55600f8054601055600b8054600c556000938490559183905582905581905560158054601655601180546012556017805460185560138054601455928490559083905582905555565b613107848484613240565b6129b5600e54600d55600a54600955601054600f55600c54600b55601654601555601254601155601854601755601454601355565b6000818361315d5760405162461bcd60e51b8152600401610b979190613807565b5060006129ec8486613900565b6025546131829030906001600160a01b03168461212e565b602554602480546040517ff305d71900000000000000000000000000000000000000000000000000000000815230600482015291820185905260006044830181905260648301526001600160a01b0390811660848301524260a48301529091169063f305d71990839060c4016060604051808303818588803b15801561320757600080fd5b505af115801561321b573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061309791906137a9565b6132726040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6026546001600160a01b03858116911614801561329d57506025546001600160a01b03848116911614155b15613311576132bd6103e8611474600d5485612a8090919063ffffffff16565b60208201526009546132d8906103e890611474908590612a80565b8152600f546132f0906103e890611474908590612a80565b6040820152600b5461330b906103e890611474908590612a80565b60608201525b6026546001600160a01b0385811691161480159061333c57506026546001600160a01b038481169116145b156133b05761335c6103e861147460155485612a8090919063ffffffff16565b6020820152601154613377906103e890611474908590612a80565b815260175461338f906103e890611474908590612a80565b60408201526013546133aa906103e890611474908590612a80565b60608201525b6026546001600160a01b038581169116148015906133dc57506026546001600160a01b03848116911614155b1561349057613407606461147460195461146e6103e861147460155489612a8090919063ffffffff16565b816020018181525050613436606461147460195461146e6103e861147460115489612a8090919063ffffffff16565b815260195460175461345b91606491611474919061146e906103e89084908990612a80565b81604001818152505061348a606461147460195461146e6103e861147460135489612a8090919063ffffffff16565b60608201525b6134bf8160600151612e768360400151612e768560000151612e76876020015189612a3e90919063ffffffff16565b60808201526001600160a01b0384166000908152600260205260409020546134e79083612a3e565b6001600160a01b038086166000908152600260205260408082209390935560808401519186168152919091205461351d91612d58565b60026000856001600160a01b03166001600160a01b031681526020019081526020016000208190555061358a6135748260600151611bdb8460400151611bdb86600001518760200151612d5890919063ffffffff16565b3060009081526002602052604090205490612d58565b3060009081526002602090815260409182902092909255608083015190519081526001600160a01b0385811692908716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350505050565b80516dffffffffffffffffffffffffffff8116811461360a57600080fd5b919050565b600060208284031215613620578081fd5b8135612a3781613a3c565b60006020828403121561363c578081fd5b8151612a3781613a3c565b60008060408385031215613659578081fd5b823561366481613a3c565b9150602083013561367481613a3c565b809150509250929050565b600080600060608486031215613693578081fd5b833561369e81613a3c565b925060208401356136ae81613a3c565b929592945050506040919091013590565b600080604083850312156136d1578182fd5b82356136dc81613a3c565b946020939093013593505050565b6000602082840312156136fb578081fd5b8151612a3781613a51565b60008060408385031215613718578182fd5b823561372381613a51565b9150602083013561367481613a5f565b600080600060608486031215613747578283fd5b613750846135ec565b925061375e602085016135ec565b9150604084015161376e81613a5f565b809150509250925092565b60006020828403121561378a578081fd5b5035919050565b6000602082840312156137a2578081fd5b5051919050565b6000806000606084860312156137bd578283fd5b8351925060208401519150604084015190509250925092565b600080600080608085870312156137eb578081fd5b5050823594602084013594506040840135936060013592509050565b6000602080835283518082850152825b8181101561383357858101830151858201604001528201613817565b818111156138445783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600060a082018783526020878185015260a0604085015281875180845260c0860191508289019350845b818110156138c75784516001600160a01b0316835293830193918301916001016138a2565b50506001600160a01b03969096166060850152505050608001529392505050565b600082198211156138fb576138fb6139de565b500190565b60008261390f5761390f613a0d565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561394c5761394c6139de565b500290565b600063ffffffff80831681851681830481118215151615613974576139746139de565b02949350505050565b60008282101561398f5761398f6139de565b500390565b6000826139a3576139a3613a0d565b500690565b60007f80000000000000000000000000000000000000000000000000000000000000008214156139da576139da6139de565b0390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6001600160a01b03811681146112c057600080fd5b80151581146112c057600080fd5b63ffffffff811681146112c057600080fdfe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220894b57c4ff6e6aa8c5d68bd6d06793f5b17eec86097caabdd2b4bde29c00c7bf64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH7 0x2386F2AB5BCA00 PUSH1 0x7 SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x8 SSTORE PUSH1 0x0 PUSH1 0x9 SSTORE PUSH1 0x9 SLOAD PUSH1 0xA SSTORE PUSH1 0x0 PUSH1 0xB SSTORE PUSH1 0xB SLOAD PUSH1 0xC SSTORE PUSH1 0x0 PUSH1 0xD SSTORE PUSH1 0xD SLOAD PUSH1 0xE SSTORE PUSH1 0x0 PUSH1 0xF SSTORE PUSH1 0xF SLOAD PUSH1 0x10 SSTORE PUSH1 0x0 PUSH1 0x11 SSTORE PUSH1 0x11 SLOAD PUSH1 0x12 SSTORE PUSH1 0x0 PUSH1 0x13 SSTORE PUSH1 0x13 SLOAD PUSH1 0x14 SSTORE PUSH1 0x0 PUSH1 0x15 SSTORE PUSH1 0x15 SLOAD PUSH1 0x16 SSTORE PUSH1 0x0 PUSH1 0x17 SSTORE PUSH1 0x17 SLOAD PUSH1 0x18 SSTORE PUSH1 0x0 PUSH1 0x19 SSTORE PUSH3 0x87 PUSH3 0x422 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x21 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SLOAD PUSH1 0x22 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP1 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x23 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH1 0x24 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x28 DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0x101010000 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x25 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x10ED43C718714EB63D5AA57B78B54704E256024E SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH3 0x171 ADDRESS DUP3 PUSH8 0xDE0B6B3A7640000 PUSH3 0x431 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1E6 SWAP2 SWAP1 PUSH3 0x55D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x244 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x26A SWAP2 SWAP1 PUSH3 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2EE SWAP2 SWAP1 PUSH3 0x55D JUMP JUMPDEST PUSH1 0x26 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x25 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x38C SWAP2 SWAP1 PUSH3 0x58D JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x27 DUP2 SWAP1 SSTORE PUSH1 0x7 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE ADDRESS DUP6 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD SWAP4 DUP5 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x5AF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x4FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x490 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x56F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x586 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x59F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x586 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3ACF DUP1 PUSH3 0x5BF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80670F3C GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xC95457FF GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAB0 JUMPI DUP1 PUSH4 0xF480FEC2 EQ PUSH2 0xAD0 JUMPI DUP1 PUSH4 0xFFB54A99 EQ PUSH2 0xAF0 JUMPI DUP1 PUSH4 0xFFECF516 EQ PUSH2 0xB0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA0A JUMPI DUP1 PUSH4 0xE315A6DA EQ PUSH2 0xA50 JUMPI DUP1 PUSH4 0xE4BF1BED EQ PUSH2 0xA70 JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0xA90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD1633649 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xD1633649 EQ PUSH2 0x99F JUMPI DUP1 PUSH4 0xD55CB78A EQ PUSH2 0x9BF JUMPI DUP1 PUSH4 0xDB0045EC EQ PUSH2 0x9D4 JUMPI DUP1 PUSH4 0xDC44B6A0 EQ PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC95457FF EQ PUSH2 0x904 JUMPI DUP1 PUSH4 0xCAB03471 EQ PUSH2 0x969 JUMPI DUP1 PUSH4 0xCDB3858F EQ PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D82190F GT PUSH2 0x16F JUMPI DUP1 PUSH4 0xC3C8CD80 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xC3C8CD80 EQ PUSH2 0x8AD JUMPI DUP1 PUSH4 0xC469B6DD EQ PUSH2 0x8C2 JUMPI DUP1 PUSH4 0xC5D24189 EQ PUSH2 0x8D8 JUMPI DUP1 PUSH4 0xC8607952 EQ PUSH2 0x8EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D82190F EQ PUSH2 0x82D JUMPI DUP1 PUSH4 0xA850673D EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x88D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8E360253 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x8E360253 EQ PUSH2 0x7A8 JUMPI DUP1 PUSH4 0x9491F94D EQ PUSH2 0x7BD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x7D2 JUMPI DUP1 PUSH4 0x99A7B9BC EQ PUSH2 0x818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80670F3C EQ PUSH2 0x75F JUMPI DUP1 PUSH4 0x88790A68 EQ PUSH2 0x774 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39A53C4E GT PUSH2 0x2AB JUMPI DUP1 PUSH4 0x6C0A24EB GT PUSH2 0x249 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x223 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6D1 JUMPI DUP1 PUSH4 0x729CB3F2 EQ PUSH2 0x6E6 JUMPI DUP1 PUSH4 0x72B2AECC EQ PUSH2 0x706 JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C0A24EB EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0x6FC3EAEC EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x437823EC GT PUSH2 0x285 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x603 JUMPI DUP1 PUSH4 0x5FECD926 EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0x6AABFF3F EQ PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39A53C4E EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0x3BBAC579 EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0x3E0F966D EQ PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248DD232 GT PUSH2 0x318 JUMPI DUP1 PUSH4 0x29409395 GT PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x29409395 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0x301AD558 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x323BE1C5 EQ PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248DD232 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x27A14FC2 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x2843631D EQ PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14EB76AC GT PUSH2 0x354 JUMPI DUP1 PUSH4 0x14EB76AC EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x2369BF83 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A6C43B EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x381 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH32 0x4761696E5A696C6C610000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x3807 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41E PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x36BF JUMP JUMPDEST PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0xB41 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x39C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x486 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41E PUSH2 0x4A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x367F JUMP JUMPDEST PUSH2 0xC6E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x4DC CALLDATASIZE PUSH1 0x4 PUSH2 0x3779 JUMP JUMPDEST PUSH2 0xCD7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x512 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x41E SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x41E SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x41E SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41E PUSH2 0x5B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0xFEA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x5FE CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x10A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x26 SLOAD PUSH2 0x623 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x656 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x1126 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x11A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x1224 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x6B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x12C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x701 CALLDATASIZE PUSH1 0x4 PUSH2 0x3706 JUMP JUMPDEST PUSH2 0x137F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1A SLOAD PUSH2 0x743 SWAP1 PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x1431 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x623 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x14A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x150E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH32 0x4741494E5A494C4C410000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x16DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84D PUSH2 0x848 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x1760 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x888 CALLDATASIZE PUSH1 0x4 PUSH2 0x3779 JUMP JUMPDEST PUSH2 0x180F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41E PUSH2 0x8A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x36BF JUMP JUMPDEST PUSH2 0x186E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x187B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x910 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1C SLOAD PUSH1 0x1D SLOAD PUSH1 0x1E SLOAD PUSH1 0x1F SLOAD PUSH2 0x93A SWAP4 PUSH1 0xFF DUP1 DUP3 AND SWAP5 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP4 SWAP2 SWAP3 SWAP2 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH2 0xFFFF SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x975 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x99A CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x18F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x9BA CALLDATASIZE PUSH1 0x4 PUSH2 0x3779 JUMP JUMPDEST PUSH2 0x1988 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x19F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x9EF CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x1A7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0xA25 CALLDATASIZE PUSH1 0x4 PUSH2 0x3647 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0xA6B CALLDATASIZE PUSH1 0x4 PUSH2 0x3779 JUMP JUMPDEST PUSH2 0x1B10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0xA8B CALLDATASIZE PUSH1 0x4 PUSH2 0x37D6 JUMP JUMPDEST PUSH2 0x1B6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0xAAB CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x1D2C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0xACB CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x1DA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0xAEB CALLDATASIZE PUSH1 0x4 PUSH2 0x37D6 JUMP JUMPDEST PUSH2 0x1E86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x41E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0xB25 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x2032 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB37 CALLER DUP5 DUP5 PUSH2 0x212E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x22 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x21 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7B DUP5 DUP5 DUP5 PUSH2 0x2286 JUMP JUMPDEST PUSH2 0xCCD DUP5 CALLER PUSH2 0xCC8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A72 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x29BB JUMP JUMPDEST PUSH2 0x212E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH2 0xD45 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3E8 PUSH2 0x29F5 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xDBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E20302E3125 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206F6620737570706C7900000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 GT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E206F722065717561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C20746F20746F74616C537570706C7900000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF2A SWAP2 SWAP1 PUSH2 0x3791 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xF4D PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFE5 SWAP2 SWAP1 PUSH2 0x36EA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1044 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x109C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320636F6E74726163742063616E6E6F74206265207061757365640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1102 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1180 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFF AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x127E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x12C0 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x12BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x131D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH2 0x13F2 DUP2 PUSH1 0x3C PUSH2 0x3951 JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1441 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144B PUSH2 0x150E JUMP JUMPDEST PUSH1 0x1D SLOAD SWAP1 SWAP2 POP DUP2 GT PUSH2 0x1488 JUMPI PUSH1 0x1D SLOAD PUSH2 0x147A SWAP1 PUSH2 0x1474 PUSH2 0x3E8 PUSH2 0x146E DUP4 DUP7 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 PUSH2 0x2A80 JUMP JUMPDEST SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH2 0x1483 SWAP1 PUSH2 0x39A8 JUMP JUMPDEST PUSH2 0x149F JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH2 0x149F SWAP1 PUSH2 0x1474 PUSH2 0x3E8 PUSH2 0x146E DUP6 DUP5 PUSH2 0x2A3E JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x26 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1575 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1599 SWAP2 SWAP1 PUSH2 0x3733 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 EQ DUP1 PUSH2 0x15CB JUMPI POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x15D9 JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xDFE168100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD ADDRESS SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x164A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x166E SWAP2 SWAP1 PUSH2 0x362B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x16AB JUMPI PUSH2 0x16A6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP1 PUSH2 0x1474 SWAP1 DUP6 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x2A80 JUMP JUMPDEST PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x16D5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP1 PUSH2 0x1474 SWAP1 DUP5 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x2A80 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFF AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 TIMESTAMP LT PUSH2 0x178E JUMPI PUSH1 0x0 PUSH2 0x17B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x17B1 SWAP1 TIMESTAMP PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP PUSH2 0x17C0 DUP2 PUSH3 0x15180 PUSH2 0x29F5 JUMP JUMPDEST SWAP5 POP PUSH2 0x17CF PUSH3 0x15180 DUP3 PUSH2 0x3994 JUMP JUMPDEST SWAP1 POP PUSH2 0x17DD DUP2 PUSH2 0xE10 PUSH2 0x29F5 JUMP JUMPDEST SWAP4 POP PUSH2 0x17EB PUSH2 0xE10 DUP3 PUSH2 0x3994 JUMP JUMPDEST SWAP1 POP PUSH2 0x17F8 DUP2 PUSH1 0x3C PUSH2 0x29F5 JUMP JUMPDEST SWAP3 POP PUSH2 0x1805 PUSH1 0x3C DUP3 PUSH2 0x3994 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1869 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB37 CALLER DUP5 DUP5 PUSH2 0x2286 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x12C0 JUMPI PUSH2 0x12C0 DUP2 PUSH2 0x2B1B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x194E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x24 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x19E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SSTORE PUSH1 0x6 SSTORE PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFF AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1AD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x23 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE1 DUP3 PUSH2 0x1BDB DUP6 DUP2 DUP10 DUP10 PUSH2 0x2D58 JUMP JUMPDEST SWAP1 PUSH2 0x2D58 JUMP JUMPDEST SWAP1 POP PUSH1 0xFA DUP2 GT ISZERO PUSH2 0x1C5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D206F66206275792066656573206D757374206265206C65737320746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206F7220657175616C20746F20323525000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1CB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E20697320646961626C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0xD DUP6 SWAP1 SSTORE PUSH1 0x9 DUP5 SWAP1 SSTORE PUSH1 0xF DUP4 SWAP1 SSTORE PUSH1 0xB DUP3 SWAP1 SSTORE PUSH1 0xE DUP6 SWAP1 SSTORE PUSH1 0xA DUP5 SWAP1 SSTORE PUSH1 0x10 DUP4 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x892B2CAA2D791BF7B8D9A49C4DB7A4513FF1AE2E0E068ED217F9D5AB4C1A28F0 SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1E7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH2 0x12C0 DUP2 PUSH2 0x2DB7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF2 DUP3 PUSH2 0x1BDB DUP6 DUP2 DUP10 DUP10 PUSH2 0x2D58 JUMP JUMPDEST SWAP1 POP PUSH1 0xFA DUP2 GT ISZERO PUSH2 0x1F6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D206F662073656C6C2066656573206D757374206265206C657373207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E206F7220657175616C20746F203235250000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1FC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E20697320646961626C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x15 DUP6 SWAP1 SSTORE PUSH1 0x11 DUP5 SWAP1 SSTORE PUSH1 0x17 DUP4 SWAP1 SSTORE PUSH1 0x13 DUP3 SWAP1 SSTORE PUSH1 0x16 DUP6 SWAP1 SSTORE PUSH1 0x12 DUP5 SWAP1 SSTORE PUSH1 0x18 DUP4 SWAP1 SSTORE PUSH1 0x14 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x439932620C72DDDEA29980C098BCA1A482729646D1216B226D723C6D278A30D1 SWAP1 PUSH1 0x80 ADD PUSH2 0x1D1D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x208C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x210B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320636F6E74726163742063616E6E6F7420626C61636B6C6973742061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573736573000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x21A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2225 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2302 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x237E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x23F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x2408 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x2437 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x244C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2461 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ ISZERO JUMPDEST ISZERO PUSH2 0x2961 JUMPI PUSH1 0x28 SLOAD PUSH1 0xFF AND PUSH2 0x24B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E67206973206E6F74206163746976650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x24E3 JUMPI POP PUSH1 0x25 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2600 JUMPI PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x24F7 SWAP2 PUSH2 0x2D58 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x2520 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2600 JUMPI PUSH1 0x7 SLOAD PUSH2 0x2566 DUP4 PUSH2 0x1BDB DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x2600 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2E77616C6C65742062616C616E6365206166746572207472616E73666572206D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x757374206265206C657373207468616E206D61782077616C6C657420616D6F75 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E74000000000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2626 JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x263F JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x2850 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2684 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x268D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1A SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2732 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x2700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374726F6E672048616E64732050726F746F636F6C2061637469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1A SLOAD PUSH2 0x2718 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x38E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1C SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2798 JUMPI PUSH1 0x1E SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C732073746F70706564206279204469616D6F6E6420466C6F6F720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH2 0x2798 PUSH2 0x2E1F JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x8 SLOAD DUP2 LT PUSH2 0x284E JUMPI DUP1 ISZERO PUSH2 0x283C JUMPI PUSH1 0x0 PUSH2 0x27DC PUSH1 0x11 SLOAD PUSH2 0x1BDB PUSH1 0x13 SLOAD PUSH2 0x1BDB PUSH1 0x17 SLOAD PUSH1 0x15 SLOAD PUSH2 0x2D58 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x283C JUMPI PUSH1 0x0 PUSH2 0x2817 PUSH2 0x280A PUSH1 0x11 SLOAD PUSH2 0x1BDB PUSH1 0x13 SLOAD PUSH2 0x1BDB PUSH1 0x17 SLOAD PUSH1 0x15 SLOAD PUSH2 0x2D58 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x1474 SWAP1 DUP6 PUSH2 0x2A80 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x282F JUMPI PUSH2 0x282C DUP4 DUP4 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x2839 DUP3 DUP3 PUSH2 0x2ECE JUMP JUMPDEST POP POP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x284C JUMPI PUSH2 0x284C SELFBALANCE PUSH2 0x2F5E JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x287C JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2961 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2961 JUMPI PUSH1 0x7 SLOAD PUSH2 0x28C7 DUP4 PUSH2 0x1BDB DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x2961 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2E77616C6C65742062616C616E6365206166746572207472616E73666572206D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x757374206265206C657373207468616E206D61782077616C6C657420616D6F75 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E74000000000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x29A0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x29A9 JUMPI POP PUSH1 0x0 JUMPDEST PUSH2 0x29B5 DUP5 DUP5 DUP5 DUP5 PUSH2 0x309E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x29DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB97 SWAP2 SWAP1 PUSH2 0x3807 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x29EC DUP5 DUP7 PUSH2 0x397D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A37 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x313C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A37 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x29BB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2A8F JUMPI POP PUSH1 0x0 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9B DUP4 DUP6 PUSH2 0x3914 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x2AA8 DUP6 DUP4 PUSH2 0x3900 JUMP JUMPDEST EQ PUSH2 0x2A37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2BA3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x25 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xAD5C464800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C48 SWAP2 SWAP1 PUSH2 0x362B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2C82 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x25 SLOAD PUSH2 0x2CA8 SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x212E JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH1 0x40 MLOAD PUSH32 0x791AC94700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x2CFA SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x3878 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D65 DUP4 DUP6 PUSH2 0x38E8 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2A37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E29 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2E33 JUMPI POP JUMP JUMPDEST PUSH1 0x1D SLOAD DUP2 GT ISZERO PUSH2 0x2E4C JUMPI PUSH1 0x1D SSTORE PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1C SLOAD PUSH1 0x1D SLOAD PUSH1 0x0 SWAP2 PUSH2 0x2E7C SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0x1474 SWAP2 PUSH2 0x100 SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP1 PUSH2 0x2E76 SWAP1 DUP5 PUSH2 0x2A80 JUMP JUMPDEST SWAP1 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x2E9A JUMPI PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1D SLOAD PUSH1 0x1F SSTORE JUMPDEST PUSH1 0x1E SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2EB9 JUMPI POP PUSH1 0x1F SLOAD PUSH2 0x2EB5 SWAP1 PUSH1 0x2 PUSH2 0x2A80 JUMP JUMPDEST DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x12BE JUMPI POP PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1D SSTORE JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0x2F07 DUP4 PUSH1 0x2 PUSH2 0x29F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F15 DUP5 DUP4 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP SELFBALANCE PUSH2 0x2F2A PUSH2 0x2F25 DUP6 DUP6 PUSH2 0x2D58 JUMP JUMPDEST PUSH2 0x2B1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F36 SELFBALANCE DUP4 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x2D28 JUMPI PUSH2 0x2D28 DUP4 PUSH2 0x2F59 PUSH2 0x2F4F DUP9 DUP9 PUSH2 0x2D58 JUMP JUMPDEST PUSH2 0x1474 DUP6 DUP10 PUSH2 0x2A80 JUMP JUMPDEST PUSH2 0x316A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7D PUSH1 0x17 SLOAD PUSH2 0x1BDB PUSH1 0x13 SLOAD PUSH1 0x15 SLOAD PUSH2 0x2D58 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x12BE JUMPI PUSH1 0x0 PUSH2 0x2FA0 DUP3 PUSH2 0x1474 PUSH1 0x15 SLOAD DUP7 PUSH2 0x2A80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2FBD DUP4 PUSH2 0x1474 PUSH1 0x17 SLOAD DUP8 PUSH2 0x2A80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2FCF DUP3 PUSH2 0x2E76 DUP8 DUP7 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x3013 JUMPI PUSH1 0x21 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3011 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP2 ISZERO PUSH2 0x3055 JUMPI PUSH1 0x22 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3053 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP1 ISZERO PUSH2 0x3097 JUMPI PUSH1 0x23 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3095 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x30FC JUMPI PUSH2 0x30FC PUSH1 0xD DUP1 SLOAD PUSH1 0xE SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xA SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x10 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0xC SSTORE PUSH1 0x0 SWAP4 DUP5 SWAP1 SSTORE SWAP2 DUP4 SWAP1 SSTORE DUP3 SWAP1 SSTORE DUP2 SWAP1 SSTORE PUSH1 0x15 DUP1 SLOAD PUSH1 0x16 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x12 SSTORE PUSH1 0x17 DUP1 SLOAD PUSH1 0x18 SSTORE PUSH1 0x13 DUP1 SLOAD PUSH1 0x14 SSTORE SWAP3 DUP5 SWAP1 SSTORE SWAP1 DUP4 SWAP1 SSTORE DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH2 0x3107 DUP5 DUP5 DUP5 PUSH2 0x3240 JUMP JUMPDEST PUSH2 0x29B5 PUSH1 0xE SLOAD PUSH1 0xD SSTORE PUSH1 0xA SLOAD PUSH1 0x9 SSTORE PUSH1 0x10 SLOAD PUSH1 0xF SSTORE PUSH1 0xC SLOAD PUSH1 0xB SSTORE PUSH1 0x16 SLOAD PUSH1 0x15 SSTORE PUSH1 0x12 SLOAD PUSH1 0x11 SSTORE PUSH1 0x18 SLOAD PUSH1 0x17 SSTORE PUSH1 0x14 SLOAD PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x315D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB97 SWAP2 SWAP1 PUSH2 0x3807 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x29EC DUP5 DUP7 PUSH2 0x3900 JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH2 0x3182 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x212E JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH1 0x24 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xF305D71900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x84 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF305D719 SWAP1 DUP4 SWAP1 PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x321B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3097 SWAP2 SWAP1 PUSH2 0x37A9 JUMP JUMPDEST PUSH2 0x3272 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x329D JUMPI POP PUSH1 0x25 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3311 JUMPI PUSH2 0x32BD PUSH2 0x3E8 PUSH2 0x1474 PUSH1 0xD SLOAD DUP6 PUSH2 0x2A80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x9 SLOAD PUSH2 0x32D8 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x1474 SWAP1 DUP6 SWAP1 PUSH2 0x2A80 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xF SLOAD PUSH2 0x32F0 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x1474 SWAP1 DUP6 SWAP1 PUSH2 0x2A80 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xB SLOAD PUSH2 0x330B SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x1474 SWAP1 DUP6 SWAP1 PUSH2 0x2A80 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x333C JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x33B0 JUMPI PUSH2 0x335C PUSH2 0x3E8 PUSH2 0x1474 PUSH1 0x15 SLOAD DUP6 PUSH2 0x2A80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x11 SLOAD PUSH2 0x3377 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x1474 SWAP1 DUP6 SWAP1 PUSH2 0x2A80 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x17 SLOAD PUSH2 0x338F SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x1474 SWAP1 DUP6 SWAP1 PUSH2 0x2A80 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH2 0x33AA SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x1474 SWAP1 DUP6 SWAP1 PUSH2 0x2A80 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x33DC JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3490 JUMPI PUSH2 0x3407 PUSH1 0x64 PUSH2 0x1474 PUSH1 0x19 SLOAD PUSH2 0x146E PUSH2 0x3E8 PUSH2 0x1474 PUSH1 0x15 SLOAD DUP10 PUSH2 0x2A80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x3436 PUSH1 0x64 PUSH2 0x1474 PUSH1 0x19 SLOAD PUSH2 0x146E PUSH2 0x3E8 PUSH2 0x1474 PUSH1 0x11 SLOAD DUP10 PUSH2 0x2A80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x19 SLOAD PUSH1 0x17 SLOAD PUSH2 0x345B SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x1474 SWAP2 SWAP1 PUSH2 0x146E SWAP1 PUSH2 0x3E8 SWAP1 DUP5 SWAP1 DUP10 SWAP1 PUSH2 0x2A80 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x348A PUSH1 0x64 PUSH2 0x1474 PUSH1 0x19 SLOAD PUSH2 0x146E PUSH2 0x3E8 PUSH2 0x1474 PUSH1 0x13 SLOAD DUP10 PUSH2 0x2A80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH2 0x34BF DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x2E76 DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x2E76 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x2E76 DUP8 PUSH1 0x20 ADD MLOAD DUP10 PUSH2 0x2A3E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x34E7 SWAP1 DUP4 PUSH2 0x2A3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x80 DUP5 ADD MLOAD SWAP2 DUP7 AND DUP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x351D SWAP2 PUSH2 0x2D58 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x358A PUSH2 0x3574 DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x1BDB DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1BDB DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x2D58 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x2D58 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x80 DUP4 ADD MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x360A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3620 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A37 DUP2 PUSH2 0x3A3C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x363C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2A37 DUP2 PUSH2 0x3A3C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3659 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3664 DUP2 PUSH2 0x3A3C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3674 DUP2 PUSH2 0x3A3C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3693 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x369E DUP2 PUSH2 0x3A3C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x36AE DUP2 PUSH2 0x3A3C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36D1 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x36DC DUP2 PUSH2 0x3A3C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36FB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2A37 DUP2 PUSH2 0x3A51 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3718 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3723 DUP2 PUSH2 0x3A51 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3674 DUP2 PUSH2 0x3A5F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3747 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3750 DUP5 PUSH2 0x35EC JUMP JUMPDEST SWAP3 POP PUSH2 0x375E PUSH1 0x20 DUP6 ADD PUSH2 0x35EC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x376E DUP2 PUSH2 0x3A5F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x378A JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A2 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37BD JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x37EB JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3833 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3817 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3844 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38C7 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x38A2 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x38FB JUMPI PUSH2 0x38FB PUSH2 0x39DE JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x390F JUMPI PUSH2 0x390F PUSH2 0x3A0D JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x394C JUMPI PUSH2 0x394C PUSH2 0x39DE JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3974 JUMPI PUSH2 0x3974 PUSH2 0x39DE JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x398F JUMPI PUSH2 0x398F PUSH2 0x39DE JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x39A3 JUMPI PUSH2 0x39A3 PUSH2 0x3A0D JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0x39DA JUMPI PUSH2 0x39DA PUSH2 0x39DE JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x12C0 JUMPI PUSH1 0x0 DUP1 REVERT INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365A2646970667358221220 DUP10 0x4B JUMPI 0xC4 SELFDESTRUCT PUSH15 0x6AA8C5D68BD6D06793F5B17EEC8609 PUSH29 0xAABDD2B4BDE29C00C7BF64736F6C634300080400330000000000000000 ",
							"sourceMap": "8181:21859:0:-:0;;;8784:16;8750:50;;8839:15;8806:48;;8950:1;8916:35;;9019:16;;8976:59;;9075:1;9041:35;;9144:16;;9101:59;;9200:1;9166:35;;9269:16;;9226:59;;9320:1;9291:30;;9384:11;;9346:49;;9454:1;9419:36;;9524:17;;9480:61;;9582:1;9547:36;;9652:17;;9608:61;;9710:1;9675:36;;9780:17;;9736:61;;9833:1;9803:31;;9898:12;;9859:51;;9959:1;9916:44;;10624:7;:5;;;:7;;:::i;:::-;10572:60;;;-1:-1:-1;;;;;;10572:60:0;;;-1:-1:-1;;;;;10572:60:0;;;;;;;-1:-1:-1;3018:6:0;10638:55;;;3018:6;;;;10638:55;;;;;;;;10699:60;;;;;;;;;10765:55;;;;;;;;;;;10943:31;;;-1:-1:-1;;11083:31:0;;;;;11520:776;;;;;;;;;-1:-1:-1;2823:17:0;2865:18;;-1:-1:-1;;;;;;2865:18:0;818:10;2865:18;;;;;2898:43;;818:10;;;;2898:43;;2823:17;;2898:43;-1:-1:-1;11654:15:0;:34;;-1:-1:-1;;;;;;11654:34:0;11601:42;11654:34;;;;;;11698:58;11715:4;11601:42;8641:18;11698:8;:58::i;:::-;11800:16;-1:-1:-1;;;;;11800:24:0;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11782:56:0;;11847:4;11854:16;-1:-1:-1;;;;;11854:21:0;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11782:96;;-1:-1:-1;;;;;;11782:96:0;;;;;;;-1:-1:-1;;;;;861:15:1;;;11782:96:0;;;843:34:1;913:15;;893:18;;;886:43;778:18;;11782:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11766:13;:112;;-1:-1:-1;;;;;;11766:112:0;-1:-1:-1;;;;;11766:112:0;;;;;;;;;11926:15;;11888:73;;-1:-1:-1;;;11888:73:0;;11926:15;;11888:73;;;1114:51:1;-1:-1:-1;;1181:18:1;;;1174:34;11766:112:0;11888:29;;1087:18:1;;11888:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8641:18:0;11972:12;:22;;;12059:16;:26;;;818:10;-1:-1:-1;12104:23:0;;;:9;-1:-1:-1;12104:23:0;;;;;;;:33;;;3018:6;;-1:-1:-1;;;;;3018:6:0;12147:27;;:18;:27;;;;;:34;;12177:4;-1:-1:-1;;12147:34:0;;;;;;;;12218:4;12191:33;;;;;:40;;;;;;;;;;12246:43;2173:25:1;;;818:10:0;;-1:-1:-1;;12246:43:0;;2146:18:1;12246:43:0;;;;;;;11520:776;8181:21859;;2954:77;2992:7;3018:6;-1:-1:-1;;;;;3018:6:0;;2954:77::o;14904:330::-;-1:-1:-1;;;;;14996:19:0;;14988:68;;;;-1:-1:-1;;;14988:68:0;;1824:2:1;14988:68:0;;;1806:21:1;1863:2;1843:18;;;1836:30;1902:34;1882:18;;;1875:62;-1:-1:-1;;;1953:18:1;;;1946:34;1997:19;;14988:68:0;;;;;;;;;-1:-1:-1;;;;;15074:21:0;;15066:68;;;;-1:-1:-1;;;15066:68:0;;1421:2:1;15066:68:0;;;1403:21:1;1460:2;1440:18;;;1433:30;1499:34;1479:18;;;1472:62;-1:-1:-1;;;1550:18:1;;;1543:32;1592:19;;15066:68:0;1393:224:1;15066:68:0;-1:-1:-1;;;;;15144:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15195:32;;2173:25:1;;;15195:32:0;;2146:18:1;15195:32:0;;;;;;;14904:330;;;:::o;14:310:1:-;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:1;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:1:o;329:297::-;396:6;449:2;437:9;428:7;424:23;420:32;417:2;;;470:6;462;455:22;417:2;507:9;501:16;560:5;553:13;546:21;539:5;536:32;526:2;;587:6;579;572:22;2128:76;8181:21859:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:19073:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:128:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "180:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "189:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "192:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "182:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "182:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "146:30:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:42:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:53:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:61:1"
															},
															"nodeType": "YulIf",
															"src": "115:2:1"
														}
													]
												},
												"name": "abi_decode_uint112_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:188:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "277:187:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "323:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "332:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "340:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "325:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "325:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "325:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "298:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "307:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "294:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "294:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "319:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "290:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "290:32:1"
															},
															"nodeType": "YulIf",
															"src": "287:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "358:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "384:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "371:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "371:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "362:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "428:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "403:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "403:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "403:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "443:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "453:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "243:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "254:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "266:6:1",
														"type": ""
													}
												],
												"src": "207:257:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "550:180:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "596:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "605:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "613:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "598:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "598:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "598:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "571:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "580:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "567:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "592:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:32:1"
															},
															"nodeType": "YulIf",
															"src": "560:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "631:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "650:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "644:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "644:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "635:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "694:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "669:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "669:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "669:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "709:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "719:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "709:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "516:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "527:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "539:6:1",
														"type": ""
													}
												],
												"src": "469:261:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "813:187:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "859:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "868:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "876:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "861:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "861:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "861:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "834:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "843:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "830:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "830:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "855:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "826:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "826:32:1"
															},
															"nodeType": "YulIf",
															"src": "823:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "894:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "907:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "907:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "898:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "964:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "939:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "939:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "979:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "989:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "979:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "779:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "790:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "802:6:1",
														"type": ""
													}
												],
												"src": "735:265:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1092:311:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1138:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1155:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1140:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1140:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1140:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1113:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1122:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1109:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1109:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1105:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1105:32:1"
															},
															"nodeType": "YulIf",
															"src": "1102:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1173:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1199:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1186:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1177:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1243:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1218:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1218:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1258:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1268:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1282:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1314:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1325:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1310:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1310:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1297:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1297:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1286:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1363:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1338:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1338:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1338:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1380:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1390:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1050:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1061:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1073:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1081:6:1",
														"type": ""
													}
												],
												"src": "1005:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1512:362:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1558:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1567:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1575:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1560:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1560:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1560:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1533:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1542:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1529:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1554:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1525:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:32:1"
															},
															"nodeType": "YulIf",
															"src": "1522:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1593:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1619:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1606:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1597:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1663:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1638:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1638:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1678:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1688:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1702:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1706:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1783:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1758:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1800:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1810:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1826:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1853:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1864:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1849:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1836:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1462:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1473:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1485:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1493:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1501:6:1",
														"type": ""
													}
												],
												"src": "1408:466:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1966:238:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2012:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2021:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2029:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2014:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2014:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2014:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1987:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1996:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1983:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1983:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2008:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1979:32:1"
															},
															"nodeType": "YulIf",
															"src": "1976:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2047:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2073:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2060:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2060:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2051:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2117:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2092:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2092:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2132:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2142:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2156:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2183:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2194:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2179:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2179:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2166:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2156:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1924:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1935:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1947:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1955:6:1",
														"type": ""
													}
												],
												"src": "1879:325:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2287:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2333:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2342:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2350:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2335:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2335:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2335:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2308:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2317:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2304:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2304:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2329:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2300:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:32:1"
															},
															"nodeType": "YulIf",
															"src": "2297:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2368:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2387:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2381:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2381:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2372:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2428:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2406:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2406:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2443:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2453:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2443:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2253:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2264:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2276:6:1",
														"type": ""
													}
												],
												"src": "2209:255:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2552:307:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2598:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2607:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2615:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2600:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2600:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2600:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2573:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2582:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2569:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2569:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2594:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2565:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2565:32:1"
															},
															"nodeType": "YulIf",
															"src": "2562:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2633:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2659:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2646:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2637:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2700:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2678:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2678:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2678:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2715:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2725:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2715:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2739:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2771:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2782:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2754:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2754:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2743:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2819:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "2795:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2795:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2795:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2836:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2846:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2836:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2510:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2521:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2533:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2541:6:1",
														"type": ""
													}
												],
												"src": "2469:390:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2978:315:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3024:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3033:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3041:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3026:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2999:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3008:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2995:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2995:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3020:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2991:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2991:32:1"
															},
															"nodeType": "YulIf",
															"src": "2988:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3059:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3099:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint112_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3069:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3069:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3059:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3118:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3162:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3173:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint112_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3128:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3128:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3118:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3186:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3209:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3220:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3205:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3205:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3199:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:25:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3190:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3257:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "3233:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3233:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3233:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3272:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3282:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3272:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2928:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2939:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2951:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2959:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2967:6:1",
														"type": ""
													}
												],
												"src": "2864:429:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3368:120:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3414:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3423:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3431:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3416:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3416:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3416:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3389:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3398:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3385:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3385:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3410:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3381:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3381:32:1"
															},
															"nodeType": "YulIf",
															"src": "3378:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3449:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3472:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3459:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3459:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3334:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3345:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3357:6:1",
														"type": ""
													}
												],
												"src": "3298:190:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3574:113:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3620:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3629:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3637:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3622:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3622:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3622:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3595:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3604:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3591:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3591:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3616:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3587:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3587:32:1"
															},
															"nodeType": "YulIf",
															"src": "3584:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3655:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3671:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3665:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3665:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3655:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3540:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3551:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3563:6:1",
														"type": ""
													}
												],
												"src": "3493:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3807:201:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3853:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3862:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3870:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3855:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3855:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3855:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3828:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3837:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3824:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3824:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3849:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3820:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:32:1"
															},
															"nodeType": "YulIf",
															"src": "3817:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3888:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3904:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3898:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3923:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3943:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3954:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3939:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3933:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3933:25:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3923:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3967:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3987:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3998:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3977:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3977:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3967:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3757:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3768:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3780:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3788:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3796:6:1",
														"type": ""
													}
												],
												"src": "3692:316:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4134:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4181:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "4190:6:1"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "4198:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4183:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4183:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4183:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4155:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4164:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4151:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4176:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4147:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4147:33:1"
															},
															"nodeType": "YulIf",
															"src": "4144:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4216:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4239:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4226:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4216:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4258:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4285:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4296:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4281:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4281:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4268:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4268:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4258:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4309:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4336:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4347:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4332:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4319:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4319:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4309:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4360:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4387:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4398:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4383:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4383:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4370:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4370:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4076:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4087:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4099:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4107:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4115:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4123:6:1",
														"type": ""
													}
												],
												"src": "4013:395:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4514:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4524:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4536:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4547:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4532:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4524:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4581:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4589:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4577:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4577:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4559:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4559:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4559:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4483:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4494:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4505:4:1",
														"type": ""
													}
												],
												"src": "4413:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4773:168:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4783:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4795:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4806:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4791:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4791:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4783:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4825:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4840:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4848:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4836:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4836:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4818:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4818:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4818:74:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4912:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4923:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4908:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4928:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4901:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4901:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4734:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4745:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4753:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4764:4:1",
														"type": ""
													}
												],
												"src": "4644:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5211:373:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5221:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5233:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5244:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5229:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5229:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5221:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5257:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5267:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5261:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5340:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5348:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5336:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5336:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5318:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5318:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5318:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5383:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5368:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5368:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5388:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5361:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5361:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5361:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5426:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5411:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5431:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5404:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5404:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5404:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5458:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5469:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5454:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5454:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5474:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5501:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5512:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5497:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "5522:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5530:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5518:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5518:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5490:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5490:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5490:44:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5554:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5565:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5550:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5550:19:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "5571:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5543:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5543:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_payable_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5140:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5151:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5159:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5167:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5175:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5183:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5191:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5202:4:1",
														"type": ""
													}
												],
												"src": "4946:638:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5684:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5694:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5706:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5717:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5702:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5702:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5694:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5736:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5761:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5754:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5754:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5747:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5747:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5729:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5729:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5653:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5664:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5675:4:1",
														"type": ""
													}
												],
												"src": "5589:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5980:295:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5990:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6002:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6013:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5998:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5998:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5990:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6033:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "6058:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6051:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6051:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6044:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6044:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6026:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6026:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6026:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6087:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6098:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6083:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6083:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6107:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6115:6:1",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6103:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6103:19:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6076:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6076:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6076:47:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6143:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6154:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6139:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6159:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6132:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6132:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6132:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6186:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6197:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6182:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6182:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "6216:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6209:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6209:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6202:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6202:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6175:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6175:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6175:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6245:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6256:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6241:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "6262:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6234:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6234:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint16_t_uint256_t_bool_t_uint256__to_t_bool_t_uint16_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5917:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5928:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5936:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5944:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5952:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5960:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5971:4:1",
														"type": ""
													}
												],
												"src": "5781:494:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6401:152:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6411:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6423:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6434:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6419:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6419:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6411:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6453:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "6478:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6471:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6471:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6464:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6464:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6446:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6446:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6446:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6507:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6518:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6503:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6503:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6527:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6535:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6523:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6496:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6496:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6496:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint32__to_t_bool_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6362:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6373:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6381:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6392:4:1",
														"type": ""
													}
												],
												"src": "6280:273:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6657:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6667:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6679:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6690:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6675:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6675:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6667:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6709:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6720:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6702:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6702:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6702:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6626:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6637:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6648:4:1",
														"type": ""
													}
												],
												"src": "6558:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6859:541:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6869:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6879:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6873:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6897:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6908:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6890:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6890:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6890:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6920:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6940:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6934:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6934:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6924:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6967:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6978:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6963:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6963:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6983:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6956:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6956:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6999:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "7008:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7003:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7071:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "7100:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7111:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7096:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7096:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7115:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7092:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7092:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "7134:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "7142:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "7130:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7130:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "7146:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7126:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7126:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7120:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7120:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7085:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7085:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7085:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7032:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7035:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7029:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7029:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7043:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7045:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7054:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7057:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7050:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7050:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7045:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7025:3:1",
																"statements": []
															},
															"src": "7021:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7195:69:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "7224:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "7235:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7220:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7220:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7244:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7216:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7216:31:1"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "7249:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7209:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7209:45:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7209:45:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7176:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7179:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7173:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7173:13:1"
															},
															"nodeType": "YulIf",
															"src": "7170:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7273:121:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7289:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "7308:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7316:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7304:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7304:15:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7321:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7300:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7300:88:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7285:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7285:104:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7391:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7281:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7281:113:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7273:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6828:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6839:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6850:4:1",
														"type": ""
													}
												],
												"src": "6738:662:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7579:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7596:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7607:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7589:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7589:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7589:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7630:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7641:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7626:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7646:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7619:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7619:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7619:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7669:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7680:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7665:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7665:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7685:32:1",
																		"type": "",
																		"value": "this contract cannot be paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7658:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7658:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7727:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7739:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7750:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7735:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7735:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7727:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_046a8fc234c98369d46f45f5bed63e994dab3910bdaebfe1ca0cd49f568245a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7556:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7570:4:1",
														"type": ""
													}
												],
												"src": "7405:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7938:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7955:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7966:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7948:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7948:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7948:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7989:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8000:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7985:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7985:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8005:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7978:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7978:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7978:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8028:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8039:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8024:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8024:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8044:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8017:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8017:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8017:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8099:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8110:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8095:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8095:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8115:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8088:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8088:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8130:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8142:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8153:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8138:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8138:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8130:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7915:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7929:4:1",
														"type": ""
													}
												],
												"src": "7764:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8342:239:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8359:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8370:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8352:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8352:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8352:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8393:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8404:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8389:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8389:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8409:2:1",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8382:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8382:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8382:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8432:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8443:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8428:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8428:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8448:34:1",
																		"type": "",
																		"value": "Sum of buy fees must be less tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8421:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8421:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8421:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8503:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8514:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8499:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8519:19:1",
																		"type": "",
																		"value": "n or equal to 25%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8492:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8492:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8548:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8560:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8571:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8556:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8556:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8548:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1755f62c229a290ad9b7faac2959e1b3eb8f692fba0f163aae0b9540e4f5fdce__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8319:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8333:4:1",
														"type": ""
													}
												],
												"src": "8168:413:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8760:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8777:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8788:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8770:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8770:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8770:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8811:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8822:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8807:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8807:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8827:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8800:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8800:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8800:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8850:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8861:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8846:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8846:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8866:23:1",
																		"type": "",
																		"value": "Trading is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8839:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8839:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8839:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8899:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8911:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8922:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8907:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8907:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8899:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e00c61f0a7b721724fe214bc791e509089379e5d75afe66b9a59ad6bee5002b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8737:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8751:4:1",
														"type": ""
													}
												],
												"src": "8586:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9110:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9127:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9138:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9120:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9120:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9161:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9172:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9157:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9157:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9177:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9150:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9150:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9150:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9200:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9211:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9196:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9196:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9216:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9189:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9189:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9189:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9271:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9282:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9267:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9267:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9287:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9260:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9260:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9260:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9305:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9317:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9328:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9313:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9305:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9087:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9101:4:1",
														"type": ""
													}
												],
												"src": "8936:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9517:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9534:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9545:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9527:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9527:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9527:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9568:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9579:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9564:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9564:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9584:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9557:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9557:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9557:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9607:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9618:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9603:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9603:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9623:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9596:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9596:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9596:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9678:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9689:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9674:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9674:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9694:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9667:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9667:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9708:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9720:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9731:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9716:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9716:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9708:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9494:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9508:4:1",
														"type": ""
													}
												],
												"src": "9343:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9920:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9937:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9948:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9930:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9930:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9930:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9971:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9982:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9967:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9967:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9987:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9960:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9960:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9960:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10010:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10021:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10006:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10006:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10026:30:1",
																		"type": "",
																		"value": "Strong Hands Protocol active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9999:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9999:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9999:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10066:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10078:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10089:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10074:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10074:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10066:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_268446f78394810523a9d9ab5dfb456a808e6d969331d3363f26d133e00f8a00__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9897:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9911:4:1",
														"type": ""
													}
												],
												"src": "9746:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10277:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10294:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10305:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10287:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10287:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10287:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10328:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10339:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10324:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10344:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10317:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10317:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10317:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10367:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10378:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10363:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10363:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10383:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10356:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10356:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10356:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10422:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10434:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10445:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10430:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10430:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10422:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10254:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10268:4:1",
														"type": ""
													}
												],
												"src": "10103:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10633:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10650:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10661:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10643:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10643:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10643:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10684:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10695:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10680:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10680:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10700:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10673:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10673:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10673:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10723:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10734:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10719:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10739:32:1",
																		"type": "",
																		"value": "Sells stopped by Diamond Floor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10712:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10712:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10781:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10793:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10804:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10789:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10789:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10781:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10610:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10624:4:1",
														"type": ""
													}
												],
												"src": "10459:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10992:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11009:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11020:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11002:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11002:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11002:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11043:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11054:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11039:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11059:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11032:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11032:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11032:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11082:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11093:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11078:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11078:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11098:34:1",
																		"type": "",
																		"value": "Sum of sell fees must be less th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11071:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11071:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11071:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11153:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11164:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11149:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11149:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11169:20:1",
																		"type": "",
																		"value": "an or equal to 25%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11142:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11142:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11199:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11211:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11222:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11207:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11207:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11199:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64ead83ef76ea1c4f9fc5432258ce7c66fa12ae4c25d99983db46b0d37058094__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10969:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10983:4:1",
														"type": ""
													}
												],
												"src": "10818:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11411:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11428:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11439:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11421:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11421:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11421:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11462:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11473:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11458:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11458:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11478:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11451:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11451:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11501:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11512:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11497:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11517:34:1",
																		"type": "",
																		"value": "Amount must be greater than 0.1%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11490:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11490:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11490:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11572:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11583:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11568:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11568:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11588:12:1",
																		"type": "",
																		"value": " of supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11561:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11561:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11561:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11610:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11622:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11633:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11618:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11618:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11610:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c4db68624a2e770077620719acb05295e7dcfc072b9733d6b92c297674c94f0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11388:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11402:4:1",
														"type": ""
													}
												],
												"src": "11237:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11822:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11839:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11850:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11832:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11832:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11832:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11873:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11884:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11869:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11869:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11889:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11862:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11862:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11862:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11912:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11923:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11908:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11928:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11901:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11901:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11983:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11994:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11979:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11979:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11999:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11972:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11972:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11972:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12012:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12024:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12035:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12020:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12020:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12012:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11799:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11813:4:1",
														"type": ""
													}
												],
												"src": "11648:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12224:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12241:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12252:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12234:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12234:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12275:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12286:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12271:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12271:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12291:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12264:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12264:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12264:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12314:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12325:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12310:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12310:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12330:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12303:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12303:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12303:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12374:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12386:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12397:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12382:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12382:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12374:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12201:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12215:4:1",
														"type": ""
													}
												],
												"src": "12050:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12585:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12602:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12613:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12595:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12595:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12595:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12636:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12647:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12632:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12632:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12652:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12625:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12625:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12625:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12675:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12686:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12671:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12671:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12691:34:1",
																		"type": "",
																		"value": "Transfer amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12664:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12664:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12664:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12746:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12757:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12742:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12742:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12762:11:1",
																		"type": "",
																		"value": "than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12735:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12735:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12735:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12783:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12795:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12806:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12791:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12791:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12783:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12562:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12576:4:1",
														"type": ""
													}
												],
												"src": "12411:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12995:238:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13012:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13023:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13005:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13005:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13005:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13046:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13057:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13042:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13042:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13062:2:1",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13035:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13035:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13035:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13085:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13096:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13081:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13081:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13101:34:1",
																		"type": "",
																		"value": "Amount must be less than or equa"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13074:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13074:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13074:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13156:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13167:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13152:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13152:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13172:18:1",
																		"type": "",
																		"value": "l to totalSupply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13145:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13145:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13145:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13200:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13212:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13223:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13208:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13208:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13200:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b44a94ebbca3d153cb9c59a36d3c7e6533b0baf54384f35b08da2c0561f7e004__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12972:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12986:4:1",
														"type": ""
													}
												],
												"src": "12821:412:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13412:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13429:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13440:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13422:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13422:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13422:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13463:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13474:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13459:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13479:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13452:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13452:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13452:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13502:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13513:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13498:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13498:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13518:34:1",
																		"type": "",
																		"value": "this contract cannot blacklist a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13491:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13491:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13491:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13573:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13584:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13569:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13569:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13589:10:1",
																		"type": "",
																		"value": "ddresses"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13562:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13562:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13609:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13621:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13632:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13617:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13617:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13609:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bad442360b6845337bd4003d69c5089367f1b69f213d5a6e716006a978ac85ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13389:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13403:4:1",
														"type": ""
													}
												],
												"src": "13238:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13821:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13838:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13849:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13831:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13831:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13831:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13872:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13883:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13868:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13868:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13888:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13861:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13861:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13861:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13911:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13922:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13907:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13907:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13927:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13900:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13900:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13900:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13982:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13993:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13978:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13978:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13998:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13971:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13971:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13971:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14015:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14027:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14038:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14023:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14023:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14015:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13798:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13812:4:1",
														"type": ""
													}
												],
												"src": "13647:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14227:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14244:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14255:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14237:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14237:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14237:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14289:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14274:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14294:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14267:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14267:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14317:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14328:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14313:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14333:26:1",
																		"type": "",
																		"value": "This function is diabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14306:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14306:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14306:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14369:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14381:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14392:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14377:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14377:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14369:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14204:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14218:4:1",
														"type": ""
													}
												],
												"src": "14053:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14580:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14597:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14608:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14590:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14590:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14590:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14631:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14642:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14627:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14647:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14620:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14620:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14620:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14670:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14681:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14666:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14666:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14686:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14659:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14659:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14659:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14741:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14752:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14737:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14737:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14757:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14730:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14730:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14730:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14773:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14785:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14796:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14781:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14781:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14773:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14557:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14571:4:1",
														"type": ""
													}
												],
												"src": "14406:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14985:296:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15002:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15013:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14995:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14995:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15036:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15047:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15032:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15032:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15052:2:1",
																		"type": "",
																		"value": "66"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15025:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15025:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15025:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15075:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15086:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15071:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15071:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15091:34:1",
																		"type": "",
																		"value": ".wallet balance after transfer m"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15064:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15064:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15146:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15157:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15142:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15142:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15162:34:1",
																		"type": "",
																		"value": "ust be less than max wallet amou"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15135:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15135:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15135:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15217:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15228:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15213:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15213:19:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15234:4:1",
																		"type": "",
																		"value": "nt"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15206:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15206:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15206:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15248:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15260:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15271:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15256:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15248:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc954e86b14a46e9e189db5db351f3a75abf6928f229ba2f30a156b0ea581295__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14962:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14976:4:1",
														"type": ""
													}
												],
												"src": "14811:470:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15387:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15397:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15409:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15420:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15405:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15405:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15397:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15439:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15450:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15432:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15432:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15432:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15356:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15367:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15378:4:1",
														"type": ""
													}
												],
												"src": "15286:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15739:758:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15749:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15767:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15778:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15763:19:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "15753:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15798:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15809:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15791:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15791:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15791:25:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15825:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15835:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15829:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15857:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15868:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15853:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15853:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15873:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15846:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15846:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15846:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15900:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15911:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15896:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15896:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15916:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15889:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15889:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15889:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15929:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "15940:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "15933:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15955:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15975:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15969:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15969:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15959:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "15998:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16006:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15991:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15991:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15991:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16022:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16033:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16044:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16029:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16029:19:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16022:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16057:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16075:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "16083:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16071:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16071:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "16061:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16095:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "16104:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "16099:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16166:169:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "16187:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "16202:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "16196:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16196:13:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16211:42:1",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "16192:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16192:62:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16180:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16180:75:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16180:75:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16268:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "16279:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "16284:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16275:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16275:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "16268:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16300:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "16314:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "16322:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16310:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16310:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16300:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16128:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16131:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16125:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16125:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "16139:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16141:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "16150:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16153:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16146:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16146:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "16141:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "16121:3:1",
																"statements": []
															},
															"src": "16117:218:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16344:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16352:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16344:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16375:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16386:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16371:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16371:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "16395:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16403:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16391:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16391:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16364:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16364:83:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16364:83:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16478:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16463:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16484:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16456:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16456:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15676:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15687:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15695:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15703:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15711:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15719:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15730:4:1",
														"type": ""
													}
												],
												"src": "15468:1029:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16687:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16697:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16709:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16720:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16705:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16705:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16697:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16740:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16751:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16733:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16733:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16733:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16778:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16789:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16774:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16774:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16794:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16767:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16767:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16767:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16821:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16832:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16817:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16817:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16837:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16810:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16810:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16810:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16864:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16875:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16860:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16860:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16880:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16853:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16853:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16632:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16643:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16651:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16659:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16667:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16678:4:1",
														"type": ""
													}
												],
												"src": "16502:391:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16995:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17005:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17017:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17028:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17013:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17013:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17005:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17047:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17062:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17070:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17058:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17058:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17040:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17040:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17040:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16964:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16975:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16986:4:1",
														"type": ""
													}
												],
												"src": "16898:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17135:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17162:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17164:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17164:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17164:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17151:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "17158:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17154:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17154:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17148:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17148:13:1"
															},
															"nodeType": "YulIf",
															"src": "17145:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17193:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17204:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17207:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17200:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17200:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "17193:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17118:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17121:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "17127:3:1",
														"type": ""
													}
												],
												"src": "17087:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17266:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17289:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "17291:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17291:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17291:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17286:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17279:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17279:9:1"
															},
															"nodeType": "YulIf",
															"src": "17276:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17320:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17329:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17332:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "17325:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17325:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17320:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17251:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17254:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "17260:1:1",
														"type": ""
													}
												],
												"src": "17220:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17397:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17516:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17518:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17518:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17518:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17428:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "17421:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17421:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "17414:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17414:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "17436:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17443:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17511:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "17439:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17439:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17433:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17433:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17410:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17410:105:1"
															},
															"nodeType": "YulIf",
															"src": "17407:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17547:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17562:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17565:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17558:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17558:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "17547:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17376:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17379:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "17385:7:1",
														"type": ""
													}
												],
												"src": "17345:228:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17629:211:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17639:20:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "17649:10:1",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "17643:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17668:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17683:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "17686:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17679:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17679:10:1"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "17672:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17698:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17713:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "17716:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17709:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17709:10:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "17702:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17779:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17781:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17781:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17781:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x_1",
																						"nodeType": "YulIdentifier",
																						"src": "17749:3:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "17742:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17742:11:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "17735:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17735:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "17759:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "17768:2:1"
																					},
																					{
																						"name": "x_1",
																						"nodeType": "YulIdentifier",
																						"src": "17772:3:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "17764:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17764:12:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17756:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17756:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17731:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17731:47:1"
															},
															"nodeType": "YulIf",
															"src": "17728:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17810:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "17825:3:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "17830:3:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17821:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17821:13:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "17810:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17608:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17611:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "17617:7:1",
														"type": ""
													}
												],
												"src": "17578:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17894:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17916:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17918:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17918:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17918:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17910:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17913:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17907:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17907:8:1"
															},
															"nodeType": "YulIf",
															"src": "17904:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17947:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17959:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17962:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "17955:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17955:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "17947:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17876:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17879:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "17885:4:1",
														"type": ""
													}
												],
												"src": "17845:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18013:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18036:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "18038:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18038:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18038:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18033:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18026:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18026:9:1"
															},
															"nodeType": "YulIf",
															"src": "18023:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18067:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18076:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18079:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "18072:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18072:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "18067:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17998:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18001:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "18007:1:1",
														"type": ""
													}
												],
												"src": "17975:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18135:150:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18226:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18228:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18228:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18228:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18151:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18158:66:1",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18148:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18148:77:1"
															},
															"nodeType": "YulIf",
															"src": "18145:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18257:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "18268:3:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18273:5:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "18264:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18264:15:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18257:3:1"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18117:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "18127:3:1",
														"type": ""
													}
												],
												"src": "18092:193:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18322:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18339:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18342:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18332:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18332:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18332:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18436:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18439:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18429:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18429:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18429:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18460:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18463:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18453:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18453:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18453:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "18290:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18511:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18528:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18531:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18521:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18521:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18625:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18628:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18618:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18618:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18618:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18649:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18652:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18642:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18642:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18642:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "18479:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18713:109:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18800:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18809:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18812:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18802:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18802:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18802:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18736:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18747:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18754:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "18743:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18743:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18733:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18733:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18726:73:1"
															},
															"nodeType": "YulIf",
															"src": "18723:2:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18702:5:1",
														"type": ""
													}
												],
												"src": "18668:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18869:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18923:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18932:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18935:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18925:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18925:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18925:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18892:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "18913:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "18906:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18906:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18899:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18899:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18889:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18889:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18882:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18882:40:1"
															},
															"nodeType": "YulIf",
															"src": "18879:2:1"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18858:5:1",
														"type": ""
													}
												],
												"src": "18827:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18994:77:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19049:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19058:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19061:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19051:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19051:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19051:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19017:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19028:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19035:10:1",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "19024:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19024:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19014:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19014:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19007:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19007:41:1"
															},
															"nodeType": "YulIf",
															"src": "19004:2:1"
														}
													]
												},
												"name": "validator_revert_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18983:5:1",
														"type": ""
													}
												],
												"src": "18950:121:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint112_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_boolt_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_uint32(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_uint112_fromMemory(headStart)\n        value1 := abi_decode_uint112_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        validator_revert_uint32(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value3, value3) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_payable_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bool_t_uint16_t_uint256_t_bool_t_uint256__to_t_bool_t_uint16_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, 0xffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_bool_t_uint32__to_t_bool_t_uint32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_046a8fc234c98369d46f45f5bed63e994dab3910bdaebfe1ca0cd49f568245a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"this contract cannot be paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1755f62c229a290ad9b7faac2959e1b3eb8f692fba0f163aae0b9540e4f5fdce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Sum of buy fees must be less tha\")\n        mstore(add(headStart, 96), \"n or equal to 25%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1e00c61f0a7b721724fe214bc791e509089379e5d75afe66b9a59ad6bee5002b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Trading is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_268446f78394810523a9d9ab5dfb456a808e6d969331d3363f26d133e00f8a00__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Strong Hands Protocol active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Sells stopped by Diamond Floor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_64ead83ef76ea1c4f9fc5432258ce7c66fa12ae4c25d99983db46b0d37058094__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Sum of sell fees must be less th\")\n        mstore(add(headStart, 96), \"an or equal to 25%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6c4db68624a2e770077620719acb05295e7dcfc072b9733d6b92c297674c94f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Amount must be greater than 0.1%\")\n        mstore(add(headStart, 96), \" of supply\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeMath: multiplication overflo\")\n        mstore(add(headStart, 96), \"w\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer amount must be greater \")\n        mstore(add(headStart, 96), \"than zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b44a94ebbca3d153cb9c59a36d3c7e6533b0baf54384f35b08da2c0561f7e004__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Amount must be less than or equa\")\n        mstore(add(headStart, 96), \"l to totalSupply\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bad442360b6845337bd4003d69c5089367f1b69f213d5a6e716006a978ac85ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"this contract cannot blacklist a\")\n        mstore(add(headStart, 96), \"ddresses\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"This function is diabled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dc954e86b14a46e9e189db5db351f3a75abf6928f229ba2f30a156b0ea581295__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \".wallet balance after transfer m\")\n        mstore(add(headStart, 96), \"ust be less than max wallet amou\")\n        mstore(add(headStart, 128), \"nt\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), value1)\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value2, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_mul_t_uint32(x, y) -> product\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if and(iszero(iszero(x_1)), gt(y_1, div(_1, x_1))) { panic_error_0x11() }\n        product := mul(x_1, y_1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function negate_t_int256(value) -> ret\n    {\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(ret, value)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function validator_revert_uint32(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061037a5760003560e01c806380670f3c116101d1578063c95457ff11610102578063dd62ed3e116100a0578063f2fde38b1161006f578063f2fde38b14610ab0578063f480fec214610ad0578063ffb54a9914610af0578063ffecf51614610b0a57600080fd5b8063dd62ed3e14610a0a578063e315a6da14610a50578063e4bf1bed14610a70578063ea2f0b3714610a9057600080fd5b8063d1633649116100dc578063d16336491461099f578063d55cb78a146109bf578063db0045ec146109d4578063dc44b6a0146109f457600080fd5b8063c95457ff14610904578063cab0347114610969578063cdb3858f1461097f57600080fd5b80639d82190f1161016f578063c3c8cd8011610149578063c3c8cd80146108ad578063c469b6dd146108c2578063c5d24189146108d8578063c8607952146108ee57600080fd5b80639d82190f1461082d578063a850673d1461086d578063a9059cbb1461088d57600080fd5b80638e360253116101ab5780638e360253146107a85780639491f94d146107bd57806395d89b41146107d257806399a7b9bc1461081857600080fd5b806380670f3c1461075f57806388790a68146107745780638da5cb5b1461078a57600080fd5b806339a53c4e116102ab5780636c0a24eb11610249578063715018a611610223578063715018a6146106d1578063729cb3f2146106e657806372b2aecc14610706578063787a08a61461071c57600080fd5b80636c0a24eb146106705780636fc3eaec1461068657806370a082311461069b57600080fd5b8063437823ec11610285578063437823ec146105e357806349bd5a5e146106035780635fecd9261461063b5780636aabff3f1461065b57600080fd5b806339a53c4e146105745780633bbac579146105965780633e0f966d146105ce57600080fd5b8063248dd2321161031857806329409395116102f257806329409395146104f7578063301ad55814610517578063313ce56714610538578063323be1c51461055457600080fd5b8063248dd232146104ab57806327a14fc2146104c15780632843631d146104e157600080fd5b806314eb76ac1161035457806314eb76ac1461042e57806318160ddd146104505780632369bf831461046b57806323b872dd1461048b57600080fd5b806301a6c43b1461038657806306fdde03146103af578063095ea7b3146103fe57600080fd5b3661038157005b600080fd5b34801561039257600080fd5b5061039c60085481565b6040519081526020015b60405180910390f35b3480156103bb57600080fd5b5060408051808201909152600981527f4761696e5a696c6c61000000000000000000000000000000000000000000000060208201525b6040516103a69190613807565b34801561040a57600080fd5b5061041e6104193660046136bf565b610b2a565b60405190151581526020016103a6565b34801561043a57600080fd5b5061044e61044936600461360f565b610b41565b005b34801561045c57600080fd5b50670de0b6b3a764000061039c565b34801561047757600080fd5b5061044e61048636600461360f565b610bda565b34801561049757600080fd5b5061041e6104a636600461367f565b610c6e565b3480156104b757600080fd5b5061039c60135481565b3480156104cd57600080fd5b5061044e6104dc366004613779565b610cd7565b3480156104ed57600080fd5b5061039c600b5481565b34801561050357600080fd5b5061044e61051236600461360f565b610e3d565b34801561052357600080fd5b5060285461041e906301000000900460ff1681565b34801561054457600080fd5b50604051600981526020016103a6565b34801561056057600080fd5b5060285461041e9062010000900460ff1681565b34801561058057600080fd5b5060285461041e90640100000000900460ff1681565b3480156105a257600080fd5b5061041e6105b136600461360f565b6001600160a01b0316600090815260208052604090205460ff1690565b3480156105da57600080fd5b5061044e610fea565b3480156105ef57600080fd5b5061044e6105fe36600461360f565b6110a8565b34801561060f57600080fd5b50602654610623906001600160a01b031681565b6040516001600160a01b0390911681526020016103a6565b34801561064757600080fd5b5061044e61065636600461360f565b611126565b34801561066757600080fd5b5061044e6111a0565b34801561067c57600080fd5b5061039c60075481565b34801561069257600080fd5b5061044e611224565b3480156106a757600080fd5b5061039c6106b636600461360f565b6001600160a01b031660009081526002602052604090205490565b3480156106dd57600080fd5b5061044e6112c3565b3480156106f257600080fd5b5061044e610701366004613706565b61137f565b34801561071257600080fd5b5061039c60195481565b34801561072857600080fd5b50601a546107439060ff811690610100900463ffffffff1682565b60408051921515835263ffffffff9091166020830152016103a6565b34801561076b57600080fd5b5061039c611431565b34801561078057600080fd5b5061039c60115481565b34801561079657600080fd5b506000546001600160a01b0316610623565b3480156107b457600080fd5b5061044e6114a5565b3480156107c957600080fd5b5061039c61150e565b3480156107de57600080fd5b5060408051808201909152600981527f4741494e5a494c4c41000000000000000000000000000000000000000000000060208201526103f1565b34801561082457600080fd5b5061044e6116dc565b34801561083957600080fd5b5061084d61084836600461360f565b611760565b6040805194855260208501939093529183015260608201526080016103a6565b34801561087957600080fd5b5061044e610888366004613779565b61180f565b34801561089957600080fd5b5061041e6108a83660046136bf565b61186e565b3480156108b957600080fd5b5061044e61187b565b3480156108ce57600080fd5b5061039c600f5481565b3480156108e457600080fd5b5061039c600d5481565b3480156108fa57600080fd5b5061039c60155481565b34801561091057600080fd5b50601c54601d54601e54601f5461093a9360ff8082169461010090920461ffff1693919291169085565b60408051951515865261ffff90941660208601529284019190915215156060830152608082015260a0016103a6565b34801561097557600080fd5b5061039c60175481565b34801561098b57600080fd5b5061044e61099a36600461360f565b6118f4565b3480156109ab57600080fd5b5061044e6109ba366004613779565b611988565b3480156109cb57600080fd5b5061044e6119f8565b3480156109e057600080fd5b5061044e6109ef36600461360f565b611a7c565b348015610a0057600080fd5b5061039c60095481565b348015610a1657600080fd5b5061039c610a25366004613647565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b348015610a5c57600080fd5b5061044e610a6b366004613779565b611b10565b348015610a7c57600080fd5b5061044e610a8b3660046137d6565b611b6f565b348015610a9c57600080fd5b5061044e610aab36600461360f565b611d2c565b348015610abc57600080fd5b5061044e610acb36600461360f565b611da7565b348015610adc57600080fd5b5061044e610aeb3660046137d6565b611e86565b348015610afc57600080fd5b5060285461041e9060ff1681565b348015610b1657600080fd5b5061044e610b2536600461360f565b612032565b6000610b3733848461212e565b5060015b92915050565b6000546001600160a01b03163314610ba05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b602280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610c345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b602180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000610c7b848484612286565b610ccd8433610cc885604051806060016040528060288152602001613a72602891396001600160a01b038a16600090815260036020908152604080832033845290915290205491906129bb565b61212e565b5060019392505050565b6000546001600160a01b03163314610d315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b610d45670de0b6b3a76400006103e86129f5565b811015610dba5760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d7573742062652067726561746572207468616e20302e312560448201527f206f6620737570706c79000000000000000000000000000000000000000000006064820152608401610b97565b670de0b6b3a7640000811115610e385760405162461bcd60e51b815260206004820152603060248201527f416d6f756e74206d757374206265206c657373207468616e206f72206571756160448201527f6c20746f20746f74616c537570706c79000000000000000000000000000000006064820152608401610b97565b600755565b6000546001600160a01b03163314610e975760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b158015610ef257600080fd5b505afa158015610f06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2a9190613791565b9050816001600160a01b031663a9059cbb610f4d6000546001600160a01b031690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b158015610fad57600080fd5b505af1158015610fc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe591906136ea565b505050565b6000546001600160a01b031633146110445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b60285462010000900460ff1661109c5760405162461bcd60e51b815260206004820152601e60248201527f7468697320636f6e74726163742063616e6e6f742062652070617573656400006044820152606401610b97565b6028805460ff19169055565b6000546001600160a01b031633146111025760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6000546001600160a01b031633146111805760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6001600160a01b031660009081526020805260409020805460ff19169055565b6000546001600160a01b031633146111fa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff169055565b6000546001600160a01b0316331461127e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b4780156112c057600080546040516001600160a01b039091169183156108fc02918491818181858888f193505050501580156112be573d6000803e3d6000fd5b505b50565b6000546001600160a01b0316331461131d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6000546001600160a01b031633146113d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b601a805460ff19168315151790556113f281603c613951565b601a805463ffffffff92909216610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ff9092169190911790555050565b601d546000906114415750600090565b600061144b61150e565b601d54909150811161148857601d5461147a906114746103e861146e8386612a3e565b90612a80565b906129f5565b611483906139a8565b61149f565b601d5461149f906114746103e861146e8584612a3e565b91505090565b6000546001600160a01b031633146114ff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6028805460ff19166001179055565b6000806000602660009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561156157600080fd5b505afa158015611575573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115999190613733565b5091509150816dffffffffffffffffffffffffffff16600014806115cb57506dffffffffffffffffffffffffffff8116155b156115d95760009250505090565b602654604080517f0dfe1681000000000000000000000000000000000000000000000000000000008152905130926001600160a01b031691630dfe1681916004808301926020929190829003018186803b15801561163657600080fd5b505afa15801561164a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166e919061362b565b6001600160a01b0316146116ab576116a66dffffffffffffffffffffffffffff80831690611474908516670de0b6b3a7640000612a80565b6116d5565b6116d56dffffffffffffffffffffffffffff80841690611474908416670de0b6b3a7640000612a80565b9250505090565b6000546001600160a01b031633146117365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff169055565b6001600160a01b0381166000908152601b60205260408120548190819081908190421061178e5760006117b1565b6001600160a01b0386166000908152601b60205260409020546117b19042612a3e565b90506117c081620151806129f5565b94506117cf6201518082613994565b90506117dd81610e106129f5565b93506117eb610e1082613994565b90506117f881603c6129f5565b9250611805603c82613994565b9150509193509193565b6000546001600160a01b031633146118695760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b601955565b6000610b37338484612286565b6000546001600160a01b031633146118d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b3060009081526002602052604090205480156112c0576112c081612b1b565b6000546001600160a01b0316331461194e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b602480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546001600160a01b031633146119e25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b426005556006556028805460ff19166001179055565b6000546001600160a01b03163314611a525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff169055565b6000546001600160a01b03163314611ad65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b602380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611b6a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b600855565b6000546001600160a01b03163314611bc95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6000611be182611bdb85818989612d58565b90612d58565b905060fa811115611c5a5760405162461bcd60e51b815260206004820152603160248201527f53756d206f66206275792066656573206d757374206265206c6573732074686160448201527f6e206f7220657175616c20746f203235250000000000000000000000000000006064820152608401610b97565b602854640100000000900460ff16611cb45760405162461bcd60e51b815260206004820152601860248201527f546869732066756e6374696f6e20697320646961626c656400000000000000006044820152606401610b97565b600d8590556009849055600f839055600b829055600e859055600a8490556010839055600c8290556040805186815260208101869052908101849052606081018390527f892b2caa2d791bf7b8d9a49c4db7a4513ff1ae2e0e068ed217f9d5ab4c1a28f0906080015b60405180910390a15050505050565b6000546001600160a01b03163314611d865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6001600160a01b03166000908152600460205260409020805460ff19169055565b6000546001600160a01b03163314611e015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6001600160a01b038116611e7d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610b97565b6112c081612db7565b6000546001600160a01b03163314611ee05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6000611ef282611bdb85818989612d58565b905060fa811115611f6b5760405162461bcd60e51b815260206004820152603260248201527f53756d206f662073656c6c2066656573206d757374206265206c65737320746860448201527f616e206f7220657175616c20746f2032352500000000000000000000000000006064820152608401610b97565b602854640100000000900460ff16611fc55760405162461bcd60e51b815260206004820152601860248201527f546869732066756e6374696f6e20697320646961626c656400000000000000006044820152606401610b97565b601585905560118490556017839055601382905560168590556012849055601883905560148290556040805186815260208101869052908101849052606081018390527f439932620c72dddea29980c098bca1a482729646d1216b226d723c6d278a30d190608001611d1d565b6000546001600160a01b0316331461208c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b97565b6028546301000000900460ff1661210b5760405162461bcd60e51b815260206004820152602860248201527f7468697320636f6e74726163742063616e6e6f7420626c61636b6c697374206160448201527f64647265737365730000000000000000000000000000000000000000000000006064820152608401610b97565b6001600160a01b031660009081526020805260409020805460ff19166001179055565b6001600160a01b0383166121a95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610b97565b6001600160a01b0382166122255760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610b97565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166123025760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610b97565b6001600160a01b03821661237e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610b97565b600081116123f45760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d75737420626520677265617465722060448201527f7468616e207a65726f00000000000000000000000000000000000000000000006064820152608401610b97565b60016124086000546001600160a01b031690565b6001600160a01b0316846001600160a01b03161415801561243757506000546001600160a01b03848116911614155b801561244c57506001600160a01b0384163014155b801561246157506001600160a01b0383163014155b156129615760285460ff166124b85760405162461bcd60e51b815260206004820152601560248201527f54726164696e67206973206e6f742061637469766500000000000000000000006044820152606401610b97565b6026546001600160a01b0385811691161480156124e357506025546001600160a01b03848116911614155b15612600576006546005546124f791612d58565b4211612520576001600160a01b03831660009081526020805260409020805460ff191660011790555b6001600160a01b03831660009081526004602052604090205460ff166126005760075461256683611bdb866001600160a01b031660009081526002602052604090205490565b11156126005760405162461bcd60e51b815260206004820152604260248201527f2e77616c6c65742062616c616e6365206166746572207472616e73666572206d60448201527f757374206265206c657373207468616e206d61782077616c6c657420616d6f7560648201527f6e74000000000000000000000000000000000000000000000000000000000000608482015260a401610b97565b602854610100900460ff1615801561262657506026546001600160a01b03858116911614155b801561263f57506026546001600160a01b038481169116145b15612850576001600160a01b038416600090815260208052604090205460ff1615801561268457506001600160a01b038316600090815260208052604090205460ff16155b61268d57600080fd5b601a5460ff1615612732576001600160a01b0384166000908152601b60205260409020544210156127005760405162461bcd60e51b815260206004820152601c60248201527f5374726f6e672048616e64732050726f746f636f6c20616374697665000000006044820152606401610b97565b601a5461271890610100900463ffffffff16426138e8565b6001600160a01b0385166000908152601b60205260409020555b601c5460ff161561279857601e5460ff16156127905760405162461bcd60e51b815260206004820152601e60248201527f53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f7200006044820152606401610b97565b612798612e1f565b30600090815260026020526040902054600854811061284e57801561283c5760006127dc601154611bdb601354611bdb601754601554612d5890919063ffffffff16565b111561283c57600061281761280a601154611bdb601354611bdb601754601554612d5890919063ffffffff16565b6011546114749085612a80565b9050600081831061282f5761282c8383612a3e565b90505b6128398282612ece565b50505b47801561284c5761284c47612f5e565b505b505b6026546001600160a01b0385811691161480159061287c57506026546001600160a01b03848116911614155b15612961576001600160a01b03831660009081526004602052604090205460ff16612961576007546128c783611bdb866001600160a01b031660009081526002602052604090205490565b11156129615760405162461bcd60e51b815260206004820152604260248201527f2e77616c6c65742062616c616e6365206166746572207472616e73666572206d60448201527f757374206265206c657373207468616e206d61782077616c6c657420616d6f7560648201527f6e74000000000000000000000000000000000000000000000000000000000000608482015260a401610b97565b6001600160a01b03841660009081526004602052604090205460ff16806129a057506001600160a01b03831660009081526004602052604090205460ff165b156129a9575060005b6129b58484848461309e565b50505050565b600081848411156129df5760405162461bcd60e51b8152600401610b979190613807565b5060006129ec848661397d565b95945050505050565b6000612a3783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061313c565b9392505050565b6000612a3783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506129bb565b600082612a8f57506000610b3b565b6000612a9b8385613914565b905082612aa88583613900565b14612a375760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152608401610b97565b602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790556040805160028082526060820183526000926020830190803683370190505090503081600081518110612ba3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6001600160a01b03928316602091820292909201810191909152602554604080517fad5c46480000000000000000000000000000000000000000000000000000000081529051919093169263ad5c4648926004808301939192829003018186803b158015612c1057600080fd5b505afa158015612c24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c48919061362b565b81600181518110612c82577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6001600160a01b039283166020918202929092010152602554612ca8913091168461212e565b6025546040517f791ac9470000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063791ac94790612cfa908590600090869030904290600401613878565b600060405180830381600087803b158015612d1457600080fd5b505af1158015612d28573d6000803e3d6000fd5b5050602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550505050565b600080612d6583856138e8565b905083811015612a375760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610b97565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000612e2961150e565b905080612e335750565b601d54811115612e4c57601d55601e805460ff19169055565b601c54601d54600091612e7c916103e8916114749161010090910461ffff1690612e769084612a80565b90612a3e565b905080821015612e9a57601e805460ff19166001179055601d54601f555b601e5460ff168015612eb95750601f54612eb5906002612a80565b8210155b156112be5750601e805460ff19169055601d55565b602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790556000612f078360026129f5565b90506000612f158483612a3e565b905047612f2a612f258585612d58565b612b1b565b6000612f364783612a3e565b90508215612d2857612d2883612f59612f4f8888612d58565b6114748589612a80565b61316a565b6000612f7d601754611bdb601354601554612d5890919063ffffffff16565b905080156112be576000612fa08261147460155486612a8090919063ffffffff16565b90506000612fbd8361147460175487612a8090919063ffffffff16565b90506000612fcf82612e768786612a3e565b90508215613013576021546040516001600160a01b039091169084156108fc029085906000818181858888f19350505050158015613011573d6000803e3d6000fd5b505b8115613055576022546040516001600160a01b039091169083156108fc029084906000818181858888f19350505050158015613053573d6000803e3d6000fd5b505b8015613097576023546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015613095573d6000803e3d6000fd5b505b5050505050565b806130fc576130fc600d8054600e5560098054600a55600f8054601055600b8054600c556000938490559183905582905581905560158054601655601180546012556017805460185560138054601455928490559083905582905555565b613107848484613240565b6129b5600e54600d55600a54600955601054600f55600c54600b55601654601555601254601155601854601755601454601355565b6000818361315d5760405162461bcd60e51b8152600401610b979190613807565b5060006129ec8486613900565b6025546131829030906001600160a01b03168461212e565b602554602480546040517ff305d71900000000000000000000000000000000000000000000000000000000815230600482015291820185905260006044830181905260648301526001600160a01b0390811660848301524260a48301529091169063f305d71990839060c4016060604051808303818588803b15801561320757600080fd5b505af115801561321b573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061309791906137a9565b6132726040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6026546001600160a01b03858116911614801561329d57506025546001600160a01b03848116911614155b15613311576132bd6103e8611474600d5485612a8090919063ffffffff16565b60208201526009546132d8906103e890611474908590612a80565b8152600f546132f0906103e890611474908590612a80565b6040820152600b5461330b906103e890611474908590612a80565b60608201525b6026546001600160a01b0385811691161480159061333c57506026546001600160a01b038481169116145b156133b05761335c6103e861147460155485612a8090919063ffffffff16565b6020820152601154613377906103e890611474908590612a80565b815260175461338f906103e890611474908590612a80565b60408201526013546133aa906103e890611474908590612a80565b60608201525b6026546001600160a01b038581169116148015906133dc57506026546001600160a01b03848116911614155b1561349057613407606461147460195461146e6103e861147460155489612a8090919063ffffffff16565b816020018181525050613436606461147460195461146e6103e861147460115489612a8090919063ffffffff16565b815260195460175461345b91606491611474919061146e906103e89084908990612a80565b81604001818152505061348a606461147460195461146e6103e861147460135489612a8090919063ffffffff16565b60608201525b6134bf8160600151612e768360400151612e768560000151612e76876020015189612a3e90919063ffffffff16565b60808201526001600160a01b0384166000908152600260205260409020546134e79083612a3e565b6001600160a01b038086166000908152600260205260408082209390935560808401519186168152919091205461351d91612d58565b60026000856001600160a01b03166001600160a01b031681526020019081526020016000208190555061358a6135748260600151611bdb8460400151611bdb86600001518760200151612d5890919063ffffffff16565b3060009081526002602052604090205490612d58565b3060009081526002602090815260409182902092909255608083015190519081526001600160a01b0385811692908716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350505050565b80516dffffffffffffffffffffffffffff8116811461360a57600080fd5b919050565b600060208284031215613620578081fd5b8135612a3781613a3c565b60006020828403121561363c578081fd5b8151612a3781613a3c565b60008060408385031215613659578081fd5b823561366481613a3c565b9150602083013561367481613a3c565b809150509250929050565b600080600060608486031215613693578081fd5b833561369e81613a3c565b925060208401356136ae81613a3c565b929592945050506040919091013590565b600080604083850312156136d1578182fd5b82356136dc81613a3c565b946020939093013593505050565b6000602082840312156136fb578081fd5b8151612a3781613a51565b60008060408385031215613718578182fd5b823561372381613a51565b9150602083013561367481613a5f565b600080600060608486031215613747578283fd5b613750846135ec565b925061375e602085016135ec565b9150604084015161376e81613a5f565b809150509250925092565b60006020828403121561378a578081fd5b5035919050565b6000602082840312156137a2578081fd5b5051919050565b6000806000606084860312156137bd578283fd5b8351925060208401519150604084015190509250925092565b600080600080608085870312156137eb578081fd5b5050823594602084013594506040840135936060013592509050565b6000602080835283518082850152825b8181101561383357858101830151858201604001528201613817565b818111156138445783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600060a082018783526020878185015260a0604085015281875180845260c0860191508289019350845b818110156138c75784516001600160a01b0316835293830193918301916001016138a2565b50506001600160a01b03969096166060850152505050608001529392505050565b600082198211156138fb576138fb6139de565b500190565b60008261390f5761390f613a0d565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561394c5761394c6139de565b500290565b600063ffffffff80831681851681830481118215151615613974576139746139de565b02949350505050565b60008282101561398f5761398f6139de565b500390565b6000826139a3576139a3613a0d565b500690565b60007f80000000000000000000000000000000000000000000000000000000000000008214156139da576139da6139de565b0390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6001600160a01b03811681146112c057600080fd5b80151581146112c057600080fd5b63ffffffff811681146112c057600080fdfe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220894b57c4ff6e6aa8c5d68bd6d06793f5b17eec86097caabdd2b4bde29c00c7bf64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80670F3C GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xC95457FF GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAB0 JUMPI DUP1 PUSH4 0xF480FEC2 EQ PUSH2 0xAD0 JUMPI DUP1 PUSH4 0xFFB54A99 EQ PUSH2 0xAF0 JUMPI DUP1 PUSH4 0xFFECF516 EQ PUSH2 0xB0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA0A JUMPI DUP1 PUSH4 0xE315A6DA EQ PUSH2 0xA50 JUMPI DUP1 PUSH4 0xE4BF1BED EQ PUSH2 0xA70 JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0xA90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD1633649 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xD1633649 EQ PUSH2 0x99F JUMPI DUP1 PUSH4 0xD55CB78A EQ PUSH2 0x9BF JUMPI DUP1 PUSH4 0xDB0045EC EQ PUSH2 0x9D4 JUMPI DUP1 PUSH4 0xDC44B6A0 EQ PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC95457FF EQ PUSH2 0x904 JUMPI DUP1 PUSH4 0xCAB03471 EQ PUSH2 0x969 JUMPI DUP1 PUSH4 0xCDB3858F EQ PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D82190F GT PUSH2 0x16F JUMPI DUP1 PUSH4 0xC3C8CD80 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xC3C8CD80 EQ PUSH2 0x8AD JUMPI DUP1 PUSH4 0xC469B6DD EQ PUSH2 0x8C2 JUMPI DUP1 PUSH4 0xC5D24189 EQ PUSH2 0x8D8 JUMPI DUP1 PUSH4 0xC8607952 EQ PUSH2 0x8EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D82190F EQ PUSH2 0x82D JUMPI DUP1 PUSH4 0xA850673D EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x88D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8E360253 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x8E360253 EQ PUSH2 0x7A8 JUMPI DUP1 PUSH4 0x9491F94D EQ PUSH2 0x7BD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x7D2 JUMPI DUP1 PUSH4 0x99A7B9BC EQ PUSH2 0x818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80670F3C EQ PUSH2 0x75F JUMPI DUP1 PUSH4 0x88790A68 EQ PUSH2 0x774 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39A53C4E GT PUSH2 0x2AB JUMPI DUP1 PUSH4 0x6C0A24EB GT PUSH2 0x249 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x223 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6D1 JUMPI DUP1 PUSH4 0x729CB3F2 EQ PUSH2 0x6E6 JUMPI DUP1 PUSH4 0x72B2AECC EQ PUSH2 0x706 JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C0A24EB EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0x6FC3EAEC EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x437823EC GT PUSH2 0x285 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x603 JUMPI DUP1 PUSH4 0x5FECD926 EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0x6AABFF3F EQ PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39A53C4E EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0x3BBAC579 EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0x3E0F966D EQ PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248DD232 GT PUSH2 0x318 JUMPI DUP1 PUSH4 0x29409395 GT PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x29409395 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0x301AD558 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x323BE1C5 EQ PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248DD232 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x27A14FC2 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x2843631D EQ PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14EB76AC GT PUSH2 0x354 JUMPI DUP1 PUSH4 0x14EB76AC EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x2369BF83 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A6C43B EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x381 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH32 0x4761696E5A696C6C610000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x3807 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41E PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x36BF JUMP JUMPDEST PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0xB41 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x39C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x486 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41E PUSH2 0x4A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x367F JUMP JUMPDEST PUSH2 0xC6E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x4DC CALLDATASIZE PUSH1 0x4 PUSH2 0x3779 JUMP JUMPDEST PUSH2 0xCD7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x512 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x41E SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x41E SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x41E SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41E PUSH2 0x5B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0xFEA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x5FE CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x10A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x26 SLOAD PUSH2 0x623 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x656 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x1126 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x11A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x1224 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x6B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x12C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x701 CALLDATASIZE PUSH1 0x4 PUSH2 0x3706 JUMP JUMPDEST PUSH2 0x137F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1A SLOAD PUSH2 0x743 SWAP1 PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x1431 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x623 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x14A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x150E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH32 0x4741494E5A494C4C410000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x16DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84D PUSH2 0x848 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x1760 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x888 CALLDATASIZE PUSH1 0x4 PUSH2 0x3779 JUMP JUMPDEST PUSH2 0x180F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41E PUSH2 0x8A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x36BF JUMP JUMPDEST PUSH2 0x186E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x187B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x910 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1C SLOAD PUSH1 0x1D SLOAD PUSH1 0x1E SLOAD PUSH1 0x1F SLOAD PUSH2 0x93A SWAP4 PUSH1 0xFF DUP1 DUP3 AND SWAP5 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP4 SWAP2 SWAP3 SWAP2 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH2 0xFFFF SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x975 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x99A CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x18F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x9BA CALLDATASIZE PUSH1 0x4 PUSH2 0x3779 JUMP JUMPDEST PUSH2 0x1988 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x19F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x9EF CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x1A7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0xA25 CALLDATASIZE PUSH1 0x4 PUSH2 0x3647 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0xA6B CALLDATASIZE PUSH1 0x4 PUSH2 0x3779 JUMP JUMPDEST PUSH2 0x1B10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0xA8B CALLDATASIZE PUSH1 0x4 PUSH2 0x37D6 JUMP JUMPDEST PUSH2 0x1B6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0xAAB CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x1D2C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0xACB CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x1DA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0xAEB CALLDATASIZE PUSH1 0x4 PUSH2 0x37D6 JUMP JUMPDEST PUSH2 0x1E86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x41E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0xB25 CALLDATASIZE PUSH1 0x4 PUSH2 0x360F JUMP JUMPDEST PUSH2 0x2032 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB37 CALLER DUP5 DUP5 PUSH2 0x212E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x22 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x21 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7B DUP5 DUP5 DUP5 PUSH2 0x2286 JUMP JUMPDEST PUSH2 0xCCD DUP5 CALLER PUSH2 0xCC8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A72 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x29BB JUMP JUMPDEST PUSH2 0x212E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH2 0xD45 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3E8 PUSH2 0x29F5 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xDBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E20302E3125 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206F6620737570706C7900000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 GT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E206F722065717561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C20746F20746F74616C537570706C7900000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF2A SWAP2 SWAP1 PUSH2 0x3791 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xF4D PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFE5 SWAP2 SWAP1 PUSH2 0x36EA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1044 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x109C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320636F6E74726163742063616E6E6F74206265207061757365640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1102 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1180 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFF AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x127E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x12C0 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x12BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x131D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH2 0x13F2 DUP2 PUSH1 0x3C PUSH2 0x3951 JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1441 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144B PUSH2 0x150E JUMP JUMPDEST PUSH1 0x1D SLOAD SWAP1 SWAP2 POP DUP2 GT PUSH2 0x1488 JUMPI PUSH1 0x1D SLOAD PUSH2 0x147A SWAP1 PUSH2 0x1474 PUSH2 0x3E8 PUSH2 0x146E DUP4 DUP7 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 PUSH2 0x2A80 JUMP JUMPDEST SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH2 0x1483 SWAP1 PUSH2 0x39A8 JUMP JUMPDEST PUSH2 0x149F JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH2 0x149F SWAP1 PUSH2 0x1474 PUSH2 0x3E8 PUSH2 0x146E DUP6 DUP5 PUSH2 0x2A3E JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x26 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1575 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1599 SWAP2 SWAP1 PUSH2 0x3733 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 EQ DUP1 PUSH2 0x15CB JUMPI POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x15D9 JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xDFE168100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD ADDRESS SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x164A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x166E SWAP2 SWAP1 PUSH2 0x362B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x16AB JUMPI PUSH2 0x16A6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP1 PUSH2 0x1474 SWAP1 DUP6 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x2A80 JUMP JUMPDEST PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x16D5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP1 PUSH2 0x1474 SWAP1 DUP5 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x2A80 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFF AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 TIMESTAMP LT PUSH2 0x178E JUMPI PUSH1 0x0 PUSH2 0x17B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x17B1 SWAP1 TIMESTAMP PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP PUSH2 0x17C0 DUP2 PUSH3 0x15180 PUSH2 0x29F5 JUMP JUMPDEST SWAP5 POP PUSH2 0x17CF PUSH3 0x15180 DUP3 PUSH2 0x3994 JUMP JUMPDEST SWAP1 POP PUSH2 0x17DD DUP2 PUSH2 0xE10 PUSH2 0x29F5 JUMP JUMPDEST SWAP4 POP PUSH2 0x17EB PUSH2 0xE10 DUP3 PUSH2 0x3994 JUMP JUMPDEST SWAP1 POP PUSH2 0x17F8 DUP2 PUSH1 0x3C PUSH2 0x29F5 JUMP JUMPDEST SWAP3 POP PUSH2 0x1805 PUSH1 0x3C DUP3 PUSH2 0x3994 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1869 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB37 CALLER DUP5 DUP5 PUSH2 0x2286 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x12C0 JUMPI PUSH2 0x12C0 DUP2 PUSH2 0x2B1B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x194E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x24 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x19E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SSTORE PUSH1 0x6 SSTORE PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFF AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1AD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x23 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE1 DUP3 PUSH2 0x1BDB DUP6 DUP2 DUP10 DUP10 PUSH2 0x2D58 JUMP JUMPDEST SWAP1 PUSH2 0x2D58 JUMP JUMPDEST SWAP1 POP PUSH1 0xFA DUP2 GT ISZERO PUSH2 0x1C5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D206F66206275792066656573206D757374206265206C65737320746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206F7220657175616C20746F20323525000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1CB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E20697320646961626C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0xD DUP6 SWAP1 SSTORE PUSH1 0x9 DUP5 SWAP1 SSTORE PUSH1 0xF DUP4 SWAP1 SSTORE PUSH1 0xB DUP3 SWAP1 SSTORE PUSH1 0xE DUP6 SWAP1 SSTORE PUSH1 0xA DUP5 SWAP1 SSTORE PUSH1 0x10 DUP4 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x892B2CAA2D791BF7B8D9A49C4DB7A4513FF1AE2E0E068ED217F9D5AB4C1A28F0 SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1E7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH2 0x12C0 DUP2 PUSH2 0x2DB7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF2 DUP3 PUSH2 0x1BDB DUP6 DUP2 DUP10 DUP10 PUSH2 0x2D58 JUMP JUMPDEST SWAP1 POP PUSH1 0xFA DUP2 GT ISZERO PUSH2 0x1F6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D206F662073656C6C2066656573206D757374206265206C657373207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E206F7220657175616C20746F203235250000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1FC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E20697320646961626C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x15 DUP6 SWAP1 SSTORE PUSH1 0x11 DUP5 SWAP1 SSTORE PUSH1 0x17 DUP4 SWAP1 SSTORE PUSH1 0x13 DUP3 SWAP1 SSTORE PUSH1 0x16 DUP6 SWAP1 SSTORE PUSH1 0x12 DUP5 SWAP1 SSTORE PUSH1 0x18 DUP4 SWAP1 SSTORE PUSH1 0x14 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x439932620C72DDDEA29980C098BCA1A482729646D1216B226D723C6D278A30D1 SWAP1 PUSH1 0x80 ADD PUSH2 0x1D1D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x208C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x210B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320636F6E74726163742063616E6E6F7420626C61636B6C6973742061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573736573000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x21A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2225 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2302 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x237E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x23F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x2408 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x2437 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x244C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2461 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ ISZERO JUMPDEST ISZERO PUSH2 0x2961 JUMPI PUSH1 0x28 SLOAD PUSH1 0xFF AND PUSH2 0x24B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E67206973206E6F74206163746976650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x24E3 JUMPI POP PUSH1 0x25 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2600 JUMPI PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x24F7 SWAP2 PUSH2 0x2D58 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x2520 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2600 JUMPI PUSH1 0x7 SLOAD PUSH2 0x2566 DUP4 PUSH2 0x1BDB DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x2600 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2E77616C6C65742062616C616E6365206166746572207472616E73666572206D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x757374206265206C657373207468616E206D61782077616C6C657420616D6F75 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E74000000000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2626 JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x263F JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x2850 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2684 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x268D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1A SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2732 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x2700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374726F6E672048616E64732050726F746F636F6C2061637469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1A SLOAD PUSH2 0x2718 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x38E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1C SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2798 JUMPI PUSH1 0x1E SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C732073746F70706564206279204469616D6F6E6420466C6F6F720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH2 0x2798 PUSH2 0x2E1F JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x8 SLOAD DUP2 LT PUSH2 0x284E JUMPI DUP1 ISZERO PUSH2 0x283C JUMPI PUSH1 0x0 PUSH2 0x27DC PUSH1 0x11 SLOAD PUSH2 0x1BDB PUSH1 0x13 SLOAD PUSH2 0x1BDB PUSH1 0x17 SLOAD PUSH1 0x15 SLOAD PUSH2 0x2D58 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x283C JUMPI PUSH1 0x0 PUSH2 0x2817 PUSH2 0x280A PUSH1 0x11 SLOAD PUSH2 0x1BDB PUSH1 0x13 SLOAD PUSH2 0x1BDB PUSH1 0x17 SLOAD PUSH1 0x15 SLOAD PUSH2 0x2D58 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x1474 SWAP1 DUP6 PUSH2 0x2A80 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x282F JUMPI PUSH2 0x282C DUP4 DUP4 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x2839 DUP3 DUP3 PUSH2 0x2ECE JUMP JUMPDEST POP POP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x284C JUMPI PUSH2 0x284C SELFBALANCE PUSH2 0x2F5E JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x287C JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2961 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2961 JUMPI PUSH1 0x7 SLOAD PUSH2 0x28C7 DUP4 PUSH2 0x1BDB DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x2961 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2E77616C6C65742062616C616E6365206166746572207472616E73666572206D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x757374206265206C657373207468616E206D61782077616C6C657420616D6F75 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E74000000000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x29A0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x29A9 JUMPI POP PUSH1 0x0 JUMPDEST PUSH2 0x29B5 DUP5 DUP5 DUP5 DUP5 PUSH2 0x309E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x29DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB97 SWAP2 SWAP1 PUSH2 0x3807 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x29EC DUP5 DUP7 PUSH2 0x397D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A37 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x313C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A37 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x29BB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2A8F JUMPI POP PUSH1 0x0 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9B DUP4 DUP6 PUSH2 0x3914 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x2AA8 DUP6 DUP4 PUSH2 0x3900 JUMP JUMPDEST EQ PUSH2 0x2A37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2BA3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x25 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xAD5C464800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C48 SWAP2 SWAP1 PUSH2 0x362B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2C82 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x25 SLOAD PUSH2 0x2CA8 SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x212E JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH1 0x40 MLOAD PUSH32 0x791AC94700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x2CFA SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x3878 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D65 DUP4 DUP6 PUSH2 0x38E8 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2A37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E29 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2E33 JUMPI POP JUMP JUMPDEST PUSH1 0x1D SLOAD DUP2 GT ISZERO PUSH2 0x2E4C JUMPI PUSH1 0x1D SSTORE PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1C SLOAD PUSH1 0x1D SLOAD PUSH1 0x0 SWAP2 PUSH2 0x2E7C SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0x1474 SWAP2 PUSH2 0x100 SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP1 PUSH2 0x2E76 SWAP1 DUP5 PUSH2 0x2A80 JUMP JUMPDEST SWAP1 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x2E9A JUMPI PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1D SLOAD PUSH1 0x1F SSTORE JUMPDEST PUSH1 0x1E SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2EB9 JUMPI POP PUSH1 0x1F SLOAD PUSH2 0x2EB5 SWAP1 PUSH1 0x2 PUSH2 0x2A80 JUMP JUMPDEST DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x12BE JUMPI POP PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1D SSTORE JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0x2F07 DUP4 PUSH1 0x2 PUSH2 0x29F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F15 DUP5 DUP4 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP SELFBALANCE PUSH2 0x2F2A PUSH2 0x2F25 DUP6 DUP6 PUSH2 0x2D58 JUMP JUMPDEST PUSH2 0x2B1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F36 SELFBALANCE DUP4 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x2D28 JUMPI PUSH2 0x2D28 DUP4 PUSH2 0x2F59 PUSH2 0x2F4F DUP9 DUP9 PUSH2 0x2D58 JUMP JUMPDEST PUSH2 0x1474 DUP6 DUP10 PUSH2 0x2A80 JUMP JUMPDEST PUSH2 0x316A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7D PUSH1 0x17 SLOAD PUSH2 0x1BDB PUSH1 0x13 SLOAD PUSH1 0x15 SLOAD PUSH2 0x2D58 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x12BE JUMPI PUSH1 0x0 PUSH2 0x2FA0 DUP3 PUSH2 0x1474 PUSH1 0x15 SLOAD DUP7 PUSH2 0x2A80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2FBD DUP4 PUSH2 0x1474 PUSH1 0x17 SLOAD DUP8 PUSH2 0x2A80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2FCF DUP3 PUSH2 0x2E76 DUP8 DUP7 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x3013 JUMPI PUSH1 0x21 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3011 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP2 ISZERO PUSH2 0x3055 JUMPI PUSH1 0x22 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3053 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP1 ISZERO PUSH2 0x3097 JUMPI PUSH1 0x23 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3095 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x30FC JUMPI PUSH2 0x30FC PUSH1 0xD DUP1 SLOAD PUSH1 0xE SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xA SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x10 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0xC SSTORE PUSH1 0x0 SWAP4 DUP5 SWAP1 SSTORE SWAP2 DUP4 SWAP1 SSTORE DUP3 SWAP1 SSTORE DUP2 SWAP1 SSTORE PUSH1 0x15 DUP1 SLOAD PUSH1 0x16 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x12 SSTORE PUSH1 0x17 DUP1 SLOAD PUSH1 0x18 SSTORE PUSH1 0x13 DUP1 SLOAD PUSH1 0x14 SSTORE SWAP3 DUP5 SWAP1 SSTORE SWAP1 DUP4 SWAP1 SSTORE DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH2 0x3107 DUP5 DUP5 DUP5 PUSH2 0x3240 JUMP JUMPDEST PUSH2 0x29B5 PUSH1 0xE SLOAD PUSH1 0xD SSTORE PUSH1 0xA SLOAD PUSH1 0x9 SSTORE PUSH1 0x10 SLOAD PUSH1 0xF SSTORE PUSH1 0xC SLOAD PUSH1 0xB SSTORE PUSH1 0x16 SLOAD PUSH1 0x15 SSTORE PUSH1 0x12 SLOAD PUSH1 0x11 SSTORE PUSH1 0x18 SLOAD PUSH1 0x17 SSTORE PUSH1 0x14 SLOAD PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x315D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB97 SWAP2 SWAP1 PUSH2 0x3807 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x29EC DUP5 DUP7 PUSH2 0x3900 JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH2 0x3182 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x212E JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH1 0x24 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xF305D71900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x84 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF305D719 SWAP1 DUP4 SWAP1 PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x321B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3097 SWAP2 SWAP1 PUSH2 0x37A9 JUMP JUMPDEST PUSH2 0x3272 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x329D JUMPI POP PUSH1 0x25 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3311 JUMPI PUSH2 0x32BD PUSH2 0x3E8 PUSH2 0x1474 PUSH1 0xD SLOAD DUP6 PUSH2 0x2A80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x9 SLOAD PUSH2 0x32D8 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x1474 SWAP1 DUP6 SWAP1 PUSH2 0x2A80 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xF SLOAD PUSH2 0x32F0 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x1474 SWAP1 DUP6 SWAP1 PUSH2 0x2A80 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xB SLOAD PUSH2 0x330B SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x1474 SWAP1 DUP6 SWAP1 PUSH2 0x2A80 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x333C JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x33B0 JUMPI PUSH2 0x335C PUSH2 0x3E8 PUSH2 0x1474 PUSH1 0x15 SLOAD DUP6 PUSH2 0x2A80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x11 SLOAD PUSH2 0x3377 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x1474 SWAP1 DUP6 SWAP1 PUSH2 0x2A80 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x17 SLOAD PUSH2 0x338F SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x1474 SWAP1 DUP6 SWAP1 PUSH2 0x2A80 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH2 0x33AA SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x1474 SWAP1 DUP6 SWAP1 PUSH2 0x2A80 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x33DC JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3490 JUMPI PUSH2 0x3407 PUSH1 0x64 PUSH2 0x1474 PUSH1 0x19 SLOAD PUSH2 0x146E PUSH2 0x3E8 PUSH2 0x1474 PUSH1 0x15 SLOAD DUP10 PUSH2 0x2A80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x3436 PUSH1 0x64 PUSH2 0x1474 PUSH1 0x19 SLOAD PUSH2 0x146E PUSH2 0x3E8 PUSH2 0x1474 PUSH1 0x11 SLOAD DUP10 PUSH2 0x2A80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x19 SLOAD PUSH1 0x17 SLOAD PUSH2 0x345B SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x1474 SWAP2 SWAP1 PUSH2 0x146E SWAP1 PUSH2 0x3E8 SWAP1 DUP5 SWAP1 DUP10 SWAP1 PUSH2 0x2A80 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x348A PUSH1 0x64 PUSH2 0x1474 PUSH1 0x19 SLOAD PUSH2 0x146E PUSH2 0x3E8 PUSH2 0x1474 PUSH1 0x13 SLOAD DUP10 PUSH2 0x2A80 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH2 0x34BF DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x2E76 DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x2E76 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x2E76 DUP8 PUSH1 0x20 ADD MLOAD DUP10 PUSH2 0x2A3E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x34E7 SWAP1 DUP4 PUSH2 0x2A3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x80 DUP5 ADD MLOAD SWAP2 DUP7 AND DUP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x351D SWAP2 PUSH2 0x2D58 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x358A PUSH2 0x3574 DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x1BDB DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1BDB DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x2D58 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x2D58 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x80 DUP4 ADD MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x360A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3620 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A37 DUP2 PUSH2 0x3A3C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x363C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2A37 DUP2 PUSH2 0x3A3C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3659 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3664 DUP2 PUSH2 0x3A3C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3674 DUP2 PUSH2 0x3A3C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3693 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x369E DUP2 PUSH2 0x3A3C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x36AE DUP2 PUSH2 0x3A3C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36D1 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x36DC DUP2 PUSH2 0x3A3C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36FB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2A37 DUP2 PUSH2 0x3A51 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3718 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3723 DUP2 PUSH2 0x3A51 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3674 DUP2 PUSH2 0x3A5F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3747 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3750 DUP5 PUSH2 0x35EC JUMP JUMPDEST SWAP3 POP PUSH2 0x375E PUSH1 0x20 DUP6 ADD PUSH2 0x35EC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x376E DUP2 PUSH2 0x3A5F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x378A JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A2 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37BD JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x37EB JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3833 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3817 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3844 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38C7 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x38A2 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x38FB JUMPI PUSH2 0x38FB PUSH2 0x39DE JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x390F JUMPI PUSH2 0x390F PUSH2 0x3A0D JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x394C JUMPI PUSH2 0x394C PUSH2 0x39DE JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3974 JUMPI PUSH2 0x3974 PUSH2 0x39DE JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x398F JUMPI PUSH2 0x398F PUSH2 0x39DE JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x39A3 JUMPI PUSH2 0x39A3 PUSH2 0x3A0D JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0x39DA JUMPI PUSH2 0x39DA PUSH2 0x39DE JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x12C0 JUMPI PUSH1 0x0 DUP1 REVERT INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365A2646970667358221220 DUP10 0x4B JUMPI 0xC4 SELFDESTRUCT PUSH15 0x6AA8C5D68BD6D06793F5B17EEC8609 PUSH29 0xAABDD2B4BDE29C00C7BF64736F6C634300080400330000000000000000 ",
							"sourceMap": "8181:21859:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8806:48;;;;;;;;;;;;;;;;;;;6702:25:1;;;6690:2;6675:18;8806:48:0;;;;;;;;12302:92;;;;;;;;;;-1:-1:-1;12382:5:0;;;;;;;;;;;;;;;;;12302:92;;;;;;;:::i;13251:160::-;;;;;;;;;;-1:-1:-1;13251:160:0;;;;;:::i;:::-;;:::i;:::-;;;5754:14:1;;5747:22;5729:41;;5717:2;5702:18;13251:160:0;5684:92:1;28253:120:0;;;;;;;;;;-1:-1:-1;28253:120:0;;;;;:::i;:::-;;:::i;:::-;;12600:95;;;;;;;;;;-1:-1:-1;8641:18:0;12600:95;;28103:140;;;;;;;;;;-1:-1:-1;28103:140:0;;;;;:::i;:::-;;:::i;13417:308::-;;;;;;;;;;-1:-1:-1;13417:308:0;;;;;:::i;:::-;;:::i;9547:36::-;;;;;;;;;;;;;;;;25859:323;;;;;;;;;;-1:-1:-1;25859:323:0;;;;;:::i;:::-;;:::i;9041:35::-;;;;;;;;;;;;;;;;22766:182;;;;;;;;;;-1:-1:-1;22766:182:0;;;;;:::i;:::-;;:::i;11046:31::-;;;;;;;;;;-1:-1:-1;11046:31:0;;;;;;;;;;;12502:92;;;;;;;;;;-1:-1:-1;12502:92:0;;8417:1;17040:36:1;;17028:2;17013:18;12502:92:0;16995:87:1;11013:27:0;;;;;;;;;;-1:-1:-1;11013:27:0;;;;;;;;;;;11083:31;;;;;;;;;;-1:-1:-1;11083:31:0;;;;;;;;;;;12824:96;;;;;;;;;;-1:-1:-1;12824:96:0;;;;;:::i;:::-;-1:-1:-1;;;;;12900:13:0;12877:4;12900:13;;;:4;:13;;;;;;;;;12824:96;22087:142;;;;;;;;;;;;;:::i;25102:111::-;;;;;;;;;;-1:-1:-1;25102:111:0;;;;;:::i;:::-;;:::i;10874:28::-;;;;;;;;;;-1:-1:-1;10874:28:0;;;;-1:-1:-1;;;;;10874:28:0;;;;;;-1:-1:-1;;;;;4577:55:1;;;4559:74;;4547:2;4532:18;10874:28:0;4514:125:1;25341:95:0;;;;;;;;;;-1:-1:-1;25341:95:0;;;;;:::i;:::-;;:::i;22235:85::-;;;;;;;;;;;;;:::i;8750:50::-;;;;;;;;;;;;;;;;22534:226;;;;;;;;;;;;;:::i;12701:117::-;;;;;;;;;;-1:-1:-1;12701:117:0;;;;;:::i;:::-;-1:-1:-1;;;;;12793:18:0;12767:7;12793:18;;;:9;:18;;;;;;;12701:117;3851:147;;;;;;;;;;;;;:::i;28627:173::-;;;;;;;;;;-1:-1:-1;28627:173:0;;;;;:::i;:::-;;:::i;9916:44::-;;;;;;;;;;;;;;;;10282:33;;;;;;;;;;-1:-1:-1;10282:33:0;;;;;;;;;;;;;;;;;;;6471:14:1;;6464:22;6446:41;;6535:10;6523:23;;;6518:2;6503:18;;6496:51;6419:18;10282:33:0;6401:152:1;29350:688:0;;;;;;;;;;;;;:::i;9419:36::-;;;;;;;;;;;;;;;;2954:77;;;;;;;;;;-1:-1:-1;2992:7:0;3018:6;-1:-1:-1;;;;;3018:6:0;2954:77;;22002:79;;;;;;;;;;;;;:::i;19681:416::-;;;;;;;;;;;;;:::i;12400:96::-;;;;;;;;;;-1:-1:-1;12482:7:0;;;;;;;;;;;;;;;;;12400:96;;27861:86;;;;;;;;;;;;;:::i;28806:538::-;;;;;;;;;;-1:-1:-1;28806:538:0;;;;;:::i;:::-;;:::i;:::-;;;;16733:25:1;;;16789:2;16774:18;;16767:34;;;;16817:18;;;16810:34;16875:2;16860:18;;16853:34;16720:3;16705:19;28806:538:0;16687:206:1;25713:140:0;;;;;;;;;;-1:-1:-1;25713:140:0;;;;;:::i;:::-;;:::i;12930:166::-;;;;;;;;;;-1:-1:-1;12930:166:0;;;;;:::i;:::-;;:::i;22326:202::-;;;;;;;;;;;;;:::i;9291:30::-;;;;;;;;;;;;;;;;9166:35;;;;;;;;;;;;;;;;9675:36;;;;;;;;;;;;;;;;10490:32;;;;;;;;;;-1:-1:-1;10490:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6051:14:1;;6044:22;6026:41;;6115:6;6103:19;;;6098:2;6083:18;;6076:47;6139:18;;;6132:34;;;;6209:14;6202:22;6197:2;6182:18;;6175:50;6256:3;6241:19;;6234:35;6013:3;5998:19;10490:32:0;5980:295:1;9803:31:0;;;;;;;;;;;;;;;;28380:120;;;;;;;;;;-1:-1:-1;28380:120:0;;;;;:::i;:::-;;:::i;21829:167::-;;;;;;;;;;-1:-1:-1;21829:167:0;;;;;:::i;:::-;;:::i;25614:89::-;;;;;;;;;;;;;:::i;27953:140::-;;;;;;;;;;-1:-1:-1;27953:140:0;;;;;:::i;:::-;;:::i;8916:35::-;;;;;;;;;;;;;;;;13102:143;;;;;;;;;;-1:-1:-1;13102:143:0;;;;;:::i;:::-;-1:-1:-1;;;;;13211:18:0;;;13185:7;13211:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;13102:143;28506:115;;;;;;;;;;-1:-1:-1;28506:115:0;;;;;:::i;:::-;;:::i;26188:823::-;;;;;;;;;;-1:-1:-1;26188:823:0;;;;;:::i;:::-;;:::i;25219:112::-;;;;;;;;;;-1:-1:-1;25219:112:0;;;;;:::i;:::-;;:::i;3302:198::-;;;;;;;;;;-1:-1:-1;3302:198:0;;;;;:::i;:::-;;:::i;27017:838::-;;;;;;;;;;-1:-1:-1;27017:838:0;;;;;:::i;:::-;;:::i;10943:31::-;;;;;;;;;;-1:-1:-1;10943:31:0;;;;;;;;25442:166;;;;;;;;;;-1:-1:-1;25442:166:0;;;;;:::i;:::-;;:::i;13251:160::-;13328:4;13344:39;818:10;13367:7;13376:6;13344:8;:39::i;:::-;-1:-1:-1;13400:4:0;13251:160;;;;;:::o;28253:120::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;;;;;;;;;28340:12:::1;:26:::0;;;::::1;-1:-1:-1::0;;;;;28340:26:0;;;::::1;::::0;;;::::1;::::0;;28253:120::o;28103:140::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;28200:17:::1;:36:::0;;;::::1;-1:-1:-1::0;;;;;28200:36:0;;;::::1;::::0;;;::::1;::::0;;28103:140::o;13417:308::-;13517:4;13533:36;13543:6;13551:9;13562:6;13533:9;:36::i;:::-;13579:118;13588:6;818:10;13608:88;13646:6;13608:88;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13608:19:0;;;;;;:11;:19;;;;;;;;818:10;13608:33;;;;;;;;;;:37;:88::i;:::-;13579:8;:118::i;:::-;-1:-1:-1;13714:4:0;13417:308;;;;;:::o;25859:323::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;25970:17:::1;8641:18;25982:4;25970:11;:17::i;:::-;25951:15;:36;;25943:91;;;::::0;-1:-1:-1;;;25943:91:0;;11439:2:1;25943:91:0::1;::::0;::::1;11421:21:1::0;11478:2;11458:18;;;11451:30;11517:34;11497:18;;;11490:62;11588:12;11568:18;;;11561:40;11618:19;;25943:91:0::1;11411:232:1::0;25943:91:0::1;8641:18;26052:15;:26;;26044:87;;;::::0;-1:-1:-1;;;26044:87:0;;13023:2:1;26044:87:0::1;::::0;::::1;13005:21:1::0;13062:2;13042:18;;;13035:30;13101:34;13081:18;;;13074:62;13172:18;13152;;;13145:46;13208:19;;26044:87:0::1;12995:238:1::0;26044:87:0::1;26141:16;:34:::0;25859:323::o;22766:182::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;22854:38:::1;::::0;;;;22886:4:::1;22854:38;::::0;::::1;4559:74:1::0;22837:14:0::1;::::0;-1:-1:-1;;;;;22854:23:0;::::1;::::0;::::1;::::0;4532:18:1;;22854:38:0::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22837:55;;22909:5;-1:-1:-1::0;;;;;22902:22:0::1;;22925:7;2992::::0;3018:6;-1:-1:-1;;;;;3018:6:0;;2954:77;22925:7:::1;22902:39;::::0;;::::1;::::0;;;;;;-1:-1:-1;;;;;4836:55:1;;;22902:39:0::1;::::0;::::1;4818:74:1::0;4908:18;;;4901:34;;;4791:18;;22902:39:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3145:1;22766:182:::0;:::o;22087:142::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;22150:8:::1;::::0;;;::::1;;;22142:51;;;::::0;-1:-1:-1;;;22142:51:0;;7607:2:1;22142:51:0::1;::::0;::::1;7589:21:1::0;7646:2;7626:18;;;7619:30;7685:32;7665:18;;;7658:60;7735:18;;22142:51:0::1;7579:180:1::0;22142:51:0::1;22203:11;:19:::0;;-1:-1:-1;;22203:19:0::1;::::0;;22087:142::o;25102:111::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;-1:-1:-1;;;;;25172:27:0::1;;::::0;;;:18:::1;:27;::::0;;;;:34;;-1:-1:-1;;25172:34:0::1;25202:4;25172:34;::::0;;25102:111::o;25341:95::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;-1:-1:-1;;;;;25408:13:0::1;25424:5;25408:13:::0;;;:4:::1;:13:::0;;;;;:21;;-1:-1:-1;;25408:21:0::1;::::0;;25341:95::o;22235:85::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;22297:8:::1;:16:::0;;;::::1;::::0;;22235:85::o;22534:226::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;22616:21:::1;22651:22:::0;;22647:107:::1;;2992:7:::0;3018:6;;22689:54:::1;::::0;-1:-1:-1;;;;;3018:6:0;;;;22689:54;::::1;;;::::0;22724:18;;22689:54;2992:7;22689:54;22724:18;3018:6;22689:54;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;22647:107;3145:1;22534:226::o:0;3851:147::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;3959:1:::1;3943:6:::0;;3922:40:::1;::::0;-1:-1:-1;;;;;3943:6:0;;::::1;::::0;3922:40:::1;::::0;3959:1;;3922:40:::1;3989:1;3972:19:::0;;;::::1;::::0;;3851:147::o;28627:173::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;28717:8:::1;:26:::0;;-1:-1:-1;;28717:26:0::1;::::0;::::1;;;::::0;;28773:20:::1;:8:::0;28784:9:::1;28773:20;:::i;:::-;28753:8;:40:::0;;::::1;::::0;;;::::1;;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;28627:173:0:o;29350:688::-;29412:21;;29394:6;;29408:40;;-1:-1:-1;29447:1:0;;29350:688::o;29408:40::-;29454:20;29477:11;:9;:11::i;:::-;29521:21;;29454:34;;-1:-1:-1;29506:36:0;;:525;;29999:21;;29860:161;;:63;29917:5;29860:39;29999:21;29886:12;29860:25;:39::i;:::-;:56;;:63::i;:::-;:138;;:161::i;:::-;29839:192;;;:::i;:::-;29506:525;;;29754:21;;29615:161;;:63;29672:5;29615:39;:12;29754:21;29615:16;:39::i;:161::-;29499:532;;;29350:688;:::o;22002:79::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;22056:11:::1;:18:::0;;-1:-1:-1;;22056:18:0::1;22070:4;22056:18;::::0;;22002:79::o;19681:416::-;19723:7;19743:16;19761;19797:13;;;;;;;;;-1:-1:-1;;;;;19797:13:0;-1:-1:-1;;;;;19782:41:0;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19742:83;;;;;19839:8;:13;;19851:1;19839:13;:30;;;-1:-1:-1;19856:13:0;;;;19839:30;19835:44;;;19878:1;19871:8;;;;19681:416;:::o;19835:44::-;19920:13;;19905:38;;;;;;;;19955:4;;-1:-1:-1;;;;;19920:13:0;;19905:36;;:38;;;;;;;;;;;;;;19920:13;19905:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19905:55:0;;:185;;20040:50;20072:17;;;;;20040:27;;:17;;20062:4;20040:21;:27::i;:50::-;19905:185;;;19975:50;20007:17;;;;;19975:27;;:17;;19997:4;19975:21;:27::i;:50::-;19898:192;;;;19681:416;:::o;27861:86::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;27920:12:::1;:20:::0;;;::::1;::::0;;27861:86::o;28806:538::-;-1:-1:-1;;;;;29009:28:0;;28880:13;29009:28;;;:19;:28;;;;;;28880:13;;;;;;;;29040:15;-1:-1:-1;29009:115:0;;29123:1;29009:115;;;-1:-1:-1;;;;;29071:28:0;;;;;;:19;:28;;;;;;:49;;29104:15;29071:32;:49::i;:::-;28989:135;-1:-1:-1;29151:20:0;28989:135;29165:5;29151:13;:20::i;:::-;29143:28;-1:-1:-1;29181:18:0;29194:5;29181:18;;:::i;:::-;;-1:-1:-1;29218:19:0;29181:18;29232:4;29218:13;:19::i;:::-;29209:28;-1:-1:-1;29247:17:0;29260:4;29247:17;;:::i;:::-;;-1:-1:-1;29285:17:0;29247;29299:2;29285:13;:17::i;:::-;29274:28;-1:-1:-1;29323:14:0;29335:2;29323:9;:14;:::i;:::-;29312:25;;28806:538;;;;;;:::o;25713:140::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;25807:25:::1;:39:::0;25713:140::o;12930:166::-;13010:4;13026:42;818:10;13050:9;13061:6;13026:9;:42::i;22326:202::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;22423:4:::1;22379:23;12793:18:::0;;;:9;:18;;;;;;22443:19;;22439:83:::1;;22478:33;22495:15;22478:16;:33::i;28380:120::-:0;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;28467:12:::1;:26:::0;;;::::1;-1:-1:-1::0;;;;;28467:26:0;;;::::1;::::0;;;::::1;::::0;;28380:120::o;21829:167::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;21914:15:::1;21900:11;:29:::0;21939:10:::1;:22:::0;21971:11:::1;:18:::0;;-1:-1:-1;;21971:18:0::1;21985:4;21971:18;::::0;;21829:167::o;25614:89::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;25676:12:::1;:20:::0;;;::::1;::::0;;25614:89::o;27953:140::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;28050:17:::1;:36:::0;;;::::1;-1:-1:-1::0;;;;;28050:36:0;;;::::1;::::0;;;::::1;::::0;;27953:140::o;28506:115::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;28587:15:::1;:27:::0;28506:115::o;26188:823::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;26323:16:::1;26342:61;26390:12:::0;26342:43:::1;26377:7:::0;26342:43;:12;26359;26342:16:::1;:30::i;:::-;:34:::0;::::1;:43::i;:61::-;26323:80;;26433:3;26421:8;:15;;26413:77;;;::::0;-1:-1:-1;;;26413:77:0;;8370:2:1;26413:77:0::1;::::0;::::1;8352:21:1::0;8409:2;8389:18;;;8382:30;8448:34;8428:18;;;8421:62;8519:19;8499:18;;;8492:47;8556:19;;26413:77:0::1;8342:239:1::0;26413:77:0::1;26508:12;::::0;;;::::1;;;26500:49;;;::::0;-1:-1:-1;;;26500:49:0;;14255:2:1;26500:49:0::1;::::0;::::1;14237:21:1::0;14294:2;14274:18;;;14267:30;14333:26;14313:18;;;14306:54;14377:18;;26500:49:0::1;14227:174:1::0;26500:49:0::1;26560:16;:31:::0;;;26601:16:::1;:31:::0;;;26642:11:::1;:21:::0;;;26673:16:::1;:31:::0;;;26723:24:::1;:43:::0;;;26776:24:::1;:43:::0;;;26829:19:::1;:33:::0;;;26872:24:::1;:43:::0;;;26939:65:::1;::::0;;16733:25:1;;;16789:2;16774:18;;16767:34;;;16817:18;;;16810:34;;;16875:2;16860:18;;16853:34;;;26939:65:0::1;::::0;16720:3:1;16705:19;26939:65:0::1;;;;;;;;3145:1;26188:823:::0;;;;:::o;25219:112::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;-1:-1:-1;;;;;25289:27:0::1;25319:5;25289:27:::0;;;:18:::1;:27;::::0;;;;:35;;-1:-1:-1;;25289:35:0::1;::::0;;25219:112::o;3302:198::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;-1:-1:-1;;;;;3390:22:0;::::1;3382:73;;;::::0;-1:-1:-1;;;3382:73:0;;9138:2:1;3382:73:0::1;::::0;::::1;9120:21:1::0;9177:2;9157:18;;;9150:30;9216:34;9196:18;;;9189:62;9287:8;9267:18;;;9260:36;9313:19;;3382:73:0::1;9110:228:1::0;3382:73:0::1;3465:28;3484:8;3465:18;:28::i;27017:838::-:0;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;27153:16:::1;27172:61;27220:12:::0;27172:43:::1;27207:7:::0;27172:43;:12;27189;27172:16:::1;:30::i;:61::-;27153:80;;27263:3;27251:8;:15;;27243:78;;;::::0;-1:-1:-1;;;27243:78:0;;11020:2:1;27243:78:0::1;::::0;::::1;11002:21:1::0;11059:2;11039:18;;;11032:30;11098:34;11078:18;;;11071:62;11169:20;11149:18;;;11142:48;11207:19;;27243:78:0::1;10992:240:1::0;27243:78:0::1;27339:12;::::0;;;::::1;;;27331:49;;;::::0;-1:-1:-1;;;27331:49:0;;14255:2:1;27331:49:0::1;::::0;::::1;14237:21:1::0;14294:2;14274:18;;;14267:30;14333:26;14313:18;;;14306:54;14377:18;;27331:49:0::1;14227:174:1::0;27331:49:0::1;27391:17;:32:::0;;;27433:17:::1;:32:::0;;;27475:12:::1;:22:::0;;;27507:17:::1;:32:::0;;;27558:25:::1;:45:::0;;;27613:25:::1;:45:::0;;;27668:20:::1;:35:::0;;;27713:25:::1;:45:::0;;;27782:66:::1;::::0;;16733:25:1;;;16789:2;16774:18;;16767:34;;;16817:18;;;16810:34;;;16875:2;16860:18;;16853:34;;;27782:66:0::1;::::0;16720:3:1;16705:19;27782:66:0::1;16687:206:1::0;25442:166:0;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;12252:2:1;3068:67:0;;;12234:21:1;;;12271:18;;;12264:30;12330:34;12310:18;;;12303:62;12382:18;;3068:67:0;12224:182:1;3068:67:0;25514:12:::1;::::0;;;::::1;;;25506:65;;;::::0;-1:-1:-1;;;25506:65:0;;13440:2:1;25506:65:0::1;::::0;::::1;13422:21:1::0;13479:2;13459:18;;;13452:30;13518:34;13498:18;;;13491:62;13589:10;13569:18;;;13562:38;13617:19;;25506:65:0::1;13412:230:1::0;25506:65:0::1;-1:-1:-1::0;;;;;25581:13:0::1;;::::0;;;:4:::1;:13:::0;;;;;:20;;-1:-1:-1;;25581:20:0::1;25597:4;25581:20;::::0;;25442:166::o;14904:330::-;-1:-1:-1;;;;;14996:19:0;;14988:68;;;;-1:-1:-1;;;14988:68:0;;14608:2:1;14988:68:0;;;14590:21:1;14647:2;14627:18;;;14620:30;14686:34;14666:18;;;14659:62;14757:6;14737:18;;;14730:34;14781:19;;14988:68:0;14580:226:1;14988:68:0;-1:-1:-1;;;;;15074:21:0;;15066:68;;;;-1:-1:-1;;;15066:68:0;;9545:2:1;15066:68:0;;;9527:21:1;9584:2;9564:18;;;9557:30;9623:34;9603:18;;;9596:62;9694:4;9674:18;;;9667:32;9716:19;;15066:68:0;9517:224:1;15066:68:0;-1:-1:-1;;;;;15144:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15195:32;;6702:25:1;;;15195:32:0;;6675:18:1;15195:32:0;;;;;;;14904:330;;;:::o;15244:3207::-;-1:-1:-1;;;;;15331:18:0;;15323:68;;;;-1:-1:-1;;;15323:68:0;;13849:2:1;15323:68:0;;;13831:21:1;13888:2;13868:18;;;13861:30;13927:34;13907:18;;;13900:62;13998:7;13978:18;;;13971:35;14023:19;;15323:68:0;13821:227:1;15323:68:0;-1:-1:-1;;;;;15409:16:0;;15401:64;;;;-1:-1:-1;;;15401:64:0;;7966:2:1;15401:64:0;;;7948:21:1;8005:2;7985:18;;;7978:30;8044:34;8024:18;;;8017:62;8115:5;8095:18;;;8088:33;8138:19;;15401:64:0;7938:225:1;15401:64:0;15492:1;15483:6;:10;15475:64;;;;-1:-1:-1;;;15475:64:0;;12613:2:1;15475:64:0;;;12595:21:1;12652:2;12632:18;;;12625:30;12691:34;12671:18;;;12664:62;12762:11;12742:18;;;12735:39;12791:19;;15475:64:0;12585:231:1;15475:64:0;15565:4;15592:7;2992;3018:6;-1:-1:-1;;;;;3018:6:0;;2954:77;15592:7;-1:-1:-1;;;;;15584:15:0;:4;-1:-1:-1;;;;;15584:15:0;;;:32;;;;-1:-1:-1;2992:7:0;3018:6;-1:-1:-1;;;;;15603:13:0;;;3018:6;;15603:13;;15584:32;:57;;;;-1:-1:-1;;;;;;15620:21:0;;15636:4;15620:21;;15584:57;:80;;;;-1:-1:-1;;;;;;15645:19:0;;15659:4;15645:19;;15584:80;15580:2699;;;15688:11;;;;15680:45;;;;-1:-1:-1;;;15680:45:0;;8788:2:1;15680:45:0;;;8770:21:1;8827:2;8807:18;;;8800:30;8866:23;8846:18;;;8839:51;8907:18;;15680:45:0;8760:171:1;15680:45:0;15751:13;;-1:-1:-1;;;;;15743:21:0;;;15751:13;;15743:21;:55;;;;-1:-1:-1;15782:15:0;;-1:-1:-1;;;;;15768:30:0;;;15782:15;;15768:30;;15743:55;15739:420;;;15864:10;;15848:11;;:27;;:15;:27::i;:::-;15829:15;:46;15825:108;;-1:-1:-1;;;;;15899:8:0;;;;;;:4;:8;;;;;:15;;-1:-1:-1;;15899:15:0;15910:4;15899:15;;;15825:108;-1:-1:-1;;;;;15956:22:0;;;;;;:18;:22;;;;;;;;15951:194;;16039:16;;16010:25;16028:6;16010:13;16020:2;-1:-1:-1;;;;;12793:18:0;12767:7;12793:18;;;:9;:18;;;;;;;12701:117;16010:25;:45;;16002:124;;;;-1:-1:-1;;;16002:124:0;;15013:2:1;16002:124:0;;;14995:21:1;15052:2;15032:18;;;15025:30;15091:34;15071:18;;;15064:62;15162:34;15142:18;;;15135:62;15234:4;15213:19;;;15206:33;15256:19;;16002:124:0;14985:296:1;16002:124:0;16190:6;;;;;;;16189:7;:32;;;;-1:-1:-1;16208:13:0;;-1:-1:-1;;;;;16200:21:0;;;16208:13;;16200:21;;16189:32;:55;;;;-1:-1:-1;16231:13:0;;-1:-1:-1;;;;;16225:19:0;;;16231:13;;16225:19;16189:55;16185:1766;;;-1:-1:-1;;;;;16281:10:0;;;;;;:4;:10;;;;;;;;16280:11;:24;;;;-1:-1:-1;;;;;;16296:8:0;;;;;;:4;:8;;;;;;;;16295:9;16280:24;16272:33;;;;;;16373:8;:16;;;16369:233;;;-1:-1:-1;;;;;16440:25:0;;;;;;:19;:25;;;;;;16421:15;:44;;16413:85;;;;-1:-1:-1;;;16413:85:0;;9948:2:1;16413:85:0;;;9930:21:1;9987:2;9967:18;;;9960:30;10026;10006:18;;;9999:58;10074:18;;16413:85:0;9920:178:1;16413:85:0;16566:8;:17;16548:35;;16566:17;;;;;16548:15;:35;:::i;:::-;-1:-1:-1;;;;;16520:25:0;;;;;;:19;:25;;;;;:63;16369:233;16663:12;:20;;;16659:180;;;16716:24;;;;16715:25;16707:68;;;;-1:-1:-1;;;16707:68:0;;10661:2:1;16707:68:0;;;10643:21:1;10700:2;10680:18;;;10673:30;10739:32;10719:18;;;10712:60;10789:18;;16707:68:0;10633:180:1;16707:68:0;16797:23;:21;:23::i;:::-;16922:4;16873:28;12793:18;;;:9;:18;;;;;;16975:15;;16951:39;;16947:969;;17018:24;;17014:679;;17158:1;17074:81;17137:17;;17074:58;17114:17;;17074:35;17096:12;;17074:17;;:21;;:35;;;;:::i;:81::-;:85;17070:601;;;17191:20;17214:130;17262:81;17325:17;;17262:58;17302:17;;17262:35;17284:12;;17262:17;;:21;;:35;;;;:::i;:81::-;17214:17;;:43;;17236:20;17214:21;:43::i;:130::-;17191:153;;17374:15;17451:12;17427:20;:36;17423:155;;17509:38;:20;17534:12;17509:24;:38::i;:::-;17499:48;;17423:155;17607:37;17622:12;17636:7;17607:14;:37::i;:::-;17070:601;;;17743:21;17790:22;;17786:112;;17840:35;17853:21;17840:12;:35::i;:::-;16947:969;;16185:1766;;17976:13;;-1:-1:-1;;;;;17968:21:0;;;17976:13;;17968:21;;;;:44;;-1:-1:-1;17999:13:0;;-1:-1:-1;;;;;17993:19:0;;;17999:13;;17993:19;;17968:44;17965:304;;;-1:-1:-1;;;;;18066:22:0;;;;;;:18;:22;;;;;;;;18061:194;;18149:16;;18120:25;18138:6;18120:13;18130:2;-1:-1:-1;;;;;12793:18:0;12767:7;12793:18;;;:9;:18;;;;;;;12701:117;18120:25;:45;;18112:124;;;;-1:-1:-1;;;18112:124:0;;15013:2:1;18112:124:0;;;14995:21:1;15052:2;15032:18;;;15025:30;15091:34;15071:18;;;15064:62;15162:34;15142:18;;;15135:62;15234:4;15213:19;;;15206:33;15256:19;;18112:124:0;14985:296:1;18112:124:0;-1:-1:-1;;;;;18293:24:0;;;;;;:18;:24;;;;;;;;;:50;;-1:-1:-1;;;;;;18321:22:0;;;;;;:18;:22;;;;;;;;18293:50;18289:96;;;-1:-1:-1;18369:5:0;18289:96;18403:41;18418:4;18424:2;18428:6;18436:7;18403:14;:41::i;:::-;15244:3207;;;;:::o;1849:186::-;1935:7;1970:12;1962:6;;;;1954:29;;;;-1:-1:-1;;;1954:29:0;;;;;;;;:::i;:::-;-1:-1:-1;1993:9:0;2005:5;2009:1;2005;:5;:::i;:::-;1993:17;1849:186;-1:-1:-1;;;;;1849:186:0:o;2286:130::-;2344:7;2370:39;2374:1;2377;2370:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;2363:46;2286:130;-1:-1:-1;;;2286:130:0:o;1709:134::-;1767:7;1793:43;1797:1;1800;1793:43;;;;;;;;;;;;;;;;;:3;:43::i;2041:239::-;2099:7;2122:6;2118:45;;-1:-1:-1;2151:1:0;2144:8;;2118:45;2172:9;2184:5;2188:1;2184;:5;:::i;:::-;2172:17;-1:-1:-1;2216:1:0;2207:5;2211:1;2172:17;2207:5;:::i;:::-;:10;2199:56;;;;-1:-1:-1;;;2199:56:0;;11850:2:1;2199:56:0;;;11832:21:1;11889:2;11869:18;;;11862:30;11928:34;11908:18;;;11901:62;11999:3;11979:18;;;11972:31;12020:19;;2199:56:0;11822:223:1;18460:401:0;11460:6;:13;;;;;;;;18561:16:::1;::::0;;18575:1:::1;18561:16:::0;;;;;::::1;::::0;;-1:-1:-1;;18561:16:0::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;18561:16:0::1;18537:40;;18605:4;18587;18592:1;18587:7;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;18587:23:0;;::::1;:7;::::0;;::::1;::::0;;;;;;:23;;;;18630:15:::1;::::0;:22:::1;::::0;;;;;;;:15;;;::::1;::::0;:20:::1;::::0;:22:::1;::::0;;::::1;::::0;18587:7;;18630:22;;;;;:15;:22;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18620:4;18625:1;18620:7;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;18620:32:0;;::::1;:7;::::0;;::::1;::::0;;;;;:32;18694:15:::1;::::0;18662:62:::1;::::0;18679:4:::1;::::0;18694:15:::1;18712:11:::0;18662:8:::1;:62::i;:::-;18734:15;::::0;:120:::1;::::0;;;;-1:-1:-1;;;;;18734:15:0;;::::1;::::0;:66:::1;::::0;:120:::1;::::0;18801:11;;18734:15:::1;::::0;18817:4;;18831::::1;::::0;18838:15:::1;::::0;18734:120:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;11494:6:0;:14;;;;;;-1:-1:-1;;;;18460:401:0:o;1528:175::-;1586:7;;1617:5;1621:1;1617;:5;:::i;:::-;1605:17;;1645:1;1640;:6;;1632:46;;;;-1:-1:-1;;;1632:46:0;;10305:2:1;1632:46:0;;;10287:21:1;10344:2;10324:18;;;10317:30;10383:29;10363:18;;;10356:57;10430:18;;1632:46:0;10277:177:1;3654:187:0;3727:16;3746:6;;-1:-1:-1;;;;;3762:17:0;;;;;;;;;;3794:40;;3746:6;;;;;;;3794:40;;3727:16;3794:40;3654:187;;:::o;18867:808::-;18918:20;18941:11;:9;:11::i;:::-;18918:34;-1:-1:-1;18966:17:0;18962:30;;18985:7;18867:808::o;18962:30::-;19021:21;;19006:36;;19002:169;;;19058:21;:36;19108:24;:32;;-1:-1:-1;;19108:32:0;;;18867:808::o;19002:169::-;19255:12;:30;19206:21;;19181:22;;19206:103;;19304:4;;19206:80;;19255:30;;;;;;;19206:44;;19304:4;19206:38;:44::i;:::-;:48;;:80::i;:103::-;19181:128;;19339:14;19324:12;:29;19320:152;;;19369:24;:31;;-1:-1:-1;;19369:31:0;19396:4;19369:31;;;19440:21;;19414:23;:47;19320:152;19486:24;;;;:74;;;;-1:-1:-1;19530:23:0;;:30;;19558:1;19530:27;:30::i;:::-;19514:12;:46;;19486:74;19482:187;;;-1:-1:-1;19576:24:0;:32;;-1:-1:-1;;19576:32:0;;;19622:21;:36;18867:808::o;20568:507::-;11460:6;:13;;;;;;;;;20685:15:::1;:8:::0;20698:1:::1;20685:12;:15::i;:::-;20670:30:::0;-1:-1:-1;20710:17:0::1;20730:18;:8:::0;20670:30;20730:12:::1;:18::i;:::-;20710:38:::0;-1:-1:-1;20783:21:0::1;20814:48;20831:30;:20:::0;20856:4;20831:24:::1;:30::i;:::-;20814:16;:48::i;:::-;20872:18;20893:41;:21;20919:14:::0;20893:25:::1;:41::i;:::-;20872:62:::0;-1:-1:-1;20948:13:0;;20944:125:::1;;20977:81;20990:9:::0;21001:56:::1;21026:30;:20:::0;21051:4;21026:24:::1;:30::i;:::-;21001:20;:10:::0;21016:4;21001:14:::1;:20::i;:56::-;20977:12;:81::i;21081:742::-:0;21137:17;21157:58;21202:12;;21157:40;21179:17;;21157;;:21;;:40;;;;:::i;:58::-;21137:78;-1:-1:-1;21229:14:0;;21225:592;;21259:24;21286:44;21320:9;21286:29;21297:17;;21286:6;:10;;:29;;;;:::i;:44::-;21259:71;;21344:19;21366:39;21395:9;21366:24;21377:12;;21366:6;:10;;:24;;;;:::i;:39::-;21344:61;-1:-1:-1;21419:18:0;21440:45;21344:61;21440:28;:6;21451:16;21440:10;:28::i;:45::-;21419:66;-1:-1:-1;21503:20:0;;21499:103;;21543:17;;:44;;-1:-1:-1;;;;;21543:17:0;;;;:44;;;;;21570:16;;21543:17;:44;:17;:44;21570:16;21543:17;:44;;;;;;;;;;;;;;;;;;;;;21499:103;21619:15;;21615:88;;21654:12;;:34;;-1:-1:-1;;;;;21654:12:0;;;;:34;;;;;21676:11;;21654:12;:34;:12;:34;21676:11;21654:12;:34;;;;;;;;;;;;;;;;;;;;;21615:88;21720:14;;21716:91;;21754:17;;:38;;-1:-1:-1;;;;;21754:17:0;;;;:38;;;;;21781:10;;21754:17;:38;:17;:38;21781:10;21754:17;:38;;;;;;;;;;;;;;;;;;;;;21716:91;21225:592;;;21081:742;;:::o;22954:250::-;23066:7;23061:58;;23094:14;13800:16;;;13773:24;:43;13853:16;;;13826:24;:43;13901:11;;;13879:19;:33;13949:16;;;13922:24;:43;-1:-1:-1;13984:20:0;;;;14014;;;;14044:15;;;14069:20;;;14128:17;;;14100:25;:45;14183:17;;;14155:25;:45;14233:12;;;14210:20;:35;14283:17;;;14255:25;:45;14319:21;;;;14350;;;;14381:16;;;14407:21;13731:704;23094:14;23128:44;23146:6;23154:9;23165:6;23128:17;:44::i;:::-;23182:15;14507:24;;14488:16;:43;14560:24;;14541:16;:43;14608:19;;14594:11;:33;14656:24;;14637:16;:43;14711:25;;14691:17;:45;14766:25;;14746:17;:45;14816:20;;14801:12;:35;14866:25;;14846:17;:45;14445:453;2422:185;2508:7;2542:12;2535:5;2527:28;;;;-1:-1:-1;;;2527:28:0;;;;;;;;:::i;:::-;-1:-1:-1;2565:9:0;2577:5;2581:1;2577;:5;:::i;20107:453::-;20219:15;;20187:62;;20204:4;;-1:-1:-1;;;;;20219:15:0;20237:11;20187:8;:62::i;:::-;20289:15;;20498:12;;;20289:264;;;;;20362:4;20289:264;;;5318:34:1;5368:18;;;5361:34;;;20289:15:0;5411:18:1;;;5404:34;;;5454:18;;;5447:34;-1:-1:-1;;;;;20498:12:0;;;5497:19:1;;;5490:44;20526:15:0;5550:19:1;;;5543:35;20289:15:0;;;;:31;;20328:9;;5229:19:1;;20289:264:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;23210:1847::-;23306:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23306:24:0;23354:13;;-1:-1:-1;;;;;23344:23:0;;;23354:13;;23344:23;:64;;;;-1:-1:-1;23392:15:0;;-1:-1:-1;;;;;23371:37:0;;;23392:15;;23371:37;;23344:64;23340:357;;;23448:38;23481:4;23448:28;23459:16;;23448:6;:10;;:28;;;;:::i;:38::-;23430:15;;;:56;23529:16;;23518:38;;23551:4;;23518:28;;:6;;:10;:28::i;:38::-;23500:56;;23594:11;;23583:33;;23611:4;;23583:23;;:6;;:10;:23::i;:33::-;23570:10;;;:46;23659:16;;23648:38;;23681:4;;23648:28;;:6;;:10;:28::i;:38::-;23630:15;;;:56;23340:357;23720:13;;-1:-1:-1;;;;;23710:23:0;;;23720:13;;23710:23;;;;:53;;-1:-1:-1;23750:13:0;;-1:-1:-1;;;;;23737:26:0;;;23750:13;;23737:26;23710:53;23706:351;;;23804:39;23838:4;23804:29;23815:17;;23804:6;:10;;:29;;;;:::i;:39::-;23786:15;;;:57;23886:17;;23875:39;;23909:4;;23875:29;;:6;;:10;:29::i;:39::-;23857:57;;23952:12;;23941:34;;23970:4;;23941:24;;:6;;:10;:24::i;:34::-;23928:10;;;:47;24018:17;;24007:39;;24041:4;;24007:29;;:6;;:10;:29::i;:39::-;23989:15;;;:57;23706:351;24080:13;;-1:-1:-1;;;;;24070:23:0;;;24080:13;;24070:23;;;;:53;;-1:-1:-1;24110:13:0;;-1:-1:-1;;;;;24097:26:0;;;24110:13;;24097:26;;24070:53;24066:522;;;24167:81;24244:3;24167:72;24213:25;;24168:39;24202:4;24168:29;24179:17;;24168:6;:10;;:29;;;;:::i;24167:81::-;24149:4;:15;;:99;;;;;24280:81;24357:3;24280:72;24326:25;;24281:39;24315:4;24281:29;24292:17;;24281:6;:10;;:29;;;;:::i;24280:81::-;24262:99;;24429:25;;24400:12;;24388:76;;24460:3;;24388:67;;24429:25;24389:34;;24418:4;;24388:67;;24389:6;;:10;:24::i;24388:76::-;24375:4;:10;;:89;;;;;24496:81;24573:3;24496:72;24542:25;;24497:39;24531:4;24497:29;24508:17;;24497:6;:10;;:29;;;;:::i;24496:81::-;24478:15;;;:99;24066:522;24621:85;24690:4;:15;;;24621:64;24674:4;:10;;;24621:48;24653:4;:15;;;24621:27;24632:4;:15;;;24621:6;:10;;:27;;;;:::i;:85::-;24606:12;;;:100;-1:-1:-1;;;;;24745:17:0;;;;;;:9;:17;;;;;;:29;;24767:6;24745:21;:29::i;:::-;-1:-1:-1;;;;;24725:17:0;;;;;;;:9;:17;;;;;;:49;;;;24832:12;;;;24807:20;;;;;;;;;;:38;;:24;:38::i;:::-;24784:9;:20;24794:9;-1:-1:-1;;;;;24784:20:0;-1:-1:-1;;;;;24784:20:0;;;;;;;;;;;;:61;;;;24882:103;24911:73;24968:4;:15;;;24911:52;24952:4;:10;;;24911:36;24931:4;:15;;;24911:4;:15;;;:19;;:36;;;;:::i;:73::-;24900:4;24882:24;;;;:9;:24;;;;;;;:28;:103::i;:::-;24873:4;24855:24;;;;:9;:24;;;;;;;;;:130;;;;25037:12;;;;25009:41;;6702:25:1;;;-1:-1:-1;;;;;25009:41:0;;;;;;;;;;6675:18:1;25009:41:0;;;;;;;23210:1847;;;;:::o;14:188:1:-;93:13;;146:30;135:42;;125:53;;115:2;;192:1;189;182:12;115:2;74:128;;;:::o;207:257::-;266:6;319:2;307:9;298:7;294:23;290:32;287:2;;;340:6;332;325:22;287:2;384:9;371:23;403:31;428:5;403:31;:::i;469:261::-;539:6;592:2;580:9;571:7;567:23;563:32;560:2;;;613:6;605;598:22;560:2;650:9;644:16;669:31;694:5;669:31;:::i;1005:398::-;1073:6;1081;1134:2;1122:9;1113:7;1109:23;1105:32;1102:2;;;1155:6;1147;1140:22;1102:2;1199:9;1186:23;1218:31;1243:5;1218:31;:::i;:::-;1268:5;-1:-1:-1;1325:2:1;1310:18;;1297:32;1338:33;1297:32;1338:33;:::i;:::-;1390:7;1380:17;;;1092:311;;;;;:::o;1408:466::-;1485:6;1493;1501;1554:2;1542:9;1533:7;1529:23;1525:32;1522:2;;;1575:6;1567;1560:22;1522:2;1619:9;1606:23;1638:31;1663:5;1638:31;:::i;:::-;1688:5;-1:-1:-1;1745:2:1;1730:18;;1717:32;1758:33;1717:32;1758:33;:::i;:::-;1512:362;;1810:7;;-1:-1:-1;;;1864:2:1;1849:18;;;;1836:32;;1512:362::o;1879:325::-;1947:6;1955;2008:2;1996:9;1987:7;1983:23;1979:32;1976:2;;;2029:6;2021;2014:22;1976:2;2073:9;2060:23;2092:31;2117:5;2092:31;:::i;:::-;2142:5;2194:2;2179:18;;;;2166:32;;-1:-1:-1;;;1966:238:1:o;2209:255::-;2276:6;2329:2;2317:9;2308:7;2304:23;2300:32;2297:2;;;2350:6;2342;2335:22;2297:2;2387:9;2381:16;2406:28;2428:5;2406:28;:::i;2469:390::-;2533:6;2541;2594:2;2582:9;2573:7;2569:23;2565:32;2562:2;;;2615:6;2607;2600:22;2562:2;2659:9;2646:23;2678:28;2700:5;2678:28;:::i;:::-;2725:5;-1:-1:-1;2782:2:1;2767:18;;2754:32;2795;2754;2795;:::i;2864:429::-;2951:6;2959;2967;3020:2;3008:9;2999:7;2995:23;2991:32;2988:2;;;3041:6;3033;3026:22;2988:2;3069:40;3099:9;3069:40;:::i;:::-;3059:50;;3128:49;3173:2;3162:9;3158:18;3128:49;:::i;:::-;3118:59;;3220:2;3209:9;3205:18;3199:25;3233:30;3257:5;3233:30;:::i;:::-;3282:5;3272:15;;;2978:315;;;;;:::o;3298:190::-;3357:6;3410:2;3398:9;3389:7;3385:23;3381:32;3378:2;;;3431:6;3423;3416:22;3378:2;-1:-1:-1;3459:23:1;;3368:120;-1:-1:-1;3368:120:1:o;3493:194::-;3563:6;3616:2;3604:9;3595:7;3591:23;3587:32;3584:2;;;3637:6;3629;3622:22;3584:2;-1:-1:-1;3665:16:1;;3574:113;-1:-1:-1;3574:113:1:o;3692:316::-;3780:6;3788;3796;3849:2;3837:9;3828:7;3824:23;3820:32;3817:2;;;3870:6;3862;3855:22;3817:2;3904:9;3898:16;3888:26;;3954:2;3943:9;3939:18;3933:25;3923:35;;3998:2;3987:9;3983:18;3977:25;3967:35;;3807:201;;;;;:::o;4013:395::-;4099:6;4107;4115;4123;4176:3;4164:9;4155:7;4151:23;4147:33;4144:2;;;4198:6;4190;4183:22;4144:2;-1:-1:-1;;4226:23:1;;;4296:2;4281:18;;4268:32;;-1:-1:-1;4347:2:1;4332:18;;4319:32;;4398:2;4383:18;4370:32;;-1:-1:-1;4134:274:1;-1:-1:-1;4134:274:1:o;6738:662::-;6850:4;6879:2;6908;6897:9;6890:21;6940:6;6934:13;6983:6;6978:2;6967:9;6963:18;6956:34;7008:4;7021:140;7035:6;7032:1;7029:13;7021:140;;;7130:14;;;7126:23;;7120:30;7096:17;;;7115:2;7092:26;7085:66;7050:10;;7021:140;;;7179:6;7176:1;7173:13;7170:2;;;7249:4;7244:2;7235:6;7224:9;7220:22;7216:31;7209:45;7170:2;-1:-1:-1;7316:2:1;7304:15;7321:66;7300:88;7285:104;;;;7391:2;7281:113;;6859:541;-1:-1:-1;;;6859:541:1:o;15468:1029::-;15730:4;15778:3;15767:9;15763:19;15809:6;15798:9;15791:25;15835:2;15873:6;15868:2;15857:9;15853:18;15846:34;15916:3;15911:2;15900:9;15896:18;15889:31;15940:6;15975;15969:13;16006:6;15998;15991:22;16044:3;16033:9;16029:19;16022:26;;16083:2;16075:6;16071:15;16057:29;;16104:4;16117:218;16131:6;16128:1;16125:13;16117:218;;;16196:13;;-1:-1:-1;;;;;16192:62:1;16180:75;;16310:15;;;;16275:12;;;;16153:1;16146:9;16117:218;;;-1:-1:-1;;;;;;;16391:55:1;;;;16386:2;16371:18;;16364:83;-1:-1:-1;;;16478:3:1;16463:19;16456:35;16352:3;15739:758;-1:-1:-1;;;15739:758:1:o;17087:128::-;17127:3;17158:1;17154:6;17151:1;17148:13;17145:2;;;17164:18;;:::i;:::-;-1:-1:-1;17200:9:1;;17135:80::o;17220:120::-;17260:1;17286;17276:2;;17291:18;;:::i;:::-;-1:-1:-1;17325:9:1;;17266:74::o;17345:228::-;17385:7;17511:1;17443:66;17439:74;17436:1;17433:81;17428:1;17421:9;17414:17;17410:105;17407:2;;;17518:18;;:::i;:::-;-1:-1:-1;17558:9:1;;17397:176::o;17578:262::-;17617:7;17649:10;17686:2;17683:1;17679:10;17716:2;17713:1;17709:10;17772:3;17768:2;17764:12;17759:3;17756:21;17749:3;17742:11;17735:19;17731:47;17728:2;;;17781:18;;:::i;:::-;17821:13;;17629:211;-1:-1:-1;;;;17629:211:1:o;17845:125::-;17885:4;17913:1;17910;17907:8;17904:2;;;17918:18;;:::i;:::-;-1:-1:-1;17955:9:1;;17894:76::o;17975:112::-;18007:1;18033;18023:2;;18038:18;;:::i;:::-;-1:-1:-1;18072:9:1;;18013:74::o;18092:193::-;18127:3;18158:66;18151:5;18148:77;18145:2;;;18228:18;;:::i;:::-;18264:15;;18135:150::o;18290:184::-;18342:77;18339:1;18332:88;18439:4;18436:1;18429:15;18463:4;18460:1;18453:15;18479:184;18531:77;18528:1;18521:88;18628:4;18625:1;18618:15;18652:4;18649:1;18642:15;18668:154;-1:-1:-1;;;;;18747:5:1;18743:54;18736:5;18733:65;18723:2;;18812:1;18809;18802:12;18827:118;18913:5;18906:13;18899:21;18892:5;18889:32;18879:2;;18935:1;18932;18925:12;18950:121;19035:10;19028:5;19024:22;19017:5;19014:33;19004:2;;19061:1;19058;19051:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3011000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ATHvariance()": "infinite",
								"_buyEcosystemFee()": "1097",
								"_buyLiquidityFee()": "1117",
								"_buyMarketingFee()": "1095",
								"_buyTeamFee()": "1073",
								"_maxWalletAmount()": "1052",
								"_sellEcosystemFee()": "1053",
								"_sellLiquidityFee()": "1075",
								"_sellMarketingFee()": "1117",
								"_sellTeamFee()": "1074",
								"addBot(address)": "23010",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22605",
								"balanceOf(address)": "1332",
								"canBlackList()": "1111",
								"canChangeTax()": "1090",
								"canPause()": "1155",
								"configureStrongHands(bool,uint32)": "infinite",
								"cooldown()": "1193",
								"cooldownRemaining(address)": "infinite",
								"decimals()": "289",
								"diamondFloor()": "3624",
								"disableBlackListing()": "21888",
								"disablePauseAbility()": "21933",
								"disableTaxChange()": "21933",
								"disableToken()": "22749",
								"enableToken()": "21876",
								"excludeFromFee(address)": "22112",
								"includeInFee(address)": "22171",
								"isBot(address)": "1334",
								"manualSendToken(address)": "infinite",
								"manualsend()": "infinite",
								"manualswap()": "infinite",
								"name()": "infinite",
								"numTokensToSwap()": "1054",
								"openTrading(uint256)": "61960",
								"owner()": "1144",
								"pairPrice()": "infinite",
								"removeBot(address)": "22150",
								"renounceOwnership()": "24217",
								"setBuyTaxes(uint256,uint256,uint256,uint256)": "infinite",
								"setMaxWalletAmount(uint256)": "21442",
								"setSellTaxes(uint256,uint256,uint256,uint256)": "infinite",
								"setTransferTransactionMultiplier(uint256)": "21154",
								"symbol()": "infinite",
								"totalSupply()": "272",
								"tradingOpen()": "1120",
								"transfer(address,uint256)": "infinite",
								"transferFeeIncreaseFactor()": "1095",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uniswapV2Pair()": "1127",
								"updateEcosystemAddress(address)": "22101",
								"updateLpRecipient(address)": "22102",
								"updateMarketingAddress(address)": "22103",
								"updateNumTokensToSwap(uint256)": "21153",
								"updateTeamAddress(address)": "22059"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_checkPriceConditions()": "infinite",
								"_tokenTransfer(address,address,uint256,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_transferStandard(address,address,uint256)": "infinite",
								"addLiquidity(uint256,uint256)": "infinite",
								"removeAllFee()": "infinite",
								"restoreAllFee()": "infinite",
								"sendETHToFee(uint256)": "infinite",
								"swapAndLiquify(uint256,uint256)": "infinite",
								"swapTokensForEth(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8181,
									"end": 30040,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8181,
									"end": 30040,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8181,
									"end": 30040,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8784,
									"end": 8800,
									"name": "PUSH",
									"source": 0,
									"value": "2386F2AB5BCA00"
								},
								{
									"begin": 8750,
									"end": 8800,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8750,
									"end": 8800,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8839,
									"end": 8854,
									"name": "PUSH",
									"source": 0,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 8806,
									"end": 8854,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 8806,
									"end": 8854,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8950,
									"end": 8951,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8916,
									"end": 8951,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 8916,
									"end": 8951,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9019,
									"end": 9035,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 9019,
									"end": 9035,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8976,
									"end": 9035,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 8976,
									"end": 9035,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9075,
									"end": 9076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9041,
									"end": 9076,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 9041,
									"end": 9076,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9144,
									"end": 9160,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 9144,
									"end": 9160,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9101,
									"end": 9160,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 9101,
									"end": 9160,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9200,
									"end": 9201,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9166,
									"end": 9201,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 9166,
									"end": 9201,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9269,
									"end": 9285,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 9269,
									"end": 9285,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9226,
									"end": 9285,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 9226,
									"end": 9285,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9320,
									"end": 9321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9291,
									"end": 9321,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 9291,
									"end": 9321,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9384,
									"end": 9395,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 9384,
									"end": 9395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9346,
									"end": 9395,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 9346,
									"end": 9395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9454,
									"end": 9455,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9419,
									"end": 9455,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 9419,
									"end": 9455,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9524,
									"end": 9541,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 9524,
									"end": 9541,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9480,
									"end": 9541,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 9480,
									"end": 9541,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9582,
									"end": 9583,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9547,
									"end": 9583,
									"name": "PUSH",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 9547,
									"end": 9583,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9652,
									"end": 9669,
									"name": "PUSH",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 9652,
									"end": 9669,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9608,
									"end": 9669,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 9608,
									"end": 9669,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9710,
									"end": 9711,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9675,
									"end": 9711,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 9675,
									"end": 9711,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9780,
									"end": 9797,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 9780,
									"end": 9797,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9736,
									"end": 9797,
									"name": "PUSH",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 9736,
									"end": 9797,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9833,
									"end": 9834,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9803,
									"end": 9834,
									"name": "PUSH",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 9803,
									"end": 9834,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9898,
									"end": 9910,
									"name": "PUSH",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 9898,
									"end": 9910,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9859,
									"end": 9910,
									"name": "PUSH",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 9859,
									"end": 9910,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9959,
									"end": 9960,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9916,
									"end": 9960,
									"name": "PUSH",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 9916,
									"end": 9960,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10624,
									"end": 10631,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10624,
									"end": 10629,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 10624,
									"end": 10629,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10624,
									"end": 10629,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 10624,
									"end": 10631,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10624,
									"end": 10631,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 10624,
									"end": 10631,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 10624,
									"end": 10631,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10624,
									"end": 10631,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10572,
									"end": 10632,
									"name": "PUSH",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 10572,
									"end": 10632,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10572,
									"end": 10632,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10572,
									"end": 10632,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10572,
									"end": 10632,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10572,
									"end": 10632,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10572,
									"end": 10632,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 10572,
									"end": 10632,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 10572,
									"end": 10632,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10572,
									"end": 10632,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10572,
									"end": 10632,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10572,
									"end": 10632,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10572,
									"end": 10632,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10638,
									"end": 10693,
									"name": "PUSH",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 10638,
									"end": 10693,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10638,
									"end": 10693,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10638,
									"end": 10693,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10638,
									"end": 10693,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10638,
									"end": 10693,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10638,
									"end": 10693,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10638,
									"end": 10693,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10638,
									"end": 10693,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10638,
									"end": 10693,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10638,
									"end": 10693,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10699,
									"end": 10759,
									"name": "PUSH",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 10699,
									"end": 10759,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10699,
									"end": 10759,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10699,
									"end": 10759,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10699,
									"end": 10759,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10699,
									"end": 10759,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10699,
									"end": 10759,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10699,
									"end": 10759,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10699,
									"end": 10759,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10820,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 10765,
									"end": 10820,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10820,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10820,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10820,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10820,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10820,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10820,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10820,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10820,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10820,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10943,
									"end": 10974,
									"name": "PUSH",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 10943,
									"end": 10974,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10943,
									"end": 10974,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFFFFFFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11083,
									"end": 11114,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11083,
									"end": 11114,
									"name": "PUSH",
									"source": 0,
									"value": "101010000"
								},
								{
									"begin": 11083,
									"end": 11114,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11083,
									"end": 11114,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11083,
									"end": 11114,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11520,
									"end": 12296,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 11520,
									"end": 12296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11520,
									"end": 12296,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11520,
									"end": 12296,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 11520,
									"end": 12296,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11520,
									"end": 12296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11520,
									"end": 12296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11520,
									"end": 12296,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11520,
									"end": 12296,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 11520,
									"end": 12296,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 11654,
									"end": 11669,
									"name": "PUSH",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 11654,
									"end": 11688,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11654,
									"end": 11688,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11654,
									"end": 11688,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11601,
									"end": 11643,
									"name": "PUSH",
									"source": 0,
									"value": "10ED43C718714EB63D5AA57B78B54704E256024E"
								},
								{
									"begin": 11654,
									"end": 11688,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11654,
									"end": 11688,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11654,
									"end": 11688,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11654,
									"end": 11688,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11654,
									"end": 11688,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11654,
									"end": 11688,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11698,
									"end": 11756,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 11715,
									"end": 11719,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 11601,
									"end": 11643,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8641,
									"end": 8659,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 11698,
									"end": 11706,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 11698,
									"end": 11756,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11698,
									"end": 11756,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 11698,
									"end": 11756,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11816,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11800,
									"end": 11824,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11824,
									"name": "PUSH",
									"source": 0,
									"value": "C45A0155"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 11800,
									"end": 11826,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11782,
									"end": 11838,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11838,
									"name": "PUSH",
									"source": 0,
									"value": "C9C65396"
								},
								{
									"begin": 11847,
									"end": 11851,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11870,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11854,
									"end": 11875,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11875,
									"name": "PUSH",
									"source": 0,
									"value": "AD5C4648"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 11854,
									"end": 11877,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 861,
									"end": 876,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 861,
									"end": 876,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 861,
									"end": 876,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 843,
									"end": 877,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 913,
									"end": 928,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 913,
									"end": 928,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 893,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 893,
									"end": 911,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 893,
									"end": 911,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 886,
									"end": 929,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 778,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 778,
									"end": 796,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 11782,
									"end": 11878,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11766,
									"end": 11779,
									"name": "PUSH",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 11766,
									"end": 11878,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11766,
									"end": 11878,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11766,
									"end": 11878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11766,
									"end": 11878,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11766,
									"end": 11878,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11766,
									"end": 11878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11766,
									"end": 11878,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11766,
									"end": 11878,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11766,
									"end": 11878,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11766,
									"end": 11878,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11766,
									"end": 11878,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11766,
									"end": 11878,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11926,
									"end": 11941,
									"name": "PUSH",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 11926,
									"end": 11941,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11926,
									"end": 11941,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11926,
									"end": 11941,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1165,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1181,
									"end": 1199,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1181,
									"end": 1199,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1199,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1174,
									"end": 1208,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11766,
									"end": 11878,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11917,
									"name": "PUSH",
									"source": 0,
									"value": "95EA7B3"
								},
								{
									"begin": 11888,
									"end": 11917,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1105,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1087,
									"end": 1105,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 11888,
									"end": 11961,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8641,
									"end": 8659,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 11972,
									"end": 11984,
									"name": "PUSH",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 11972,
									"end": 11994,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11972,
									"end": 11994,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11972,
									"end": 11994,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12059,
									"end": 12075,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12059,
									"end": 12085,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12059,
									"end": 12085,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12059,
									"end": 12085,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 12104,
									"end": 12127,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12104,
									"end": 12127,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12104,
									"end": 12127,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12104,
									"end": 12113,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 12104,
									"end": 12127,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12104,
									"end": 12127,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12104,
									"end": 12127,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12104,
									"end": 12127,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12104,
									"end": 12127,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12104,
									"end": 12127,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12104,
									"end": 12127,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12104,
									"end": 12137,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12104,
									"end": 12137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12104,
									"end": 12137,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12174,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12174,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12165,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12147,
									"end": 12174,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12174,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12174,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12174,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12174,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12181,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12181,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12177,
									"end": 12181,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 12147,
									"end": 12181,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12181,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12181,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12181,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12181,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12147,
									"end": 12181,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12218,
									"end": 12222,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 12191,
									"end": 12224,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12191,
									"end": 12224,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12191,
									"end": 12224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12191,
									"end": 12224,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12191,
									"end": 12224,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12191,
									"end": 12231,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12191,
									"end": 12231,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12191,
									"end": 12231,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12191,
									"end": 12231,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12191,
									"end": 12231,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12191,
									"end": 12231,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12191,
									"end": 12231,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12191,
									"end": 12231,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12191,
									"end": 12231,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12191,
									"end": 12231,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12246,
									"end": 12289,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 12246,
									"end": 12289,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 12246,
									"end": 12289,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2146,
									"end": 2164,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12246,
									"end": 12289,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12246,
									"end": 12289,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12246,
									"end": 12289,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12246,
									"end": 12289,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12246,
									"end": 12289,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12246,
									"end": 12289,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12246,
									"end": 12289,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 11520,
									"end": 12296,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8181,
									"end": 30040,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 8181,
									"end": 30040,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 3031,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2954,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2992,
									"end": 2999,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 3031,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14904,
									"end": 15234,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 14904,
									"end": 15234,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 14996,
									"end": 15015,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14996,
									"end": 15015,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1824,
									"end": 1826,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1827,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1863,
									"end": 1865,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1843,
									"end": 1861,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1861,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1861,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1836,
									"end": 1866,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1902,
									"end": 1936,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
								},
								{
									"begin": 1882,
									"end": 1900,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1882,
									"end": 1900,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1875,
									"end": 1937,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "72657373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1953,
									"end": 1971,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1953,
									"end": 1971,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1953,
									"end": 1971,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1980,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1997,
									"end": 2016,
									"name": "PUSH",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 1997,
									"end": 2016,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 14988,
									"end": 15056,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15074,
									"end": 15095,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15074,
									"end": 15095,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15066,
									"end": 15134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 15066,
									"end": 15134,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15066,
									"end": 15134,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15066,
									"end": 15134,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 15066,
									"end": 15134,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15066,
									"end": 15134,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1423,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15066,
									"end": 15134,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 15066,
									"end": 15134,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15066,
									"end": 15134,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1460,
									"end": 1462,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1440,
									"end": 1458,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1440,
									"end": 1458,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1440,
									"end": 1458,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1463,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1499,
									"end": 1533,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
								},
								{
									"begin": 1479,
									"end": 1497,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1479,
									"end": 1497,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1497,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1534,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1550,
									"end": 1568,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1550,
									"end": 1568,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1568,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1543,
									"end": 1575,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1611,
									"name": "PUSH",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 1592,
									"end": 1611,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15066,
									"end": 15134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 1393,
									"end": 1617,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 15066,
									"end": 15134,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 15066,
									"end": 15134,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15144,
									"end": 15162,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15162,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15162,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15162,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15144,
									"end": 15162,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15162,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15162,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15155,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 15144,
									"end": 15162,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15144,
									"end": 15162,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15162,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15162,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15162,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15144,
									"end": 15162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15162,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15162,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15171,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15171,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15171,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15171,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15171,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15171,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15171,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15171,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15171,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15171,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15171,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15171,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15171,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15180,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15180,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15144,
									"end": 15180,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 15195,
									"end": 15227,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15195,
									"end": 15227,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15195,
									"end": 15227,
									"name": "PUSH",
									"source": 0,
									"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
								},
								{
									"begin": 15195,
									"end": 15227,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2146,
									"end": 2164,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15195,
									"end": 15227,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15195,
									"end": 15227,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15195,
									"end": 15227,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15195,
									"end": 15227,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15195,
									"end": 15227,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 15195,
									"end": 15227,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15195,
									"end": 15227,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 14904,
									"end": 15234,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14904,
									"end": 15234,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14904,
									"end": 15234,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14904,
									"end": 15234,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 324,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 14,
									"end": 324,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 158,
									"end": 164,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 150,
									"end": 156,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 143,
									"end": 165,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 189,
									"end": 205,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 189,
									"end": 205,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 234,
									"end": 265,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 234,
									"end": 265,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 224,
									"end": 266,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 266,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 214,
									"end": 216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 285,
									"end": 291,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 270,
									"end": 292,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 214,
									"end": 216,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 313,
									"end": 318,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 95,
									"end": 324,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 95,
									"end": 324,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 329,
									"end": 626,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 329,
									"end": 626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 451,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 437,
									"end": 446,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 428,
									"end": 435,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 424,
									"end": 447,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 420,
									"end": 452,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 417,
									"end": 419,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 417,
									"end": 419,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 417,
									"end": 419,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 470,
									"end": 476,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 462,
									"end": 468,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 455,
									"end": 477,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 417,
									"end": 419,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 417,
									"end": 419,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 507,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 501,
									"end": 517,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 560,
									"end": 565,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 553,
									"end": 566,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 546,
									"end": 567,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 539,
									"end": 544,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 536,
									"end": 568,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 526,
									"end": 528,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 526,
									"end": 528,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 587,
									"end": 593,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 579,
									"end": 585,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 572,
									"end": 594,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2128,
									"end": 2204,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2128,
									"end": 2204,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8181,
									"end": 30040,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8181,
									"end": 30040,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8181,
									"end": 30040,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8181,
									"end": 30040,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8181,
									"end": 30040,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8181,
									"end": 30040,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8181,
									"end": 30040,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220894b57c4ff6e6aa8c5d68bd6d06793f5b17eec86097caabdd2b4bde29c00c7bf64736f6c63430008040033",
									".code": [
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "80670F3C"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "C95457FF"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "F480FEC2"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "FFB54A99"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "FFECF516"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "E315A6DA"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "E4BF1BED"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "EA2F0B37"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "D1633649"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "D1633649"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "D55CB78A"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "DB0045EC"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "DC44B6A0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "C95457FF"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "CAB03471"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "CDB3858F"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "9D82190F"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "C3C8CD80"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "C3C8CD80"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "C469B6DD"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "C5D24189"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "C8607952"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "9D82190F"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "A850673D"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "8E360253"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "8E360253"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "9491F94D"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "99A7B9BC"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "80670F3C"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "88790A68"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "39A53C4E"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "6C0A24EB"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "729CB3F2"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "72B2AECC"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "787A08A6"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "6C0A24EB"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "6FC3EAEC"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "437823EC"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "437823EC"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "49BD5A5E"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "5FECD926"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "6AABFF3F"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "39A53C4E"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "3BBAC579"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "3E0F966D"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "248DD232"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "29409395"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "29409395"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "301AD558"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "323BE1C5"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "248DD232"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "27A14FC2"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "2843631D"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "14EB76AC"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "14EB76AC"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "2369BF83"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "1A6C43B"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6702,
											"end": 6727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6690,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6675,
											"end": 6693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8854,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "PUSH",
											"source": 0,
											"value": "4761696E5A696C6C610000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 12302,
											"end": 12394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5754,
											"end": 5768,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5769,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5729,
											"end": 5770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5729,
											"end": 5770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5702,
											"end": 5720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5684,
											"end": 5776,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12600,
											"end": 12695,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12600,
											"end": 12695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12600,
											"end": 12695,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12600,
											"end": 12695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12600,
											"end": 12695,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12600,
											"end": 12695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12600,
											"end": 12695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12600,
											"end": 12695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12600,
											"end": 12695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12600,
											"end": 12695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12600,
											"end": 12695,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12600,
											"end": 12695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8641,
											"end": 8659,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 12600,
											"end": 12695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12600,
											"end": 12695,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9547,
											"end": 9583,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9041,
											"end": 9076,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "PUSH",
											"source": 0,
											"value": "1000000"
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11046,
											"end": 11077,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12502,
											"end": 12594,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12502,
											"end": 12594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12502,
											"end": 12594,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12502,
											"end": 12594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12502,
											"end": 12594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12502,
											"end": 12594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12502,
											"end": 12594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12502,
											"end": 12594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12502,
											"end": 12594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12502,
											"end": 12594,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12502,
											"end": 12594,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12502,
											"end": 12594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12502,
											"end": 12594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12502,
											"end": 12594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8417,
											"end": 8418,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17040,
											"end": 17076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17040,
											"end": 17076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17028,
											"end": 17030,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17013,
											"end": 17031,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12502,
											"end": 12594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16995,
											"end": 17082,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11040,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11114,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12900,
											"end": 12913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12877,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12900,
											"end": 12913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12900,
											"end": 12913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12900,
											"end": 12913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12900,
											"end": 12904,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12900,
											"end": 12913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12900,
											"end": 12913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12900,
											"end": 12913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12900,
											"end": 12913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12900,
											"end": 12913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12900,
											"end": 12913,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12900,
											"end": 12913,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12900,
											"end": 12913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12900,
											"end": 12913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12920,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4577,
											"end": 4632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4632,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4632,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10874,
											"end": 10902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4514,
											"end": 4639,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12802,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9960,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6446,
											"end": 6487,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6446,
											"end": 6487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6545,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6523,
											"end": 6546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6523,
											"end": 6546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6523,
											"end": 6546,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6401,
											"end": 6553,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 9455,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12400,
											"end": 12496,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 12400,
											"end": 12496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12400,
											"end": 12496,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12400,
											"end": 12496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12400,
											"end": 12496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12400,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 12400,
											"end": 12496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12400,
											"end": 12496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12400,
											"end": 12496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12400,
											"end": 12496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12400,
											"end": 12496,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 12400,
											"end": 12496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "PUSH",
											"source": 0,
											"value": "4741494E5A494C4C410000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12482,
											"end": 12489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12400,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12400,
											"end": 12496,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16733,
											"end": 16758,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16733,
											"end": 16758,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16733,
											"end": 16758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16789,
											"end": 16791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16774,
											"end": 16792,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16774,
											"end": 16792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16767,
											"end": 16801,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16767,
											"end": 16801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16767,
											"end": 16801,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16767,
											"end": 16801,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 16835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 16835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 16835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16810,
											"end": 16844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16875,
											"end": 16877,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16860,
											"end": 16878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16860,
											"end": 16878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16853,
											"end": 16887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16720,
											"end": 16723,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16705,
											"end": 16724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16687,
											"end": 16893,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9201,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9711,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6044,
											"end": 6066,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6026,
											"end": 6067,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6026,
											"end": 6067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6115,
											"end": 6121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 6103,
											"end": 6122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6103,
											"end": 6122,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6103,
											"end": 6122,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6098,
											"end": 6100,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6083,
											"end": 6101,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6083,
											"end": 6101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6076,
											"end": 6123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6209,
											"end": 6223,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6224,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6199,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6182,
											"end": 6200,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6182,
											"end": 6200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6175,
											"end": 6225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6256,
											"end": 6259,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6241,
											"end": 6260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6269,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6016,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5998,
											"end": 6017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10490,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5980,
											"end": 6275,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9803,
											"end": 9834,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 8951,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13222,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13238,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13238,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13238,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13238,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13238,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13102,
											"end": 13245,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10974,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13328,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13344,
											"end": 13383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13367,
											"end": 13374,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13376,
											"end": 13382,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13344,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 13344,
											"end": 13383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13344,
											"end": 13383,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 13344,
											"end": 13383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13400,
											"end": 13404,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13251,
											"end": 13411,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28340,
											"end": 28352,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28340,
											"end": 28366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28340,
											"end": 28366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28340,
											"end": 28366,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 28340,
											"end": 28366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28340,
											"end": 28366,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28340,
											"end": 28366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28340,
											"end": 28366,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28340,
											"end": 28366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28340,
											"end": 28366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28340,
											"end": 28366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28340,
											"end": 28366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28340,
											"end": 28366,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28340,
											"end": 28366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28340,
											"end": 28366,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28253,
											"end": 28373,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28200,
											"end": 28217,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28200,
											"end": 28236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28200,
											"end": 28236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28200,
											"end": 28236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 28200,
											"end": 28236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28200,
											"end": 28236,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28200,
											"end": 28236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28200,
											"end": 28236,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28200,
											"end": 28236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28200,
											"end": 28236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28200,
											"end": 28236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28200,
											"end": 28236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28200,
											"end": 28236,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28200,
											"end": 28236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28200,
											"end": 28236,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28103,
											"end": 28243,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13517,
											"end": 13521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13533,
											"end": 13569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 13543,
											"end": 13549,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13551,
											"end": 13560,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13562,
											"end": 13568,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13533,
											"end": 13542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 13533,
											"end": 13569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13533,
											"end": 13569,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 13533,
											"end": 13569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13579,
											"end": 13697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 13588,
											"end": 13594,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 13646,
											"end": 13652,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "PUSH data",
											"source": 0,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13608,
											"end": 13627,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13608,
											"end": 13627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13619,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13608,
											"end": 13627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13608,
											"end": 13627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13608,
											"end": 13627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13627,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13627,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13641,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13641,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 13608,
											"end": 13696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13579,
											"end": 13587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 13579,
											"end": 13697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13579,
											"end": 13697,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 13579,
											"end": 13697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13714,
											"end": 13718,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13417,
											"end": 13725,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25970,
											"end": 25987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 8641,
											"end": 8659,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 25982,
											"end": 25986,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 25970,
											"end": 25981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 25970,
											"end": 25987,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25970,
											"end": 25987,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 25970,
											"end": 25987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25951,
											"end": 25966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25951,
											"end": 25987,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25951,
											"end": 25987,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25943,
											"end": 26034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 25943,
											"end": 26034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25943,
											"end": 26034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25943,
											"end": 26034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25943,
											"end": 26034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25943,
											"end": 26034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11439,
											"end": 11441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25943,
											"end": 26034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25943,
											"end": 26034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25943,
											"end": 26034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11421,
											"end": 11442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11480,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 11458,
											"end": 11476,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11458,
											"end": 11476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11458,
											"end": 11476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11517,
											"end": 11551,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E20302E3125"
										},
										{
											"begin": 11497,
											"end": 11515,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11497,
											"end": 11515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11497,
											"end": 11515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11490,
											"end": 11552,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11588,
											"end": 11600,
											"name": "PUSH",
											"source": 1,
											"value": "206F6620737570706C7900000000000000000000000000000000000000000000"
										},
										{
											"begin": 11568,
											"end": 11586,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11568,
											"end": 11586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11568,
											"end": 11586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11561,
											"end": 11601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11618,
											"end": 11637,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11618,
											"end": 11637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25943,
											"end": 26034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 11411,
											"end": 11643,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25943,
											"end": 26034,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 25943,
											"end": 26034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8659,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 26052,
											"end": 26067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26078,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26078,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26044,
											"end": 26131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 26044,
											"end": 26131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26044,
											"end": 26131,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26044,
											"end": 26131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26044,
											"end": 26131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26044,
											"end": 26131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13023,
											"end": 13025,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26044,
											"end": 26131,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26044,
											"end": 26131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26044,
											"end": 26131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13062,
											"end": 13064,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 13042,
											"end": 13060,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13042,
											"end": 13060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13042,
											"end": 13060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13035,
											"end": 13065,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13101,
											"end": 13135,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D757374206265206C657373207468616E206F722065717561"
										},
										{
											"begin": 13081,
											"end": 13099,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13081,
											"end": 13099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13081,
											"end": 13099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13074,
											"end": 13136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13172,
											"end": 13190,
											"name": "PUSH",
											"source": 1,
											"value": "6C20746F20746F74616C537570706C7900000000000000000000000000000000"
										},
										{
											"begin": 13152,
											"end": 13170,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13152,
											"end": 13170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13152,
											"end": 13170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13145,
											"end": 13191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13227,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13208,
											"end": 13227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26044,
											"end": 26131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12995,
											"end": 13233,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26044,
											"end": 26131,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 26044,
											"end": 26131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26141,
											"end": 26157,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26141,
											"end": 26175,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25859,
											"end": 26182,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22886,
											"end": 22890,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22837,
											"end": 22851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22837,
											"end": 22851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22854,
											"end": 22877,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22877,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22854,
											"end": 22877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 22854,
											"end": 22892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22837,
											"end": 22892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22837,
											"end": 22892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22909,
											"end": 22914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22902,
											"end": 22924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22924,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 22925,
											"end": 22932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22925,
											"end": 22932,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 22925,
											"end": 22932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4836,
											"end": 4891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4891,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4818,
											"end": 4892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4926,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4908,
											"end": 4926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 4935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 4935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 4935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4791,
											"end": 4809,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4791,
											"end": 4809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22902,
											"end": 22941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22766,
											"end": 22948,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22150,
											"end": 22158,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22150,
											"end": 22158,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22150,
											"end": 22158,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 22150,
											"end": 22158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22150,
											"end": 22158,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22150,
											"end": 22158,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22150,
											"end": 22158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22142,
											"end": 22193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 22142,
											"end": 22193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22142,
											"end": 22193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22142,
											"end": 22193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22142,
											"end": 22193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22142,
											"end": 22193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7607,
											"end": 7609,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22142,
											"end": 22193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22142,
											"end": 22193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22142,
											"end": 22193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7589,
											"end": 7610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7648,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 7626,
											"end": 7644,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7626,
											"end": 7644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7685,
											"end": 7717,
											"name": "PUSH",
											"source": 1,
											"value": "7468697320636F6E74726163742063616E6E6F74206265207061757365640000"
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7735,
											"end": 7753,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7735,
											"end": 7753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22142,
											"end": 22193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 7579,
											"end": 7759,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22142,
											"end": 22193,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 22142,
											"end": 22193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22203,
											"end": 22214,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22203,
											"end": 22222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22203,
											"end": 22222,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22203,
											"end": 22222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22203,
											"end": 22222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22203,
											"end": 22222,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22087,
											"end": 22229,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25172,
											"end": 25199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25172,
											"end": 25199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25172,
											"end": 25199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25172,
											"end": 25199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25172,
											"end": 25199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25172,
											"end": 25190,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25172,
											"end": 25199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25172,
											"end": 25199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25172,
											"end": 25199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25172,
											"end": 25199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25172,
											"end": 25199,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25172,
											"end": 25206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25172,
											"end": 25206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25172,
											"end": 25206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25202,
											"end": 25206,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25172,
											"end": 25206,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25172,
											"end": 25206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25172,
											"end": 25206,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25213,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25408,
											"end": 25421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25424,
											"end": 25429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25408,
											"end": 25421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25408,
											"end": 25421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25408,
											"end": 25421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25408,
											"end": 25412,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25408,
											"end": 25421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25408,
											"end": 25421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25408,
											"end": 25421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25408,
											"end": 25421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25408,
											"end": 25421,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25408,
											"end": 25429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25408,
											"end": 25429,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25408,
											"end": 25429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25408,
											"end": 25429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25408,
											"end": 25429,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25436,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22305,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22297,
											"end": 22313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22313,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFF"
										},
										{
											"begin": 22297,
											"end": 22313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22313,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22235,
											"end": 22320,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22616,
											"end": 22637,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 22651,
											"end": 22673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22651,
											"end": 22673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22647,
											"end": 22754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 22647,
											"end": 22754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22724,
											"end": 22742,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22724,
											"end": 22742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22724,
											"end": 22742,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22647,
											"end": 22754,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 22647,
											"end": 22754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22760,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 3990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28725,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 28717,
											"end": 28743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28717,
											"end": 28743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28743,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28773,
											"end": 28793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 28773,
											"end": 28781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28784,
											"end": 28793,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 28773,
											"end": 28793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 28773,
											"end": 28793,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28773,
											"end": 28793,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 28773,
											"end": 28793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28761,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FF"
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28753,
											"end": 28793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28627,
											"end": 28800,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29412,
											"end": 29433,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 29412,
											"end": 29433,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29394,
											"end": 29400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29394,
											"end": 29400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29408,
											"end": 29448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 29408,
											"end": 29448,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29447,
											"end": 29448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29447,
											"end": 29448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29408,
											"end": 29448,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 29408,
											"end": 29448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29477,
											"end": 29488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 29477,
											"end": 29486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 29477,
											"end": 29488,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29477,
											"end": 29488,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 29477,
											"end": 29488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29521,
											"end": 29542,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 29521,
											"end": 29542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29454,
											"end": 29488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29506,
											"end": 29542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 29542,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 29506,
											"end": 30031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29999,
											"end": 30020,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 29999,
											"end": 30020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29860,
											"end": 30021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 29860,
											"end": 30021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29860,
											"end": 29923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 29917,
											"end": 29922,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 29860,
											"end": 29899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 29999,
											"end": 30020,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29886,
											"end": 29898,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29860,
											"end": 29885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 29860,
											"end": 29899,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29860,
											"end": 29899,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 29860,
											"end": 29899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29860,
											"end": 29916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29860,
											"end": 29916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 29860,
											"end": 29923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29860,
											"end": 29923,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 29860,
											"end": 29923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29860,
											"end": 29998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29860,
											"end": 29998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 29860,
											"end": 30021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29860,
											"end": 30021,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 29860,
											"end": 30021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 30031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 29839,
											"end": 30031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 30031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 29839,
											"end": 30031,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29839,
											"end": 30031,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 29839,
											"end": 30031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 29506,
											"end": 30031,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29506,
											"end": 30031,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 29506,
											"end": 30031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29754,
											"end": 29775,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 29754,
											"end": 29775,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29615,
											"end": 29776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 29615,
											"end": 29776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29615,
											"end": 29678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 29672,
											"end": 29677,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 29615,
											"end": 29654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 29615,
											"end": 29627,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29754,
											"end": 29775,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29615,
											"end": 29631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 29615,
											"end": 29654,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29615,
											"end": 29776,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 29615,
											"end": 29776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 30031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 30031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29499,
											"end": 30031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 30038,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22067,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22056,
											"end": 22074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22074,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22056,
											"end": 22074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22070,
											"end": 22074,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22056,
											"end": 22074,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22056,
											"end": 22074,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22002,
											"end": 22081,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19723,
											"end": 19730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19743,
											"end": 19759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19761,
											"end": 19777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19797,
											"end": 19810,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 19797,
											"end": 19810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19797,
											"end": 19810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19797,
											"end": 19810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19797,
											"end": 19810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19797,
											"end": 19810,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19797,
											"end": 19810,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 19797,
											"end": 19810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19797,
											"end": 19810,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19797,
											"end": 19810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19782,
											"end": 19823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19823,
											"name": "PUSH",
											"source": 0,
											"value": "902F1AC"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 19782,
											"end": 19825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19742,
											"end": 19825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19742,
											"end": 19825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19742,
											"end": 19825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19742,
											"end": 19825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19742,
											"end": 19825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19839,
											"end": 19847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19839,
											"end": 19852,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19839,
											"end": 19852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19851,
											"end": 19852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19839,
											"end": 19852,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19839,
											"end": 19869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19839,
											"end": 19869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 19839,
											"end": 19869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19856,
											"end": 19869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19856,
											"end": 19869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19839,
											"end": 19869,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 19839,
											"end": 19869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19835,
											"end": 19879,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19835,
											"end": 19879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 19835,
											"end": 19879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19871,
											"end": 19879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19871,
											"end": 19879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19871,
											"end": 19879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19871,
											"end": 19879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19835,
											"end": 19879,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 19835,
											"end": 19879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19920,
											"end": 19933,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 19920,
											"end": 19933,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "PUSH",
											"source": 0,
											"value": "DFE168100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19955,
											"end": 19959,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 19955,
											"end": 19959,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19920,
											"end": 19933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19920,
											"end": 19933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19941,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 19905,
											"end": 19941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19920,
											"end": 19933,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 19905,
											"end": 19943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19905,
											"end": 19960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 19960,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 20090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 19905,
											"end": 20090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20040,
											"end": 20090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 20072,
											"end": 20089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20072,
											"end": 20089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20072,
											"end": 20089,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20072,
											"end": 20089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20072,
											"end": 20089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20040,
											"end": 20067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 20040,
											"end": 20067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20040,
											"end": 20057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20040,
											"end": 20057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20062,
											"end": 20066,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 20040,
											"end": 20061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 20040,
											"end": 20067,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20040,
											"end": 20090,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 20040,
											"end": 20090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 20090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 19905,
											"end": 20090,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19905,
											"end": 20090,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 19905,
											"end": 20090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19975,
											"end": 20025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 20007,
											"end": 20024,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20007,
											"end": 20024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20007,
											"end": 20024,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20007,
											"end": 20024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20007,
											"end": 20024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19975,
											"end": 20002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 19975,
											"end": 20002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19975,
											"end": 19992,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19975,
											"end": 19992,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19997,
											"end": 20001,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 19975,
											"end": 19996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 19975,
											"end": 20002,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19975,
											"end": 20025,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 19975,
											"end": 20025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19898,
											"end": 20090,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19898,
											"end": 20090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19898,
											"end": 20090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19898,
											"end": 20090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19681,
											"end": 20097,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27920,
											"end": 27932,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 27920,
											"end": 27940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27920,
											"end": 27940,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27920,
											"end": 27940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFF"
										},
										{
											"begin": 27920,
											"end": 27940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27920,
											"end": 27940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27920,
											"end": 27940,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27861,
											"end": 27947,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29009,
											"end": 29037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29009,
											"end": 29037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29009,
											"end": 29037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29009,
											"end": 29037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29009,
											"end": 29037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29009,
											"end": 29028,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 29009,
											"end": 29037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29009,
											"end": 29037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29009,
											"end": 29037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29009,
											"end": 29037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29009,
											"end": 29037,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29009,
											"end": 29037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29040,
											"end": 29055,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 29009,
											"end": 29124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 29009,
											"end": 29124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29123,
											"end": 29124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29009,
											"end": 29124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 29009,
											"end": 29124,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29009,
											"end": 29124,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 29009,
											"end": 29124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29071,
											"end": 29099,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29071,
											"end": 29099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29071,
											"end": 29099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29071,
											"end": 29099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29071,
											"end": 29099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29071,
											"end": 29099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29071,
											"end": 29090,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 29071,
											"end": 29099,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29071,
											"end": 29099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29071,
											"end": 29099,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29071,
											"end": 29099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29071,
											"end": 29099,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29071,
											"end": 29099,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29071,
											"end": 29120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 29071,
											"end": 29120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29104,
											"end": 29119,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29071,
											"end": 29103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 29071,
											"end": 29120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29071,
											"end": 29120,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 29071,
											"end": 29120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28989,
											"end": 29124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29151,
											"end": 29171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 28989,
											"end": 29124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29165,
											"end": 29170,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 29151,
											"end": 29164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 29151,
											"end": 29171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29151,
											"end": 29171,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 29151,
											"end": 29171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29143,
											"end": 29171,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29181,
											"end": 29199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 29194,
											"end": 29199,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 29181,
											"end": 29199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29181,
											"end": 29199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 29181,
											"end": 29199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29181,
											"end": 29199,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 29181,
											"end": 29199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29181,
											"end": 29199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29218,
											"end": 29237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 29181,
											"end": 29199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29232,
											"end": 29236,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 29218,
											"end": 29231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 29218,
											"end": 29237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29218,
											"end": 29237,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 29218,
											"end": 29237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29237,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29247,
											"end": 29264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 29260,
											"end": 29264,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 29247,
											"end": 29264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29247,
											"end": 29264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 29247,
											"end": 29264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29247,
											"end": 29264,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 29247,
											"end": 29264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29247,
											"end": 29264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29285,
											"end": 29302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 29247,
											"end": 29264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29299,
											"end": 29301,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 29285,
											"end": 29298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 29285,
											"end": 29302,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29285,
											"end": 29302,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 29285,
											"end": 29302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29274,
											"end": 29302,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29323,
											"end": 29337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 29335,
											"end": 29337,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 29323,
											"end": 29332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29323,
											"end": 29337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 29323,
											"end": 29337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29323,
											"end": 29337,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 29323,
											"end": 29337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29312,
											"end": 29337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29312,
											"end": 29337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28806,
											"end": 29344,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25807,
											"end": 25832,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25807,
											"end": 25846,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25853,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 12930,
											"end": 13096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13026,
											"end": 13068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13050,
											"end": 13059,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13061,
											"end": 13067,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13026,
											"end": 13035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 13026,
											"end": 13068,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 22326,
											"end": 22528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22427,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22379,
											"end": 22402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12802,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22443,
											"end": 22462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22443,
											"end": 22462,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22439,
											"end": 22522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 22439,
											"end": 22522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22478,
											"end": 22511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 22495,
											"end": 22510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22478,
											"end": 22494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 22478,
											"end": 22511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28479,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28467,
											"end": 28493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 28467,
											"end": 28493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28467,
											"end": 28493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28493,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28493,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28380,
											"end": 28500,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21914,
											"end": 21929,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 21900,
											"end": 21911,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21900,
											"end": 21929,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21939,
											"end": 21949,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21939,
											"end": 21961,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21971,
											"end": 21982,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 21971,
											"end": 21989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21971,
											"end": 21989,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21971,
											"end": 21989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21985,
											"end": 21989,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21971,
											"end": 21989,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21971,
											"end": 21989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21971,
											"end": 21989,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21996,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25676,
											"end": 25688,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 25676,
											"end": 25696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25676,
											"end": 25696,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25676,
											"end": 25696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFF"
										},
										{
											"begin": 25676,
											"end": 25696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25676,
											"end": 25696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25676,
											"end": 25696,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25614,
											"end": 25703,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28067,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28050,
											"end": 28086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28086,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28086,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 28050,
											"end": 28086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28050,
											"end": 28086,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28086,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28086,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28050,
											"end": 28086,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27953,
											"end": 28093,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28587,
											"end": 28602,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28587,
											"end": 28614,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28506,
											"end": 28621,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26323,
											"end": 26339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26342,
											"end": 26403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 26390,
											"end": 26402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26342,
											"end": 26385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 26377,
											"end": 26384,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26342,
											"end": 26385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26342,
											"end": 26354,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26359,
											"end": 26371,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26342,
											"end": 26358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 26342,
											"end": 26372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26342,
											"end": 26372,
											"name": "tag",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 26342,
											"end": 26372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26342,
											"end": 26376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26342,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 26342,
											"end": 26385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26342,
											"end": 26403,
											"name": "tag",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 26342,
											"end": 26403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26323,
											"end": 26403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26323,
											"end": 26403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26433,
											"end": 26436,
											"name": "PUSH",
											"source": 0,
											"value": "FA"
										},
										{
											"begin": 26421,
											"end": 26429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26421,
											"end": 26436,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26421,
											"end": 26436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 26413,
											"end": 26490,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26413,
											"end": 26490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26413,
											"end": 26490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 8372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26413,
											"end": 26490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26413,
											"end": 26490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8409,
											"end": 8411,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8382,
											"end": 8412,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8448,
											"end": 8482,
											"name": "PUSH",
											"source": 1,
											"value": "53756D206F66206275792066656573206D757374206265206C65737320746861"
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8421,
											"end": 8483,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8519,
											"end": 8538,
											"name": "PUSH",
											"source": 1,
											"value": "6E206F7220657175616C20746F20323525000000000000000000000000000000"
										},
										{
											"begin": 8499,
											"end": 8517,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8499,
											"end": 8517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8499,
											"end": 8517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8492,
											"end": 8539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8556,
											"end": 8575,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8556,
											"end": 8575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26413,
											"end": 26490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 8342,
											"end": 8581,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26413,
											"end": 26490,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 26413,
											"end": 26490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26520,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26508,
											"end": 26520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26520,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 26508,
											"end": 26520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26520,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26508,
											"end": 26520,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 26508,
											"end": 26520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26500,
											"end": 26549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 26500,
											"end": 26549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26500,
											"end": 26549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26500,
											"end": 26549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26500,
											"end": 26549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26500,
											"end": 26549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14257,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26500,
											"end": 26549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26500,
											"end": 26549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26500,
											"end": 26549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14237,
											"end": 14258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14294,
											"end": 14296,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14274,
											"end": 14292,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14274,
											"end": 14292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14274,
											"end": 14292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14267,
											"end": 14297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14333,
											"end": 14359,
											"name": "PUSH",
											"source": 1,
											"value": "546869732066756E6374696F6E20697320646961626C65640000000000000000"
										},
										{
											"begin": 14313,
											"end": 14331,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14313,
											"end": 14331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14313,
											"end": 14331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14306,
											"end": 14360,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14377,
											"end": 14395,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14377,
											"end": 14395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26500,
											"end": 26549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 14227,
											"end": 14401,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26500,
											"end": 26549,
											"name": "tag",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 26500,
											"end": 26549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26560,
											"end": 26576,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 26560,
											"end": 26591,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26560,
											"end": 26591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26560,
											"end": 26591,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26601,
											"end": 26617,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26601,
											"end": 26632,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26601,
											"end": 26632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26601,
											"end": 26632,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26653,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 26642,
											"end": 26663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26642,
											"end": 26663,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26673,
											"end": 26689,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 26673,
											"end": 26704,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26673,
											"end": 26704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26673,
											"end": 26704,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26747,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 26723,
											"end": 26766,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26766,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26776,
											"end": 26800,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 26776,
											"end": 26819,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26776,
											"end": 26819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26776,
											"end": 26819,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26829,
											"end": 26848,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 26829,
											"end": 26862,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26829,
											"end": 26862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26829,
											"end": 26862,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26872,
											"end": 26896,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26872,
											"end": 26915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26872,
											"end": 26915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26872,
											"end": 26915,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26939,
											"end": 27004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26939,
											"end": 27004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26939,
											"end": 27004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16733,
											"end": 16758,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16733,
											"end": 16758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16733,
											"end": 16758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16789,
											"end": 16791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16774,
											"end": 16792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16774,
											"end": 16792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16767,
											"end": 16801,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16767,
											"end": 16801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16767,
											"end": 16801,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 16835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 16835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 16835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16810,
											"end": 16844,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16810,
											"end": 16844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16810,
											"end": 16844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16875,
											"end": 16877,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16860,
											"end": 16878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16860,
											"end": 16878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16853,
											"end": 16887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16853,
											"end": 16887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16853,
											"end": 16887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26939,
											"end": 27004,
											"name": "PUSH",
											"source": 0,
											"value": "892B2CAA2D791BF7B8D9A49C4DB7A4513FF1AE2E0E068ED217F9D5AB4C1A28F0"
										},
										{
											"begin": 26939,
											"end": 27004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16720,
											"end": 16723,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16705,
											"end": 16724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26939,
											"end": 27004,
											"name": "tag",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 26939,
											"end": 27004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26939,
											"end": 27004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26939,
											"end": 27004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26939,
											"end": 27004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26939,
											"end": 27004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26939,
											"end": 27004,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26939,
											"end": 27004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26939,
											"end": 27004,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 27011,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25289,
											"end": 25316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25319,
											"end": 25324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25289,
											"end": 25316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25289,
											"end": 25316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25289,
											"end": 25316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25289,
											"end": 25316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25316,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25324,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25289,
											"end": 25324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25324,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25331,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9138,
											"end": 9140,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9120,
											"end": 9141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9179,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9157,
											"end": 9175,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9157,
											"end": 9175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9150,
											"end": 9180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9216,
											"end": 9250,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9196,
											"end": 9214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9287,
											"end": 9295,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9267,
											"end": 9285,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9267,
											"end": 9285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9267,
											"end": 9285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9260,
											"end": 9296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9313,
											"end": 9332,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9313,
											"end": 9332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 9110,
											"end": 9338,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "tag",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 3484,
											"end": 3492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 27017,
											"end": 27855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27153,
											"end": 27169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27172,
											"end": 27233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 27220,
											"end": 27232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 27207,
											"end": 27214,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27184,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 27189,
											"end": 27201,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 27172,
											"end": 27202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27172,
											"end": 27233,
											"name": "tag",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 27172,
											"end": 27233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27153,
											"end": 27233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27153,
											"end": 27233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27263,
											"end": 27266,
											"name": "PUSH",
											"source": 0,
											"value": "FA"
										},
										{
											"begin": 27251,
											"end": 27259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27251,
											"end": 27266,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27251,
											"end": 27266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27243,
											"end": 27321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 27243,
											"end": 27321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27243,
											"end": 27321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27243,
											"end": 27321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27243,
											"end": 27321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27243,
											"end": 27321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11020,
											"end": 11022,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27243,
											"end": 27321,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27243,
											"end": 27321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27243,
											"end": 27321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11002,
											"end": 11023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11059,
											"end": 11061,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 11039,
											"end": 11057,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11039,
											"end": 11057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11039,
											"end": 11057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11032,
											"end": 11062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11098,
											"end": 11132,
											"name": "PUSH",
											"source": 1,
											"value": "53756D206F662073656C6C2066656573206D757374206265206C657373207468"
										},
										{
											"begin": 11078,
											"end": 11096,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11078,
											"end": 11096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11071,
											"end": 11133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11169,
											"end": 11189,
											"name": "PUSH",
											"source": 1,
											"value": "616E206F7220657175616C20746F203235250000000000000000000000000000"
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11142,
											"end": 11190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11207,
											"end": 11226,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11207,
											"end": 11226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27243,
											"end": 27321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 10992,
											"end": 11232,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27243,
											"end": 27321,
											"name": "tag",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 27243,
											"end": 27321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27351,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 27339,
											"end": 27351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27351,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 27339,
											"end": 27351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27351,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27339,
											"end": 27351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 27331,
											"end": 27380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27331,
											"end": 27380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27331,
											"end": 27380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14257,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27331,
											"end": 27380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27331,
											"end": 27380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14237,
											"end": 14258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14294,
											"end": 14296,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14274,
											"end": 14292,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14274,
											"end": 14292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14274,
											"end": 14292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14267,
											"end": 14297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14333,
											"end": 14359,
											"name": "PUSH",
											"source": 1,
											"value": "546869732066756E6374696F6E20697320646961626C65640000000000000000"
										},
										{
											"begin": 14313,
											"end": 14331,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14313,
											"end": 14331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14313,
											"end": 14331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14306,
											"end": 14360,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14377,
											"end": 14395,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14377,
											"end": 14395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27331,
											"end": 27380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 14227,
											"end": 14401,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27331,
											"end": 27380,
											"name": "tag",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 27331,
											"end": 27380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27391,
											"end": 27408,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27391,
											"end": 27423,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27391,
											"end": 27423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27391,
											"end": 27423,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27450,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 27433,
											"end": 27465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27465,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27475,
											"end": 27487,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 27475,
											"end": 27497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27475,
											"end": 27497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27475,
											"end": 27497,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27507,
											"end": 27524,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 27507,
											"end": 27539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27507,
											"end": 27539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27507,
											"end": 27539,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27583,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 27558,
											"end": 27603,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27603,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27613,
											"end": 27638,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 27613,
											"end": 27658,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27613,
											"end": 27658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27613,
											"end": 27658,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27668,
											"end": 27688,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 27668,
											"end": 27703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27668,
											"end": 27703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27668,
											"end": 27703,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27713,
											"end": 27738,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27713,
											"end": 27758,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27713,
											"end": 27758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27713,
											"end": 27758,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27782,
											"end": 27848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27782,
											"end": 27848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27782,
											"end": 27848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16733,
											"end": 16758,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16733,
											"end": 16758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16733,
											"end": 16758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16789,
											"end": 16791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16774,
											"end": 16792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16774,
											"end": 16792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16767,
											"end": 16801,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16767,
											"end": 16801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16767,
											"end": 16801,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 16835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 16835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 16835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16810,
											"end": 16844,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16810,
											"end": 16844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16810,
											"end": 16844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16875,
											"end": 16877,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16860,
											"end": 16878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16860,
											"end": 16878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16853,
											"end": 16887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16853,
											"end": 16887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16853,
											"end": 16887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27782,
											"end": 27848,
											"name": "PUSH",
											"source": 0,
											"value": "439932620C72DDDEA29980C098BCA1A482729646D1216B226D723C6D278A30D1"
										},
										{
											"begin": 27782,
											"end": 27848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16720,
											"end": 16723,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16705,
											"end": 16724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27782,
											"end": 27848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 16687,
											"end": 16893,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12224,
											"end": 12406,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25514,
											"end": 25526,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 25514,
											"end": 25526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25514,
											"end": 25526,
											"name": "PUSH",
											"source": 0,
											"value": "1000000"
										},
										{
											"begin": 25514,
											"end": 25526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25514,
											"end": 25526,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25514,
											"end": 25526,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25514,
											"end": 25526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25506,
											"end": 25571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "576"
										},
										{
											"begin": 25506,
											"end": 25571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25506,
											"end": 25571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25506,
											"end": 25571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25506,
											"end": 25571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25506,
											"end": 25571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13440,
											"end": 13442,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25506,
											"end": 25571,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25506,
											"end": 25571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25506,
											"end": 25571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13422,
											"end": 13443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13479,
											"end": 13481,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 13459,
											"end": 13477,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13459,
											"end": 13477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13459,
											"end": 13477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13452,
											"end": 13482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13518,
											"end": 13552,
											"name": "PUSH",
											"source": 1,
											"value": "7468697320636F6E74726163742063616E6E6F7420626C61636B6C6973742061"
										},
										{
											"begin": 13498,
											"end": 13516,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13498,
											"end": 13516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13498,
											"end": 13516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13491,
											"end": 13553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13589,
											"end": 13599,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573736573000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13569,
											"end": 13587,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13569,
											"end": 13587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13562,
											"end": 13600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13617,
											"end": 13636,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13617,
											"end": 13636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25506,
											"end": 25571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 13412,
											"end": 13642,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25506,
											"end": 25571,
											"name": "tag",
											"source": 0,
											"value": "576"
										},
										{
											"begin": 25506,
											"end": 25571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25581,
											"end": 25594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25581,
											"end": 25594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25581,
											"end": 25594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25581,
											"end": 25594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25581,
											"end": 25594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25581,
											"end": 25585,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25581,
											"end": 25594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25581,
											"end": 25594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25581,
											"end": 25594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25581,
											"end": 25594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25581,
											"end": 25594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25581,
											"end": 25601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25581,
											"end": 25601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25581,
											"end": 25601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25597,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25581,
											"end": 25601,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25581,
											"end": 25601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25581,
											"end": 25601,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25442,
											"end": 25608,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14904,
											"end": 15234,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 14904,
											"end": 15234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14996,
											"end": 15015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14996,
											"end": 15015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14988,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 14988,
											"end": 15056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14988,
											"end": 15056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14988,
											"end": 15056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14988,
											"end": 15056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14988,
											"end": 15056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14610,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14988,
											"end": 15056,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14988,
											"end": 15056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14988,
											"end": 15056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 14649,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14627,
											"end": 14645,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14627,
											"end": 14645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14627,
											"end": 14645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14620,
											"end": 14650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14686,
											"end": 14720,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 14666,
											"end": 14684,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14666,
											"end": 14684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14666,
											"end": 14684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14659,
											"end": 14721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14757,
											"end": 14763,
											"name": "PUSH",
											"source": 1,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14737,
											"end": 14755,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14737,
											"end": 14755,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14737,
											"end": 14755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14730,
											"end": 14764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14781,
											"end": 14800,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14781,
											"end": 14800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14988,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 14580,
											"end": 14806,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14988,
											"end": 15056,
											"name": "tag",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 14988,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15074,
											"end": 15095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15074,
											"end": 15095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15066,
											"end": 15134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 15066,
											"end": 15134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15066,
											"end": 15134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15066,
											"end": 15134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15066,
											"end": 15134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15066,
											"end": 15134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9545,
											"end": 9547,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15066,
											"end": 15134,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15066,
											"end": 15134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15066,
											"end": 15134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9584,
											"end": 9586,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9557,
											"end": 9587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9623,
											"end": 9657,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9596,
											"end": 9658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9694,
											"end": 9698,
											"name": "PUSH",
											"source": 1,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9667,
											"end": 9699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9716,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9716,
											"end": 9735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15066,
											"end": 15134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 9517,
											"end": 9741,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15066,
											"end": 15134,
											"name": "tag",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 15066,
											"end": 15134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15155,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15171,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15180,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15180,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15195,
											"end": 15227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15195,
											"end": 15227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6702,
											"end": 6727,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15195,
											"end": 15227,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15195,
											"end": 15227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6675,
											"end": 6693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15195,
											"end": 15227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15195,
											"end": 15227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15195,
											"end": 15227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15195,
											"end": 15227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15195,
											"end": 15227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15195,
											"end": 15227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15195,
											"end": 15227,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 15234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 15234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 15234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14904,
											"end": 15234,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15244,
											"end": 18451,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 15244,
											"end": 18451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15331,
											"end": 15349,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15331,
											"end": 15349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 15323,
											"end": 15391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 15391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15323,
											"end": 15391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15323,
											"end": 15391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 15391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13849,
											"end": 13851,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15323,
											"end": 15391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15323,
											"end": 15391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 15391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13831,
											"end": 13852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13888,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 13868,
											"end": 13886,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13868,
											"end": 13886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13868,
											"end": 13886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13861,
											"end": 13891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13927,
											"end": 13961,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13907,
											"end": 13925,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13907,
											"end": 13925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13907,
											"end": 13925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13900,
											"end": 13962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13998,
											"end": 14005,
											"name": "PUSH",
											"source": 1,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13978,
											"end": 13996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13971,
											"end": 14006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14023,
											"end": 14042,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14023,
											"end": 14042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15323,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 13821,
											"end": 14048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15323,
											"end": 15391,
											"name": "tag",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 15323,
											"end": 15391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15409,
											"end": 15425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15401,
											"end": 15465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 15401,
											"end": 15465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15401,
											"end": 15465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15401,
											"end": 15465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15401,
											"end": 15465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15401,
											"end": 15465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15401,
											"end": 15465,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15401,
											"end": 15465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15401,
											"end": 15465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8007,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7985,
											"end": 8003,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7985,
											"end": 8003,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 8024,
											"end": 8042,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8024,
											"end": 8042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8024,
											"end": 8042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8079,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8115,
											"end": 8120,
											"name": "PUSH",
											"source": 1,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8157,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8138,
											"end": 8157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15401,
											"end": 15465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 7938,
											"end": 8163,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15401,
											"end": 15465,
											"name": "tag",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 15401,
											"end": 15465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15492,
											"end": 15493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15483,
											"end": 15489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15483,
											"end": 15493,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15475,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 15475,
											"end": 15539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15475,
											"end": 15539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15475,
											"end": 15539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15475,
											"end": 15539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15475,
											"end": 15539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12613,
											"end": 12615,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15475,
											"end": 15539,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15475,
											"end": 15539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15475,
											"end": 15539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12595,
											"end": 12616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12652,
											"end": 12654,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 12632,
											"end": 12650,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12632,
											"end": 12650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12632,
											"end": 12650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12625,
											"end": 12655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12691,
											"end": 12725,
											"name": "PUSH",
											"source": 1,
											"value": "5472616E7366657220616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 12671,
											"end": 12689,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12671,
											"end": 12689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12671,
											"end": 12689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12664,
											"end": 12726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12762,
											"end": 12773,
											"name": "PUSH",
											"source": 1,
											"value": "7468616E207A65726F0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12735,
											"end": 12774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12791,
											"end": 12810,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12791,
											"end": 12810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15475,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 12585,
											"end": 12816,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15475,
											"end": 15539,
											"name": "tag",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 15475,
											"end": 15539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15565,
											"end": 15569,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15592,
											"end": 15599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15599,
											"name": "tag",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 15592,
											"end": 15599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15584,
											"end": 15599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15584,
											"end": 15588,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15584,
											"end": 15599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15584,
											"end": 15599,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15584,
											"end": 15599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15584,
											"end": 15616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15584,
											"end": 15616,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15584,
											"end": 15616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 15584,
											"end": 15616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15584,
											"end": 15616,
											"name": "tag",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 15584,
											"end": 15616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15584,
											"end": 15641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15584,
											"end": 15641,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15584,
											"end": 15641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 15584,
											"end": 15641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15620,
											"end": 15641,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15620,
											"end": 15641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15636,
											"end": 15640,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 15620,
											"end": 15641,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15620,
											"end": 15641,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15584,
											"end": 15641,
											"name": "tag",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 15584,
											"end": 15641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15584,
											"end": 15664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15584,
											"end": 15664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15584,
											"end": 15664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 15584,
											"end": 15664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15645,
											"end": 15664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15645,
											"end": 15664,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15659,
											"end": 15663,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 15645,
											"end": 15664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15645,
											"end": 15664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15584,
											"end": 15664,
											"name": "tag",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 15584,
											"end": 15664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15580,
											"end": 18279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15580,
											"end": 18279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "658"
										},
										{
											"begin": 15580,
											"end": 18279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15688,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15688,
											"end": 15699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15688,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15688,
											"end": 15699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15680,
											"end": 15725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 15680,
											"end": 15725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15680,
											"end": 15725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15680,
											"end": 15725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15680,
											"end": 15725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15680,
											"end": 15725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8788,
											"end": 8790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15680,
											"end": 15725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15680,
											"end": 15725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15680,
											"end": 15725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8770,
											"end": 8791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8827,
											"end": 8829,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8889,
											"name": "PUSH",
											"source": 1,
											"value": "54726164696E67206973206E6F74206163746976650000000000000000000000"
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8907,
											"end": 8925,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8907,
											"end": 8925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15680,
											"end": 15725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 8760,
											"end": 8931,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15680,
											"end": 15725,
											"name": "tag",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 15680,
											"end": 15725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15751,
											"end": 15764,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15751,
											"end": 15764,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15743,
											"end": 15764,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15743,
											"end": 15764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15743,
											"end": 15764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15751,
											"end": 15764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15751,
											"end": 15764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15743,
											"end": 15764,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15743,
											"end": 15798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15743,
											"end": 15798,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15743,
											"end": 15798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 15743,
											"end": 15798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15782,
											"end": 15797,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15782,
											"end": 15797,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15768,
											"end": 15798,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15768,
											"end": 15798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15768,
											"end": 15798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15782,
											"end": 15797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15782,
											"end": 15797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15768,
											"end": 15798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15768,
											"end": 15798,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15743,
											"end": 15798,
											"name": "tag",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 15743,
											"end": 15798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15739,
											"end": 16159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15739,
											"end": 16159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 15739,
											"end": 16159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15864,
											"end": 15874,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15864,
											"end": 15874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15848,
											"end": 15859,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15848,
											"end": 15859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15848,
											"end": 15875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "609"
										},
										{
											"begin": 15848,
											"end": 15875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15848,
											"end": 15863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 15848,
											"end": 15875,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15848,
											"end": 15875,
											"name": "tag",
											"source": 0,
											"value": "609"
										},
										{
											"begin": 15848,
											"end": 15875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15829,
											"end": 15844,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 15829,
											"end": 15875,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15825,
											"end": 15933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 15825,
											"end": 15933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15899,
											"end": 15907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15899,
											"end": 15907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15899,
											"end": 15907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15899,
											"end": 15907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15899,
											"end": 15907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15899,
											"end": 15907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15899,
											"end": 15903,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15899,
											"end": 15907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15899,
											"end": 15907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15899,
											"end": 15907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15899,
											"end": 15907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15899,
											"end": 15907,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15899,
											"end": 15914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15899,
											"end": 15914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15899,
											"end": 15914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15914,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15899,
											"end": 15914,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15899,
											"end": 15914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15899,
											"end": 15914,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15825,
											"end": 15933,
											"name": "tag",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 15825,
											"end": 15933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15956,
											"end": 15978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15956,
											"end": 15978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15956,
											"end": 15978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15956,
											"end": 15978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15956,
											"end": 15978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15956,
											"end": 15978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15956,
											"end": 15974,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15956,
											"end": 15978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15956,
											"end": 15978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15956,
											"end": 15978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15956,
											"end": 15978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15956,
											"end": 15978,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15956,
											"end": 15978,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15956,
											"end": 15978,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15956,
											"end": 15978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15951,
											"end": 16145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 15951,
											"end": 16145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16039,
											"end": 16055,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16039,
											"end": 16055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 16028,
											"end": 16034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16010,
											"end": 16023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 16020,
											"end": 16022,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12802,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "tag",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 16010,
											"end": 16035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16010,
											"end": 16055,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16010,
											"end": 16055,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16002,
											"end": 16126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 16002,
											"end": 16126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16002,
											"end": 16126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16002,
											"end": 16126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16002,
											"end": 16126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16002,
											"end": 16126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16002,
											"end": 16126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16002,
											"end": 16126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16002,
											"end": 16126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14995,
											"end": 15016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15052,
											"end": 15054,
											"name": "PUSH",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 15032,
											"end": 15050,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15032,
											"end": 15050,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15032,
											"end": 15050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15025,
											"end": 15055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15091,
											"end": 15125,
											"name": "PUSH",
											"source": 1,
											"value": "2E77616C6C65742062616C616E6365206166746572207472616E73666572206D"
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15064,
											"end": 15126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15162,
											"end": 15196,
											"name": "PUSH",
											"source": 1,
											"value": "757374206265206C657373207468616E206D61782077616C6C657420616D6F75"
										},
										{
											"begin": 15142,
											"end": 15160,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15142,
											"end": 15160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15142,
											"end": 15160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15135,
											"end": 15197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15234,
											"end": 15238,
											"name": "PUSH",
											"source": 1,
											"value": "6E74000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15213,
											"end": 15232,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 15213,
											"end": 15232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15213,
											"end": 15232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15256,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "A4"
										},
										{
											"begin": 15256,
											"end": 15275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16002,
											"end": 16126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 14985,
											"end": 15281,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16002,
											"end": 16126,
											"name": "tag",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 16002,
											"end": 16126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16190,
											"end": 16196,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 16190,
											"end": 16196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16190,
											"end": 16196,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16190,
											"end": 16196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16190,
											"end": 16196,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16190,
											"end": 16196,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16190,
											"end": 16196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16189,
											"end": 16196,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16189,
											"end": 16221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16189,
											"end": 16221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16189,
											"end": 16221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 16189,
											"end": 16221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16208,
											"end": 16221,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16208,
											"end": 16221,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16200,
											"end": 16221,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16200,
											"end": 16221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16200,
											"end": 16221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16208,
											"end": 16221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16208,
											"end": 16221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16200,
											"end": 16221,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16200,
											"end": 16221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16189,
											"end": 16221,
											"name": "tag",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 16189,
											"end": 16221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16189,
											"end": 16244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16189,
											"end": 16244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16189,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "618"
										},
										{
											"begin": 16189,
											"end": 16244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16231,
											"end": 16244,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16231,
											"end": 16244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16225,
											"end": 16244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16189,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "618"
										},
										{
											"begin": 16189,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16185,
											"end": 17951,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16185,
											"end": 17951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 16185,
											"end": 17951,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16281,
											"end": 16291,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16281,
											"end": 16291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16281,
											"end": 16291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16281,
											"end": 16291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16281,
											"end": 16291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16281,
											"end": 16291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16281,
											"end": 16285,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16281,
											"end": 16291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16281,
											"end": 16291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16281,
											"end": 16291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16281,
											"end": 16291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16281,
											"end": 16291,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16281,
											"end": 16291,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16281,
											"end": 16291,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16281,
											"end": 16291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16280,
											"end": 16291,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16280,
											"end": 16304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16280,
											"end": 16304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16280,
											"end": 16304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 16280,
											"end": 16304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16296,
											"end": 16304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16296,
											"end": 16304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16296,
											"end": 16304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16296,
											"end": 16304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16296,
											"end": 16304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16296,
											"end": 16304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16296,
											"end": 16300,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16296,
											"end": 16304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16296,
											"end": 16304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16296,
											"end": 16304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16296,
											"end": 16304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16296,
											"end": 16304,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16296,
											"end": 16304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16296,
											"end": 16304,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16296,
											"end": 16304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16295,
											"end": 16304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16280,
											"end": 16304,
											"name": "tag",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 16280,
											"end": 16304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "621"
										},
										{
											"begin": 16272,
											"end": 16305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16272,
											"end": 16305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16272,
											"end": 16305,
											"name": "tag",
											"source": 0,
											"value": "621"
										},
										{
											"begin": 16272,
											"end": 16305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16373,
											"end": 16381,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 16373,
											"end": 16389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16373,
											"end": 16389,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16373,
											"end": 16389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16602,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "622"
										},
										{
											"begin": 16369,
											"end": 16602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16459,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16465,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16436,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16465,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16413,
											"end": 16498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "623"
										},
										{
											"begin": 16413,
											"end": 16498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16413,
											"end": 16498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16413,
											"end": 16498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16413,
											"end": 16498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16413,
											"end": 16498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9948,
											"end": 9950,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16413,
											"end": 16498,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16413,
											"end": 16498,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16413,
											"end": 16498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 9951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 9989,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 9967,
											"end": 9985,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9967,
											"end": 9985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9967,
											"end": 9985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9960,
											"end": 9990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10026,
											"end": 10056,
											"name": "PUSH",
											"source": 1,
											"value": "5374726F6E672048616E64732050726F746F636F6C2061637469766500000000"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9999,
											"end": 10057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10092,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10074,
											"end": 10092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16413,
											"end": 16498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 9920,
											"end": 10098,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16413,
											"end": 16498,
											"name": "tag",
											"source": 0,
											"value": "623"
										},
										{
											"begin": 16413,
											"end": 16498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16566,
											"end": 16574,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 16566,
											"end": 16583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 16548,
											"end": 16583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16566,
											"end": 16583,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16566,
											"end": 16583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16566,
											"end": 16583,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16566,
											"end": 16583,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16566,
											"end": 16583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16563,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "627"
										},
										{
											"begin": 16548,
											"end": 16583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16548,
											"end": 16583,
											"name": "tag",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 16548,
											"end": 16583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16520,
											"end": 16545,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16520,
											"end": 16545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16520,
											"end": 16545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16520,
											"end": 16545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16520,
											"end": 16545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16520,
											"end": 16545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16520,
											"end": 16539,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 16520,
											"end": 16545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16520,
											"end": 16545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16520,
											"end": 16545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16520,
											"end": 16545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16520,
											"end": 16545,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16520,
											"end": 16583,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16602,
											"name": "tag",
											"source": 0,
											"value": "622"
										},
										{
											"begin": 16369,
											"end": 16602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16663,
											"end": 16675,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 16663,
											"end": 16683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16663,
											"end": 16683,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16663,
											"end": 16683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16839,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16659,
											"end": 16839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 16659,
											"end": 16839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16716,
											"end": 16740,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 16716,
											"end": 16740,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16716,
											"end": 16740,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16716,
											"end": 16740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16707,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "629"
										},
										{
											"begin": 16707,
											"end": 16775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16707,
											"end": 16775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16707,
											"end": 16775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16707,
											"end": 16775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16707,
											"end": 16775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10661,
											"end": 10663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16707,
											"end": 16775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16707,
											"end": 16775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16707,
											"end": 16775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10643,
											"end": 10664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10702,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 10680,
											"end": 10698,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10680,
											"end": 10698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10739,
											"end": 10771,
											"name": "PUSH",
											"source": 1,
											"value": "53656C6C732073746F70706564206279204469616D6F6E6420466C6F6F720000"
										},
										{
											"begin": 10719,
											"end": 10737,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10719,
											"end": 10737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10712,
											"end": 10772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10807,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10789,
											"end": 10807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16707,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 10633,
											"end": 10813,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16707,
											"end": 16775,
											"name": "tag",
											"source": 0,
											"value": "629"
										},
										{
											"begin": 16707,
											"end": 16775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16797,
											"end": 16820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 16797,
											"end": 16818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "633"
										},
										{
											"begin": 16797,
											"end": 16820,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16797,
											"end": 16820,
											"name": "tag",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 16797,
											"end": 16820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16922,
											"end": 16926,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16873,
											"end": 16901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12802,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 16990,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16975,
											"end": 16990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16951,
											"end": 16990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16951,
											"end": 16990,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16947,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "635"
										},
										{
											"begin": 16947,
											"end": 17916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17018,
											"end": 17042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17018,
											"end": 17042,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17014,
											"end": 17693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 17014,
											"end": 17693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17158,
											"end": 17159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17074,
											"end": 17155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 17137,
											"end": 17154,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17137,
											"end": 17154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 17114,
											"end": 17131,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17114,
											"end": 17131,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 17096,
											"end": 17108,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 17096,
											"end": 17108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17091,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17074,
											"end": 17091,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 17074,
											"end": 17095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17074,
											"end": 17109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17074,
											"end": 17155,
											"name": "tag",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 17074,
											"end": 17155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17159,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17671,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 17070,
											"end": 17671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17191,
											"end": 17211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17214,
											"end": 17344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "641"
										},
										{
											"begin": 17262,
											"end": 17343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 17325,
											"end": 17342,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17325,
											"end": 17342,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17262,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 17302,
											"end": 17319,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17302,
											"end": 17319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17262,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 17284,
											"end": 17296,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 17284,
											"end": 17296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17262,
											"end": 17279,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17262,
											"end": 17279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17262,
											"end": 17283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 17262,
											"end": 17283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17262,
											"end": 17297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17262,
											"end": 17297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17262,
											"end": 17297,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17262,
											"end": 17297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17262,
											"end": 17297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17262,
											"end": 17343,
											"name": "tag",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 17262,
											"end": 17343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17214,
											"end": 17231,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17214,
											"end": 17231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17214,
											"end": 17257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 17214,
											"end": 17257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17256,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17214,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 17214,
											"end": 17257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17214,
											"end": 17344,
											"name": "tag",
											"source": 0,
											"value": "641"
										},
										{
											"begin": 17214,
											"end": 17344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17191,
											"end": 17344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17191,
											"end": 17344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17374,
											"end": 17389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17451,
											"end": 17463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 17447,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17427,
											"end": 17463,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17423,
											"end": 17578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "646"
										},
										{
											"begin": 17423,
											"end": 17578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17509,
											"end": 17547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 17509,
											"end": 17529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17534,
											"end": 17546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17509,
											"end": 17533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 17509,
											"end": 17547,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17509,
											"end": 17547,
											"name": "tag",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 17509,
											"end": 17547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17499,
											"end": 17547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17499,
											"end": 17547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17423,
											"end": 17578,
											"name": "tag",
											"source": 0,
											"value": "646"
										},
										{
											"begin": 17423,
											"end": 17578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "648"
										},
										{
											"begin": 17622,
											"end": 17634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17636,
											"end": 17643,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "649"
										},
										{
											"begin": 17607,
											"end": 17644,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17607,
											"end": 17644,
											"name": "tag",
											"source": 0,
											"value": "648"
										},
										{
											"begin": 17607,
											"end": 17644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17671,
											"name": "tag",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 17070,
											"end": 17671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17743,
											"end": 17764,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17790,
											"end": 17812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17786,
											"end": 17898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "651"
										},
										{
											"begin": 17786,
											"end": 17898,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17840,
											"end": 17875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "651"
										},
										{
											"begin": 17853,
											"end": 17874,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 17840,
											"end": 17852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "652"
										},
										{
											"begin": 17840,
											"end": 17875,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17840,
											"end": 17875,
											"name": "tag",
											"source": 0,
											"value": "651"
										},
										{
											"begin": 17840,
											"end": 17875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16947,
											"end": 17916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16947,
											"end": 17916,
											"name": "tag",
											"source": 0,
											"value": "635"
										},
										{
											"begin": 16947,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16185,
											"end": 17951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16185,
											"end": 17951,
											"name": "tag",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 16185,
											"end": 17951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17976,
											"end": 17989,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 17976,
											"end": 17989,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17968,
											"end": 17989,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17968,
											"end": 17989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17968,
											"end": 17989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17976,
											"end": 17989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17976,
											"end": 17989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17968,
											"end": 17989,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17968,
											"end": 17989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17968,
											"end": 17989,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17968,
											"end": 17989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17968,
											"end": 18012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "653"
										},
										{
											"begin": 17968,
											"end": 18012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17999,
											"end": 18012,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 17999,
											"end": 18012,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17993,
											"end": 18012,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17993,
											"end": 18012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17993,
											"end": 18012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17999,
											"end": 18012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17999,
											"end": 18012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17993,
											"end": 18012,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17993,
											"end": 18012,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17968,
											"end": 18012,
											"name": "tag",
											"source": 0,
											"value": "653"
										},
										{
											"begin": 17968,
											"end": 18012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 18269,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 18269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "658"
										},
										{
											"begin": 17965,
											"end": 18269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18066,
											"end": 18088,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18066,
											"end": 18088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18066,
											"end": 18088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18066,
											"end": 18088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18066,
											"end": 18088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18066,
											"end": 18088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18066,
											"end": 18084,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18066,
											"end": 18088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18066,
											"end": 18088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18066,
											"end": 18088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18066,
											"end": 18088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18066,
											"end": 18088,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18066,
											"end": 18088,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18066,
											"end": 18088,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18066,
											"end": 18088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18061,
											"end": 18255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "658"
										},
										{
											"begin": 18061,
											"end": 18255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18149,
											"end": 18165,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 18149,
											"end": 18165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18120,
											"end": 18145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "656"
										},
										{
											"begin": 18138,
											"end": 18144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18120,
											"end": 18133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 18130,
											"end": 18132,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12802,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12701,
											"end": 12818,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18120,
											"end": 18145,
											"name": "tag",
											"source": 0,
											"value": "656"
										},
										{
											"begin": 18120,
											"end": 18145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18120,
											"end": 18165,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18120,
											"end": 18165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18112,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "658"
										},
										{
											"begin": 18112,
											"end": 18236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18112,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18112,
											"end": 18236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18112,
											"end": 18236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18112,
											"end": 18236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18112,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18112,
											"end": 18236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18112,
											"end": 18236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14995,
											"end": 15016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15052,
											"end": 15054,
											"name": "PUSH",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 15032,
											"end": 15050,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15032,
											"end": 15050,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15032,
											"end": 15050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15025,
											"end": 15055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15091,
											"end": 15125,
											"name": "PUSH",
											"source": 1,
											"value": "2E77616C6C65742062616C616E6365206166746572207472616E73666572206D"
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15064,
											"end": 15126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15162,
											"end": 15196,
											"name": "PUSH",
											"source": 1,
											"value": "757374206265206C657373207468616E206D61782077616C6C657420616D6F75"
										},
										{
											"begin": 15142,
											"end": 15160,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15142,
											"end": 15160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15142,
											"end": 15160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15135,
											"end": 15197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15234,
											"end": 15238,
											"name": "PUSH",
											"source": 1,
											"value": "6E74000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15213,
											"end": 15232,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 15213,
											"end": 15232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15213,
											"end": 15232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15256,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "A4"
										},
										{
											"begin": 15256,
											"end": 15275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18112,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 14985,
											"end": 15281,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18112,
											"end": 18236,
											"name": "tag",
											"source": 0,
											"value": "658"
										},
										{
											"begin": 18112,
											"end": 18236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18293,
											"end": 18317,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18293,
											"end": 18317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18311,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18293,
											"end": 18317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18293,
											"end": 18317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18293,
											"end": 18317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18317,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18317,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18293,
											"end": 18317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "660"
										},
										{
											"begin": 18293,
											"end": 18343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18321,
											"end": 18343,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18321,
											"end": 18343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18321,
											"end": 18343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18321,
											"end": 18343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18321,
											"end": 18343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18321,
											"end": 18343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18321,
											"end": 18339,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18321,
											"end": 18343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18321,
											"end": 18343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18321,
											"end": 18343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18321,
											"end": 18343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18321,
											"end": 18343,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18321,
											"end": 18343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18321,
											"end": 18343,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18321,
											"end": 18343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18293,
											"end": 18343,
											"name": "tag",
											"source": 0,
											"value": "660"
										},
										{
											"begin": 18293,
											"end": 18343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "661"
										},
										{
											"begin": 18289,
											"end": 18385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18369,
											"end": 18374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18289,
											"end": 18385,
											"name": "tag",
											"source": 0,
											"value": "661"
										},
										{
											"begin": 18289,
											"end": 18385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "662"
										},
										{
											"begin": 18418,
											"end": 18422,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18424,
											"end": 18426,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18434,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18436,
											"end": 18443,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "663"
										},
										{
											"begin": 18403,
											"end": 18444,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18403,
											"end": 18444,
											"name": "tag",
											"source": 0,
											"value": "662"
										},
										{
											"begin": 18403,
											"end": 18444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15244,
											"end": 18451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15244,
											"end": 18451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15244,
											"end": 18451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15244,
											"end": 18451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15244,
											"end": 18451,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1849,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1849,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "665"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "tag",
											"source": 0,
											"value": "665"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1993,
											"end": 2002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "667"
										},
										{
											"begin": 2009,
											"end": 2010,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2006,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "668"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "tag",
											"source": 0,
											"value": "667"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2010,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1849,
											"end": 2035,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1849,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2286,
											"end": 2416,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 2286,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "670"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "671"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "670"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2409,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2416,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2286,
											"end": 2416,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1709,
											"end": 1843,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 1709,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "670"
										},
										{
											"begin": 1797,
											"end": 1798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2041,
											"end": 2280,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 2041,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "675"
										},
										{
											"begin": 2118,
											"end": 2163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2151,
											"end": 2152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 2144,
											"end": 2152,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2163,
											"name": "tag",
											"source": 0,
											"value": "675"
										},
										{
											"begin": 2118,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "676"
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2185,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "677"
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "tag",
											"source": 0,
											"value": "676"
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "678"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "679"
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "tag",
											"source": 0,
											"value": "678"
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2217,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "670"
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11850,
											"end": 11852,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11832,
											"end": 11853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11889,
											"end": 11891,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 11869,
											"end": 11887,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11869,
											"end": 11887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11869,
											"end": 11887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11862,
											"end": 11892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11928,
											"end": 11962,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 11908,
											"end": 11926,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11908,
											"end": 11926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11908,
											"end": 11926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11901,
											"end": 11963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11999,
											"end": 12002,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11979,
											"end": 11997,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11979,
											"end": 11997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 11997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11972,
											"end": 12003,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12020,
											"end": 12039,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12020,
											"end": 12039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 11822,
											"end": 12045,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18460,
											"end": 18861,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 18460,
											"end": 18861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11466,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF"
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18575,
											"end": 18576,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18561,
											"end": 18577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18537,
											"end": 18577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18537,
											"end": 18577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18605,
											"end": 18609,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18592,
											"end": 18593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "687"
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "tag",
											"source": 0,
											"value": "687"
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18587,
											"end": 18610,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18645,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18630,
											"end": 18645,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "PUSH",
											"source": 0,
											"value": "AD5C464800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18645,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18645,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18645,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18650,
											"name": "PUSH",
											"source": 0,
											"value": "AD5C4648"
										},
										{
											"begin": 18630,
											"end": 18650,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18645,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "688"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "tag",
											"source": 0,
											"value": "688"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "690"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "tag",
											"source": 0,
											"value": "690"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "691"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "tag",
											"source": 0,
											"value": "691"
										},
										{
											"begin": 18630,
											"end": 18652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18625,
											"end": 18626,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "692"
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "tag",
											"source": 0,
											"value": "692"
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18620,
											"end": 18652,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18652,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18620,
											"end": 18652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18694,
											"end": 18709,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18694,
											"end": 18709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18662,
											"end": 18724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "693"
										},
										{
											"begin": 18662,
											"end": 18724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18683,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18694,
											"end": 18709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18712,
											"end": 18723,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18662,
											"end": 18670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 18662,
											"end": 18724,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18662,
											"end": 18724,
											"name": "tag",
											"source": 0,
											"value": "693"
										},
										{
											"begin": 18662,
											"end": 18724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18749,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18734,
											"end": 18749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "PUSH",
											"source": 0,
											"value": "791AC94700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18734,
											"end": 18749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18800,
											"name": "PUSH",
											"source": 0,
											"value": "791AC947"
										},
										{
											"begin": 18734,
											"end": 18800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "694"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18801,
											"end": 18812,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18801,
											"end": 18812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18734,
											"end": 18749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18817,
											"end": 18821,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18817,
											"end": 18821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18831,
											"end": 18835,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18831,
											"end": 18835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18838,
											"end": 18853,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 18838,
											"end": 18853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "695"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "tag",
											"source": 0,
											"value": "694"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "696"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "tag",
											"source": 0,
											"value": "696"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "698"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "tag",
											"source": 0,
											"value": "698"
										},
										{
											"begin": 18734,
											"end": 18854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11494,
											"end": 11500,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11494,
											"end": 11508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11494,
											"end": 11508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11494,
											"end": 11508,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF"
										},
										{
											"begin": 11494,
											"end": 11508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11494,
											"end": 11508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11494,
											"end": 11508,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18460,
											"end": 18861,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1528,
											"end": 1703,
											"name": "tag",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 1528,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "700"
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1618,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "627"
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "tag",
											"source": 0,
											"value": "700"
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "670"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10305,
											"end": 10307,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10344,
											"end": 10346,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 10324,
											"end": 10342,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10324,
											"end": 10342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10324,
											"end": 10342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10317,
											"end": 10347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10383,
											"end": 10412,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10356,
											"end": 10413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10430,
											"end": 10448,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10430,
											"end": 10448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 10277,
											"end": 10454,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "tag",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18867,
											"end": 19675,
											"name": "tag",
											"source": 0,
											"value": "633"
										},
										{
											"begin": 18867,
											"end": 19675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18918,
											"end": 18938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18941,
											"end": 18952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "706"
										},
										{
											"begin": 18941,
											"end": 18950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 18941,
											"end": 18952,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18941,
											"end": 18952,
											"name": "tag",
											"source": 0,
											"value": "706"
										},
										{
											"begin": 18941,
											"end": 18952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18918,
											"end": 18952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18966,
											"end": 18983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18962,
											"end": 18992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "707"
										},
										{
											"begin": 18962,
											"end": 18992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18985,
											"end": 18992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18867,
											"end": 19675,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18962,
											"end": 18992,
											"name": "tag",
											"source": 0,
											"value": "707"
										},
										{
											"begin": 18962,
											"end": 18992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19021,
											"end": 19042,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 19021,
											"end": 19042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19006,
											"end": 19042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19006,
											"end": 19042,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19002,
											"end": 19171,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19002,
											"end": 19171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "708"
										},
										{
											"begin": 19002,
											"end": 19171,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19058,
											"end": 19079,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 19058,
											"end": 19094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19132,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 19108,
											"end": 19140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19108,
											"end": 19140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19140,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18867,
											"end": 19675,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19002,
											"end": 19171,
											"name": "tag",
											"source": 0,
											"value": "708"
										},
										{
											"begin": 19002,
											"end": 19171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19255,
											"end": 19267,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 19255,
											"end": 19285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19227,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 19206,
											"end": 19227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19181,
											"end": 19203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19181,
											"end": 19203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "709"
										},
										{
											"begin": 19206,
											"end": 19309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19308,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 19304,
											"end": 19308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 19206,
											"end": 19286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19255,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19255,
											"end": 19285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19255,
											"end": 19285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19255,
											"end": 19285,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19255,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 19255,
											"end": 19285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19255,
											"end": 19285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "711"
										},
										{
											"begin": 19206,
											"end": 19250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19308,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 19206,
											"end": 19250,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19206,
											"end": 19250,
											"name": "tag",
											"source": 0,
											"value": "711"
										},
										{
											"begin": 19206,
											"end": 19250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 19206,
											"end": 19286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19206,
											"end": 19309,
											"name": "tag",
											"source": 0,
											"value": "709"
										},
										{
											"begin": 19206,
											"end": 19309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19181,
											"end": 19309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19181,
											"end": 19309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19339,
											"end": 19353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19324,
											"end": 19336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19324,
											"end": 19353,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19320,
											"end": 19472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19320,
											"end": 19472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "712"
										},
										{
											"begin": 19320,
											"end": 19472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19393,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 19369,
											"end": 19400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19369,
											"end": 19400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19396,
											"end": 19400,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19369,
											"end": 19400,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19369,
											"end": 19400,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19461,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 19440,
											"end": 19461,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19414,
											"end": 19437,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19414,
											"end": 19461,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19320,
											"end": 19472,
											"name": "tag",
											"source": 0,
											"value": "712"
										},
										{
											"begin": 19320,
											"end": 19472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19486,
											"end": 19510,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 19486,
											"end": 19510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19486,
											"end": 19510,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19486,
											"end": 19510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19486,
											"end": 19560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19486,
											"end": 19560,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19486,
											"end": 19560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "713"
										},
										{
											"begin": 19486,
											"end": 19560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19530,
											"end": 19553,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19530,
											"end": 19553,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19530,
											"end": 19560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "714"
										},
										{
											"begin": 19530,
											"end": 19560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19558,
											"end": 19559,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19530,
											"end": 19557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 19530,
											"end": 19560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19530,
											"end": 19560,
											"name": "tag",
											"source": 0,
											"value": "714"
										},
										{
											"begin": 19530,
											"end": 19560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19514,
											"end": 19526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19514,
											"end": 19560,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19514,
											"end": 19560,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19486,
											"end": 19560,
											"name": "tag",
											"source": 0,
											"value": "713"
										},
										{
											"begin": 19486,
											"end": 19560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19482,
											"end": 19669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19482,
											"end": 19669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 19482,
											"end": 19669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19576,
											"end": 19600,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 19576,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 19608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19576,
											"end": 19608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 19608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 19608,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19643,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 19622,
											"end": 19658,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18867,
											"end": 19675,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20568,
											"end": 21075,
											"name": "tag",
											"source": 0,
											"value": "649"
										},
										{
											"begin": 20568,
											"end": 21075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11466,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF"
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20685,
											"end": 20700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "718"
										},
										{
											"begin": 20685,
											"end": 20693,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20698,
											"end": 20699,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20685,
											"end": 20697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 20685,
											"end": 20700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20685,
											"end": 20700,
											"name": "tag",
											"source": 0,
											"value": "718"
										},
										{
											"begin": 20685,
											"end": 20700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20670,
											"end": 20700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20710,
											"end": 20727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20730,
											"end": 20748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "719"
										},
										{
											"begin": 20730,
											"end": 20738,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20670,
											"end": 20700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20730,
											"end": 20742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 20730,
											"end": 20748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20730,
											"end": 20748,
											"name": "tag",
											"source": 0,
											"value": "719"
										},
										{
											"begin": 20730,
											"end": 20748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20783,
											"end": 20804,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 20814,
											"end": 20862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "720"
										},
										{
											"begin": 20831,
											"end": 20861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "721"
										},
										{
											"begin": 20831,
											"end": 20851,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20860,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 20831,
											"end": 20861,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20831,
											"end": 20861,
											"name": "tag",
											"source": 0,
											"value": "721"
										},
										{
											"begin": 20831,
											"end": 20861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20814,
											"end": 20830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 20814,
											"end": 20862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20814,
											"end": 20862,
											"name": "tag",
											"source": 0,
											"value": "720"
										},
										{
											"begin": 20814,
											"end": 20862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20872,
											"end": 20890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20893,
											"end": 20934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "722"
										},
										{
											"begin": 20893,
											"end": 20914,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 20919,
											"end": 20933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20893,
											"end": 20918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 20893,
											"end": 20934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20893,
											"end": 20934,
											"name": "tag",
											"source": 0,
											"value": "722"
										},
										{
											"begin": 20893,
											"end": 20934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20872,
											"end": 20934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20948,
											"end": 20961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20948,
											"end": 20961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 21069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "698"
										},
										{
											"begin": 20944,
											"end": 21069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "698"
										},
										{
											"begin": 20990,
											"end": 20999,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21001,
											"end": 21057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "725"
										},
										{
											"begin": 21026,
											"end": 21056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "726"
										},
										{
											"begin": 21026,
											"end": 21046,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21051,
											"end": 21055,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 21026,
											"end": 21056,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21026,
											"end": 21056,
											"name": "tag",
											"source": 0,
											"value": "726"
										},
										{
											"begin": 21026,
											"end": 21056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21001,
											"end": 21021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 21001,
											"end": 21011,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21016,
											"end": 21020,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 21001,
											"end": 21015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 21001,
											"end": 21021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21001,
											"end": 21057,
											"name": "tag",
											"source": 0,
											"value": "725"
										},
										{
											"begin": 21001,
											"end": 21057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 20989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "728"
										},
										{
											"begin": 20977,
											"end": 21058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21081,
											"end": 21823,
											"name": "tag",
											"source": 0,
											"value": "652"
										},
										{
											"begin": 21081,
											"end": 21823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21157,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "730"
										},
										{
											"begin": 21202,
											"end": 21214,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 21202,
											"end": 21214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21157,
											"end": 21197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 21179,
											"end": 21196,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 21179,
											"end": 21196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21157,
											"end": 21174,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21157,
											"end": 21174,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21157,
											"end": 21178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 21157,
											"end": 21178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21157,
											"end": 21197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21157,
											"end": 21197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21157,
											"end": 21197,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21157,
											"end": 21197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21157,
											"end": 21197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21157,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "730"
										},
										{
											"begin": 21157,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21229,
											"end": 21243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21229,
											"end": 21243,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 21225,
											"end": 21817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21259,
											"end": 21283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21286,
											"end": 21330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "733"
										},
										{
											"begin": 21320,
											"end": 21329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21286,
											"end": 21315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 21297,
											"end": 21314,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21297,
											"end": 21314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21286,
											"end": 21292,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21286,
											"end": 21296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 21286,
											"end": 21296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21286,
											"end": 21315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21286,
											"end": 21315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21286,
											"end": 21315,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21286,
											"end": 21315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21286,
											"end": 21315,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21286,
											"end": 21330,
											"name": "tag",
											"source": 0,
											"value": "733"
										},
										{
											"begin": 21286,
											"end": 21330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21259,
											"end": 21330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21259,
											"end": 21330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21344,
											"end": 21363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21366,
											"end": 21405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "735"
										},
										{
											"begin": 21395,
											"end": 21404,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 21377,
											"end": 21389,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 21377,
											"end": 21389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21366,
											"end": 21372,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21366,
											"end": 21376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 21366,
											"end": 21376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21366,
											"end": 21405,
											"name": "tag",
											"source": 0,
											"value": "735"
										},
										{
											"begin": 21366,
											"end": 21405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21344,
											"end": 21405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21419,
											"end": 21437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21440,
											"end": 21485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "737"
										},
										{
											"begin": 21344,
											"end": 21405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "711"
										},
										{
											"begin": 21440,
											"end": 21446,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21451,
											"end": 21467,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 21440,
											"end": 21468,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21440,
											"end": 21485,
											"name": "tag",
											"source": 0,
											"value": "737"
										},
										{
											"begin": 21440,
											"end": 21485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21419,
											"end": 21485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21503,
											"end": 21523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21503,
											"end": 21523,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "739"
										},
										{
											"begin": 21499,
											"end": 21602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21560,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21543,
											"end": 21560,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21543,
											"end": 21560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21586,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21586,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21560,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "741"
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "tag",
											"source": 0,
											"value": "741"
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21602,
											"name": "tag",
											"source": 0,
											"value": "739"
										},
										{
											"begin": 21499,
											"end": 21602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21619,
											"end": 21634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21619,
											"end": 21634,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21615,
											"end": 21703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "742"
										},
										{
											"begin": 21615,
											"end": 21703,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21666,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 21654,
											"end": 21666,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21654,
											"end": 21666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21676,
											"end": 21687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21676,
											"end": 21687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21676,
											"end": 21687,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21666,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "744"
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "tag",
											"source": 0,
											"value": "744"
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21615,
											"end": 21703,
											"name": "tag",
											"source": 0,
											"value": "742"
										},
										{
											"begin": 21615,
											"end": 21703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21720,
											"end": 21734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21720,
											"end": 21734,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21716,
											"end": 21807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "745"
										},
										{
											"begin": 21716,
											"end": 21807,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21771,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 21754,
											"end": 21771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21754,
											"end": 21771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21791,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21771,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "747"
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "tag",
											"source": 0,
											"value": "747"
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21716,
											"end": 21807,
											"name": "tag",
											"source": 0,
											"value": "745"
										},
										{
											"begin": 21716,
											"end": 21807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21081,
											"end": 21823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21081,
											"end": 21823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21081,
											"end": 21823,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22954,
											"end": 23204,
											"name": "tag",
											"source": 0,
											"value": "663"
										},
										{
											"begin": 22954,
											"end": 23204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23061,
											"end": 23119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "750"
										},
										{
											"begin": 23061,
											"end": 23119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23094,
											"end": 23108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "750"
										},
										{
											"begin": 13800,
											"end": 13816,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 13800,
											"end": 13816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13800,
											"end": 13816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13773,
											"end": 13797,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 13773,
											"end": 13816,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13869,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13853,
											"end": 13869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13869,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13850,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 13826,
											"end": 13869,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13901,
											"end": 13912,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 13901,
											"end": 13912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13901,
											"end": 13912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13879,
											"end": 13898,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13879,
											"end": 13912,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13949,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 13949,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13949,
											"end": 13965,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 13946,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 13922,
											"end": 13965,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13984,
											"end": 14004,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13984,
											"end": 14004,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13984,
											"end": 14004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13984,
											"end": 14004,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14034,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14044,
											"end": 14059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14044,
											"end": 14059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14044,
											"end": 14059,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14069,
											"end": 14089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14069,
											"end": 14089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14069,
											"end": 14089,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14128,
											"end": 14145,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14128,
											"end": 14145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14128,
											"end": 14145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14100,
											"end": 14125,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14100,
											"end": 14145,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14200,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14183,
											"end": 14200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14155,
											"end": 14180,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14155,
											"end": 14200,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14233,
											"end": 14245,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14233,
											"end": 14245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14233,
											"end": 14245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14210,
											"end": 14230,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14210,
											"end": 14245,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14283,
											"end": 14300,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14283,
											"end": 14300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14283,
											"end": 14300,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14280,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14255,
											"end": 14300,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14340,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14340,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14340,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14350,
											"end": 14371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14350,
											"end": 14371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14350,
											"end": 14371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14350,
											"end": 14371,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14381,
											"end": 14397,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14381,
											"end": 14397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14381,
											"end": 14397,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14407,
											"end": 14428,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 14435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23094,
											"end": 23108,
											"name": "tag",
											"source": 0,
											"value": "750"
										},
										{
											"begin": 23094,
											"end": 23108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23128,
											"end": 23172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "752"
										},
										{
											"begin": 23146,
											"end": 23152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23154,
											"end": 23163,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23165,
											"end": 23171,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23128,
											"end": 23145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "753"
										},
										{
											"begin": 23128,
											"end": 23172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23128,
											"end": 23172,
											"name": "tag",
											"source": 0,
											"value": "752"
										},
										{
											"begin": 23128,
											"end": 23172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23182,
											"end": 23197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "662"
										},
										{
											"begin": 14507,
											"end": 14531,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 14507,
											"end": 14531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14488,
											"end": 14504,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 14488,
											"end": 14531,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14560,
											"end": 14584,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14560,
											"end": 14584,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14541,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14541,
											"end": 14584,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14627,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14608,
											"end": 14627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14605,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 14594,
											"end": 14627,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14656,
											"end": 14680,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 14656,
											"end": 14680,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14637,
											"end": 14653,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 14637,
											"end": 14680,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14711,
											"end": 14736,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14711,
											"end": 14736,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14691,
											"end": 14708,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14691,
											"end": 14736,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14766,
											"end": 14791,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14766,
											"end": 14791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14763,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14746,
											"end": 14791,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14816,
											"end": 14836,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14816,
											"end": 14836,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14813,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14801,
											"end": 14836,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14866,
											"end": 14891,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14866,
											"end": 14891,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14846,
											"end": 14863,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14846,
											"end": 14891,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14898,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2607,
											"name": "tag",
											"source": 0,
											"value": "671"
										},
										{
											"begin": 2422,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "757"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "tag",
											"source": 0,
											"value": "757"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2565,
											"end": 2574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "667"
										},
										{
											"begin": 2581,
											"end": 2582,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2578,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "679"
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20107,
											"end": 20560,
											"name": "tag",
											"source": 0,
											"value": "728"
										},
										{
											"begin": 20107,
											"end": 20560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20219,
											"end": 20234,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 20219,
											"end": 20234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20187,
											"end": 20249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "761"
										},
										{
											"begin": 20187,
											"end": 20249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20204,
											"end": 20208,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 20204,
											"end": 20208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20219,
											"end": 20234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20237,
											"end": 20248,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20187,
											"end": 20195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 20187,
											"end": 20249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20187,
											"end": 20249,
											"name": "tag",
											"source": 0,
											"value": "761"
										},
										{
											"begin": 20187,
											"end": 20249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20304,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 20289,
											"end": 20304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20498,
											"end": 20510,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20498,
											"end": 20510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20498,
											"end": 20510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH",
											"source": 0,
											"value": "F305D71900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20362,
											"end": 20366,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5318,
											"end": 5352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5395,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5395,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20289,
											"end": 20304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5411,
											"end": 5429,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5411,
											"end": 5429,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5411,
											"end": 5429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5472,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5454,
											"end": 5472,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20498,
											"end": 20510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20498,
											"end": 20510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20498,
											"end": 20510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5516,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5497,
											"end": 5516,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5497,
											"end": 5516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5490,
											"end": 5534,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20526,
											"end": 20541,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5550,
											"end": 5569,
											"name": "PUSH",
											"source": 1,
											"value": "A4"
										},
										{
											"begin": 5550,
											"end": 5569,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5569,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20289,
											"end": 20304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20320,
											"name": "PUSH",
											"source": 0,
											"value": "F305D719"
										},
										{
											"begin": 20289,
											"end": 20320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20328,
											"end": 20337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20328,
											"end": 20337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "PUSH",
											"source": 1,
											"value": "C4"
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "764"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "tag",
											"source": 0,
											"value": "764"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "766"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "tag",
											"source": 0,
											"value": "766"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "745"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "768"
										},
										{
											"begin": 20289,
											"end": 20553,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23210,
											"end": 25057,
											"name": "tag",
											"source": 0,
											"value": "753"
										},
										{
											"begin": 23210,
											"end": 25057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23306,
											"end": 23330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "771"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 23306,
											"end": 23330,
											"name": "tag",
											"source": 0,
											"value": "771"
										},
										{
											"begin": 23306,
											"end": 23330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23367,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23354,
											"end": 23367,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23344,
											"end": 23367,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23344,
											"end": 23367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23344,
											"end": 23367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23344,
											"end": 23367,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23344,
											"end": 23408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23344,
											"end": 23408,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23344,
											"end": 23408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "773"
										},
										{
											"begin": 23344,
											"end": 23408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23392,
											"end": 23407,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23392,
											"end": 23407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23371,
											"end": 23408,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23371,
											"end": 23408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23371,
											"end": 23408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23392,
											"end": 23407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23392,
											"end": 23407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23371,
											"end": 23408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23371,
											"end": 23408,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23344,
											"end": 23408,
											"name": "tag",
											"source": 0,
											"value": "773"
										},
										{
											"begin": 23344,
											"end": 23408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23340,
											"end": 23697,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23340,
											"end": 23697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "774"
										},
										{
											"begin": 23340,
											"end": 23697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23448,
											"end": 23486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "775"
										},
										{
											"begin": 23481,
											"end": 23485,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23448,
											"end": 23476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 23459,
											"end": 23475,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 23459,
											"end": 23475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23448,
											"end": 23454,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23448,
											"end": 23458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 23448,
											"end": 23458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23448,
											"end": 23476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23448,
											"end": 23476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23448,
											"end": 23476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23448,
											"end": 23476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23448,
											"end": 23476,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23448,
											"end": 23486,
											"name": "tag",
											"source": 0,
											"value": "775"
										},
										{
											"begin": 23448,
											"end": 23486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23430,
											"end": 23445,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23430,
											"end": 23445,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23430,
											"end": 23445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23430,
											"end": 23486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23529,
											"end": 23545,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 23529,
											"end": 23545,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23518,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "777"
										},
										{
											"begin": 23518,
											"end": 23556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23551,
											"end": 23555,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23551,
											"end": 23555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23518,
											"end": 23546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 23518,
											"end": 23546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23518,
											"end": 23524,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23518,
											"end": 23524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23518,
											"end": 23528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 23518,
											"end": 23546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23518,
											"end": 23556,
											"name": "tag",
											"source": 0,
											"value": "777"
										},
										{
											"begin": 23518,
											"end": 23556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23500,
											"end": 23556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23500,
											"end": 23556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23594,
											"end": 23605,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 23594,
											"end": 23605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23583,
											"end": 23616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "779"
										},
										{
											"begin": 23583,
											"end": 23616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23611,
											"end": 23615,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23611,
											"end": 23615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23583,
											"end": 23606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 23583,
											"end": 23606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23583,
											"end": 23589,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23583,
											"end": 23589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23583,
											"end": 23593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 23583,
											"end": 23606,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23583,
											"end": 23616,
											"name": "tag",
											"source": 0,
											"value": "779"
										},
										{
											"begin": 23583,
											"end": 23616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23570,
											"end": 23580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23570,
											"end": 23580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23570,
											"end": 23580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23570,
											"end": 23616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23659,
											"end": 23675,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 23659,
											"end": 23675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23648,
											"end": 23686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "781"
										},
										{
											"begin": 23648,
											"end": 23686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23681,
											"end": 23685,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23681,
											"end": 23685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23648,
											"end": 23676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 23648,
											"end": 23676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23648,
											"end": 23654,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23648,
											"end": 23654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23648,
											"end": 23658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 23648,
											"end": 23676,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23648,
											"end": 23686,
											"name": "tag",
											"source": 0,
											"value": "781"
										},
										{
											"begin": 23648,
											"end": 23686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23645,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23630,
											"end": 23645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23630,
											"end": 23686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23340,
											"end": 23697,
											"name": "tag",
											"source": 0,
											"value": "774"
										},
										{
											"begin": 23340,
											"end": 23697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23720,
											"end": 23733,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23720,
											"end": 23733,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23710,
											"end": 23733,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23710,
											"end": 23733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23710,
											"end": 23733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23720,
											"end": 23733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23720,
											"end": 23733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23710,
											"end": 23733,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23710,
											"end": 23733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23710,
											"end": 23733,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23710,
											"end": 23733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23710,
											"end": 23763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "783"
										},
										{
											"begin": 23710,
											"end": 23763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23750,
											"end": 23763,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23750,
											"end": 23763,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23737,
											"end": 23763,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23737,
											"end": 23763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23737,
											"end": 23763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23750,
											"end": 23763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23750,
											"end": 23763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23737,
											"end": 23763,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23710,
											"end": 23763,
											"name": "tag",
											"source": 0,
											"value": "783"
										},
										{
											"begin": 23710,
											"end": 23763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 24057,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 24057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "784"
										},
										{
											"begin": 23706,
											"end": 24057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23804,
											"end": 23843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "785"
										},
										{
											"begin": 23838,
											"end": 23842,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23804,
											"end": 23833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 23815,
											"end": 23832,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23815,
											"end": 23832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23804,
											"end": 23810,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23804,
											"end": 23814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 23804,
											"end": 23814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23804,
											"end": 23833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23804,
											"end": 23833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23804,
											"end": 23833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23804,
											"end": 23833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23804,
											"end": 23833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23804,
											"end": 23843,
											"name": "tag",
											"source": 0,
											"value": "785"
										},
										{
											"begin": 23804,
											"end": 23843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23801,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23786,
											"end": 23801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23886,
											"end": 23903,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 23886,
											"end": 23903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23875,
											"end": 23914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "787"
										},
										{
											"begin": 23875,
											"end": 23914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23913,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23909,
											"end": 23913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23875,
											"end": 23904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 23875,
											"end": 23904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23875,
											"end": 23881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23875,
											"end": 23881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23875,
											"end": 23885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 23875,
											"end": 23904,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23875,
											"end": 23914,
											"name": "tag",
											"source": 0,
											"value": "787"
										},
										{
											"begin": 23875,
											"end": 23914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23857,
											"end": 23914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23857,
											"end": 23914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23952,
											"end": 23964,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 23952,
											"end": 23964,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 23975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "789"
										},
										{
											"begin": 23941,
											"end": 23975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23970,
											"end": 23974,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23970,
											"end": 23974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 23965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 23941,
											"end": 23965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 23947,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 23947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23941,
											"end": 23951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 23941,
											"end": 23965,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23941,
											"end": 23975,
											"name": "tag",
											"source": 0,
											"value": "789"
										},
										{
											"begin": 23941,
											"end": 23975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23928,
											"end": 23938,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24018,
											"end": 24035,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24018,
											"end": 24035,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24007,
											"end": 24046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "791"
										},
										{
											"begin": 24007,
											"end": 24046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24041,
											"end": 24045,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 24041,
											"end": 24045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24007,
											"end": 24036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 24007,
											"end": 24036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24007,
											"end": 24013,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24007,
											"end": 24013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24007,
											"end": 24017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 24007,
											"end": 24036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24007,
											"end": 24046,
											"name": "tag",
											"source": 0,
											"value": "791"
										},
										{
											"begin": 24007,
											"end": 24046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23989,
											"end": 24004,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23989,
											"end": 24004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23989,
											"end": 24004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23989,
											"end": 24046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 24057,
											"name": "tag",
											"source": 0,
											"value": "784"
										},
										{
											"begin": 23706,
											"end": 24057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24080,
											"end": 24093,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24080,
											"end": 24093,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24070,
											"end": 24093,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24070,
											"end": 24093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24070,
											"end": 24093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24080,
											"end": 24093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24080,
											"end": 24093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24070,
											"end": 24093,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24070,
											"end": 24093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24070,
											"end": 24093,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24070,
											"end": 24093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24070,
											"end": 24123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "793"
										},
										{
											"begin": 24070,
											"end": 24123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24110,
											"end": 24123,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24110,
											"end": 24123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24097,
											"end": 24123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24097,
											"end": 24123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24097,
											"end": 24123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24110,
											"end": 24123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24097,
											"end": 24123,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24097,
											"end": 24123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24070,
											"end": 24123,
											"name": "tag",
											"source": 0,
											"value": "793"
										},
										{
											"begin": 24070,
											"end": 24123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24066,
											"end": 24588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24066,
											"end": 24588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "794"
										},
										{
											"begin": 24066,
											"end": 24588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24167,
											"end": 24248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "795"
										},
										{
											"begin": 24244,
											"end": 24247,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24167,
											"end": 24239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 24213,
											"end": 24238,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24213,
											"end": 24238,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24168,
											"end": 24207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 24202,
											"end": 24206,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 24168,
											"end": 24197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 24179,
											"end": 24196,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24179,
											"end": 24196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24168,
											"end": 24174,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24168,
											"end": 24178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 24168,
											"end": 24178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24168,
											"end": 24197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24168,
											"end": 24197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24168,
											"end": 24197,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24168,
											"end": 24197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24168,
											"end": 24197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24167,
											"end": 24248,
											"name": "tag",
											"source": 0,
											"value": "795"
										},
										{
											"begin": 24167,
											"end": 24248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24149,
											"end": 24164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24280,
											"end": 24361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "799"
										},
										{
											"begin": 24357,
											"end": 24360,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24280,
											"end": 24352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24281,
											"end": 24320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 24315,
											"end": 24319,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 24281,
											"end": 24310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 24292,
											"end": 24309,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24292,
											"end": 24309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24281,
											"end": 24287,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24281,
											"end": 24291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 24281,
											"end": 24291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24281,
											"end": 24310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24281,
											"end": 24310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24281,
											"end": 24310,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24281,
											"end": 24310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24281,
											"end": 24310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24280,
											"end": 24361,
											"name": "tag",
											"source": 0,
											"value": "799"
										},
										{
											"begin": 24280,
											"end": 24361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24262,
											"end": 24361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24262,
											"end": 24361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24429,
											"end": 24454,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24429,
											"end": 24454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24400,
											"end": 24412,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24400,
											"end": 24412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24388,
											"end": 24464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "803"
										},
										{
											"begin": 24388,
											"end": 24464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24460,
											"end": 24463,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24460,
											"end": 24463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24388,
											"end": 24455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 24388,
											"end": 24455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24429,
											"end": 24454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24389,
											"end": 24423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 24389,
											"end": 24423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24418,
											"end": 24422,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 24418,
											"end": 24422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24388,
											"end": 24455,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24388,
											"end": 24455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24389,
											"end": 24395,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24389,
											"end": 24395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24389,
											"end": 24399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 24389,
											"end": 24413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24388,
											"end": 24464,
											"name": "tag",
											"source": 0,
											"value": "803"
										},
										{
											"begin": 24388,
											"end": 24464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24375,
											"end": 24379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24375,
											"end": 24385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24375,
											"end": 24385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24375,
											"end": 24464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24375,
											"end": 24464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24375,
											"end": 24464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24375,
											"end": 24464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24375,
											"end": 24464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24496,
											"end": 24577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "807"
										},
										{
											"begin": 24573,
											"end": 24576,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24496,
											"end": 24568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 24542,
											"end": 24567,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24542,
											"end": 24567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24497,
											"end": 24536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 24531,
											"end": 24535,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 24497,
											"end": 24526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 24508,
											"end": 24525,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24508,
											"end": 24525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24497,
											"end": 24503,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24497,
											"end": 24507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 24497,
											"end": 24507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24497,
											"end": 24526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24497,
											"end": 24526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24497,
											"end": 24526,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24497,
											"end": 24526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24497,
											"end": 24526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24496,
											"end": 24577,
											"name": "tag",
											"source": 0,
											"value": "807"
										},
										{
											"begin": 24496,
											"end": 24577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24478,
											"end": 24493,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24478,
											"end": 24493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24478,
											"end": 24493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24478,
											"end": 24577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24066,
											"end": 24588,
											"name": "tag",
											"source": 0,
											"value": "794"
										},
										{
											"begin": 24066,
											"end": 24588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24621,
											"end": 24706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "811"
										},
										{
											"begin": 24690,
											"end": 24694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24690,
											"end": 24705,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24690,
											"end": 24705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24690,
											"end": 24705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24621,
											"end": 24685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "711"
										},
										{
											"begin": 24674,
											"end": 24678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24674,
											"end": 24684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24674,
											"end": 24684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24674,
											"end": 24684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24621,
											"end": 24669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "711"
										},
										{
											"begin": 24653,
											"end": 24657,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24653,
											"end": 24668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24653,
											"end": 24668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24653,
											"end": 24668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24621,
											"end": 24648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "711"
										},
										{
											"begin": 24632,
											"end": 24636,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24632,
											"end": 24647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24632,
											"end": 24647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24632,
											"end": 24647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24621,
											"end": 24627,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24621,
											"end": 24631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 24621,
											"end": 24631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24621,
											"end": 24648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24621,
											"end": 24648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24621,
											"end": 24648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24621,
											"end": 24648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24621,
											"end": 24648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24621,
											"end": 24706,
											"name": "tag",
											"source": 0,
											"value": "811"
										},
										{
											"begin": 24621,
											"end": 24706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24606,
											"end": 24618,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24606,
											"end": 24618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24606,
											"end": 24618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24606,
											"end": 24706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24745,
											"end": 24762,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24745,
											"end": 24762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24754,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24745,
											"end": 24762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24745,
											"end": 24762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24745,
											"end": 24762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "815"
										},
										{
											"begin": 24745,
											"end": 24774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24767,
											"end": 24773,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24745,
											"end": 24766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 24745,
											"end": 24774,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24745,
											"end": 24774,
											"name": "tag",
											"source": 0,
											"value": "815"
										},
										{
											"begin": 24745,
											"end": 24774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24725,
											"end": 24742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24742,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24725,
											"end": 24742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24734,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24725,
											"end": 24742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24725,
											"end": 24742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24725,
											"end": 24742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24742,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24774,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24774,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24774,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24832,
											"end": 24844,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24832,
											"end": 24844,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24832,
											"end": 24844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24832,
											"end": 24844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24807,
											"end": 24827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24807,
											"end": 24827,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24807,
											"end": 24827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24807,
											"end": 24827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24807,
											"end": 24827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24807,
											"end": 24827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24807,
											"end": 24827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24807,
											"end": 24827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24807,
											"end": 24827,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24807,
											"end": 24827,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24807,
											"end": 24845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "816"
										},
										{
											"begin": 24807,
											"end": 24845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24807,
											"end": 24831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 24807,
											"end": 24845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24807,
											"end": 24845,
											"name": "tag",
											"source": 0,
											"value": "816"
										},
										{
											"begin": 24807,
											"end": 24845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24793,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24784,
											"end": 24804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24794,
											"end": 24803,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24784,
											"end": 24804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24784,
											"end": 24804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24804,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24784,
											"end": 24804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24804,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24784,
											"end": 24804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24784,
											"end": 24804,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24845,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24784,
											"end": 24845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 24985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "817"
										},
										{
											"begin": 24911,
											"end": 24984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "818"
										},
										{
											"begin": 24968,
											"end": 24972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24968,
											"end": 24983,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24968,
											"end": 24983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24968,
											"end": 24983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24911,
											"end": 24963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 24952,
											"end": 24956,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24952,
											"end": 24962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24952,
											"end": 24962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24952,
											"end": 24962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24911,
											"end": 24947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 24931,
											"end": 24935,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24931,
											"end": 24946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24931,
											"end": 24946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24911,
											"end": 24915,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24911,
											"end": 24926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24911,
											"end": 24926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24911,
											"end": 24926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24911,
											"end": 24930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 24911,
											"end": 24930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24911,
											"end": 24947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24911,
											"end": 24947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24911,
											"end": 24947,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24911,
											"end": 24947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24911,
											"end": 24947,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24911,
											"end": 24984,
											"name": "tag",
											"source": 0,
											"value": "818"
										},
										{
											"begin": 24911,
											"end": 24984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24900,
											"end": 24904,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 24906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24882,
											"end": 24906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 24906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 24906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 24891,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24882,
											"end": 24906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24882,
											"end": 24906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 24906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24882,
											"end": 24906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 24906,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 24906,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 24906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 24910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 24882,
											"end": 24985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24882,
											"end": 24985,
											"name": "tag",
											"source": 0,
											"value": "817"
										},
										{
											"begin": 24882,
											"end": 24985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24873,
											"end": 24877,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24855,
											"end": 24879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24864,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24855,
											"end": 24879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24855,
											"end": 24879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24855,
											"end": 24879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24879,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24985,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25037,
											"end": 25049,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25037,
											"end": 25049,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25037,
											"end": 25049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25037,
											"end": 25049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6702,
											"end": 6727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6675,
											"end": 6693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25009,
											"end": 25050,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 23210,
											"end": 25057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23210,
											"end": 25057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23210,
											"end": 25057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23210,
											"end": 25057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23210,
											"end": 25057,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 202,
											"name": "tag",
											"source": 1,
											"value": "824"
										},
										{
											"begin": 14,
											"end": 202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 93,
											"end": 106,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 93,
											"end": 106,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 146,
											"end": 176,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 135,
											"end": 177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 135,
											"end": 177,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 125,
											"end": 178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 125,
											"end": 178,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "826"
										},
										{
											"begin": 115,
											"end": 117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 192,
											"end": 193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 189,
											"end": 190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 182,
											"end": 194,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 115,
											"end": 117,
											"name": "tag",
											"source": 1,
											"value": "826"
										},
										{
											"begin": 115,
											"end": 117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 74,
											"end": 202,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 74,
											"end": 202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 74,
											"end": 202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 74,
											"end": 202,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 207,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 207,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 266,
											"end": 272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 298,
											"end": 305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 294,
											"end": 317,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 290,
											"end": 322,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 287,
											"end": 289,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 287,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "828"
										},
										{
											"begin": 287,
											"end": 289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 340,
											"end": 346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 332,
											"end": 338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 325,
											"end": 347,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 287,
											"end": 289,
											"name": "tag",
											"source": 1,
											"value": "828"
										},
										{
											"begin": 287,
											"end": 289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 384,
											"end": 393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 371,
											"end": 394,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 403,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 428,
											"end": 433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 403,
											"end": 434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 469,
											"end": 730,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 469,
											"end": 730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 539,
											"end": 545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 571,
											"end": 578,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 567,
											"end": 590,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 563,
											"end": 595,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 560,
											"end": 562,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 560,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "832"
										},
										{
											"begin": 560,
											"end": 562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 613,
											"end": 619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 598,
											"end": 620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 560,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "832"
										},
										{
											"begin": 560,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 650,
											"end": 659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 644,
											"end": 660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 694,
											"end": 699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 669,
											"end": 700,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1005,
											"end": 1403,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1005,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1120,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1137,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1104,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "838"
										},
										{
											"begin": 1102,
											"end": 1104,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1162,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1104,
											"name": "tag",
											"source": 1,
											"value": "838"
										},
										{
											"begin": 1102,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1209,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 1243,
											"end": 1248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 1218,
											"end": 1249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1249,
											"name": "tag",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 1218,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1325,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1329,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "840"
										},
										{
											"begin": 1297,
											"end": 1329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "840"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1408,
											"end": 1874,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1408,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1554,
											"end": 1556,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1542,
											"end": 1551,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1552,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1557,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "842"
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1582,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "tag",
											"source": 1,
											"value": "842"
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "843"
										},
										{
											"begin": 1663,
											"end": 1668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 1638,
											"end": 1669,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1638,
											"end": 1669,
											"name": "tag",
											"source": 1,
											"value": "843"
										},
										{
											"begin": 1638,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "844"
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "tag",
											"source": 1,
											"value": "844"
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1874,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1874,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1868,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1874,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1879,
											"end": 2204,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1879,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2010,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1996,
											"end": 2005,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2006,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2011,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2036,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "847"
										},
										{
											"begin": 2117,
											"end": 2122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 2092,
											"end": 2123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2092,
											"end": 2123,
											"name": "tag",
											"source": 1,
											"value": "847"
										},
										{
											"begin": 2092,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 2204,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2209,
											"end": 2464,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 2209,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2331,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2315,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2304,
											"end": 2327,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2332,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "849"
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "849"
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2397,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 2428,
											"end": 2433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "851"
										},
										{
											"begin": 2406,
											"end": 2434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2469,
											"end": 2859,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2469,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2533,
											"end": 2539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2591,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2580,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2592,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2597,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "853"
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2622,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "tag",
											"source": 1,
											"value": "853"
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2659,
											"end": 2668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2669,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "854"
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "851"
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "tag",
											"source": 1,
											"value": "854"
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2730,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2782,
											"end": 2784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2767,
											"end": 2785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "840"
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "856"
										},
										{
											"begin": 2795,
											"end": 2827,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2864,
											"end": 3293,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 2864,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3008,
											"end": 3017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3006,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3018,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3023,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 2990,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "858"
										},
										{
											"begin": 2988,
											"end": 2990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "858"
										},
										{
											"begin": 2988,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "859"
										},
										{
											"begin": 3099,
											"end": 3108,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "824"
										},
										{
											"begin": 3069,
											"end": 3109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3069,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "859"
										},
										{
											"begin": 3069,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3109,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "860"
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3171,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "824"
										},
										{
											"begin": 3128,
											"end": 3177,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3128,
											"end": 3177,
											"name": "tag",
											"source": 1,
											"value": "860"
										},
										{
											"begin": 3128,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3209,
											"end": 3218,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3224,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "861"
										},
										{
											"begin": 3257,
											"end": 3262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "856"
										},
										{
											"begin": 3233,
											"end": 3263,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3233,
											"end": 3263,
											"name": "tag",
											"source": 1,
											"value": "861"
										},
										{
											"begin": 3233,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3293,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3293,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3293,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3293,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3298,
											"end": 3488,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3298,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3398,
											"end": 3407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3413,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "863"
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3438,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "tag",
											"source": 1,
											"value": "863"
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3459,
											"end": 3482,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3488,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3493,
											"end": 3687,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3493,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3602,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3614,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3587,
											"end": 3619,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "865"
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3644,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "tag",
											"source": 1,
											"value": "865"
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3681,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3574,
											"end": 3687,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3692,
											"end": 4008,
											"name": "tag",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 3692,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3851,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3837,
											"end": 3846,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3835,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3847,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3819,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "867"
										},
										{
											"begin": 3817,
											"end": 3819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3877,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3819,
											"name": "tag",
											"source": 1,
											"value": "867"
										},
										{
											"begin": 3817,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3904,
											"end": 3913,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3914,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3954,
											"end": 3956,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3943,
											"end": 3952,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3933,
											"end": 3958,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4000,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3987,
											"end": 3996,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 4002,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 4002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 4002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 4008,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 4008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 4008,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 4008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 4008,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 4008,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4013,
											"end": 4408,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4013,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4107,
											"end": 4113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4179,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4164,
											"end": 4173,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4162,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4174,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4180,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "869"
										},
										{
											"begin": 4144,
											"end": 4146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4204,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4205,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4146,
											"name": "tag",
											"source": 1,
											"value": "869"
										},
										{
											"begin": 4144,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4226,
											"end": 4249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4249,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4281,
											"end": 4299,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 4299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4300,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4300,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4347,
											"end": 4349,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4351,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4351,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4400,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4383,
											"end": 4401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4402,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4402,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4134,
											"end": 4408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4134,
											"end": 4408,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6738,
											"end": 7400,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6738,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6908,
											"end": 6910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6906,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 6911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6940,
											"end": 6946,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6983,
											"end": 6989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6978,
											"end": 6980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 6976,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 6981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6956,
											"end": 6990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7008,
											"end": 7012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7161,
											"name": "tag",
											"source": 1,
											"value": "878"
										},
										{
											"begin": 7021,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7035,
											"end": 7041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7029,
											"end": 7042,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7161,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "880"
										},
										{
											"begin": 7021,
											"end": 7161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7144,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7126,
											"end": 7149,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7126,
											"end": 7149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7150,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7113,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7115,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7092,
											"end": 7118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "878"
										},
										{
											"begin": 7021,
											"end": 7161,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7161,
											"name": "tag",
											"source": 1,
											"value": "880"
										},
										{
											"begin": 7021,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7179,
											"end": 7185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7176,
											"end": 7177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7173,
											"end": 7186,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "881"
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7253,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7244,
											"end": 7246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7235,
											"end": 7241,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7224,
											"end": 7233,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7220,
											"end": 7242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7216,
											"end": 7247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "tag",
											"source": 1,
											"value": "881"
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7316,
											"end": 7318,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7304,
											"end": 7319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7387,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 7300,
											"end": 7388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7389,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7389,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7391,
											"end": 7393,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7281,
											"end": 7394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7394,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6859,
											"end": 7400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6859,
											"end": 7400,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15468,
											"end": 16497,
											"name": "tag",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 15468,
											"end": 16497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15778,
											"end": 15781,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 15767,
											"end": 15776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15763,
											"end": 15782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15809,
											"end": 15815,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15798,
											"end": 15807,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15791,
											"end": 15816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15835,
											"end": 15837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15873,
											"end": 15879,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15857,
											"end": 15866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15853,
											"end": 15871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15846,
											"end": 15880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15916,
											"end": 15919,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 15911,
											"end": 15913,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15900,
											"end": 15909,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15896,
											"end": 15914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15889,
											"end": 15920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15940,
											"end": 15946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15975,
											"end": 15981,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 15982,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16006,
											"end": 16012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15998,
											"end": 16004,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15991,
											"end": 16013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16044,
											"end": 16047,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 16033,
											"end": 16042,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16029,
											"end": 16048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16022,
											"end": 16048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16022,
											"end": 16048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16083,
											"end": 16085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16075,
											"end": 16081,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 16071,
											"end": 16086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16057,
											"end": 16086,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16057,
											"end": 16086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16104,
											"end": 16108,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16117,
											"end": 16335,
											"name": "tag",
											"source": 1,
											"value": "904"
										},
										{
											"begin": 16117,
											"end": 16335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16131,
											"end": 16137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16128,
											"end": 16129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16138,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 16117,
											"end": 16335,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16117,
											"end": 16335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "906"
										},
										{
											"begin": 16117,
											"end": 16335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16196,
											"end": 16209,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16196,
											"end": 16209,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16192,
											"end": 16254,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16180,
											"end": 16255,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16180,
											"end": 16255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16310,
											"end": 16325,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16310,
											"end": 16325,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16310,
											"end": 16325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16310,
											"end": 16325,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16275,
											"end": 16287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16275,
											"end": 16287,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16275,
											"end": 16287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16275,
											"end": 16287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16153,
											"end": 16154,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16146,
											"end": 16155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16117,
											"end": 16335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "904"
										},
										{
											"begin": 16117,
											"end": 16335,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16117,
											"end": 16335,
											"name": "tag",
											"source": 1,
											"value": "906"
										},
										{
											"begin": 16117,
											"end": 16335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16391,
											"end": 16446,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 16391,
											"end": 16446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16391,
											"end": 16446,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 16391,
											"end": 16446,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16386,
											"end": 16388,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16371,
											"end": 16389,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16371,
											"end": 16389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 16447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16478,
											"end": 16481,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16463,
											"end": 16482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16456,
											"end": 16491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16355,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15739,
											"end": 16497,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15739,
											"end": 16497,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17087,
											"end": 17215,
											"name": "tag",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 17087,
											"end": 17215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17127,
											"end": 17130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17158,
											"end": 17159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17154,
											"end": 17160,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17151,
											"end": 17152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17148,
											"end": 17161,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17145,
											"end": 17147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17145,
											"end": 17147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "911"
										},
										{
											"begin": 17145,
											"end": 17147,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "911"
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "912"
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "tag",
											"source": 1,
											"value": "911"
										},
										{
											"begin": 17164,
											"end": 17182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17200,
											"end": 17209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17200,
											"end": 17209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17135,
											"end": 17215,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17220,
											"end": 17340,
											"name": "tag",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 17220,
											"end": 17340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17260,
											"end": 17261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17286,
											"end": 17287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17276,
											"end": 17278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "915"
										},
										{
											"begin": 17276,
											"end": 17278,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17291,
											"end": 17309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "915"
										},
										{
											"begin": 17291,
											"end": 17309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "916"
										},
										{
											"begin": 17291,
											"end": 17309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17291,
											"end": 17309,
											"name": "tag",
											"source": 1,
											"value": "915"
										},
										{
											"begin": 17291,
											"end": 17309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17325,
											"end": 17334,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 17325,
											"end": 17334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17266,
											"end": 17340,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17345,
											"end": 17573,
											"name": "tag",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 17345,
											"end": 17573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17385,
											"end": 17392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17511,
											"end": 17512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17443,
											"end": 17509,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17439,
											"end": 17513,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 17436,
											"end": 17437,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17433,
											"end": 17514,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17428,
											"end": 17429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17421,
											"end": 17430,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17414,
											"end": 17431,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17410,
											"end": 17515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17407,
											"end": 17409,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17407,
											"end": 17409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "919"
										},
										{
											"begin": 17407,
											"end": 17409,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17518,
											"end": 17536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "919"
										},
										{
											"begin": 17518,
											"end": 17536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "912"
										},
										{
											"begin": 17518,
											"end": 17536,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17518,
											"end": 17536,
											"name": "tag",
											"source": 1,
											"value": "919"
										},
										{
											"begin": 17518,
											"end": 17536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17558,
											"end": 17567,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17558,
											"end": 17567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17397,
											"end": 17573,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17578,
											"end": 17840,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 17578,
											"end": 17840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17617,
											"end": 17624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17649,
											"end": 17659,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17686,
											"end": 17688,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17683,
											"end": 17684,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17679,
											"end": 17689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17716,
											"end": 17718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17713,
											"end": 17714,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17709,
											"end": 17719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17772,
											"end": 17775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17768,
											"end": 17770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17764,
											"end": 17776,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 17759,
											"end": 17762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17756,
											"end": 17777,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17749,
											"end": 17752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17742,
											"end": 17753,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17735,
											"end": 17754,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17731,
											"end": 17778,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17728,
											"end": 17730,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17728,
											"end": 17730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "922"
										},
										{
											"begin": 17728,
											"end": 17730,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17781,
											"end": 17799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "922"
										},
										{
											"begin": 17781,
											"end": 17799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "912"
										},
										{
											"begin": 17781,
											"end": 17799,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17781,
											"end": 17799,
											"name": "tag",
											"source": 1,
											"value": "922"
										},
										{
											"begin": 17781,
											"end": 17799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17821,
											"end": 17834,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17629,
											"end": 17840,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17629,
											"end": 17840,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17845,
											"end": 17970,
											"name": "tag",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 17845,
											"end": 17970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17885,
											"end": 17889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17913,
											"end": 17914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17910,
											"end": 17911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17907,
											"end": 17915,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17904,
											"end": 17906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17904,
											"end": 17906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "925"
										},
										{
											"begin": 17904,
											"end": 17906,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17918,
											"end": 17936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "925"
										},
										{
											"begin": 17918,
											"end": 17936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "912"
										},
										{
											"begin": 17918,
											"end": 17936,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17918,
											"end": 17936,
											"name": "tag",
											"source": 1,
											"value": "925"
										},
										{
											"begin": 17918,
											"end": 17936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17955,
											"end": 17964,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17955,
											"end": 17964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17894,
											"end": 17970,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17975,
											"end": 18087,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 17975,
											"end": 18087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18007,
											"end": 18008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18033,
											"end": 18034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "928"
										},
										{
											"begin": 18023,
											"end": 18025,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18038,
											"end": 18056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "928"
										},
										{
											"begin": 18038,
											"end": 18056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "916"
										},
										{
											"begin": 18038,
											"end": 18056,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18038,
											"end": 18056,
											"name": "tag",
											"source": 1,
											"value": "928"
										},
										{
											"begin": 18038,
											"end": 18056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18072,
											"end": 18081,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 18072,
											"end": 18081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18013,
											"end": 18087,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18092,
											"end": 18285,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 18092,
											"end": 18285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18127,
											"end": 18130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18158,
											"end": 18224,
											"name": "PUSH",
											"source": 1,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18151,
											"end": 18156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18148,
											"end": 18225,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18145,
											"end": 18147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18145,
											"end": 18147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "931"
										},
										{
											"begin": 18145,
											"end": 18147,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18228,
											"end": 18246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "931"
										},
										{
											"begin": 18228,
											"end": 18246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "912"
										},
										{
											"begin": 18228,
											"end": 18246,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18228,
											"end": 18246,
											"name": "tag",
											"source": 1,
											"value": "931"
										},
										{
											"begin": 18228,
											"end": 18246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18264,
											"end": 18279,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18264,
											"end": 18279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18135,
											"end": 18285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18290,
											"end": 18474,
											"name": "tag",
											"source": 1,
											"value": "912"
										},
										{
											"begin": 18290,
											"end": 18474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18342,
											"end": 18419,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18339,
											"end": 18340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18332,
											"end": 18420,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18439,
											"end": 18443,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 18436,
											"end": 18437,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18429,
											"end": 18444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18463,
											"end": 18467,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18460,
											"end": 18461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18453,
											"end": 18468,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18479,
											"end": 18663,
											"name": "tag",
											"source": 1,
											"value": "916"
										},
										{
											"begin": 18479,
											"end": 18663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18531,
											"end": 18608,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18528,
											"end": 18529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18521,
											"end": 18609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18628,
											"end": 18632,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 18625,
											"end": 18626,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18618,
											"end": 18633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18652,
											"end": 18656,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18649,
											"end": 18650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18642,
											"end": 18657,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18668,
											"end": 18822,
											"name": "tag",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 18668,
											"end": 18822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18747,
											"end": 18752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18743,
											"end": 18797,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18736,
											"end": 18741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18733,
											"end": 18798,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18723,
											"end": 18725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 18723,
											"end": 18725,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18812,
											"end": 18813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18809,
											"end": 18810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18802,
											"end": 18814,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18827,
											"end": 18945,
											"name": "tag",
											"source": 1,
											"value": "851"
										},
										{
											"begin": 18827,
											"end": 18945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18913,
											"end": 18918,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18906,
											"end": 18919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18899,
											"end": 18920,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18892,
											"end": 18897,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18889,
											"end": 18921,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18879,
											"end": 18881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 18879,
											"end": 18881,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18935,
											"end": 18936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18932,
											"end": 18933,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18925,
											"end": 18937,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18950,
											"end": 19071,
											"name": "tag",
											"source": 1,
											"value": "856"
										},
										{
											"begin": 18950,
											"end": 19071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19035,
											"end": 19045,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19028,
											"end": 19033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19024,
											"end": 19046,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19017,
											"end": 19022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19014,
											"end": 19047,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19004,
											"end": 19006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 19004,
											"end": 19006,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19061,
											"end": 19062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19058,
											"end": 19059,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19051,
											"end": 19063,
											"name": "REVERT",
											"source": 1
										}
									],
									".data": {
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365"
									}
								}
							}
						},
						"methodIdentifiers": {
							"ATHvariance()": "80670f3c",
							"_buyEcosystemFee()": "2843631d",
							"_buyLiquidityFee()": "dc44b6a0",
							"_buyMarketingFee()": "c5d24189",
							"_buyTeamFee()": "c469b6dd",
							"_maxWalletAmount()": "6c0a24eb",
							"_sellEcosystemFee()": "248dd232",
							"_sellLiquidityFee()": "88790a68",
							"_sellMarketingFee()": "c8607952",
							"_sellTeamFee()": "cab03471",
							"addBot(address)": "ffecf516",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"canBlackList()": "301ad558",
							"canChangeTax()": "39a53c4e",
							"canPause()": "323be1c5",
							"configureStrongHands(bool,uint32)": "729cb3f2",
							"cooldown()": "787a08a6",
							"cooldownRemaining(address)": "9d82190f",
							"decimals()": "313ce567",
							"diamondFloor()": "c95457ff",
							"disableBlackListing()": "d55cb78a",
							"disablePauseAbility()": "6aabff3f",
							"disableTaxChange()": "99a7b9bc",
							"disableToken()": "3e0f966d",
							"enableToken()": "8e360253",
							"excludeFromFee(address)": "437823ec",
							"includeInFee(address)": "ea2f0b37",
							"isBot(address)": "3bbac579",
							"manualSendToken(address)": "29409395",
							"manualsend()": "6fc3eaec",
							"manualswap()": "c3c8cd80",
							"name()": "06fdde03",
							"numTokensToSwap()": "01a6c43b",
							"openTrading(uint256)": "d1633649",
							"owner()": "8da5cb5b",
							"pairPrice()": "9491f94d",
							"removeBot(address)": "5fecd926",
							"renounceOwnership()": "715018a6",
							"setBuyTaxes(uint256,uint256,uint256,uint256)": "e4bf1bed",
							"setMaxWalletAmount(uint256)": "27a14fc2",
							"setSellTaxes(uint256,uint256,uint256,uint256)": "f480fec2",
							"setTransferTransactionMultiplier(uint256)": "a850673d",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"tradingOpen()": "ffb54a99",
							"transfer(address,uint256)": "a9059cbb",
							"transferFeeIncreaseFactor()": "72b2aecc",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniswapV2Pair()": "49bd5a5e",
							"updateEcosystemAddress(address)": "db0045ec",
							"updateLpRecipient(address)": "cdb3858f",
							"updateMarketingAddress(address)": "2369bf83",
							"updateNumTokensToSwap(uint256)": "e315a6da",
							"updateTeamAddress(address)": "14eb76ac"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_buyMarketingFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_buyLiquidityFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_buyTeamFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_buyEcosystemFee\",\"type\":\"uint256\"}],\"name\":\"BuyFeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sellMarketingFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sellLiquidityFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sellTeamFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sellEcosystemFee\",\"type\":\"uint256\"}],\"name\":\"SellFeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ATHvariance\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_buyEcosystemFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_buyLiquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_buyMarketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_buyTeamFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellEcosystemFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellLiquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellMarketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellTeamFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canBlackList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canChangeTax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"name\":\"configureStrongHands\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"cooldownRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"days_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hours_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minutes_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seconds_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"diamondFloor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"triggerPercentage\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"athPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellStopped\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"blockedAth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableBlackListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disablePauseAbility\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTaxChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"manualSendToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualsend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualswap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numTokensToSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"botBlocks\",\"type\":\"uint256\"}],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ecosystemFee\",\"type\":\"uint256\"}],\"name\":\"setBuyTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxWalletAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxWalletAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ecosystemFee\",\"type\":\"uint256\"}],\"name\":\"setSellTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_multiplier\",\"type\":\"uint256\"}],\"name\":\"setTransferTransactionMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferFeeIncreaseFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"ecosystemAddress\",\"type\":\"address\"}],\"name\":\"updateEcosystemAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"lpRecipient\",\"type\":\"address\"}],\"name\":\"updateLpRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"marketingAddress\",\"type\":\"address\"}],\"name\":\"updateMarketingAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"updateNumTokensToSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"teamAddress\",\"type\":\"address\"}],\"name\":\"updateTeamAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"gainZilla\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x4af3813bc629daf871e64a58e0d92d39eca9f85fde0ad0d2955616d20015346d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a20cca7f093d482ce096c66efd1e88c77f58c1928b22ba07b561f8813bccc101\",\"dweb:/ipfs/QmSeMMGCKjnwUZnwZMqwTCeYrhTcp1WxvgL5Bb9rwDNhe2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 228,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 230,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 749,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 755,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 759,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_isExcludedFromFee",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 768,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_firstBlock",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 770,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_botBlocks",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 777,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_maxWalletAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 784,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "numTokensToSwap",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 787,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_buyLiquidityFee",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 790,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousBuyLiquidityFee",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 793,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_buyEcosystemFee",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 796,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousBuyEcosystemFee",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 799,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_buyMarketingFee",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 802,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousBuyMarketingFee",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 805,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_buyTeamFee",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 808,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousBuyTeamFee",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 811,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_sellLiquidityFee",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 814,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousSellLiquidityFee",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 817,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_sellEcosystemFee",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 820,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousSellEcosystemFee",
								"offset": 0,
								"slot": "20",
								"type": "t_uint256"
							},
							{
								"astId": 823,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_sellMarketingFee",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							},
							{
								"astId": 826,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousSellMarketingFee",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 829,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_sellTeamFee",
								"offset": 0,
								"slot": "23",
								"type": "t_uint256"
							},
							{
								"astId": 832,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousSellTeamFee",
								"offset": 0,
								"slot": "24",
								"type": "t_uint256"
							},
							{
								"astId": 835,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "transferFeeIncreaseFactor",
								"offset": 0,
								"slot": "25",
								"type": "t_uint256"
							},
							{
								"astId": 858,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "cooldown",
								"offset": 0,
								"slot": "26",
								"type": "t_struct(StrongHandsConfig)855_storage"
							},
							{
								"astId": 872,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "diamondFloor",
								"offset": 0,
								"slot": "28",
								"type": "t_struct(DiamondFloor)869_storage"
							},
							{
								"astId": 876,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "bots",
								"offset": 0,
								"slot": "32",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 883,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_marketingAddress",
								"offset": 0,
								"slot": "33",
								"type": "t_address_payable"
							},
							{
								"astId": 890,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_teamAddress",
								"offset": 0,
								"slot": "34",
								"type": "t_address_payable"
							},
							{
								"astId": 897,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_ecosystemAddress",
								"offset": 0,
								"slot": "35",
								"type": "t_address_payable"
							},
							{
								"astId": 904,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_lpRecipient",
								"offset": 0,
								"slot": "36",
								"type": "t_address_payable"
							},
							{
								"astId": 907,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "uniswapV2Router",
								"offset": 0,
								"slot": "37",
								"type": "t_contract(IUniswapV2Router02)707"
							},
							{
								"astId": 909,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "uniswapV2Pair",
								"offset": 0,
								"slot": "38",
								"type": "t_address"
							},
							{
								"astId": 911,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_maxTxAmount",
								"offset": 0,
								"slot": "39",
								"type": "t_uint256"
							},
							{
								"astId": 914,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "tradingOpen",
								"offset": 0,
								"slot": "40",
								"type": "t_bool"
							},
							{
								"astId": 917,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "inSwap",
								"offset": 1,
								"slot": "40",
								"type": "t_bool"
							},
							{
								"astId": 920,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "canPause",
								"offset": 2,
								"slot": "40",
								"type": "t_bool"
							},
							{
								"astId": 923,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "canBlackList",
								"offset": 3,
								"slot": "40",
								"type": "t_bool"
							},
							{
								"astId": 926,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "canChangeTax",
								"offset": 4,
								"slot": "40",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IUniswapV2Router02)707": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(DiamondFloor)869_storage": {
								"encoding": "inplace",
								"label": "struct gainZilla.DiamondFloor",
								"members": [
									{
										"astId": 860,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "enabled",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 862,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "triggerPercentage",
										"offset": 1,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 864,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "athPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 866,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "sellStopped",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 868,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "blockedAth",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(StrongHandsConfig)855_storage": {
								"encoding": "inplace",
								"label": "struct gainZilla.StrongHandsConfig",
								"members": [
									{
										"astId": 848,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "enabled",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 850,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "duration",
										"offset": 1,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 854,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "walletList",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/gainzilla.sol": {
				"ast": {
					"absolutePath": "contracts/gainzilla.sol",
					"exportedSymbols": {
						"Context": [
							11
						],
						"IERC20": [
							78
						],
						"IERC20Extented": [
							725
						],
						"IUniswapV2Factory": [
							592
						],
						"IUniswapV2Pair": [
							582
						],
						"IUniswapV2Router02": [
							707
						],
						"Ownable": [
							342
						],
						"SafeMath": [
							224
						],
						"gainZilla": [
							3050
						]
					},
					"id": 3051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "682:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "Context",
							"nameLocation": "725:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "801:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "818:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "818:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "811:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "748:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "792:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:9:0"
									},
									"scope": 11,
									"src": "739:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3051,
							"src": "707:130:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 78,
							"linearizedBaseContracts": [
								78
							],
							"name": "IERC20",
							"nameLocation": "849:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "871:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "882:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "907:9:0"
									},
									"scope": 78,
									"src": "862:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "931:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "949:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "941:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:17:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "981:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:9:0"
									},
									"scope": 78,
									"src": "922:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1004:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1021:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1013:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1040:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1032:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:35:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1066:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1066:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:6:0"
									},
									"scope": 78,
									"src": "995:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1086:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1104:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1096:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1119:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1111:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:32:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:9:0"
									},
									"scope": 78,
									"src": "1077:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 50,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1174:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1190:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1182:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1207:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1199:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1181:33:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1233:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1233:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:6:0"
									},
									"scope": 78,
									"src": "1165:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1253:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1274:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1266:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1290:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1282:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1309:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1301:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:51:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1335:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 58,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1335:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:6:0"
									},
									"scope": 78,
									"src": "1244:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 69,
									"name": "Transfer",
									"nameLocation": "1352:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1377:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1361:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1399:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1383:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1411:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1403:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1360:57:0"
									},
									"src": "1346:72:0"
								},
								{
									"anonymous": false,
									"id": 77,
									"name": "Approval",
									"nameLocation": "1429:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1438:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1477:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1461:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1494:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1486:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:63:0"
									},
									"src": "1423:78:0"
								}
							],
							"scope": 3051,
							"src": "839:664:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 224,
							"linearizedBaseContracts": [
								224
							],
							"name": "SafeMath",
							"nameLocation": "1513:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "1595:108:0",
										"statements": [
											{
												"assignments": [
													88
												],
												"declarations": [
													{
														"constant": false,
														"id": 88,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1613:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "1605:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 87,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1605:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 89,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1617:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 90,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1621:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1617:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1605:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "1640:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 95,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1645:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1640:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1648:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 93,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1632:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1632:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "1632:46:0"
											},
											{
												"expression": {
													"id": 100,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 88,
													"src": "1695:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 86,
												"id": 101,
												"nodeType": "Return",
												"src": "1688:8:0"
											}
										]
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1537:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1549:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1541:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1560:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1552:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1540:22:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1586:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:9:0"
									},
									"scope": 224,
									"src": "1528:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1776:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 113,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1797:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 114,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1800:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1803:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 112,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															119,
															146
														],
														"referencedDeclaration": 146,
														"src": "1793:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1793:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 111,
												"id": 117,
												"nodeType": "Return",
												"src": "1786:50:0"
											}
										]
									},
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1718:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1730:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1722:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1741:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1733:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1721:22:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1767:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:9:0"
									},
									"scope": 224,
									"src": "1709:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1944:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 131,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "1962:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 132,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "1967:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1962:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 134,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1970:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1954:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1954:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "1954:29:0"
											},
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2001:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "1993:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 137,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1993:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 142,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 139,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2005:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 140,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2009:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2005:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1993:17:0"
											},
											{
												"expression": {
													"id": 143,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "2027:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 129,
												"id": 144,
												"nodeType": "Return",
												"src": "2020:8:0"
											}
										]
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1858:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1870:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1862:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1881:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1873:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1898:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1884:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1884:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1861:50:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1935:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1934:9:0"
									},
									"scope": 224,
									"src": "1849:186:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "2108:172:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 155,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "2122:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2127:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2122:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 161,
												"nodeType": "IfStatement",
												"src": "2118:45:0",
												"trueBody": {
													"id": 160,
													"nodeType": "Block",
													"src": "2130:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2151:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 154,
															"id": 159,
															"nodeType": "Return",
															"src": "2144:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2180:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 179,
														"src": "2172:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 162,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2172:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 167,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 164,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "2184:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 165,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "2188:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2184:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2172:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 169,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "2207:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 170,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "2211:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2207:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 172,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "2216:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2207:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2219:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2199:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2199:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "2199:56:0"
											},
											{
												"expression": {
													"id": 177,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 163,
													"src": "2272:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 154,
												"id": 178,
												"nodeType": "Return",
												"src": "2265:8:0"
											}
										]
									},
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2050:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2062:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2054:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2073:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2065:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2053:22:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2099:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2098:9:0"
									},
									"scope": 224,
									"src": "2041:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "2353:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 190,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "2374:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 191,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "2377:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2380:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 189,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															196,
															223
														],
														"referencedDeclaration": 223,
														"src": "2370:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 188,
												"id": 194,
												"nodeType": "Return",
												"src": "2363:46:0"
											}
										]
									},
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2295:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2307:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2299:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2318:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2310:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2298:22:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2344:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:9:0"
									},
									"scope": 224,
									"src": "2286:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "2517:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "2535:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2539:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2535:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 211,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2542:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2527:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2527:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "2527:28:0"
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2573:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "2565:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 214,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 219,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 216,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "2577:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 217,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2581:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2577:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2565:17:0"
											},
											{
												"expression": {
													"id": 220,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 215,
													"src": "2599:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 206,
												"id": 221,
												"nodeType": "Return",
												"src": "2592:8:0"
											}
										]
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2431:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2443:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2435:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2454:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2446:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "2471:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2457:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 201,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2457:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:50:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2508:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2507:9:0"
									},
									"scope": 224,
									"src": "2422:185:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3051,
							"src": "1505:1104:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 225,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "2631:7:0"
									},
									"id": 226,
									"nodeType": "InheritanceSpecifier",
									"src": "2631:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 342,
							"linearizedBaseContracts": [
								342,
								11
							],
							"name": "Ownable",
							"nameLocation": "2620:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 228,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "2661:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "2645:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 227,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2645:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 230,
									"mutability": "mutable",
									"name": "_previousOwner",
									"nameLocation": "2689:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "2673:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 229,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2673:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 236,
									"name": "OwnershipTransferred",
									"nameLocation": "2715:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "2752:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2736:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2736:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2767:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2735:57:0"
									},
									"src": "2709:84:0"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "2813:135:0",
										"statements": [
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "2831:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "2823:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2823:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 243,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 241,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2843:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2843:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:32:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 244,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "2865:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2874:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2865:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "2865:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2927:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2919:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 249,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2919:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2919:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 253,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2931:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 248,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "2898:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "EmitStatement",
												"src": "2893:48:0"
											}
										]
									},
									"id": 257,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2810:2:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2813:0:0"
									},
									"scope": 342,
									"src": "2799:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "3001:30:0",
										"statements": [
											{
												"expression": {
													"id": 262,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "3018:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 261,
												"id": 263,
												"nodeType": "Return",
												"src": "3011:13:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2963:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2968:2:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2992:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2991:9:0"
									},
									"scope": 342,
									"src": "2954:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "3058:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 268,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "3076:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 269,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "3086:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3086:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3076:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3100:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3068:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3068:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "3068:67:0"
											},
											{
												"id": 275,
												"nodeType": "PlaceholderStatement",
												"src": "3145:1:0"
											}
										]
									},
									"id": 277,
									"name": "onlyOwner",
									"nameLocation": "3046:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3055:2:0"
									},
									"src": "3037:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "3372:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 286,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "3390:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3410:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3402:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 287,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3402:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3402:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3390:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3414:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3382:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3382:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "3382:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 296,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "3484:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "3465:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3465:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "3465:28:0"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "3159:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 283,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 282,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "3362:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3362:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3311:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3337:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3329:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3329:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3328:18:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3372:0:0"
									},
									"scope": 342,
									"src": "3302:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "3717:124:0",
										"statements": [
											{
												"assignments": [
													307
												],
												"declarations": [
													{
														"constant": false,
														"id": 307,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3735:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 319,
														"src": "3727:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 306,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3727:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 309,
												"initialValue": {
													"id": 308,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "3746:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3727:25:0"
											},
											{
												"expression": {
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 310,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "3762:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 311,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "3771:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3762:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "3762:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 315,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3815:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 316,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "3825:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 314,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "3794:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3794:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "EmitStatement",
												"src": "3789:45:0"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "3506:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3663:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3690:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "3682:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3681:18:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3717:0:0"
									},
									"scope": 342,
									"src": "3654:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3907:91:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 326,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "3943:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3959:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3951:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 327,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3951:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3951:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 325,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "3922:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3922:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "EmitStatement",
												"src": "3917:45:0"
											},
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 333,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "3972:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3989:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 334,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3981:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3981:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3972:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "3972:19:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 323,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 322,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "3895:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3895:11:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3860:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3877:2:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3907:0:0"
									},
									"scope": 342,
									"src": "3851:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3051,
							"src": "2611:1389:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 582,
							"linearizedBaseContracts": [
								582
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "4012:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 350,
									"name": "Approval",
									"nameLocation": "4039:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4064:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4048:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4087:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4071:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4101:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4096:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4047:60:0"
									},
									"src": "4033:75:0"
								},
								{
									"anonymous": false,
									"id": 358,
									"name": "Transfer",
									"nameLocation": "4119:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4144:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "4128:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4166:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "4150:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4175:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "4170:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4127:54:0"
									},
									"src": "4113:69:0"
								},
								{
									"functionSelector": "06fdde03",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "4197:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4201:2:0"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "4227:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 360,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4227:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:15:0"
									},
									"scope": 582,
									"src": "4188:54:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4256:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4262:2:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4288:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 365,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4288:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4287:15:0"
									},
									"scope": 582,
									"src": "4247:56:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4317:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4325:2:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "4351:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 370,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4351:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4350:7:0"
									},
									"scope": 582,
									"src": "4308:50:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4372:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4383:2:0"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "4409:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4409:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4408:6:0"
									},
									"scope": 582,
									"src": "4363:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4429:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4447:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "4439:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4438:15:0"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "4477:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4477:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:6:0"
									},
									"scope": 582,
									"src": "4420:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4497:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4515:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4507:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4530:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4522:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4522:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4506:32:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4562:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4562:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4561:6:0"
									},
									"scope": 582,
									"src": "4488:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4583:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4599:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4591:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4613:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4608:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4608:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4590:29:0"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4638:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 400,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4638:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:6:0"
									},
									"scope": 582,
									"src": "4574:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4658:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4684:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4679:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4679:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4666:24:0"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4709:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4709:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4708:6:0"
									},
									"scope": 582,
									"src": "4649:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4729:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4750:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "4742:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4764:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "4756:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4773:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "4768:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4768:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:38:0"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "4798:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4798:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:6:0"
									},
									"scope": 582,
									"src": "4720:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "4819:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4835:2:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "4861:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 425,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:9:0"
									},
									"scope": 582,
									"src": "4810:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "4884:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4899:2:0"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4925:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 430,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4924:9:0"
									},
									"scope": 582,
									"src": "4875:59:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "4948:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4963:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "4955:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4954:15:0"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "4993:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4993:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4992:6:0"
									},
									"scope": 582,
									"src": "4939:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "5014:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5029:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5021:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5044:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5036:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5053:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5053:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "5070:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5065:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5065:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5086:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5080:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 449,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5080:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5097:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5089:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5108:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5100:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 453,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5020:90:0"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5119:0:0"
									},
									"scope": 582,
									"src": "5005:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 465,
									"name": "Mint",
									"nameLocation": "5132:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5153:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5137:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5166:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5161:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5161:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5180:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5175:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5136:52:0"
									},
									"src": "5126:63:0"
								},
								{
									"anonymous": false,
									"id": 475,
									"name": "Burn",
									"nameLocation": "5200:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5221:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5205:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5234:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5229:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5229:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5248:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5243:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5243:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5273:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5257:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5257:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5204:72:0"
									},
									"src": "5194:83:0"
								},
								{
									"anonymous": false,
									"id": 489,
									"name": "Swap",
									"nameLocation": "5288:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5318:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5302:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5302:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nameLocation": "5339:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5334:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5334:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nameLocation": "5363:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5358:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5358:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "5387:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5382:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5382:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "5412:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5407:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5448:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5432:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:164:0"
									},
									"src": "5282:175:0"
								},
								{
									"anonymous": false,
									"id": 495,
									"name": "Sync",
									"nameLocation": "5468:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "5481:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "5473:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 490,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "5499:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "5491:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 492,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5472:36:0"
									},
									"src": "5462:47:0"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nameLocation": "5524:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5541:2:0"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "5567:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5567:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5566:6:0"
									},
									"scope": 582,
									"src": "5515:58:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "5587:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5594:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5620:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5619:9:0"
									},
									"scope": 582,
									"src": "5578:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "5643:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5649:2:0"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5675:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:9:0"
									},
									"scope": 582,
									"src": "5634:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "5698:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5704:2:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "5730:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:0"
									},
									"scope": 582,
									"src": "5689:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "5753:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5764:2:0"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "5798:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5790:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 517,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "5816:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5808:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 519,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "5833:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5826:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 521,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "5826:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:63:0"
									},
									"scope": 582,
									"src": "5744:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nameLocation": "5867:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5887:2:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5913:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5913:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5912:6:0"
									},
									"scope": 582,
									"src": "5858:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nameLocation": "5933:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5953:2:0"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "5979:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5979:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5978:6:0"
									},
									"scope": 582,
									"src": "5924:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nameLocation": "5999:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6004:2:0"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "6030:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6030:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6029:6:0"
									},
									"scope": 582,
									"src": "5990:46:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "6051:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6064:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "6056:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6055:12:0"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6091:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "6086:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6086:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6085:16:0"
									},
									"scope": 582,
									"src": "6042:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "6116:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6129:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6121:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6121:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6120:12:0"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6156:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6151:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6151:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6170:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6165:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6150:28:0"
									},
									"scope": 582,
									"src": "6107:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "6193:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "6203:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6198:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6198:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "6220:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6215:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6215:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6240:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6232:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6259:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6244:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6244:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6197:67:0"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6273:0:0"
									},
									"scope": 582,
									"src": "6184:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nameLocation": "6288:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6301:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6293:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6292:12:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6313:0:0"
									},
									"scope": 582,
									"src": "6279:35:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "6328:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6332:2:0"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6343:0:0"
									},
									"scope": 582,
									"src": "6319:25:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "6359:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6379:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6379:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:18:0"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6396:0:0"
									},
									"scope": 582,
									"src": "6350:47:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3051,
							"src": "4002:2397:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 592,
							"linearizedBaseContracts": [
								592
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "6411:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c9c65396",
									"id": 591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "6444:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "6463:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6455:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "6479:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6471:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6454:32:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "6513:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6505:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6504:14:0"
									},
									"scope": 592,
									"src": "6435:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3051,
							"src": "6401:120:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 707,
							"linearizedBaseContracts": [
								707
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "6533:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "791ac947",
									"id": 606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "6567:50:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "6635:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6627:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "6661:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6653:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "6702:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6683:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 597,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6683:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 598,
													"nodeType": "ArrayTypeName",
													"src": "6683:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6724:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6716:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "6744:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6736:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6617:141:0"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6767:0:0"
									},
									"scope": 707,
									"src": "6558:210:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "6782:53:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "6850:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6845:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6845:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "6873:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6868:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6868:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "6914:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6895:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6895:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "6895:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6936:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6928:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "6953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6948:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6835:132:0"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6976:0:0"
									},
									"scope": 707,
									"src": "6773:204:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "6991:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6998:2:0"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "7024:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7023:9:0"
									},
									"scope": 707,
									"src": "6982:51:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "7047:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7051:2:0"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "7077:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7077:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7076:9:0"
									},
									"scope": 707,
									"src": "7038:48:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "7100:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7133:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7125:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7125:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "7156:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7148:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "7192:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7184:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "7224:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7216:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7254:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7246:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "7274:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7266:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7115:173:0"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "7323:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7315:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "7344:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7336:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "7363:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7355:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7314:59:0"
									},
									"scope": 707,
									"src": "7091:283:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "7388:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "7399:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "7394:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "7413:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "7408:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7408:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "7428:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "7423:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7423:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7393:44:0"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "7466:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "7461:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7461:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7460:14:0"
									},
									"scope": 707,
									"src": "7379:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "7489:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "7507:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "7502:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7502:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "7522:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "7517:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7517:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "7538:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "7533:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7533:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:48:0"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "7578:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "7573:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7573:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7572:16:0"
									},
									"scope": 707,
									"src": "7480:109:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "7603:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "7620:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7615:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7615:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "7636:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7631:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "7652:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7647:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7647:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7614:49:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "7692:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7687:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7686:15:0"
									},
									"scope": 707,
									"src": "7594:108:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "7716:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "7735:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "7730:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7730:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "7764:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "7745:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 687,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7745:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 688,
													"nodeType": "ArrayTypeName",
													"src": "7745:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7729:40:0"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "7807:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "7793:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 691,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "7793:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 692,
													"nodeType": "ArrayTypeName",
													"src": "7793:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7792:23:0"
									},
									"scope": 707,
									"src": "7707:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "7830:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "7848:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "7843:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7843:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "7878:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "7859:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 698,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7859:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 699,
													"nodeType": "ArrayTypeName",
													"src": "7859:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7842:41:0"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "7921:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "7907:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 702,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "7907:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 703,
													"nodeType": "ArrayTypeName",
													"src": "7907:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7906:23:0"
									},
									"scope": 707,
									"src": "7821:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3051,
							"src": "6523:1409:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 708,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 78,
										"src": "7970:6:0"
									},
									"id": 709,
									"nodeType": "InheritanceSpecifier",
									"src": "7970:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 725,
							"linearizedBaseContracts": [
								725,
								78
							],
							"name": "IERC20Extented",
							"nameLocation": "7952:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 714,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7992:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8000:2:0"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "8034:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 711,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8034:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8033:7:0"
									},
									"scope": 725,
									"src": "7983:58:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "06fdde03",
									"id": 719,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8055:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8059:2:0"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "8093:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 716,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8093:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8092:15:0"
									},
									"scope": 725,
									"src": "8046:62:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8122:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8128:2:0"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "8162:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 721,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8162:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8161:15:0"
									},
									"scope": 725,
									"src": "8113:64:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 3051,
							"src": "7934:245:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 726,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "8203:7:0"
									},
									"id": 727,
									"nodeType": "InheritanceSpecifier",
									"src": "8203:7:0"
								},
								{
									"baseName": {
										"id": 728,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 78,
										"src": "8212:6:0"
									},
									"id": 729,
									"nodeType": "InheritanceSpecifier",
									"src": "8212:6:0"
								},
								{
									"baseName": {
										"id": 730,
										"name": "IERC20Extented",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 725,
										"src": "8220:14:0"
									},
									"id": 731,
									"nodeType": "InheritanceSpecifier",
									"src": "8220:14:0"
								},
								{
									"baseName": {
										"id": 732,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 342,
										"src": "8236:7:0"
									},
									"id": 733,
									"nodeType": "InheritanceSpecifier",
									"src": "8236:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3050,
							"linearizedBaseContracts": [
								3050,
								342,
								725,
								78,
								11
							],
							"name": "gainZilla",
							"nameLocation": "8190:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 736,
									"libraryName": {
										"id": 734,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 224,
										"src": "8256:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "8250:27:0",
									"typeName": {
										"id": 735,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8269:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 739,
									"mutability": "constant",
									"name": "_name",
									"nameLocation": "8306:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "8282:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 737,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8282:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4761696e5a696c6c61",
										"id": 738,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8314:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_76c7d08d60375d458ae30b00b7f48f4f268c447e43e697dcd4947d8191392be5",
											"typeString": "literal_string \"GainZilla\""
										},
										"value": "GainZilla"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 742,
									"mutability": "constant",
									"name": "_symbol",
									"nameLocation": "8355:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "8331:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 740,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8331:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4741494e5a494c4c41",
										"id": 741,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8365:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_74a0d7fda69415c3cd957ed76db4463dd6c8957a51ad1588f733e8c8e72fcb12",
											"typeString": "literal_string \"GAINZILLA\""
										},
										"value": "GAINZILLA"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 745,
									"mutability": "constant",
									"name": "_decimals",
									"nameLocation": "8405:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "8382:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 743,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "8382:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "39",
										"id": 744,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8417:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_9_by_1",
											"typeString": "int_const 9"
										},
										"value": "9"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 749,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "8460:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "8424:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 748,
										"keyType": {
											"id": 746,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8432:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8424:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 747,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "8443:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 755,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "8532:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "8476:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 754,
										"keyType": {
											"id": 750,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8484:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8476:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 753,
											"keyType": {
												"id": 751,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8503:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "8495:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 752,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8514:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 759,
									"mutability": "mutable",
									"name": "_isExcludedFromFee",
									"nameLocation": "8582:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "8549:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 758,
										"keyType": {
											"id": 756,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8557:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8549:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 757,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "8568:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 766,
									"mutability": "constant",
									"name": "_tTotal",
									"nameLocation": "8631:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "8606:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 760,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8606:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 765,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030303030",
											"id": 761,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8641:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1000000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 764,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 762,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8654:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 763,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8658:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "8654:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "8641:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 768,
									"mutability": "mutable",
									"name": "_firstBlock",
									"nameLocation": "8701:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "8685:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 767,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8685:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 770,
									"mutability": "mutable",
									"name": "_botBlocks",
									"nameLocation": "8734:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "8718:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 769,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8718:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "6c0a24eb",
									"id": 777,
									"mutability": "mutable",
									"name": "_maxWalletAmount",
									"nameLocation": "8765:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "8750:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 771,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8750:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000001000000000_by_1",
											"typeString": "int_const 10000001000000000"
										},
										"id": 776,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130303030303031",
											"id": 772,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8784:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000001_by_1",
												"typeString": "int_const 10000001"
											},
											"value": "10000001"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 775,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 773,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8795:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 774,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8799:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "8795:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "8784:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000001000000000_by_1",
											"typeString": "int_const 10000001000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "01a6c43b",
									"id": 784,
									"mutability": "mutable",
									"name": "numTokensToSwap",
									"nameLocation": "8821:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "8806:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 778,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8806:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										},
										"id": 783,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030",
											"id": 779,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8839:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 782,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 780,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8849:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 781,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8853:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "8849:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "8839:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dc44b6a0",
									"id": 787,
									"mutability": "mutable",
									"name": "_buyLiquidityFee",
									"nameLocation": "8931:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "8916:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 785,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8916:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 786,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8950:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 790,
									"mutability": "mutable",
									"name": "_previousBuyLiquidityFee",
									"nameLocation": "8992:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "8976:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 788,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8976:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 789,
										"name": "_buyLiquidityFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 787,
										"src": "9019:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "2843631d",
									"id": 793,
									"mutability": "mutable",
									"name": "_buyEcosystemFee",
									"nameLocation": "9056:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "9041:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 791,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9041:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 792,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9075:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 796,
									"mutability": "mutable",
									"name": "_previousBuyEcosystemFee",
									"nameLocation": "9117:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "9101:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 794,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9101:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 795,
										"name": "_buyEcosystemFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 793,
										"src": "9144:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c5d24189",
									"id": 799,
									"mutability": "mutable",
									"name": "_buyMarketingFee",
									"nameLocation": "9181:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "9166:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 797,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9166:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 798,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9200:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 802,
									"mutability": "mutable",
									"name": "_previousBuyMarketingFee",
									"nameLocation": "9242:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "9226:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 800,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9226:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 801,
										"name": "_buyMarketingFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "9269:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c469b6dd",
									"id": 805,
									"mutability": "mutable",
									"name": "_buyTeamFee",
									"nameLocation": "9306:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "9291:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 803,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9291:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 804,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9320:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 808,
									"mutability": "mutable",
									"name": "_previousBuyTeamFee",
									"nameLocation": "9362:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "9346:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 806,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9346:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 807,
										"name": "_buyTeamFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 805,
										"src": "9384:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "88790a68",
									"id": 811,
									"mutability": "mutable",
									"name": "_sellLiquidityFee",
									"nameLocation": "9434:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "9419:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 809,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9419:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 810,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9454:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 814,
									"mutability": "mutable",
									"name": "_previousSellLiquidityFee",
									"nameLocation": "9496:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "9480:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 812,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9480:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 813,
										"name": "_sellLiquidityFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 811,
										"src": "9524:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "248dd232",
									"id": 817,
									"mutability": "mutable",
									"name": "_sellEcosystemFee",
									"nameLocation": "9562:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "9547:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 815,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9547:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 816,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9582:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_previousSellEcosystemFee",
									"nameLocation": "9624:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "9608:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 818,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9608:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 819,
										"name": "_sellEcosystemFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 817,
										"src": "9652:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c8607952",
									"id": 823,
									"mutability": "mutable",
									"name": "_sellMarketingFee",
									"nameLocation": "9690:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "9675:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 821,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9675:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 822,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9710:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 826,
									"mutability": "mutable",
									"name": "_previousSellMarketingFee",
									"nameLocation": "9752:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "9736:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 824,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9736:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 825,
										"name": "_sellMarketingFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 823,
										"src": "9780:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "cab03471",
									"id": 829,
									"mutability": "mutable",
									"name": "_sellTeamFee",
									"nameLocation": "9818:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "9803:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 827,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9803:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 828,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9833:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 832,
									"mutability": "mutable",
									"name": "_previousSellTeamFee",
									"nameLocation": "9875:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "9859:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 830,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9859:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 831,
										"name": "_sellTeamFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 829,
										"src": "9898:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "72b2aecc",
									"id": 835,
									"mutability": "mutable",
									"name": "transferFeeIncreaseFactor",
									"nameLocation": "9931:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "9916:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 833,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9916:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 834,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9959:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "gainZilla.FeeBreakdown",
									"id": 846,
									"members": [
										{
											"constant": false,
											"id": 837,
											"mutability": "mutable",
											"name": "tLiquidity",
											"nameLocation": "10023:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "10015:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 836,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10015:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 839,
											"mutability": "mutable",
											"name": "tMarketing",
											"nameLocation": "10051:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "10043:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 838,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10043:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 841,
											"mutability": "mutable",
											"name": "tTeam",
											"nameLocation": "10079:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "10071:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 840,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10071:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 843,
											"mutability": "mutable",
											"name": "tEcosystem",
											"nameLocation": "10102:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "10094:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 842,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10094:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 845,
											"mutability": "mutable",
											"name": "tAmount",
											"nameLocation": "10130:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "10122:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 844,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10122:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeeBreakdown",
									"nameLocation": "9992:12:0",
									"nodeType": "StructDefinition",
									"scope": 3050,
									"src": "9985:159:0",
									"visibility": "public"
								},
								{
									"canonicalName": "gainZilla.StrongHandsConfig",
									"id": 855,
									"members": [
										{
											"constant": false,
											"id": 848,
											"mutability": "mutable",
											"name": "enabled",
											"nameLocation": "10190:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 855,
											"src": "10185:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 847,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10185:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 850,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "10214:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 855,
											"src": "10207:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 849,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "10207:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 854,
											"mutability": "mutable",
											"name": "walletList",
											"nameLocation": "10260:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 855,
											"src": "10232:38:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 853,
												"keyType": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "10232:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StrongHandsConfig",
									"nameLocation": "10157:17:0",
									"nodeType": "StructDefinition",
									"scope": 3050,
									"src": "10150:127:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "787a08a6",
									"id": 858,
									"mutability": "mutable",
									"name": "cooldown",
									"nameLocation": "10307:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "10282:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
										"typeString": "struct gainZilla.StrongHandsConfig"
									},
									"typeName": {
										"id": 857,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 856,
											"name": "StrongHandsConfig",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 855,
											"src": "10282:17:0"
										},
										"referencedDeclaration": 855,
										"src": "10282:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage_ptr",
											"typeString": "struct gainZilla.StrongHandsConfig"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "gainZilla.DiamondFloor",
									"id": 869,
									"members": [
										{
											"constant": false,
											"id": 860,
											"mutability": "mutable",
											"name": "enabled",
											"nameLocation": "10357:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "10352:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 859,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10352:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 862,
											"mutability": "mutable",
											"name": "triggerPercentage",
											"nameLocation": "10381:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "10374:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 861,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "10374:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 864,
											"mutability": "mutable",
											"name": "athPrice",
											"nameLocation": "10416:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "10408:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 863,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10408:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 866,
											"mutability": "mutable",
											"name": "sellStopped",
											"nameLocation": "10439:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "10434:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 865,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10434:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 868,
											"mutability": "mutable",
											"name": "blockedAth",
											"nameLocation": "10468:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "10460:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 867,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10460:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DiamondFloor",
									"nameLocation": "10329:12:0",
									"nodeType": "StructDefinition",
									"scope": 3050,
									"src": "10322:163:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c95457ff",
									"id": 872,
									"mutability": "mutable",
									"name": "diamondFloor",
									"nameLocation": "10510:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "10490:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
										"typeString": "struct gainZilla.DiamondFloor"
									},
									"typeName": {
										"id": 871,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 870,
											"name": "DiamondFloor",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 869,
											"src": "10490:12:0"
										},
										"referencedDeclaration": 869,
										"src": "10490:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_DiamondFloor_$869_storage_ptr",
											"typeString": "struct gainZilla.DiamondFloor"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 876,
									"mutability": "mutable",
									"name": "bots",
									"nameLocation": "10562:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "10529:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 875,
										"keyType": {
											"id": 873,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "10537:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "10529:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 874,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "10548:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 883,
									"mutability": "mutable",
									"name": "_marketingAddress",
									"nameLocation": "10596:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "10572:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 877,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10572:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 880,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "10624:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 881,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "10624:7:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 879,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "10616:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 878,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10616:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 882,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10616:16:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 890,
									"mutability": "mutable",
									"name": "_teamAddress",
									"nameLocation": "10662:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "10638:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 884,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10638:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 887,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "10685:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 888,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "10685:7:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 886,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "10677:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 885,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10677:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 889,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10677:16:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 897,
									"mutability": "mutable",
									"name": "_ecosystemAddress",
									"nameLocation": "10723:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "10699:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 891,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10699:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 894,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "10751:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 895,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "10751:7:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 893,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "10743:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 892,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10743:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 896,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10743:16:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 904,
									"mutability": "mutable",
									"name": "_lpRecipient",
									"nameLocation": "10789:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "10765:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 898,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10765:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 901,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "10812:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 902,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "10812:7:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 900,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "10804:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 899,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10804:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 903,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10804:16:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 907,
									"mutability": "mutable",
									"name": "uniswapV2Router",
									"nameLocation": "10853:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "10826:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 906,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 905,
											"name": "IUniswapV2Router02",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 707,
											"src": "10826:18:0"
										},
										"referencedDeclaration": 707,
										"src": "10826:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "49bd5a5e",
									"id": 909,
									"mutability": "mutable",
									"name": "uniswapV2Pair",
									"nameLocation": "10889:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "10874:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 908,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10874:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 911,
									"mutability": "mutable",
									"name": "_maxTxAmount",
									"nameLocation": "10924:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "10908:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 910,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10908:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ffb54a99",
									"id": 914,
									"mutability": "mutable",
									"name": "tradingOpen",
									"nameLocation": "10955:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "10943:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 912,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10943:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 913,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10969:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 917,
									"mutability": "mutable",
									"name": "inSwap",
									"nameLocation": "10993:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "10980:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 915,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10980:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 916,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11002:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "323be1c5",
									"id": 920,
									"mutability": "mutable",
									"name": "canPause",
									"nameLocation": "11025:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "11013:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 918,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "11013:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 919,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11036:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "301ad558",
									"id": 923,
									"mutability": "mutable",
									"name": "canBlackList",
									"nameLocation": "11058:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "11046:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 921,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "11046:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 922,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11073:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39a53c4e",
									"id": 926,
									"mutability": "mutable",
									"name": "canChangeTax",
									"nameLocation": "11095:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3050,
									"src": "11083:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 924,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "11083:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 925,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11110:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 930,
									"name": "MaxTxAmountUpdated",
									"nameLocation": "11127:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"indexed": false,
												"mutability": "mutable",
												"name": "_maxTxAmount",
												"nameLocation": "11154:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "11146:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11145:22:0"
									},
									"src": "11121:47:0"
								},
								{
									"anonymous": false,
									"id": 940,
									"name": "BuyFeesUpdated",
									"nameLocation": "11179:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"indexed": false,
												"mutability": "mutable",
												"name": "_buyMarketingFee",
												"nameLocation": "11202:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "11194:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"indexed": false,
												"mutability": "mutable",
												"name": "_buyLiquidityFee",
												"nameLocation": "11228:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "11220:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"indexed": false,
												"mutability": "mutable",
												"name": "_buyTeamFee",
												"nameLocation": "11254:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "11246:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"indexed": false,
												"mutability": "mutable",
												"name": "_buyEcosystemFee",
												"nameLocation": "11275:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "11267:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11193:99:0"
									},
									"src": "11173:120:0"
								},
								{
									"anonymous": false,
									"id": 950,
									"name": "SellFeesUpdated",
									"nameLocation": "11304:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"indexed": false,
												"mutability": "mutable",
												"name": "_sellMarketingFee",
												"nameLocation": "11328:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "11320:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"indexed": false,
												"mutability": "mutable",
												"name": "_sellLiquidityFee",
												"nameLocation": "11355:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "11347:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"indexed": false,
												"mutability": "mutable",
												"name": "_sellTeamFee",
												"nameLocation": "11382:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "11374:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"indexed": false,
												"mutability": "mutable",
												"name": "_sellEcosystemFee",
												"nameLocation": "11404:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "11396:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11319:103:0"
									},
									"src": "11298:125:0"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "11450:65:0",
										"statements": [
											{
												"expression": {
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 952,
														"name": "inSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "11460:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11469:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11460:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "11460:13:0"
											},
											{
												"id": 956,
												"nodeType": "PlaceholderStatement",
												"src": "11483:1:0"
											},
											{
												"expression": {
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 957,
														"name": "inSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "11494:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11503:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "11494:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "11494:14:0"
											}
										]
									},
									"id": 962,
									"name": "lockTheSwap",
									"nameLocation": "11438:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11450:0:0"
									},
									"src": "11429:86:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "11534:762:0",
										"statements": [
											{
												"assignments": [
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "_uniswapV2Router",
														"nameLocation": "11563:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1061,
														"src": "11544:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
															"typeString": "contract IUniswapV2Router02"
														},
														"typeName": {
															"id": 966,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 965,
																"name": "IUniswapV2Router02",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 707,
																"src": "11544:18:0"
															},
															"referencedDeclaration": 707,
															"src": "11544:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 971,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11601:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 968,
														"name": "IUniswapV2Router02",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "11582:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$707_$",
															"typeString": "type(contract IUniswapV2Router02)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11582:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11544:100:0"
											},
											{
												"expression": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 972,
														"name": "uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "11654:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 973,
														"name": "_uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "11672:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "11654:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "11654:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 979,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11715:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11707:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 977,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11707:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11707:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 983,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "11730:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11722:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 981,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11722:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11722:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 985,
															"name": "_tTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "11748:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 976,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "11698:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11698:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "11698:58:0"
											},
											{
												"expression": {
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 988,
														"name": "uniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "11766:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 997,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "11847:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_gainZilla_$3050",
																			"typeString": "contract gainZilla"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_gainZilla_$3050",
																			"typeString": "contract gainZilla"
																		}
																	],
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11839:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 995,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11839:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11839:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 999,
																		"name": "_uniswapV2Router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "11854:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 630,
																	"src": "11854:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11854:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 990,
																				"name": "_uniswapV2Router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "11800:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			},
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 625,
																			"src": "11800:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11800:26:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 989,
																	"name": "IUniswapV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "11782:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$592_$",
																		"typeString": "type(contract IUniswapV2Factory)"
																	}
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11782:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Factory_$592",
																	"typeString": "contract IUniswapV2Factory"
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 591,
															"src": "11782:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11782:96:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11766:112:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "11766:112:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1011,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "11926:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11918:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1009,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11918:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11918:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11948:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1014,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11948:7:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1013,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "11943:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11943:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "11943:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1006,
																	"name": "uniswapV2Pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "11895:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1005,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "11888:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11888:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$78",
																"typeString": "contract IERC20"
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 50,
														"src": "11888:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11888:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "11888:73:0"
											},
											{
												"expression": {
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1020,
														"name": "_maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "11972:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1021,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "11987:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11972:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "11972:22:0"
											},
											{
												"expression": {
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1024,
														"name": "_maxWalletAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "12059:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1025,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "12078:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12059:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "12059:26:0"
											},
											{
												"expression": {
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1028,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "12104:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1031,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1029,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "12114:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12114:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12104:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1032,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "12130:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12104:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "12104:33:0"
											},
											{
												"expression": {
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1035,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "12147:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1038,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1036,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "12166:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12166:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12147:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1039,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12177:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12147:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "12147:34:0"
											},
											{
												"expression": {
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1042,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "12191:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1047,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1045,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12218:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12210:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1043,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12210:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12210:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12191:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12227:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12191:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "12191:40:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12263:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12255:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1052,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12255:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12255:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1056,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "12267:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12267:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "_tTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "12281:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1051,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "12246:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12246:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "EmitStatement",
												"src": "12241:48:0"
											}
										]
									},
									"id": 1062,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11531:2:0"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11534:0:0"
									},
									"scope": 3050,
									"src": "11520:776:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										719
									],
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "12365:29:0",
										"statements": [
											{
												"expression": {
													"id": 1068,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 739,
													"src": "12382:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1067,
												"id": 1069,
												"nodeType": "Return",
												"src": "12375:12:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12311:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1064,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12318:8:0"
									},
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12315:2:0"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "12350:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1065,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12350:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12349:15:0"
									},
									"scope": 3050,
									"src": "12302:92:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										724
									],
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "12465:31:0",
										"statements": [
											{
												"expression": {
													"id": 1077,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 742,
													"src": "12482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1076,
												"id": 1078,
												"nodeType": "Return",
												"src": "12475:14:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12409:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1073,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12418:8:0"
									},
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12415:2:0"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "12450:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1074,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12450:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12449:15:0"
									},
									"scope": 3050,
									"src": "12400:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										714
									],
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "12561:33:0",
										"statements": [
											{
												"expression": {
													"id": 1086,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 745,
													"src": "12578:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1085,
												"id": 1087,
												"nodeType": "Return",
												"src": "12571:16:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "12511:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1082,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12522:8:0"
									},
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12519:2:0"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "12554:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1083,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12554:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12553:7:0"
									},
									"scope": 3050,
									"src": "12502:92:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "12664:31:0",
										"statements": [
											{
												"expression": {
													"id": 1095,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "12681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1094,
												"id": 1096,
												"nodeType": "Return",
												"src": "12674:14:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "12609:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1091,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12637:8:0"
									},
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12620:2:0"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "12655:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12654:9:0"
									},
									"scope": 3050,
									"src": "12600:95:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										23
									],
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "12776:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1106,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "12793:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1108,
													"indexExpression": {
														"id": 1107,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "12803:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12793:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1105,
												"id": 1109,
												"nodeType": "Return",
												"src": "12786:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "12710:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1102,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12749:8:0"
									},
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12728:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "12720:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12719:17:0"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "12767:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12766:9:0"
									},
									"scope": 3050,
									"src": "12701:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "12883:37:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1118,
														"name": "bots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "12900:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1120,
													"indexExpression": {
														"id": 1119,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "12905:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12900:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1117,
												"id": 1121,
												"nodeType": "Return",
												"src": "12893:20:0"
											}
										]
									},
									"functionSelector": "3bbac579",
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBot",
									"nameLocation": "12833:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12847:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "12839:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12838:17:0"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "12877:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12877:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12876:6:0"
									},
									"scope": 3050,
									"src": "12824:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										32
									],
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "13016:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1134,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "13036:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13036:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1136,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "13050:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "13061:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1133,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "13026:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13026:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "13026:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13085:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1132,
												"id": 1141,
												"nodeType": "Return",
												"src": "13078:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "12939:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1129,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12992:8:0"
									},
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "12956:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "12948:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12975:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "12967:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12947:35:0"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "13010:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13010:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13009:6:0"
									},
									"scope": 3050,
									"src": "12930:166:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										41
									],
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "13194:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1153,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "13211:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1155,
														"indexExpression": {
															"id": 1154,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13223:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13211:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1157,
													"indexExpression": {
														"id": 1156,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "13230:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13211:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1152,
												"id": 1158,
												"nodeType": "Return",
												"src": "13204:34:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "13111:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1149,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13167:8:0"
									},
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13129:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "13121:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13121:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13144:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "13136:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13120:32:0"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "13185:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13184:9:0"
									},
									"scope": 3050,
									"src": "13102:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										50
									],
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "13334:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1171,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "13353:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13353:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1173,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "13367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1174,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "13376:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1170,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "13344:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13344:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "13344:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1169,
												"id": 1178,
												"nodeType": "Return",
												"src": "13393:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "13260:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1166,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13310:8:0"
									},
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13276:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13268:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13293:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13285:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13267:33:0"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13328:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13328:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13327:6:0"
									},
									"scope": 3050,
									"src": "13251:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										61
									],
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "13523:202:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1193,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "13543:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "13551:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "13562:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1192,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "13533:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13533:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "13533:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1199,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "13588:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1200,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "13595:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13595:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1209,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "13646:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13653:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1202,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 755,
																			"src": "13608:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1204,
																		"indexExpression": {
																			"id": 1203,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1182,
																			"src": "13620:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13608:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1207,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1205,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "13628:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13628:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13608:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 146,
																"src": "13608:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13608:88:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1198,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "13579:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13579:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "13579:118:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13714:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1191,
												"id": 1215,
												"nodeType": "Return",
												"src": "13707:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "13426:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1188,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13499:8:0"
									},
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "13447:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "13439:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "13463:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "13455:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13482:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "13474:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13438:51:0"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "13517:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13517:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13516:6:0"
									},
									"scope": 3050,
									"src": "13417:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "13763:672:0",
										"statements": [
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "_previousBuyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "13773:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "_buyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "13800:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13773:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "13773:43:0"
											},
											{
												"expression": {
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "_previousBuyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "13826:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1225,
														"name": "_buyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "13853:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13826:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "13826:43:0"
											},
											{
												"expression": {
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1228,
														"name": "_previousBuyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "13879:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1229,
														"name": "_buyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "13901:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13879:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "13879:33:0"
											},
											{
												"expression": {
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1232,
														"name": "_previousBuyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "13922:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1233,
														"name": "_buyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "13949:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13922:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "13922:43:0"
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1236,
														"name": "_buyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "13984:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14003:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13984:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "13984:20:0"
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1240,
														"name": "_buyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "14014:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14033:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14014:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "14014:20:0"
											},
											{
												"expression": {
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1244,
														"name": "_buyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "14044:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14058:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14044:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "14044:15:0"
											},
											{
												"expression": {
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1248,
														"name": "_buyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "14069:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14088:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14069:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "14069:20:0"
											},
											{
												"expression": {
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1252,
														"name": "_previousSellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "14100:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1253,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "14128:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14100:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "14100:45:0"
											},
											{
												"expression": {
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1256,
														"name": "_previousSellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "14155:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1257,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "14183:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14155:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "14155:45:0"
											},
											{
												"expression": {
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1260,
														"name": "_previousSellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "14210:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1261,
														"name": "_sellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "14233:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14210:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "14210:35:0"
											},
											{
												"expression": {
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1264,
														"name": "_previousSellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "14255:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1265,
														"name": "_sellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "14283:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14255:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "14255:45:0"
											},
											{
												"expression": {
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1268,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "14319:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14339:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14319:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "14319:21:0"
											},
											{
												"expression": {
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1272,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "14350:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14370:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14350:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "14350:21:0"
											},
											{
												"expression": {
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1276,
														"name": "_sellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "14381:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14396:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14381:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "14381:16:0"
											},
											{
												"expression": {
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1280,
														"name": "_sellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "14407:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14427:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14407:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "14407:21:0"
											}
										]
									},
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeAllFee",
									"nameLocation": "13740:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13752:2:0"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13763:0:0"
									},
									"scope": 3050,
									"src": "13731:704:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "14478:420:0",
										"statements": [
											{
												"expression": {
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1288,
														"name": "_buyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "14488:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1289,
														"name": "_previousBuyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "14507:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14488:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "14488:43:0"
											},
											{
												"expression": {
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1292,
														"name": "_buyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "14541:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1293,
														"name": "_previousBuyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "14560:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14541:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "14541:43:0"
											},
											{
												"expression": {
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1296,
														"name": "_buyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "14594:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1297,
														"name": "_previousBuyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "14608:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14594:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "14594:33:0"
											},
											{
												"expression": {
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1300,
														"name": "_buyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "14637:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1301,
														"name": "_previousBuyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "14656:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14637:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "14637:43:0"
											},
											{
												"expression": {
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1304,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "14691:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1305,
														"name": "_previousSellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "14711:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14691:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "14691:45:0"
											},
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1308,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "14746:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1309,
														"name": "_previousSellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "14766:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14746:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "14746:45:0"
											},
											{
												"expression": {
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1312,
														"name": "_sellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "14801:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1313,
														"name": "_previousSellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "14816:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14801:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "14801:35:0"
											},
											{
												"expression": {
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1316,
														"name": "_sellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "14846:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1317,
														"name": "_previousSellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "14866:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14846:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "14846:45:0"
											}
										]
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "restoreAllFee",
									"nameLocation": "14454:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14467:2:0"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14478:0:0"
									},
									"scope": 3050,
									"src": "14445:453:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "14978:256:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1331,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "14996:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15013:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15005:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1332,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15005:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15005:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14996:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15017:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14988:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "14988:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1341,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "15074:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15093:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15085:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1342,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15085:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15085:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15074:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15097:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15066:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15066:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "15066:68:0"
											},
											{
												"expression": {
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1350,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "15144:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1353,
															"indexExpression": {
																"id": 1351,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "15156:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15144:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1354,
														"indexExpression": {
															"id": 1352,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "15163:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15144:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1355,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "15174:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15144:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "15144:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1359,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "15204:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1360,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "15211:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1361,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "15220:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1358,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "15195:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15195:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1363,
												"nodeType": "EmitStatement",
												"src": "15190:37:0"
											}
										]
									},
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14913:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14930:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "14922:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14945:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "14937:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14962:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "14954:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14921:48:0"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14978:0:0"
									},
									"scope": 3050,
									"src": "14904:330:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "15313:3138:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1375,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "15331:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15347:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15339:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1376,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15339:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15339:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15331:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15351:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15323:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15323:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "15323:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1385,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "15409:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15423:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15415:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1386,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15415:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15415:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15409:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15427:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15401:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1393,
												"nodeType": "ExpressionStatement",
												"src": "15401:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1395,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "15483:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15492:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15483:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15495:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															},
															"value": "Transfer amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															}
														],
														"id": 1394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15475:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15475:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "15475:64:0"
											},
											{
												"assignments": [
													1402
												],
												"declarations": [
													{
														"constant": false,
														"id": 1402,
														"mutability": "mutable",
														"name": "takeFee",
														"nameLocation": "15555:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1686,
														"src": "15550:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1401,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15550:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1404,
												"initialValue": {
													"hexValue": "74727565",
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15565:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15550:19:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "15584:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1406,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "15592:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15592:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15584:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1409,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1369,
																	"src": "15603:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1410,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "15609:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15609:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15603:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15584:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1414,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "15620:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1417,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "15636:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_gainZilla_$3050",
																			"typeString": "contract gainZilla"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_gainZilla_$3050",
																			"typeString": "contract gainZilla"
																		}
																	],
																	"id": 1416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15628:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1415,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15628:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15628:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15620:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "15584:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1421,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "15645:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1424,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "15659:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15651:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1422,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15651:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15651:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15645:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15584:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1665,
												"nodeType": "IfStatement",
												"src": "15580:2699:0",
												"trueBody": {
													"id": 1664,
													"nodeType": "Block",
													"src": "15666:2613:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1429,
																		"name": "tradingOpen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "15688:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54726164696e67206973206e6f7420616374697665",
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15701:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1e00c61f0a7b721724fe214bc791e509089379e5d75afe66b9a59ad6bee5002b",
																			"typeString": "literal_string \"Trading is not active\""
																		},
																		"value": "Trading is not active"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1e00c61f0a7b721724fe214bc791e509089379e5d75afe66b9a59ad6bee5002b",
																			"typeString": "literal_string \"Trading is not active\""
																		}
																	],
																	"id": 1428,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "15680:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15680:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1432,
															"nodeType": "ExpressionStatement",
															"src": "15680:45:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1433,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1367,
																		"src": "15743:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1434,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "15751:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "15743:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1436,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "15768:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1439,
																				"name": "uniswapV2Router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 907,
																				"src": "15782:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			],
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "15774:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1437,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "15774:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15774:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "15768:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15743:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1477,
															"nodeType": "IfStatement",
															"src": "15739:420:0",
															"trueBody": {
																"id": 1476,
																"nodeType": "Block",
																"src": "15800:359:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1443,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "15829:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "15829:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 1447,
																						"name": "_botBlocks",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 770,
																						"src": "15864:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1445,
																						"name": "_firstBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 768,
																						"src": "15848:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1446,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 103,
																					"src": "15848:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15848:27:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15829:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1457,
																		"nodeType": "IfStatement",
																		"src": "15825:108:0",
																		"trueBody": {
																			"id": 1456,
																			"nodeType": "Block",
																			"src": "15877:56:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 1454,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 1450,
																								"name": "bots",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 876,
																								"src": "15899:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																									"typeString": "mapping(address => bool)"
																								}
																							},
																							"id": 1452,
																							"indexExpression": {
																								"id": 1451,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1369,
																								"src": "15904:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "15899:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 1453,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15910:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "15899:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1455,
																					"nodeType": "ExpressionStatement",
																					"src": "15899:15:0"
																				}
																			]
																		}
																	},
																	{
																		"condition": {
																			"id": 1461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "15955:23:0",
																			"subExpression": {
																				"baseExpression": {
																					"id": 1458,
																					"name": "_isExcludedFromFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "15956:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1460,
																				"indexExpression": {
																					"id": 1459,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1369,
																					"src": "15975:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "15956:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1475,
																		"nodeType": "IfStatement",
																		"src": "15951:194:0",
																		"trueBody": {
																			"id": 1474,
																			"nodeType": "Block",
																			"src": "15980:165:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1470,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"arguments": [
																										{
																											"id": 1467,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1371,
																											"src": "16028:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"arguments": [
																												{
																													"id": 1464,
																													"name": "to",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1369,
																													"src": "16020:2:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												],
																												"id": 1463,
																												"name": "balanceOf",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1111,
																												"src": "16010:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																													"typeString": "function (address) view returns (uint256)"
																												}
																											},
																											"id": 1465,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "16010:13:0",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1466,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "add",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 103,
																										"src": "16010:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1468,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "16010:25:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<=",
																								"rightExpression": {
																									"id": 1469,
																									"name": "_maxWalletAmount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 777,
																									"src": "16039:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "16010:45:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "2e77616c6c65742062616c616e6365206166746572207472616e73666572206d757374206265206c657373207468616e206d61782077616c6c657420616d6f756e74",
																								"id": 1471,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "16057:68:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_dc954e86b14a46e9e189db5db351f3a75abf6928f229ba2f30a156b0ea581295",
																									"typeString": "literal_string \".wallet balance after transfer must be less than max wallet amount\""
																								},
																								"value": ".wallet balance after transfer must be less than max wallet amount"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_dc954e86b14a46e9e189db5db351f3a75abf6928f229ba2f30a156b0ea581295",
																									"typeString": "literal_string \".wallet balance after transfer must be less than max wallet amount\""
																								}
																							],
																							"id": 1462,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "16002:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 1472,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16002:124:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1473,
																					"nodeType": "ExpressionStatement",
																					"src": "16002:124:0"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "16189:7:0",
																		"subExpression": {
																			"id": 1478,
																			"name": "inSwap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "16190:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1480,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1367,
																			"src": "16200:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1481,
																			"name": "uniswapV2Pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "16208:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "16200:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "16189:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1484,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "16225:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1485,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "16231:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "16225:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "16189:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1636,
															"nodeType": "IfStatement",
															"src": "16185:1766:0",
															"trueBody": {
																"id": 1635,
																"nodeType": "Block",
																"src": "16246:1705:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 1497,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1492,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "!",
																						"prefix": true,
																						"src": "16280:11:0",
																						"subExpression": {
																							"baseExpression": {
																								"id": 1489,
																								"name": "bots",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 876,
																								"src": "16281:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																									"typeString": "mapping(address => bool)"
																								}
																							},
																							"id": 1491,
																							"indexExpression": {
																								"id": 1490,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1367,
																								"src": "16286:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "16281:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&&",
																					"rightExpression": {
																						"id": 1496,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "!",
																						"prefix": true,
																						"src": "16295:9:0",
																						"subExpression": {
																							"baseExpression": {
																								"id": 1493,
																								"name": "bots",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 876,
																								"src": "16296:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																									"typeString": "mapping(address => bool)"
																								}
																							},
																							"id": 1495,
																							"indexExpression": {
																								"id": 1494,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1369,
																								"src": "16301:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "16296:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "16280:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 1488,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "16272:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																					"typeString": "function (bool) pure"
																				}
																			},
																			"id": 1498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16272:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1499,
																		"nodeType": "ExpressionStatement",
																		"src": "16272:33:0"
																	},
																	{
																		"condition": {
																			"expression": {
																				"id": 1500,
																				"name": "cooldown",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 858,
																				"src": "16373:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																					"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																				}
																			},
																			"id": 1501,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "enabled",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 848,
																			"src": "16373:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1526,
																		"nodeType": "IfStatement",
																		"src": "16369:233:0",
																		"trueBody": {
																			"id": 1525,
																			"nodeType": "Block",
																			"src": "16391:211:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1509,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"id": 1503,
																										"name": "block",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967292,
																										"src": "16421:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_block",
																											"typeString": "block"
																										}
																									},
																									"id": 1504,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "timestamp",
																									"nodeType": "MemberAccess",
																									"src": "16421:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": ">=",
																								"rightExpression": {
																									"baseExpression": {
																										"expression": {
																											"id": 1505,
																											"name": "cooldown",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 858,
																											"src": "16440:8:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																												"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																											}
																										},
																										"id": 1506,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "walletList",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 854,
																										"src": "16440:19:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																											"typeString": "mapping(address => uint256)"
																										}
																									},
																									"id": 1508,
																									"indexExpression": {
																										"id": 1507,
																										"name": "from",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1367,
																										"src": "16460:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "16440:25:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "16421:44:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "5374726f6e672048616e64732050726f746f636f6c20616374697665",
																								"id": 1510,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "16467:30:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_268446f78394810523a9d9ab5dfb456a808e6d969331d3363f26d133e00f8a00",
																									"typeString": "literal_string \"Strong Hands Protocol active\""
																								},
																								"value": "Strong Hands Protocol active"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_268446f78394810523a9d9ab5dfb456a808e6d969331d3363f26d133e00f8a00",
																									"typeString": "literal_string \"Strong Hands Protocol active\""
																								}
																							],
																							"id": 1502,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "16413:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 1511,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16413:85:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1512,
																					"nodeType": "ExpressionStatement",
																					"src": "16413:85:0"
																				},
																				{
																					"expression": {
																						"id": 1523,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"expression": {
																									"id": 1513,
																									"name": "cooldown",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 858,
																									"src": "16520:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																										"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																									}
																								},
																								"id": 1516,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "walletList",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 854,
																								"src": "16520:19:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 1517,
																							"indexExpression": {
																								"id": 1515,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1367,
																								"src": "16540:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "16520:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1522,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 1518,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "16548:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 1519,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "timestamp",
																								"nodeType": "MemberAccess",
																								"src": "16548:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"expression": {
																									"id": 1520,
																									"name": "cooldown",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 858,
																									"src": "16566:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																										"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																									}
																								},
																								"id": 1521,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "duration",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 850,
																								"src": "16566:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							},
																							"src": "16548:35:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "16520:63:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1524,
																					"nodeType": "ExpressionStatement",
																					"src": "16520:63:0"
																				}
																			]
																		}
																	},
																	{
																		"condition": {
																			"expression": {
																				"id": 1527,
																				"name": "diamondFloor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 872,
																				"src": "16663:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																					"typeString": "struct gainZilla.DiamondFloor storage ref"
																				}
																			},
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "enabled",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 860,
																			"src": "16663:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1540,
																		"nodeType": "IfStatement",
																		"src": "16659:180:0",
																		"trueBody": {
																			"id": 1539,
																			"nodeType": "Block",
																			"src": "16685:154:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1532,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "!",
																								"prefix": true,
																								"src": "16715:25:0",
																								"subExpression": {
																									"expression": {
																										"id": 1530,
																										"name": "diamondFloor",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 872,
																										"src": "16716:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																											"typeString": "struct gainZilla.DiamondFloor storage ref"
																										}
																									},
																									"id": 1531,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sellStopped",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 866,
																									"src": "16716:24:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f72",
																								"id": 1533,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "16742:32:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550",
																									"typeString": "literal_string \"Sells stopped by Diamond Floor\""
																								},
																								"value": "Sells stopped by Diamond Floor"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550",
																									"typeString": "literal_string \"Sells stopped by Diamond Floor\""
																								}
																							],
																							"id": 1529,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "16707:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 1534,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16707:68:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1535,
																					"nodeType": "ExpressionStatement",
																					"src": "16707:68:0"
																				},
																				{
																					"expression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1536,
																							"name": "_checkPriceConditions",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1839,
																							"src": "16797:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																								"typeString": "function ()"
																							}
																						},
																						"id": 1537,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16797:23:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1538,
																					"nodeType": "ExpressionStatement",
																					"src": "16797:23:0"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			1542
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1542,
																				"mutability": "mutable",
																				"name": "contractTokenBalance",
																				"nameLocation": "16881:20:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1635,
																				"src": "16873:28:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1541,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "16873:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1549,
																		"initialValue": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1546,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "16922:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_gainZilla_$3050",
																								"typeString": "contract gainZilla"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_gainZilla_$3050",
																								"typeString": "contract gainZilla"
																							}
																						],
																						"id": 1545,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "16914:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1544,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "16914:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1547,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16914:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1543,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1111,
																				"src": "16904:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view returns (uint256)"
																				}
																			},
																			"id": 1548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16904:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "16873:55:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1550,
																				"name": "contractTokenBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "16951:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 1551,
																				"name": "numTokensToSwap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 784,
																				"src": "16975:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16951:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1634,
																		"nodeType": "IfStatement",
																		"src": "16947:969:0",
																		"trueBody": {
																			"id": 1633,
																			"nodeType": "Block",
																			"src": "16992:924:0",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1555,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1553,
																							"name": "contractTokenBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1542,
																							"src": "17018:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1554,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17041:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "17018:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1611,
																					"nodeType": "IfStatement",
																					"src": "17014:679:0",
																					"trueBody": {
																						"id": 1610,
																						"nodeType": "Block",
																						"src": "17044:649:0",
																						"statements": [
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1567,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"arguments": [
																											{
																												"id": 1564,
																												"name": "_sellLiquidityFee",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 811,
																												"src": "17137:17:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"id": 1561,
																														"name": "_sellEcosystemFee",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 817,
																														"src": "17114:17:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"id": 1558,
																																"name": "_sellTeamFee",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 829,
																																"src": "17096:12:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"id": 1556,
																																"name": "_sellMarketingFee",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 823,
																																"src": "17074:17:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1557,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "add",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 103,
																															"src": "17074:21:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1559,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "17074:35:0",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1560,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "add",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 103,
																													"src": "17074:39:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1562,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "17074:58:0",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1563,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "add",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 103,
																											"src": "17074:62:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1565,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "17074:81:0",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">",
																									"rightExpression": {
																										"hexValue": "30",
																										"id": 1566,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "17158:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"src": "17074:85:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1609,
																								"nodeType": "IfStatement",
																								"src": "17070:601:0",
																								"trueBody": {
																									"id": 1608,
																									"nodeType": "Block",
																									"src": "17161:510:0",
																									"statements": [
																										{
																											"assignments": [
																												1569
																											],
																											"declarations": [
																												{
																													"constant": false,
																													"id": 1569,
																													"mutability": "mutable",
																													"name": "autoLPamount",
																													"nameLocation": "17199:12:0",
																													"nodeType": "VariableDeclaration",
																													"scope": 1608,
																													"src": "17191:20:0",
																													"stateVariable": false,
																													"storageLocation": "default",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													},
																													"typeName": {
																														"id": 1568,
																														"name": "uint256",
																														"nodeType": "ElementaryTypeName",
																														"src": "17191:7:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"visibility": "internal"
																												}
																											],
																											"id": 1586,
																											"initialValue": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"id": 1583,
																																"name": "_sellLiquidityFee",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 811,
																																"src": "17325:17:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"arguments": [
																																	{
																																		"id": 1580,
																																		"name": "_sellEcosystemFee",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 817,
																																		"src": "17302:17:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 1577,
																																				"name": "_sellTeamFee",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 829,
																																				"src": "17284:12:0",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"id": 1575,
																																				"name": "_sellMarketingFee",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 823,
																																				"src": "17262:17:0",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1576,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "add",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 103,
																																			"src": "17262:21:0",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1578,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "17262:35:0",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1579,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "add",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 103,
																																	"src": "17262:39:0",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1581,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "17262:58:0",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1582,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "add",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 103,
																															"src": "17262:62:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1584,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "17262:81:0",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"id": 1572,
																																"name": "contractTokenBalance",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1542,
																																"src": "17236:20:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"id": 1570,
																																"name": "_sellLiquidityFee",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 811,
																																"src": "17214:17:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1571,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "mul",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 180,
																															"src": "17214:21:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1573,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "17214:43:0",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1574,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "div",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 196,
																													"src": "17214:47:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1585,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "17214:130:0",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "VariableDeclarationStatement",
																											"src": "17191:153:0"
																										},
																										{
																											"assignments": [
																												1588
																											],
																											"declarations": [
																												{
																													"constant": false,
																													"id": 1588,
																													"mutability": "mutable",
																													"name": "minusLP",
																													"nameLocation": "17382:7:0",
																													"nodeType": "VariableDeclaration",
																													"scope": 1608,
																													"src": "17374:15:0",
																													"stateVariable": false,
																													"storageLocation": "default",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													},
																													"typeName": {
																														"id": 1587,
																														"name": "uint256",
																														"nodeType": "ElementaryTypeName",
																														"src": "17374:7:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"visibility": "internal"
																												}
																											],
																											"id": 1590,
																											"initialValue": {
																												"hexValue": "30",
																												"id": 1589,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "17392:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												},
																												"value": "0"
																											},
																											"nodeType": "VariableDeclarationStatement",
																											"src": "17374:19:0"
																										},
																										{
																											"condition": {
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 1593,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"id": 1591,
																													"name": "contractTokenBalance",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1542,
																													"src": "17427:20:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": ">=",
																												"rightExpression": {
																													"id": 1592,
																													"name": "autoLPamount",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1569,
																													"src": "17451:12:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "17427:36:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												}
																											},
																											"id": 1602,
																											"nodeType": "IfStatement",
																											"src": "17423:155:0",
																											"trueBody": {
																												"id": 1601,
																												"nodeType": "Block",
																												"src": "17465:113:0",
																												"statements": [
																													{
																														"expression": {
																															"id": 1599,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftHandSide": {
																																"id": 1594,
																																"name": "minusLP",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1588,
																																"src": "17499:7:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"nodeType": "Assignment",
																															"operator": "=",
																															"rightHandSide": {
																																"arguments": [
																																	{
																																		"id": 1597,
																																		"name": "autoLPamount",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1569,
																																		"src": "17534:12:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"id": 1595,
																																		"name": "contractTokenBalance",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1542,
																																		"src": "17509:20:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1596,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "sub",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 119,
																																	"src": "17509:24:0",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1598,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "17509:38:0",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"src": "17499:48:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"id": 1600,
																														"nodeType": "ExpressionStatement",
																														"src": "17499:48:0"
																													}
																												]
																											}
																										},
																										{
																											"expression": {
																												"arguments": [
																													{
																														"id": 1604,
																														"name": "autoLPamount",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1569,
																														"src": "17622:12:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													{
																														"id": 1605,
																														"name": "minusLP",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1588,
																														"src": "17636:7:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"id": 1603,
																													"name": "swapAndLiquify",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2009,
																													"src": "17607:14:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																														"typeString": "function (uint256,uint256)"
																													}
																												},
																												"id": 1606,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "17607:37:0",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_tuple$__$",
																													"typeString": "tuple()"
																												}
																											},
																											"id": 1607,
																											"nodeType": "ExpressionStatement",
																											"src": "17607:37:0"
																										}
																									]
																								}
																							}
																						]
																					}
																				},
																				{
																					"assignments": [
																						1613
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1613,
																							"mutability": "mutable",
																							"name": "contractETHBalance",
																							"nameLocation": "17722:18:0",
																							"nodeType": "VariableDeclaration",
																							"scope": 1633,
																							"src": "17714:26:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1612,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "17714:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 1619,
																					"initialValue": {
																						"expression": {
																							"arguments": [
																								{
																									"id": 1616,
																									"name": "this",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967268,
																									"src": "17751:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_gainZilla_$3050",
																										"typeString": "contract gainZilla"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_gainZilla_$3050",
																										"typeString": "contract gainZilla"
																									}
																								],
																								"id": 1615,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "17743:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1614,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "17743:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1617,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "17743:13:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"id": 1618,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balance",
																						"nodeType": "MemberAccess",
																						"src": "17743:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "17714:50:0"
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1622,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1620,
																							"name": "contractETHBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1613,
																							"src": "17790:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1621,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17811:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "17790:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1632,
																					"nodeType": "IfStatement",
																					"src": "17786:112:0",
																					"trueBody": {
																						"id": 1631,
																						"nodeType": "Block",
																						"src": "17814:84:0",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"expression": {
																												"arguments": [
																													{
																														"id": 1626,
																														"name": "this",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 4294967268,
																														"src": "17861:4:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_contract$_gainZilla_$3050",
																															"typeString": "contract gainZilla"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_contract$_gainZilla_$3050",
																															"typeString": "contract gainZilla"
																														}
																													],
																													"id": 1625,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"lValueRequested": false,
																													"nodeType": "ElementaryTypeNameExpression",
																													"src": "17853:7:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_type$_t_address_$",
																														"typeString": "type(address)"
																													},
																													"typeName": {
																														"id": 1624,
																														"name": "address",
																														"nodeType": "ElementaryTypeName",
																														"src": "17853:7:0",
																														"typeDescriptions": {}
																													}
																												},
																												"id": 1627,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "typeConversion",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "17853:13:0",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"id": 1628,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "balance",
																											"nodeType": "MemberAccess",
																											"src": "17853:21:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"id": 1623,
																										"name": "sendETHToFee",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2093,
																										"src": "17840:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																											"typeString": "function (uint256)"
																										}
																									},
																									"id": 1629,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "17840:35:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_tuple$__$",
																										"typeString": "tuple()"
																									}
																								},
																								"id": 1630,
																								"nodeType": "ExpressionStatement",
																								"src": "17840:35:0"
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1637,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1367,
																		"src": "17968:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 1638,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "17976:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "17968:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1640,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "17993:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 1641,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "17999:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "17993:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "17968:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1663,
															"nodeType": "IfStatement",
															"src": "17965:304:0",
															"trueBody": {
																"id": 1662,
																"nodeType": "Block",
																"src": "18014:255:0",
																"statements": [
																	{
																		"condition": {
																			"id": 1647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "18065:23:0",
																			"subExpression": {
																				"baseExpression": {
																					"id": 1644,
																					"name": "_isExcludedFromFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "18066:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1646,
																				"indexExpression": {
																					"id": 1645,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1369,
																					"src": "18085:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "18066:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1661,
																		"nodeType": "IfStatement",
																		"src": "18061:194:0",
																		"trueBody": {
																			"id": 1660,
																			"nodeType": "Block",
																			"src": "18090:165:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1656,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"arguments": [
																										{
																											"id": 1653,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1371,
																											"src": "18138:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"arguments": [
																												{
																													"id": 1650,
																													"name": "to",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1369,
																													"src": "18130:2:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												],
																												"id": 1649,
																												"name": "balanceOf",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1111,
																												"src": "18120:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																													"typeString": "function (address) view returns (uint256)"
																												}
																											},
																											"id": 1651,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "18120:13:0",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1652,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "add",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 103,
																										"src": "18120:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1654,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "18120:25:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<=",
																								"rightExpression": {
																									"id": 1655,
																									"name": "_maxWalletAmount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 777,
																									"src": "18149:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "18120:45:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "2e77616c6c65742062616c616e6365206166746572207472616e73666572206d757374206265206c657373207468616e206d61782077616c6c657420616d6f756e74",
																								"id": 1657,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "18167:68:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_dc954e86b14a46e9e189db5db351f3a75abf6928f229ba2f30a156b0ea581295",
																									"typeString": "literal_string \".wallet balance after transfer must be less than max wallet amount\""
																								},
																								"value": ".wallet balance after transfer must be less than max wallet amount"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_dc954e86b14a46e9e189db5db351f3a75abf6928f229ba2f30a156b0ea581295",
																									"typeString": "literal_string \".wallet balance after transfer must be less than max wallet amount\""
																								}
																							],
																							"id": 1648,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "18112:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 1658,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "18112:124:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1659,
																					"nodeType": "ExpressionStatement",
																					"src": "18112:124:0"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1666,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "18293:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1668,
														"indexExpression": {
															"id": 1667,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "18312:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18293:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 1669,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "18321:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1671,
														"indexExpression": {
															"id": 1670,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "18340:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18321:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18293:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1678,
												"nodeType": "IfStatement",
												"src": "18289:96:0",
												"trueBody": {
													"id": 1677,
													"nodeType": "Block",
													"src": "18345:40:0",
													"statements": [
														{
															"expression": {
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1673,
																	"name": "takeFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "18359:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18369:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "18359:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1676,
															"nodeType": "ExpressionStatement",
															"src": "18359:15:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1680,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "18418:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1681,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "18424:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1682,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "18428:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1683,
															"name": "takeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "18436:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1679,
														"name": "_tokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2261,
														"src": "18403:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18403:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "18403:41:0"
											}
										]
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "15253:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15271:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "15263:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15285:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "15277:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15277:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15297:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "15289:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15262:42:0"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15313:0:0"
									},
									"scope": 3050,
									"src": "15244:3207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "18527:334:0",
										"statements": [
											{
												"assignments": [
													1698
												],
												"declarations": [
													{
														"constant": false,
														"id": 1698,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "18554:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1748,
														"src": "18537:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1696,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18537:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1697,
															"nodeType": "ArrayTypeName",
															"src": "18537:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1704,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18575:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "18561:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1699,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18565:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1700,
															"nodeType": "ArrayTypeName",
															"src": "18565:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18561:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18537:40:0"
											},
											{
												"expression": {
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1705,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "18587:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1707,
														"indexExpression": {
															"hexValue": "30",
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18592:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18587:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1710,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "18605:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_gainZilla_$3050",
																	"typeString": "contract gainZilla"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_gainZilla_$3050",
																	"typeString": "contract gainZilla"
																}
															],
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18597:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1708,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18597:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18597:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18587:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "18587:23:0"
											},
											{
												"expression": {
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1714,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "18620:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1716,
														"indexExpression": {
															"hexValue": "31",
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18625:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18620:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1717,
																"name": "uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "18630:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 630,
															"src": "18630:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 1719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18630:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18620:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1721,
												"nodeType": "ExpressionStatement",
												"src": "18620:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1725,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "18679:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18671:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1723,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18671:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18671:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1729,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "18694:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18686:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1727,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18686:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18686:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1731,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "18712:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1722,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "18662:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18662:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1733,
												"nodeType": "ExpressionStatement",
												"src": "18662:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1737,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "18801:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18814:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1739,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "18817:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1742,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "18831:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18823:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1740,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18823:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18823:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1744,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "18838:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "18838:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1734,
															"name": "uniswapV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "18734:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "18734:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18734:120:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1747,
												"nodeType": "ExpressionStatement",
												"src": "18734:120:0"
											}
										]
									},
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1692,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1691,
												"name": "lockTheSwap",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 962,
												"src": "18515:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "18515:11:0"
										}
									],
									"name": "swapTokensForEth",
									"nameLocation": "18469:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "18494:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "18486:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18485:21:0"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18527:0:0"
									},
									"scope": 3050,
									"src": "18460:401:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "18908:767:0",
										"statements": [
											{
												"assignments": [
													1753
												],
												"declarations": [
													{
														"constant": false,
														"id": 1753,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "18926:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1838,
														"src": "18918:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1752,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18918:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1756,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1754,
														"name": "pairPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1903,
														"src": "18941:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18941:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18918:34:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1757,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "18966:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18982:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18966:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1761,
												"nodeType": "IfStatement",
												"src": "18962:30:0",
												"trueBody": {
													"functionReturnParameters": 1751,
													"id": 1760,
													"nodeType": "Return",
													"src": "18985:7:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1762,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "19006:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1763,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "19021:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																"typeString": "struct gainZilla.DiamondFloor storage ref"
															}
														},
														"id": 1764,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "athPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 864,
														"src": "19021:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19006:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1780,
												"nodeType": "IfStatement",
												"src": "19002:169:0",
												"trueBody": {
													"id": 1779,
													"nodeType": "Block",
													"src": "19044:127:0",
													"statements": [
														{
															"expression": {
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1766,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19058:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "19058:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1769,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1753,
																	"src": "19082:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19058:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1771,
															"nodeType": "ExpressionStatement",
															"src": "19058:36:0"
														},
														{
															"expression": {
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1772,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19108:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "sellStopped",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 866,
																	"src": "19108:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19135:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "19108:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1777,
															"nodeType": "ExpressionStatement",
															"src": "19108:32:0"
														},
														{
															"functionReturnParameters": 1751,
															"id": 1778,
															"nodeType": "Return",
															"src": "19154:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1782
												],
												"declarations": [
													{
														"constant": false,
														"id": 1782,
														"mutability": "mutable",
														"name": "thresholdPrice",
														"nameLocation": "19189:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1838,
														"src": "19181:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1781,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19181:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1795,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19304:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1789,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19255:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "triggerPercentage",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 862,
																	"src": "19255:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 1786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19245:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1783,
																				"name": "diamondFloor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 872,
																				"src": "19206:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																					"typeString": "struct gainZilla.DiamondFloor storage ref"
																				}
																			},
																			"id": 1784,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "athPrice",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 864,
																			"src": "19206:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 180,
																		"src": "19206:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19206:44:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 119,
																"src": "19206:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19206:80:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 196,
														"src": "19206:97:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19206:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19181:128:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1796,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "19324:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1797,
														"name": "thresholdPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "19339:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19324:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1813,
												"nodeType": "IfStatement",
												"src": "19320:152:0",
												"trueBody": {
													"id": 1812,
													"nodeType": "Block",
													"src": "19355:117:0",
													"statements": [
														{
															"expression": {
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1799,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19369:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "sellStopped",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 866,
																	"src": "19369:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19396:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "19369:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1804,
															"nodeType": "ExpressionStatement",
															"src": "19369:31:0"
														},
														{
															"expression": {
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1805,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19414:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "blockedAth",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 868,
																	"src": "19414:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1808,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19440:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1809,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "19440:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19414:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1811,
															"nodeType": "ExpressionStatement",
															"src": "19414:47:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1814,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "19486:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																"typeString": "struct gainZilla.DiamondFloor storage ref"
															}
														},
														"id": 1815,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sellStopped",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 866,
														"src": "19486:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1816,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "19514:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "32",
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19558:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1817,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19530:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1818,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "blockedAth",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 868,
																	"src": "19530:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "19530:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19530:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19514:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19486:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1837,
												"nodeType": "IfStatement",
												"src": "19482:187:0",
												"trueBody": {
													"id": 1836,
													"nodeType": "Block",
													"src": "19562:107:0",
													"statements": [
														{
															"expression": {
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1824,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19576:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "sellStopped",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 866,
																	"src": "19576:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19603:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "19576:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1829,
															"nodeType": "ExpressionStatement",
															"src": "19576:32:0"
														},
														{
															"expression": {
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1830,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19622:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "19622:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1833,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1753,
																	"src": "19646:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19622:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1835,
															"nodeType": "ExpressionStatement",
															"src": "19622:36:0"
														}
													]
												}
											}
										]
									},
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkPriceConditions",
									"nameLocation": "18876:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18897:2:0"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18908:0:0"
									},
									"scope": 3050,
									"src": "18867:808:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1902,
										"nodeType": "Block",
										"src": "19732:365:0",
										"statements": [
											{
												"assignments": [
													1845,
													1847,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1845,
														"mutability": "mutable",
														"name": "reserve0",
														"nameLocation": "19751:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1902,
														"src": "19743:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1844,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "19743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1847,
														"mutability": "mutable",
														"name": "reserve1",
														"nameLocation": "19769:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1902,
														"src": "19761:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1846,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "19761:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1853,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1849,
																	"name": "uniswapV2Pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "19797:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1848,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "19782:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$582_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19782:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$582",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 524,
														"src": "19782:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19782:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19742:83:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1854,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "19839:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19851:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19839:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1857,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "19856:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19868:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19856:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19839:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1863,
												"nodeType": "IfStatement",
												"src": "19835:44:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19878:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1843,
													"id": 1862,
													"nodeType": "Return",
													"src": "19871:8:0"
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1865,
																			"name": "uniswapV2Pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "19920:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1864,
																		"name": "IUniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "19905:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$582_$",
																			"typeString": "type(contract IUniswapV2Pair)"
																		}
																	},
																	"id": 1866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19905:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Pair_$582",
																		"typeString": "contract IUniswapV2Pair"
																	}
																},
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 510,
																"src": "19905:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19905:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1871,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "19955:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19947:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1869,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19947:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19947:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "19905:55:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1897,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "20080:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	],
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20072:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1895,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20072:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20072:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"hexValue": "31653138",
																		"id": 1892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20062:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1889,
																				"name": "reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1845,
																				"src": "20048:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			],
																			"id": 1888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20040:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1887,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "20040:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20040:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 180,
																	"src": "20040:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20040:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "20040:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20040:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "19905:185:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1884,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1845,
																		"src": "20015:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	],
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20007:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1882,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20007:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20007:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"hexValue": "31653138",
																		"id": 1879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19997:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1876,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1847,
																				"src": "19983:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			],
																			"id": 1875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19975:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1874,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "19975:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19975:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 180,
																	"src": "19975:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19975:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "19975:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19975:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1843,
												"id": 1901,
												"nodeType": "Return",
												"src": "19898:192:0"
											}
										]
									},
									"functionSelector": "9491f94d",
									"id": 1903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pairPrice",
									"nameLocation": "19690:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19699:2:0"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "19723:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19722:9:0"
									},
									"scope": 3050,
									"src": "19681:416:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1939,
										"nodeType": "Block",
										"src": "20177:383:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1913,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "20204:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20196:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1911,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20196:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20196:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1917,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "20219:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20211:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1915,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20211:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20211:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1919,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "20237:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1910,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "20187:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20187:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1921,
												"nodeType": "ExpressionStatement",
												"src": "20187:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1929,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "20362:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20354:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1927,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20354:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20354:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1931,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "20383:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20410:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20454:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1934,
															"name": "_lpRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "20498:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 1935,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "20526:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "20526:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1922,
																"name": "uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "20289:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 651,
															"src": "20289:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1925,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1907,
																"src": "20328:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "20289:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20289:264:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 1938,
												"nodeType": "ExpressionStatement",
												"src": "20289:264:0"
											}
										]
									},
									"id": 1940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "20116:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "20137:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "20129:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "20158:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "20150:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20128:40:0"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20177:0:0"
									},
									"scope": 3050,
									"src": "20107:453:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2008,
										"nodeType": "Block",
										"src": "20660:415:0",
										"statements": [
											{
												"assignments": [
													1950
												],
												"declarations": [
													{
														"constant": false,
														"id": 1950,
														"mutability": "mutable",
														"name": "half",
														"nameLocation": "20678:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2008,
														"src": "20670:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1949,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20670:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1955,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20698:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"expression": {
															"id": 1951,
															"name": "lpAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "20685:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 196,
														"src": "20685:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20685:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20670:30:0"
											},
											{
												"assignments": [
													1957
												],
												"declarations": [
													{
														"constant": false,
														"id": 1957,
														"mutability": "mutable",
														"name": "otherHalf",
														"nameLocation": "20718:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2008,
														"src": "20710:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1956,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20710:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1962,
												"initialValue": {
													"arguments": [
														{
															"id": 1960,
															"name": "half",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "20743:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1958,
															"name": "lpAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "20730:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "20730:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20730:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20710:38:0"
											},
											{
												"assignments": [
													1964
												],
												"declarations": [
													{
														"constant": false,
														"id": 1964,
														"mutability": "mutable",
														"name": "initialBalance",
														"nameLocation": "20766:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 2008,
														"src": "20758:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1963,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20758:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1970,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1967,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "20791:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_gainZilla_$3050",
																	"typeString": "contract gainZilla"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_gainZilla_$3050",
																	"typeString": "contract gainZilla"
																}
															],
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20783:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1965,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20783:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20783:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "20783:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20758:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1974,
																	"name": "half",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1950,
																	"src": "20856:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1972,
																	"name": "contractTokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "20831:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 103,
																"src": "20831:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20831:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1971,
														"name": "swapTokensForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "20814:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20814:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1977,
												"nodeType": "ExpressionStatement",
												"src": "20814:48:0"
											},
											{
												"assignments": [
													1979
												],
												"declarations": [
													{
														"constant": false,
														"id": 1979,
														"mutability": "mutable",
														"name": "newBalance",
														"nameLocation": "20880:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2008,
														"src": "20872:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1978,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20872:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1988,
												"initialValue": {
													"arguments": [
														{
															"id": 1986,
															"name": "initialBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1964,
															"src": "20919:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1982,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "20901:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_gainZilla_$3050",
																			"typeString": "contract gainZilla"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_gainZilla_$3050",
																			"typeString": "contract gainZilla"
																		}
																	],
																	"id": 1981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20893:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1980,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20893:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20893:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "20893:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "20893:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20893:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20872:62:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1989,
														"name": "otherHalf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1957,
														"src": "20948:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20960:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20948:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2007,
												"nodeType": "IfStatement",
												"src": "20944:125:0",
												"trueBody": {
													"id": 2006,
													"nodeType": "Block",
													"src": "20963:106:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1993,
																		"name": "otherHalf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1957,
																		"src": "20990:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2001,
																						"name": "half",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1950,
																						"src": "21051:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1999,
																						"name": "contractTokenBalance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1944,
																						"src": "21026:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2000,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 103,
																					"src": "21026:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "21026:30:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1996,
																						"name": "half",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1950,
																						"src": "21016:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1994,
																						"name": "newBalance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1979,
																						"src": "21001:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1995,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 180,
																					"src": "21001:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "21001:20:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 196,
																			"src": "21001:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21001:56:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1992,
																	"name": "addLiquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1940,
																	"src": "20977:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20977:81:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2005,
															"nodeType": "ExpressionStatement",
															"src": "20977:81:0"
														}
													]
												}
											}
										]
									},
									"id": 2009,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1947,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1946,
												"name": "lockTheSwap",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 962,
												"src": "20648:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20648:11:0"
										}
									],
									"name": "swapAndLiquify",
									"nameLocation": "20577:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "lpAmount",
												"nameLocation": "20600:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "20592:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "contractTokenBalance",
												"nameLocation": "20618:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "20610:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20591:48:0"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20660:0:0"
									},
									"scope": 3050,
									"src": "20568:507:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2092,
										"nodeType": "Block",
										"src": "21127:696:0",
										"statements": [
											{
												"assignments": [
													2015
												],
												"declarations": [
													{
														"constant": false,
														"id": 2015,
														"mutability": "mutable",
														"name": "totalFees",
														"nameLocation": "21145:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2092,
														"src": "21137:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2014,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21137:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2023,
												"initialValue": {
													"arguments": [
														{
															"id": 2021,
															"name": "_sellTeamFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "21202:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2018,
																	"name": "_sellEcosystemFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "21179:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2016,
																	"name": "_sellMarketingFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "21157:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 103,
																"src": "21157:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21157:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "21157:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21157:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21137:78:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2024,
														"name": "totalFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "21229:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21242:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21229:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2091,
												"nodeType": "IfStatement",
												"src": "21225:592:0",
												"trueBody": {
													"id": 2090,
													"nodeType": "Block",
													"src": "21245:572:0",
													"statements": [
														{
															"assignments": [
																2028
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2028,
																	"mutability": "mutable",
																	"name": "marketingPortion",
																	"nameLocation": "21267:16:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2090,
																	"src": "21259:24:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2027,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21259:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2036,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2034,
																		"name": "totalFees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2015,
																		"src": "21320:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2031,
																				"name": "_sellMarketingFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 823,
																				"src": "21297:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2029,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2011,
																				"src": "21286:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 180,
																			"src": "21286:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21286:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 196,
																	"src": "21286:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21286:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21259:71:0"
														},
														{
															"assignments": [
																2038
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2038,
																	"mutability": "mutable",
																	"name": "teamPortion",
																	"nameLocation": "21352:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2090,
																	"src": "21344:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2037,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21344:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2046,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2044,
																		"name": "totalFees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2015,
																		"src": "21395:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2041,
																				"name": "_sellTeamFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 829,
																				"src": "21377:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2039,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2011,
																				"src": "21366:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 180,
																			"src": "21366:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21366:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 196,
																	"src": "21366:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21366:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21344:61:0"
														},
														{
															"assignments": [
																2048
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2048,
																	"mutability": "mutable",
																	"name": "ecoPortion",
																	"nameLocation": "21427:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2090,
																	"src": "21419:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2047,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21419:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2056,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2054,
																		"name": "teamPortion",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2038,
																		"src": "21473:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2051,
																				"name": "marketingPortion",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2028,
																				"src": "21451:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2049,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2011,
																				"src": "21440:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 119,
																			"src": "21440:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21440:28:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 119,
																	"src": "21440:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21440:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21419:66:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2057,
																	"name": "marketingPortion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2028,
																	"src": "21503:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21522:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "21503:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2067,
															"nodeType": "IfStatement",
															"src": "21499:103:0",
															"trueBody": {
																"id": 2066,
																"nodeType": "Block",
																"src": "21525:77:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2063,
																					"name": "marketingPortion",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2028,
																					"src": "21570:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2060,
																					"name": "_marketingAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 883,
																					"src": "21543:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 2062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "21543:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 2064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21543:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2065,
																		"nodeType": "ExpressionStatement",
																		"src": "21543:44:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2068,
																	"name": "teamPortion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2038,
																	"src": "21619:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21633:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "21619:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2078,
															"nodeType": "IfStatement",
															"src": "21615:88:0",
															"trueBody": {
																"id": 2077,
																"nodeType": "Block",
																"src": "21636:67:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2074,
																					"name": "teamPortion",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2038,
																					"src": "21676:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2071,
																					"name": "_teamAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 890,
																					"src": "21654:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 2073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "21654:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 2075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21654:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2076,
																		"nodeType": "ExpressionStatement",
																		"src": "21654:34:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2079,
																	"name": "ecoPortion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2048,
																	"src": "21720:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21733:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "21720:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2089,
															"nodeType": "IfStatement",
															"src": "21716:91:0",
															"trueBody": {
																"id": 2088,
																"nodeType": "Block",
																"src": "21736:71:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2085,
																					"name": "ecoPortion",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2048,
																					"src": "21781:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2082,
																					"name": "_ecosystemAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "21754:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 2084,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "21754:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 2086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21754:38:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2087,
																		"nodeType": "ExpressionStatement",
																		"src": "21754:38:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 2093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendETHToFee",
									"nameLocation": "21090:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21111:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "21103:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21102:16:0"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21127:0:0"
									},
									"scope": 3050,
									"src": "21081:742:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2113,
										"nodeType": "Block",
										"src": "21890:106:0",
										"statements": [
											{
												"expression": {
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2100,
														"name": "_firstBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "21900:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2101,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "21914:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "21914:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21900:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2104,
												"nodeType": "ExpressionStatement",
												"src": "21900:29:0"
											},
											{
												"expression": {
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2105,
														"name": "_botBlocks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "21939:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2106,
														"name": "botBlocks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2095,
														"src": "21952:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21939:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2108,
												"nodeType": "ExpressionStatement",
												"src": "21939:22:0"
											},
											{
												"expression": {
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2109,
														"name": "tradingOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "21971:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21985:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "21971:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2112,
												"nodeType": "ExpressionStatement",
												"src": "21971:18:0"
											}
										]
									},
									"functionSelector": "d1633649",
									"id": 2114,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2098,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2097,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "21878:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21878:11:0"
										}
									],
									"name": "openTrading",
									"nameLocation": "21838:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "botBlocks",
												"nameLocation": "21858:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "21850:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21849:19:0"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21890:0:0"
									},
									"scope": 3050,
									"src": "21829:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2123,
										"nodeType": "Block",
										"src": "22046:35:0",
										"statements": [
											{
												"expression": {
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2119,
														"name": "tradingOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "22056:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22070:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "22056:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2122,
												"nodeType": "ExpressionStatement",
												"src": "22056:18:0"
											}
										]
									},
									"functionSelector": "8e360253",
									"id": 2124,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2117,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2116,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22034:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22034:11:0"
										}
									],
									"name": "enableToken",
									"nameLocation": "22011:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22022:2:0"
									},
									"returnParameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22046:0:0"
									},
									"scope": 3050,
									"src": "22002:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2138,
										"nodeType": "Block",
										"src": "22132:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2130,
															"name": "canPause",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "22150:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7468697320636f6e74726163742063616e6e6f7420626520706175736564",
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22160:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_046a8fc234c98369d46f45f5bed63e994dab3910bdaebfe1ca0cd49f568245a6",
																"typeString": "literal_string \"this contract cannot be paused\""
															},
															"value": "this contract cannot be paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_046a8fc234c98369d46f45f5bed63e994dab3910bdaebfe1ca0cd49f568245a6",
																"typeString": "literal_string \"this contract cannot be paused\""
															}
														],
														"id": 2129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22142:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22142:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2133,
												"nodeType": "ExpressionStatement",
												"src": "22142:51:0"
											},
											{
												"expression": {
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2134,
														"name": "tradingOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "22203:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22217:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "22203:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2137,
												"nodeType": "ExpressionStatement",
												"src": "22203:19:0"
											}
										]
									},
									"functionSelector": "3e0f966d",
									"id": 2139,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2127,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2126,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22120:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22120:11:0"
										}
									],
									"name": "disableToken",
									"nameLocation": "22096:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22108:2:0"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22132:0:0"
									},
									"scope": 3050,
									"src": "22087:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2148,
										"nodeType": "Block",
										"src": "22287:33:0",
										"statements": [
											{
												"expression": {
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2144,
														"name": "canPause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "22297:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22308:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "22297:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2147,
												"nodeType": "ExpressionStatement",
												"src": "22297:16:0"
											}
										]
									},
									"functionSelector": "6aabff3f",
									"id": 2149,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2141,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22266:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22266:11:0"
										}
									],
									"name": "disablePauseAbility",
									"nameLocation": "22244:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22263:2:0"
									},
									"returnParameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22287:0:0"
									},
									"scope": 3050,
									"src": "22235:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2172,
										"nodeType": "Block",
										"src": "22369:159:0",
										"statements": [
											{
												"assignments": [
													2155
												],
												"declarations": [
													{
														"constant": false,
														"id": 2155,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "22387:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 2172,
														"src": "22379:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2154,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22379:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2162,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2159,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "22423:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22415:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2157,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22415:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22415:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2156,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "22405:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22405:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22379:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2163,
														"name": "contractBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2155,
														"src": "22443:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22461:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22443:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2171,
												"nodeType": "IfStatement",
												"src": "22439:83:0",
												"trueBody": {
													"id": 2170,
													"nodeType": "Block",
													"src": "22464:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2167,
																		"name": "contractBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "22495:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2166,
																	"name": "swapTokensForEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "22478:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22478:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2169,
															"nodeType": "ExpressionStatement",
															"src": "22478:33:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c3c8cd80",
									"id": 2173,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2152,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2151,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22357:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22357:11:0"
										}
									],
									"name": "manualswap",
									"nameLocation": "22335:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22345:2:0"
									},
									"returnParameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22369:0:0"
									},
									"scope": 3050,
									"src": "22326:202:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2203,
										"nodeType": "Block",
										"src": "22577:183:0",
										"statements": [
											{
												"assignments": [
													2179
												],
												"declarations": [
													{
														"constant": false,
														"id": 2179,
														"mutability": "mutable",
														"name": "contractETHBalance",
														"nameLocation": "22595:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 2203,
														"src": "22587:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2178,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22587:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2185,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2182,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "22624:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_gainZilla_$3050",
																	"typeString": "contract gainZilla"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_gainZilla_$3050",
																	"typeString": "contract gainZilla"
																}
															],
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22616:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2180,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22616:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22616:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "22616:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22587:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2186,
														"name": "contractETHBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2179,
														"src": "22651:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22672:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22651:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2202,
												"nodeType": "IfStatement",
												"src": "22647:107:0",
												"trueBody": {
													"id": 2201,
													"nodeType": "Block",
													"src": "22675:79:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2198,
																		"name": "contractETHBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2179,
																		"src": "22724:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 2193,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 265,
																							"src": "22705:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 2194,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "22705:7:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2192,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "22697:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 2191,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "22697:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22697:16:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "22689:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 2189,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "22689:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22689:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 2197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "22689:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22689:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2200,
															"nodeType": "ExpressionStatement",
															"src": "22689:54:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "6fc3eaec",
									"id": 2204,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2176,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2175,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22565:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22565:11:0"
										}
									],
									"name": "manualsend",
									"nameLocation": "22543:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22553:2:0"
									},
									"returnParameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22577:0:0"
									},
									"scope": 3050,
									"src": "22534:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2232,
										"nodeType": "Block",
										"src": "22827:121:0",
										"statements": [
											{
												"assignments": [
													2212
												],
												"declarations": [
													{
														"constant": false,
														"id": 2212,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "22845:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2232,
														"src": "22837:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2211,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22837:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2222,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2219,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "22886:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22878:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2217,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22878:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22878:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2214,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "22861:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2213,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "22854:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22854:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$78",
																"typeString": "contract IERC20"
															}
														},
														"id": 2216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "22854:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22854:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22837:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2227,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "22925:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22925:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2229,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2212,
															"src": "22934:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2224,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "22909:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2223,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "22902:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22902:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$78",
																"typeString": "contract IERC20"
															}
														},
														"id": 2226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 32,
														"src": "22902:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22902:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2231,
												"nodeType": "ExpressionStatement",
												"src": "22902:39:0"
											}
										]
									},
									"functionSelector": "29409395",
									"id": 2233,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2208,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22815:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22815:11:0"
										}
									],
									"name": "manualSendToken",
									"nameLocation": "22775:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "22799:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "22791:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22790:15:0"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22827:0:0"
									},
									"scope": 3050,
									"src": "22766:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2260,
										"nodeType": "Block",
										"src": "23051:153:0",
										"statements": [
											{
												"condition": {
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "23065:8:0",
													"subExpression": {
														"id": 2244,
														"name": "takeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2241,
														"src": "23066:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2250,
												"nodeType": "IfStatement",
												"src": "23061:58:0",
												"trueBody": {
													"id": 2249,
													"nodeType": "Block",
													"src": "23075:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2246,
																	"name": "removeAllFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "23094:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23094:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2248,
															"nodeType": "ExpressionStatement",
															"src": "23094:14:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2252,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2235,
															"src": "23146:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2253,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "23154:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2254,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "23165:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2251,
														"name": "_transferStandard",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2559,
														"src": "23128:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23128:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2256,
												"nodeType": "ExpressionStatement",
												"src": "23128:44:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2257,
														"name": "restoreAllFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "23182:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23182:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2259,
												"nodeType": "ExpressionStatement",
												"src": "23182:15:0"
											}
										]
									},
									"id": 2261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenTransfer",
									"nameLocation": "22963:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "22986:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "22978:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22978:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "23002:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "22994:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23021:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "23013:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "takeFee",
												"nameLocation": "23034:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "23029:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23029:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22977:65:0"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23051:0:0"
									},
									"scope": 3050,
									"src": "22954:250:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2558,
										"nodeType": "Block",
										"src": "23296:1761:0",
										"statements": [
											{
												"assignments": [
													2272
												],
												"declarations": [
													{
														"constant": false,
														"id": 2272,
														"mutability": "mutable",
														"name": "fees",
														"nameLocation": "23326:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2558,
														"src": "23306:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
															"typeString": "struct gainZilla.FeeBreakdown"
														},
														"typeName": {
															"id": 2271,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2270,
																"name": "FeeBreakdown",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 846,
																"src": "23306:12:0"
															},
															"referencedDeclaration": 846,
															"src": "23306:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FeeBreakdown_$846_storage_ptr",
																"typeString": "struct gainZilla.FeeBreakdown"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2273,
												"nodeType": "VariableDeclarationStatement",
												"src": "23306:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2274,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2263,
															"src": "23344:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2275,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "23354:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23344:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2277,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "23371:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 2280,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "23392:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23384:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2278,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23384:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23384:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23371:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23344:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2333,
												"nodeType": "IfStatement",
												"src": "23340:357:0",
												"trueBody": {
													"id": 2332,
													"nodeType": "Block",
													"src": "23410:287:0",
													"statements": [
														{
															"expression": {
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2284,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "23430:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2286,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tMarketing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 839,
																	"src": "23430:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23481:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2289,
																					"name": "_buyMarketingFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "23459:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2287,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2267,
																					"src": "23448:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2288,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23448:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23448:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23448:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23448:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23430:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2295,
															"nodeType": "ExpressionStatement",
															"src": "23430:56:0"
														},
														{
															"expression": {
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2296,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "23500:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tLiquidity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 837,
																	"src": "23500:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23551:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2301,
																					"name": "_buyLiquidityFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 787,
																					"src": "23529:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2299,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2267,
																					"src": "23518:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23518:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23518:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23518:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23518:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23500:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2307,
															"nodeType": "ExpressionStatement",
															"src": "23500:56:0"
														},
														{
															"expression": {
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2308,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "23570:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2310,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tTeam",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "23570:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23611:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2313,
																					"name": "_buyTeamFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 805,
																					"src": "23594:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2311,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2267,
																					"src": "23583:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23583:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23583:23:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23583:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23583:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23570:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2319,
															"nodeType": "ExpressionStatement",
															"src": "23570:46:0"
														},
														{
															"expression": {
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2320,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "23630:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2322,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tEcosystem",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 843,
																	"src": "23630:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23681:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2325,
																					"name": "_buyEcosystemFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "23659:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2323,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2267,
																					"src": "23648:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23648:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23648:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23648:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23648:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23630:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2331,
															"nodeType": "ExpressionStatement",
															"src": "23630:56:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2334,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2263,
															"src": "23710:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2335,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "23720:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23710:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2337,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "23737:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2338,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "23750:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23737:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23710:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2390,
												"nodeType": "IfStatement",
												"src": "23706:351:0",
												"trueBody": {
													"id": 2389,
													"nodeType": "Block",
													"src": "23765:292:0",
													"statements": [
														{
															"expression": {
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2341,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "23786:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2343,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tMarketing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 839,
																	"src": "23786:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23838:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2346,
																					"name": "_sellMarketingFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 823,
																					"src": "23815:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2344,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2267,
																					"src": "23804:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23804:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23804:29:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23804:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23804:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23786:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2352,
															"nodeType": "ExpressionStatement",
															"src": "23786:57:0"
														},
														{
															"expression": {
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2353,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "23857:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tLiquidity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 837,
																	"src": "23857:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23909:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2358,
																					"name": "_sellLiquidityFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 811,
																					"src": "23886:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2356,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2267,
																					"src": "23875:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23875:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23875:29:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23875:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23875:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23857:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2364,
															"nodeType": "ExpressionStatement",
															"src": "23857:57:0"
														},
														{
															"expression": {
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2365,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "23928:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2367,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tTeam",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "23928:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23970:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2370,
																					"name": "_sellTeamFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 829,
																					"src": "23952:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2368,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2267,
																					"src": "23941:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23941:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23941:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23941:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23941:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23928:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2376,
															"nodeType": "ExpressionStatement",
															"src": "23928:47:0"
														},
														{
															"expression": {
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2377,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "23989:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tEcosystem",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 843,
																	"src": "23989:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24041:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2382,
																					"name": "_sellEcosystemFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 817,
																					"src": "24018:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2380,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2267,
																					"src": "24007:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "24007:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24007:29:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "24007:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24007:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23989:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2388,
															"nodeType": "ExpressionStatement",
															"src": "23989:57:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2391,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2263,
															"src": "24070:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2392,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "24080:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "24070:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2394,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "24097:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2395,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "24110:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "24097:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "24070:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2475,
												"nodeType": "IfStatement",
												"src": "24066:522:0",
												"trueBody": {
													"id": 2474,
													"nodeType": "Block",
													"src": "24125:463:0",
													"statements": [
														{
															"expression": {
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2398,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "24149:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2400,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tMarketing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 839,
																	"src": "24149:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 2413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24244:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2410,
																					"name": "transferFeeIncreaseFactor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 835,
																					"src": "24213:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 2406,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "24202:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 2403,
																											"name": "_sellMarketingFee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 823,
																											"src": "24179:17:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 2401,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2267,
																											"src": "24168:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2402,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 180,
																										"src": "24168:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2404,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "24168:29:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2405,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 196,
																								"src": "24168:33:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2407,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "24168:39:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2408,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24167:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "24167:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24167:72:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "24167:76:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24167:81:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24149:99:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2416,
															"nodeType": "ExpressionStatement",
															"src": "24149:99:0"
														},
														{
															"expression": {
																"id": 2434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2417,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "24262:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2419,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tLiquidity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 837,
																	"src": "24262:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24357:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2429,
																					"name": "transferFeeIncreaseFactor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 835,
																					"src": "24326:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 2425,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "24315:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 2422,
																											"name": "_sellLiquidityFee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 811,
																											"src": "24292:17:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 2420,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2267,
																											"src": "24281:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2421,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 180,
																										"src": "24281:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2423,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "24281:29:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2424,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 196,
																								"src": "24281:33:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2426,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "24281:39:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2427,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24280:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "24280:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24280:72:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "24280:76:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24280:81:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24262:99:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2435,
															"nodeType": "ExpressionStatement",
															"src": "24262:99:0"
														},
														{
															"expression": {
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2436,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "24375:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tTeam",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "24375:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 2451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24460:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2448,
																					"name": "transferFeeIncreaseFactor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 835,
																					"src": "24429:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 2444,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "24418:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 2441,
																											"name": "_sellTeamFee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 829,
																											"src": "24400:12:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 2439,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2267,
																											"src": "24389:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2440,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 180,
																										"src": "24389:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2442,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "24389:24:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2443,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 196,
																								"src": "24389:28:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2445,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "24389:34:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2446,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24388:36:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "24388:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24388:67:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "24388:71:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24388:76:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24375:89:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2454,
															"nodeType": "ExpressionStatement",
															"src": "24375:89:0"
														},
														{
															"expression": {
																"id": 2472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2455,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "24478:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2457,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tEcosystem",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 843,
																	"src": "24478:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 2470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24573:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2467,
																					"name": "transferFeeIncreaseFactor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 835,
																					"src": "24542:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 2463,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "24531:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 2460,
																											"name": "_sellEcosystemFee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 817,
																											"src": "24508:17:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 2458,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2267,
																											"src": "24497:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2459,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 180,
																										"src": "24497:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2461,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "24497:29:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2462,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 196,
																								"src": "24497:33:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2464,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "24497:39:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2465,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24496:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "24496:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24496:72:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "24496:76:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24496:81:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24478:99:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2473,
															"nodeType": "ExpressionStatement",
															"src": "24478:99:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2476,
															"name": "fees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "24606:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																"typeString": "struct gainZilla.FeeBreakdown memory"
															}
														},
														"id": 2478,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 845,
														"src": "24606:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2493,
																	"name": "fees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2272,
																	"src": "24690:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																		"typeString": "struct gainZilla.FeeBreakdown memory"
																	}
																},
																"id": 2494,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tEcosystem",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 843,
																"src": "24690:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2489,
																			"name": "fees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2272,
																			"src": "24674:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																				"typeString": "struct gainZilla.FeeBreakdown memory"
																			}
																		},
																		"id": 2490,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tTeam",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 841,
																		"src": "24674:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2485,
																					"name": "fees",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2272,
																					"src": "24653:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																						"typeString": "struct gainZilla.FeeBreakdown memory"
																					}
																				},
																				"id": 2486,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "tLiquidity",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 837,
																				"src": "24653:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2481,
																							"name": "fees",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2272,
																							"src": "24632:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																								"typeString": "struct gainZilla.FeeBreakdown memory"
																							}
																						},
																						"id": 2482,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tMarketing",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 839,
																						"src": "24632:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2479,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2267,
																						"src": "24621:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2480,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 119,
																					"src": "24621:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24621:27:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 119,
																			"src": "24621:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24621:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 119,
																	"src": "24621:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24621:64:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "24621:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24621:85:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24606:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2497,
												"nodeType": "ExpressionStatement",
												"src": "24606:100:0"
											},
											{
												"expression": {
													"id": 2507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2498,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "24725:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2500,
														"indexExpression": {
															"id": 2499,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2263,
															"src": "24735:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24725:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2505,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "24767:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2501,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "24745:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2503,
																"indexExpression": {
																	"id": 2502,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "24755:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24745:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "24745:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24745:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24725:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2508,
												"nodeType": "ExpressionStatement",
												"src": "24725:49:0"
											},
											{
												"expression": {
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2509,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "24784:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2511,
														"indexExpression": {
															"id": 2510,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "24794:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24784:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2516,
																	"name": "fees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2272,
																	"src": "24832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																		"typeString": "struct gainZilla.FeeBreakdown memory"
																	}
																},
																"id": 2517,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 845,
																"src": "24832:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2512,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "24807:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2514,
																"indexExpression": {
																	"id": 2513,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2265,
																	"src": "24817:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24807:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 103,
															"src": "24807:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24807:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24784:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2520,
												"nodeType": "ExpressionStatement",
												"src": "24784:61:0"
											},
											{
												"expression": {
													"id": 2549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2521,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "24855:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2526,
														"indexExpression": {
															"arguments": [
																{
																	"id": 2524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "24873:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3050",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24865:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24865:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24865:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24855:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 2545,
																			"name": "fees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2272,
																			"src": "24968:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																				"typeString": "struct gainZilla.FeeBreakdown memory"
																			}
																		},
																		"id": 2546,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tEcosystem",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 843,
																		"src": "24968:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2541,
																					"name": "fees",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2272,
																					"src": "24952:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																						"typeString": "struct gainZilla.FeeBreakdown memory"
																					}
																				},
																				"id": 2542,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "tTeam",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 841,
																				"src": "24952:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2537,
																							"name": "fees",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2272,
																							"src": "24931:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																								"typeString": "struct gainZilla.FeeBreakdown memory"
																							}
																						},
																						"id": 2538,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tLiquidity",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 837,
																						"src": "24931:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 2534,
																							"name": "fees",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2272,
																							"src": "24911:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																								"typeString": "struct gainZilla.FeeBreakdown memory"
																							}
																						},
																						"id": 2535,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tMarketing",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 839,
																						"src": "24911:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 103,
																					"src": "24911:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24911:36:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 103,
																			"src": "24911:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24911:52:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 103,
																	"src": "24911:56:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24911:73:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2527,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "24882:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2532,
																"indexExpression": {
																	"arguments": [
																		{
																			"id": 2530,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "24900:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_gainZilla_$3050",
																				"typeString": "contract gainZilla"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_gainZilla_$3050",
																				"typeString": "contract gainZilla"
																			}
																		],
																		"id": 2529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "24892:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2528,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "24892:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24892:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24882:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 103,
															"src": "24882:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24882:103:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24855:130:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2550,
												"nodeType": "ExpressionStatement",
												"src": "24855:130:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2552,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2263,
															"src": "25018:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2553,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "25026:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2554,
																"name": "fees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "25037:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																	"typeString": "struct gainZilla.FeeBreakdown memory"
																}
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 845,
															"src": "25037:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2551,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "25009:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25009:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2557,
												"nodeType": "EmitStatement",
												"src": "25004:46:0"
											}
										]
									},
									"id": 2559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferStandard",
									"nameLocation": "23219:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "23245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "23237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "23261:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "23253:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23280:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "23272:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23236:51:0"
									},
									"returnParameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23296:0:0"
									},
									"scope": 3050,
									"src": "23210:1847:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2562,
										"nodeType": "Block",
										"src": "25094:2:0",
										"statements": []
									},
									"id": 2563,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25074:2:0"
									},
									"returnParameters": {
										"id": 2561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25094:0:0"
									},
									"scope": 3050,
									"src": "25067:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2576,
										"nodeType": "Block",
										"src": "25162:51:0",
										"statements": [
											{
												"expression": {
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2570,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "25172:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2572,
														"indexExpression": {
															"id": 2571,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2565,
															"src": "25191:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25172:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25202:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "25172:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2575,
												"nodeType": "ExpressionStatement",
												"src": "25172:34:0"
											}
										]
									},
									"functionSelector": "437823ec",
									"id": 2577,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2568,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2567,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25150:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25150:11:0"
										}
									],
									"name": "excludeFromFee",
									"nameLocation": "25111:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25134:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "25126:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25125:17:0"
									},
									"returnParameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25162:0:0"
									},
									"scope": 3050,
									"src": "25102:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2590,
										"nodeType": "Block",
										"src": "25279:52:0",
										"statements": [
											{
												"expression": {
													"id": 2588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2584,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "25289:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2586,
														"indexExpression": {
															"id": 2585,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "25308:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25289:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25319:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "25289:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2589,
												"nodeType": "ExpressionStatement",
												"src": "25289:35:0"
											}
										]
									},
									"functionSelector": "ea2f0b37",
									"id": 2591,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2582,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2581,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25267:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25267:11:0"
										}
									],
									"name": "includeInFee",
									"nameLocation": "25228:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25249:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "25241:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25240:17:0"
									},
									"returnParameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25279:0:0"
									},
									"scope": 3050,
									"src": "25219:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2604,
										"nodeType": "Block",
										"src": "25398:38:0",
										"statements": [
											{
												"expression": {
													"id": 2602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2598,
															"name": "bots",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "25408:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2600,
														"indexExpression": {
															"id": 2599,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2593,
															"src": "25413:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25408:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25424:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "25408:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2603,
												"nodeType": "ExpressionStatement",
												"src": "25408:21:0"
											}
										]
									},
									"functionSelector": "5fecd926",
									"id": 2605,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2596,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2595,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25386:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25386:11:0"
										}
									],
									"name": "removeBot",
									"nameLocation": "25350:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25368:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "25360:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25360:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25359:17:0"
									},
									"returnParameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25398:0:0"
									},
									"scope": 3050,
									"src": "25341:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2623,
										"nodeType": "Block",
										"src": "25496:112:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2613,
															"name": "canBlackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "25514:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7468697320636f6e74726163742063616e6e6f7420626c61636b6c69737420616464726573736573",
															"id": 2614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25528:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bad442360b6845337bd4003d69c5089367f1b69f213d5a6e716006a978ac85ad",
																"typeString": "literal_string \"this contract cannot blacklist addresses\""
															},
															"value": "this contract cannot blacklist addresses"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bad442360b6845337bd4003d69c5089367f1b69f213d5a6e716006a978ac85ad",
																"typeString": "literal_string \"this contract cannot blacklist addresses\""
															}
														],
														"id": 2612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25506:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25506:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2616,
												"nodeType": "ExpressionStatement",
												"src": "25506:65:0"
											},
											{
												"expression": {
													"id": 2621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2617,
															"name": "bots",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "25581:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2619,
														"indexExpression": {
															"id": 2618,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2607,
															"src": "25586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25581:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25597:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "25581:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2622,
												"nodeType": "ExpressionStatement",
												"src": "25581:20:0"
											}
										]
									},
									"functionSelector": "ffecf516",
									"id": 2624,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2610,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2609,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25484:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25484:11:0"
										}
									],
									"name": "addBot",
									"nameLocation": "25451:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25466:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "25458:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25457:17:0"
									},
									"returnParameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25496:0:0"
									},
									"scope": 3050,
									"src": "25442:166:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2633,
										"nodeType": "Block",
										"src": "25666:37:0",
										"statements": [
											{
												"expression": {
													"id": 2631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2629,
														"name": "canBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "25676:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25691:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "25676:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2632,
												"nodeType": "ExpressionStatement",
												"src": "25676:20:0"
											}
										]
									},
									"functionSelector": "d55cb78a",
									"id": 2634,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2627,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2626,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25645:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25645:11:0"
										}
									],
									"name": "disableBlackListing",
									"nameLocation": "25623:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25642:2:0"
									},
									"returnParameters": {
										"id": 2628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25666:0:0"
									},
									"scope": 3050,
									"src": "25614:89:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2645,
										"nodeType": "Block",
										"src": "25797:56:0",
										"statements": [
											{
												"expression": {
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2641,
														"name": "transferFeeIncreaseFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "25807:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2642,
														"name": "_multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2636,
														"src": "25835:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25807:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2644,
												"nodeType": "ExpressionStatement",
												"src": "25807:39:0"
											}
										]
									},
									"functionSelector": "a850673d",
									"id": 2646,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2639,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2638,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25785:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25785:11:0"
										}
									],
									"name": "setTransferTransactionMultiplier",
									"nameLocation": "25722:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "_multiplier",
												"nameLocation": "25763:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "25755:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25754:21:0"
									},
									"returnParameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25797:0:0"
									},
									"scope": 3050,
									"src": "25713:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2674,
										"nodeType": "Block",
										"src": "25933:249:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2654,
																"name": "maxWalletAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2648,
																"src": "25951:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "31303030",
																		"id": 2657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25982:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		}
																	],
																	"expression": {
																		"id": 2655,
																		"name": "_tTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "25970:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 196,
																	"src": "25970:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25970:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25951:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e20302e3125206f6620737570706c79",
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25989:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c4db68624a2e770077620719acb05295e7dcfc072b9733d6b92c297674c94f0",
																"typeString": "literal_string \"Amount must be greater than 0.1% of supply\""
															},
															"value": "Amount must be greater than 0.1% of supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c4db68624a2e770077620719acb05295e7dcfc072b9733d6b92c297674c94f0",
																"typeString": "literal_string \"Amount must be greater than 0.1% of supply\""
															}
														],
														"id": 2653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25943:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25943:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2662,
												"nodeType": "ExpressionStatement",
												"src": "25943:91:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2664,
																"name": "maxWalletAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2648,
																"src": "26052:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2665,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "26071:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26052:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e206f7220657175616c20746f20746f74616c537570706c79",
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26080:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b44a94ebbca3d153cb9c59a36d3c7e6533b0baf54384f35b08da2c0561f7e004",
																"typeString": "literal_string \"Amount must be less than or equal to totalSupply\""
															},
															"value": "Amount must be less than or equal to totalSupply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b44a94ebbca3d153cb9c59a36d3c7e6533b0baf54384f35b08da2c0561f7e004",
																"typeString": "literal_string \"Amount must be less than or equal to totalSupply\""
															}
														],
														"id": 2663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26044:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26044:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2669,
												"nodeType": "ExpressionStatement",
												"src": "26044:87:0"
											},
											{
												"expression": {
													"id": 2672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2670,
														"name": "_maxWalletAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "26141:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2671,
														"name": "maxWalletAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2648,
														"src": "26160:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26141:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2673,
												"nodeType": "ExpressionStatement",
												"src": "26141:34:0"
											}
										]
									},
									"functionSelector": "27a14fc2",
									"id": 2675,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2651,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2650,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25921:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25921:11:0"
										}
									],
									"name": "setMaxWalletAmount",
									"nameLocation": "25868:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "maxWalletAmount",
												"nameLocation": "25895:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2675,
												"src": "25887:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25886:25:0"
									},
									"returnParameters": {
										"id": 2652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25933:0:0"
									},
									"scope": 3050,
									"src": "25859:323:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2752,
										"nodeType": "Block",
										"src": "26313:698:0",
										"statements": [
											{
												"assignments": [
													2689
												],
												"declarations": [
													{
														"constant": false,
														"id": 2689,
														"mutability": "mutable",
														"name": "totalFee",
														"nameLocation": "26331:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2752,
														"src": "26323:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2688,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2700,
												"initialValue": {
													"arguments": [
														{
															"id": 2698,
															"name": "ecosystemFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2683,
															"src": "26390:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2695,
																	"name": "teamFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2681,
																	"src": "26377:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2692,
																			"name": "liquidityFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2679,
																			"src": "26359:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2690,
																			"name": "marketingFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2677,
																			"src": "26342:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 103,
																		"src": "26342:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26342:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 103,
																"src": "26342:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26342:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "26342:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26342:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26323:80:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2702,
																"name": "totalFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2689,
																"src": "26421:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "323530",
																"id": 2703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26433:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_250_by_1",
																	"typeString": "int_const 250"
																},
																"value": "250"
															},
															"src": "26421:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53756d206f66206275792066656573206d757374206265206c657373207468616e206f7220657175616c20746f20323525",
															"id": 2705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26438:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1755f62c229a290ad9b7faac2959e1b3eb8f692fba0f163aae0b9540e4f5fdce",
																"typeString": "literal_string \"Sum of buy fees must be less than or equal to 25%\""
															},
															"value": "Sum of buy fees must be less than or equal to 25%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1755f62c229a290ad9b7faac2959e1b3eb8f692fba0f163aae0b9540e4f5fdce",
																"typeString": "literal_string \"Sum of buy fees must be less than or equal to 25%\""
															}
														],
														"id": 2701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26413:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26413:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2707,
												"nodeType": "ExpressionStatement",
												"src": "26413:77:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2709,
															"name": "canChangeTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "26508:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546869732066756e6374696f6e20697320646961626c6564",
															"id": 2710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26522:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0",
																"typeString": "literal_string \"This function is diabled\""
															},
															"value": "This function is diabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0",
																"typeString": "literal_string \"This function is diabled\""
															}
														],
														"id": 2708,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26500:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26500:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2712,
												"nodeType": "ExpressionStatement",
												"src": "26500:49:0"
											},
											{
												"expression": {
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2713,
														"name": "_buyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "26560:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2714,
														"name": "marketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2677,
														"src": "26579:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26560:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2716,
												"nodeType": "ExpressionStatement",
												"src": "26560:31:0"
											},
											{
												"expression": {
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2717,
														"name": "_buyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "26601:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2718,
														"name": "liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2679,
														"src": "26620:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26601:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2720,
												"nodeType": "ExpressionStatement",
												"src": "26601:31:0"
											},
											{
												"expression": {
													"id": 2723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2721,
														"name": "_buyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "26642:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2722,
														"name": "teamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2681,
														"src": "26656:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26642:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2724,
												"nodeType": "ExpressionStatement",
												"src": "26642:21:0"
											},
											{
												"expression": {
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2725,
														"name": "_buyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "26673:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2726,
														"name": "ecosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2683,
														"src": "26692:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26673:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2728,
												"nodeType": "ExpressionStatement",
												"src": "26673:31:0"
											},
											{
												"expression": {
													"id": 2731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2729,
														"name": "_previousBuyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "26723:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2730,
														"name": "_buyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "26750:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26723:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2732,
												"nodeType": "ExpressionStatement",
												"src": "26723:43:0"
											},
											{
												"expression": {
													"id": 2735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2733,
														"name": "_previousBuyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "26776:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2734,
														"name": "_buyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "26803:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26776:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2736,
												"nodeType": "ExpressionStatement",
												"src": "26776:43:0"
											},
											{
												"expression": {
													"id": 2739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2737,
														"name": "_previousBuyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "26829:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2738,
														"name": "_buyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "26851:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26829:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2740,
												"nodeType": "ExpressionStatement",
												"src": "26829:33:0"
											},
											{
												"expression": {
													"id": 2743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2741,
														"name": "_previousBuyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "26872:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2742,
														"name": "_buyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "26899:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26872:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2744,
												"nodeType": "ExpressionStatement",
												"src": "26872:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2746,
															"name": "marketingFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2677,
															"src": "26954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2747,
															"name": "liquidityFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2679,
															"src": "26968:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2748,
															"name": "teamFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2681,
															"src": "26982:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2749,
															"name": "ecosystemFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2683,
															"src": "26991:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2745,
														"name": "BuyFeesUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "26939:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26939:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2751,
												"nodeType": "EmitStatement",
												"src": "26934:70:0"
											}
										]
									},
									"functionSelector": "e4bf1bed",
									"id": 2753,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2686,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2685,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "26301:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26301:11:0"
										}
									],
									"name": "setBuyTaxes",
									"nameLocation": "26197:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "marketingFee",
												"nameLocation": "26217:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "26209:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "liquidityFee",
												"nameLocation": "26239:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "26231:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "teamFee",
												"nameLocation": "26261:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "26253:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26253:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "ecosystemFee",
												"nameLocation": "26278:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "26270:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26208:83:0"
									},
									"returnParameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26313:0:0"
									},
									"scope": 3050,
									"src": "26188:823:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2830,
										"nodeType": "Block",
										"src": "27143:712:0",
										"statements": [
											{
												"assignments": [
													2767
												],
												"declarations": [
													{
														"constant": false,
														"id": 2767,
														"mutability": "mutable",
														"name": "totalFee",
														"nameLocation": "27161:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2830,
														"src": "27153:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2766,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27153:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2778,
												"initialValue": {
													"arguments": [
														{
															"id": 2776,
															"name": "ecosystemFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2761,
															"src": "27220:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2773,
																	"name": "teamFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2759,
																	"src": "27207:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2770,
																			"name": "liquidityFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "27189:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2768,
																			"name": "marketingFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2755,
																			"src": "27172:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 103,
																		"src": "27172:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27172:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 103,
																"src": "27172:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27172:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "27172:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27172:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27153:80:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2780,
																"name": "totalFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2767,
																"src": "27251:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "323530",
																"id": 2781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27263:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_250_by_1",
																	"typeString": "int_const 250"
																},
																"value": "250"
															},
															"src": "27251:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53756d206f662073656c6c2066656573206d757374206265206c657373207468616e206f7220657175616c20746f20323525",
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27268:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64ead83ef76ea1c4f9fc5432258ce7c66fa12ae4c25d99983db46b0d37058094",
																"typeString": "literal_string \"Sum of sell fees must be less than or equal to 25%\""
															},
															"value": "Sum of sell fees must be less than or equal to 25%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64ead83ef76ea1c4f9fc5432258ce7c66fa12ae4c25d99983db46b0d37058094",
																"typeString": "literal_string \"Sum of sell fees must be less than or equal to 25%\""
															}
														],
														"id": 2779,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27243:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27243:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2785,
												"nodeType": "ExpressionStatement",
												"src": "27243:78:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2787,
															"name": "canChangeTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "27339:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546869732066756e6374696f6e20697320646961626c6564",
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27353:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0",
																"typeString": "literal_string \"This function is diabled\""
															},
															"value": "This function is diabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0",
																"typeString": "literal_string \"This function is diabled\""
															}
														],
														"id": 2786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27331:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27331:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2790,
												"nodeType": "ExpressionStatement",
												"src": "27331:49:0"
											},
											{
												"expression": {
													"id": 2793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2791,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "27391:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2792,
														"name": "marketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2755,
														"src": "27411:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27391:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2794,
												"nodeType": "ExpressionStatement",
												"src": "27391:32:0"
											},
											{
												"expression": {
													"id": 2797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2795,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "27433:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2796,
														"name": "liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2757,
														"src": "27453:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27433:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2798,
												"nodeType": "ExpressionStatement",
												"src": "27433:32:0"
											},
											{
												"expression": {
													"id": 2801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2799,
														"name": "_sellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "27475:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2800,
														"name": "teamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2759,
														"src": "27490:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27475:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2802,
												"nodeType": "ExpressionStatement",
												"src": "27475:22:0"
											},
											{
												"expression": {
													"id": 2805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2803,
														"name": "_sellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "27507:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2804,
														"name": "ecosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2761,
														"src": "27527:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27507:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2806,
												"nodeType": "ExpressionStatement",
												"src": "27507:32:0"
											},
											{
												"expression": {
													"id": 2809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2807,
														"name": "_previousSellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "27558:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2808,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "27586:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27558:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2810,
												"nodeType": "ExpressionStatement",
												"src": "27558:45:0"
											},
											{
												"expression": {
													"id": 2813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2811,
														"name": "_previousSellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "27613:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2812,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "27641:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27613:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2814,
												"nodeType": "ExpressionStatement",
												"src": "27613:45:0"
											},
											{
												"expression": {
													"id": 2817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2815,
														"name": "_previousSellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "27668:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2816,
														"name": "_sellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "27691:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27668:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2818,
												"nodeType": "ExpressionStatement",
												"src": "27668:35:0"
											},
											{
												"expression": {
													"id": 2821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2819,
														"name": "_previousSellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "27713:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2820,
														"name": "_sellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "27741:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27713:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2822,
												"nodeType": "ExpressionStatement",
												"src": "27713:45:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2824,
															"name": "marketingFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2755,
															"src": "27798:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2825,
															"name": "liquidityFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2757,
															"src": "27812:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2826,
															"name": "teamFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2759,
															"src": "27826:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2827,
															"name": "ecosystemFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2761,
															"src": "27835:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2823,
														"name": "SellFeesUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "27782:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27782:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2829,
												"nodeType": "EmitStatement",
												"src": "27777:71:0"
											}
										]
									},
									"functionSelector": "f480fec2",
									"id": 2831,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2764,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2763,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "27131:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27131:11:0"
										}
									],
									"name": "setSellTaxes",
									"nameLocation": "27026:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "marketingFee",
												"nameLocation": "27047:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "27039:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "liquidityFee",
												"nameLocation": "27069:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "27061:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2759,
												"mutability": "mutable",
												"name": "teamFee",
												"nameLocation": "27091:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "27083:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "ecosystemFee",
												"nameLocation": "27108:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "27100:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27038:83:0"
									},
									"returnParameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27143:0:0"
									},
									"scope": 3050,
									"src": "27017:838:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2840,
										"nodeType": "Block",
										"src": "27910:37:0",
										"statements": [
											{
												"expression": {
													"id": 2838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2836,
														"name": "canChangeTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "27920:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27935:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "27920:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2839,
												"nodeType": "ExpressionStatement",
												"src": "27920:20:0"
											}
										]
									},
									"functionSelector": "99a7b9bc",
									"id": 2841,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2834,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2833,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "27889:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27889:11:0"
										}
									],
									"name": "disableTaxChange",
									"nameLocation": "27870:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27886:2:0"
									},
									"returnParameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27910:0:0"
									},
									"scope": 3050,
									"src": "27861:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2852,
										"nodeType": "Block",
										"src": "28040:53:0",
										"statements": [
											{
												"expression": {
													"id": 2850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2848,
														"name": "_ecosystemAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "28050:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2849,
														"name": "ecosystemAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2843,
														"src": "28070:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "28050:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2851,
												"nodeType": "ExpressionStatement",
												"src": "28050:36:0"
											}
										]
									},
									"functionSelector": "db0045ec",
									"id": 2853,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2846,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2845,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28028:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28028:11:0"
										}
									],
									"name": "updateEcosystemAddress",
									"nameLocation": "27962:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "ecosystemAddress",
												"nameLocation": "28001:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "27985:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27985:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27984:34:0"
									},
									"returnParameters": {
										"id": 2847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28040:0:0"
									},
									"scope": 3050,
									"src": "27953:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2864,
										"nodeType": "Block",
										"src": "28190:53:0",
										"statements": [
											{
												"expression": {
													"id": 2862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2860,
														"name": "_marketingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "28200:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2861,
														"name": "marketingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2855,
														"src": "28220:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "28200:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2863,
												"nodeType": "ExpressionStatement",
												"src": "28200:36:0"
											}
										]
									},
									"functionSelector": "2369bf83",
									"id": 2865,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2858,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2857,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28178:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28178:11:0"
										}
									],
									"name": "updateMarketingAddress",
									"nameLocation": "28112:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "marketingAddress",
												"nameLocation": "28151:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 2865,
												"src": "28135:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28135:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28134:34:0"
									},
									"returnParameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28190:0:0"
									},
									"scope": 3050,
									"src": "28103:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2876,
										"nodeType": "Block",
										"src": "28330:43:0",
										"statements": [
											{
												"expression": {
													"id": 2874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2872,
														"name": "_teamAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "28340:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2873,
														"name": "teamAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2867,
														"src": "28355:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "28340:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2875,
												"nodeType": "ExpressionStatement",
												"src": "28340:26:0"
											}
										]
									},
									"functionSelector": "14eb76ac",
									"id": 2877,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2870,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2869,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28318:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28318:11:0"
										}
									],
									"name": "updateTeamAddress",
									"nameLocation": "28262:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "teamAddress",
												"nameLocation": "28296:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2877,
												"src": "28280:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28280:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28279:29:0"
									},
									"returnParameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28330:0:0"
									},
									"scope": 3050,
									"src": "28253:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2888,
										"nodeType": "Block",
										"src": "28457:43:0",
										"statements": [
											{
												"expression": {
													"id": 2886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2884,
														"name": "_lpRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "28467:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2885,
														"name": "lpRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2879,
														"src": "28482:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "28467:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2887,
												"nodeType": "ExpressionStatement",
												"src": "28467:26:0"
											}
										]
									},
									"functionSelector": "cdb3858f",
									"id": 2889,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2882,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2881,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28445:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28445:11:0"
										}
									],
									"name": "updateLpRecipient",
									"nameLocation": "28389:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "lpRecipient",
												"nameLocation": "28423:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2889,
												"src": "28407:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28407:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28406:29:0"
									},
									"returnParameters": {
										"id": 2883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28457:0:0"
									},
									"scope": 3050,
									"src": "28380:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2900,
										"nodeType": "Block",
										"src": "28577:44:0",
										"statements": [
											{
												"expression": {
													"id": 2898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2896,
														"name": "numTokensToSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "28587:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2897,
														"name": "numTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2891,
														"src": "28605:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28587:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2899,
												"nodeType": "ExpressionStatement",
												"src": "28587:27:0"
											}
										]
									},
									"functionSelector": "e315a6da",
									"id": 2901,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2894,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2893,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28565:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28565:11:0"
										}
									],
									"name": "updateNumTokensToSwap",
									"nameLocation": "28515:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2891,
												"mutability": "mutable",
												"name": "numTokens",
												"nameLocation": "28545:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2901,
												"src": "28537:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28536:19:0"
									},
									"returnParameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28577:0:0"
									},
									"scope": 3050,
									"src": "28506:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2924,
										"nodeType": "Block",
										"src": "28707:93:0",
										"statements": [
											{
												"expression": {
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2910,
															"name": "cooldown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "28717:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																"typeString": "struct gainZilla.StrongHandsConfig storage ref"
															}
														},
														"id": 2912,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "enabled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 848,
														"src": "28717:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2913,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2903,
														"src": "28736:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "28717:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2915,
												"nodeType": "ExpressionStatement",
												"src": "28717:26:0"
											},
											{
												"expression": {
													"id": 2922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2916,
															"name": "cooldown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "28753:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																"typeString": "struct gainZilla.StrongHandsConfig storage ref"
															}
														},
														"id": 2918,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 850,
														"src": "28753:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 2921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2919,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2905,
															"src": "28773:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 2920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28784:9:0",
															"subdenomination": "minutes",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "1"
														},
														"src": "28773:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "28753:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2923,
												"nodeType": "ExpressionStatement",
												"src": "28753:40:0"
											}
										]
									},
									"functionSelector": "729cb3f2",
									"id": 2925,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2908,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2907,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28697:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28697:9:0"
										}
									],
									"name": "configureStrongHands",
									"nameLocation": "28636:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "28662:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2925,
												"src": "28657:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2902,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28657:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2905,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "28678:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2925,
												"src": "28671:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2904,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "28671:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28656:31:0"
									},
									"returnParameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28707:0:0"
									},
									"scope": 3050,
									"src": "28627:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2993,
										"nodeType": "Block",
										"src": "28979:365:0",
										"statements": [
											{
												"assignments": [
													2939
												],
												"declarations": [
													{
														"constant": false,
														"id": 2939,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "28997:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2993,
														"src": "28989:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2938,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28989:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2957,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"expression": {
																	"id": 2940,
																	"name": "cooldown",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "29009:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																		"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																	}
																},
																"id": 2941,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "walletList",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 854,
																"src": "29009:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2943,
															"indexExpression": {
																"id": 2942,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2927,
																"src": "29029:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "29009:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 2944,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "29040:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "29040:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29009:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 2955,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29123:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 2956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "29009:115:0",
													"trueExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 2952,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "29104:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "29104:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 2947,
																		"name": "cooldown",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "29071:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																			"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																		}
																	},
																	"id": 2948,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "walletList",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 854,
																	"src": "29071:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2950,
																"indexExpression": {
																	"id": 2949,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2927,
																	"src": "29091:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "29071:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "29071:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29071:49:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28989:135:0"
											},
											{
												"expression": {
													"id": 2963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2958,
														"name": "days_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2930,
														"src": "29143:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3836343030",
																"id": 2961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29165:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "86400"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"id": 2959,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2939,
																"src": "29151:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "29151:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29151:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29143:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2964,
												"nodeType": "ExpressionStatement",
												"src": "29143:28:0"
											},
											{
												"expression": {
													"id": 2967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2965,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2939,
														"src": "29181:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "%=",
													"rightHandSide": {
														"hexValue": "3836343030",
														"id": 2966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29194:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "86400"
													},
													"src": "29181:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2968,
												"nodeType": "ExpressionStatement",
												"src": "29181:18:0"
											},
											{
												"expression": {
													"id": 2974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2969,
														"name": "hours_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2932,
														"src": "29209:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "33363030",
																"id": 2972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29232:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "3600"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																}
															],
															"expression": {
																"id": 2970,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2939,
																"src": "29218:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "29218:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29218:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29209:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2975,
												"nodeType": "ExpressionStatement",
												"src": "29209:28:0"
											},
											{
												"expression": {
													"id": 2978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2976,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2939,
														"src": "29247:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "%=",
													"rightHandSide": {
														"hexValue": "33363030",
														"id": 2977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29260:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "3600"
													},
													"src": "29247:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2979,
												"nodeType": "ExpressionStatement",
												"src": "29247:17:0"
											},
											{
												"expression": {
													"id": 2985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2980,
														"name": "minutes_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2934,
														"src": "29274:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3630",
																"id": 2983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29299:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																}
															],
															"expression": {
																"id": 2981,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2939,
																"src": "29285:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "29285:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29285:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29274:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2986,
												"nodeType": "ExpressionStatement",
												"src": "29274:28:0"
											},
											{
												"expression": {
													"id": 2991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2987,
														"name": "seconds_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2936,
														"src": "29312:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2988,
															"name": "remaining",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2939,
															"src": "29323:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "3630",
															"id": 2989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29335:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "60"
														},
														"src": "29323:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29312:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2992,
												"nodeType": "ExpressionStatement",
												"src": "29312:25:0"
											}
										]
									},
									"functionSelector": "9d82190f",
									"id": 2994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cooldownRemaining",
									"nameLocation": "28815:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "28841:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "28833:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28833:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28832:17:0"
									},
									"returnParameters": {
										"id": 2937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "days_",
												"nameLocation": "28888:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "28880:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "hours_",
												"nameLocation": "28912:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "28904:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "minutes_",
												"nameLocation": "28937:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "28929:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2936,
												"mutability": "mutable",
												"name": "seconds_",
												"nameLocation": "28964:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2994,
												"src": "28956:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28870:108:0"
									},
									"scope": 3050,
									"src": "28806:538:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3048,
										"nodeType": "Block",
										"src": "29402:636:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2999,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "29412:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																"typeString": "struct gainZilla.DiamondFloor storage ref"
															}
														},
														"id": 3000,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "athPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 864,
														"src": "29412:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3001,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29437:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29412:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3005,
												"nodeType": "IfStatement",
												"src": "29408:40:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 3003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29447:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 2998,
													"id": 3004,
													"nodeType": "Return",
													"src": "29440:8:0"
												}
											},
											{
												"assignments": [
													3007
												],
												"declarations": [
													{
														"constant": false,
														"id": 3007,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "29462:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 3048,
														"src": "29454:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3006,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3010,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3008,
														"name": "pairPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1903,
														"src": "29477:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 3009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29477:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29454:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3011,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3007,
															"src": "29506:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 3012,
																"name": "diamondFloor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "29521:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																	"typeString": "struct gainZilla.DiamondFloor storage ref"
																}
															},
															"id": 3013,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "athPrice",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "29521:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29506:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "29839:192:0",
														"subExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 3041,
																				"name": "diamondFloor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 872,
																				"src": "29999:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																					"typeString": "struct gainZilla.DiamondFloor storage ref"
																				}
																			},
																			"id": 3042,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "athPrice",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 864,
																			"src": "29999:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "3130306531",
																					"id": 3038,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "29917:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "100e1"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 3035,
																							"name": "currentPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3007,
																							"src": "29886:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 3032,
																								"name": "diamondFloor",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 872,
																								"src": "29860:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																									"typeString": "struct gainZilla.DiamondFloor storage ref"
																								}
																							},
																							"id": 3033,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "athPrice",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 864,
																							"src": "29860:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 3034,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 119,
																						"src": "29860:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 3036,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29860:39:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3037,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "29860:56:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "29860:63:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "29860:138:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29860:161:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29840:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 3030,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29840:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29840:191:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "29506:525:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 3026,
																			"name": "diamondFloor",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 872,
																			"src": "29754:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																				"typeString": "struct gainZilla.DiamondFloor storage ref"
																			}
																		},
																		"id": 3027,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "athPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 864,
																		"src": "29754:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "3130306531",
																				"id": 3023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29672:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "100e1"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 3019,
																							"name": "diamondFloor",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 872,
																							"src": "29632:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																								"typeString": "struct gainZilla.DiamondFloor storage ref"
																							}
																						},
																						"id": 3020,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "athPrice",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 864,
																						"src": "29632:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 3017,
																						"name": "currentPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3007,
																						"src": "29615:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3018,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 119,
																					"src": "29615:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 3021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "29615:39:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 3022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 180,
																			"src": "29615:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29615:63:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 196,
																	"src": "29615:138:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29615:161:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 3015,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "29595:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 3029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29595:191:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2998,
												"id": 3047,
												"nodeType": "Return",
												"src": "29499:532:0"
											}
										]
									},
									"functionSelector": "80670f3c",
									"id": 3049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ATHvariance",
									"nameLocation": "29359:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29370:2:0"
									},
									"returnParameters": {
										"id": 2998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3049,
												"src": "29394:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2996,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29394:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29393:8:0"
									},
									"scope": 3050,
									"src": "29350:688:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3051,
							"src": "8181:21859:0",
							"usedErrors": []
						}
					],
					"src": "682:29358:0"
				},
				"id": 0
			}
		}
	}
}