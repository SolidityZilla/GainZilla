{
	"id": "8d39a5dad9d020531d8df8da5c871a3c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/gainzilla.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.25;\n\nimport \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ninterface IUniswapV2Router {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint, uint, uint);\n    function swapExactTokensForETH(\n        uint amountIn, \n        uint amountOutMin, \n        address[] calldata path, \n        address to, \n        uint deadline\n    ) external returns (uint[] memory amounts);\n}\n\ninterface IUniswapV2Factory {\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n}\n\ninterface IUniswapV2Pair {\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n}\n\ncontract MemeCoin is ERC20, Ownable {\n    using SafeMath for uint256;\n\n    uint256 private constant TOTAL_SUPPLY = 1_000_000_000 * 10**18;\n    uint256 public maxWalletPercentage = 100;\n    uint256 private constant BP_DIVISOR = 10_000;\n\n    struct TaxRates {\n        uint16 buyLp;\n        uint16 buyEco;\n        uint16 sellLp;\n        uint16 sellEco;\n    }\n    TaxRates public taxRates;\n    uint256 private constant TRANSFER_MULTIPLIER = 35; // Made constant\n\n    uint256 public swapThreshold = TOTAL_SUPPLY / 1000;\n    uint256 public accumulatedLp;\n    uint256 public accumulatedEco;\n    bool private swapping;\n\n    struct CooldownConfig {\n        bool enabled;\n        uint32 duration;\n        mapping(address => uint256) cooldowns;\n    }\n    CooldownConfig public cooldown;\n\n    struct DiamondFloor {\n        bool enabled;\n        uint16 triggerPercentage;\n        uint256 athPrice;\n        bool sellStopped;\n        uint256 blockedAth;\n    }\n    DiamondFloor public diamondFloor;\n\n    address public routerAddress;\n    address public pairAddress;\n    address private constant DEFAULT_ROUTER = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => bool) public isExempt;\n\n    event RouterUpdated(address newRouter);\n    event TaxesCollected(uint256 lpAmount, uint256 ecoAmount);\n    event LiquidityAdded(uint256 tokenAmount, uint256 ethAmount);\n    event MaxWalletUpdated(uint256 newPercentage);\n\n    constructor() ERC20(\"Meme Coin\", \"MEME\") {\n        _transferOwnership(msg.sender);\n        _mint(msg.sender, TOTAL_SUPPLY);\n        routerAddress = DEFAULT_ROUTER;\n        _setupPair();\n        \n        taxRates = TaxRates(0, 0, 0, 0);\n        \n        isExempt[msg.sender] = true;\n        isExempt[address(this)] = true;\n    }\n\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual override {\n        require(amount > 0, \"Transfer amount must be >0\");\n\n        bool isBuy = sender == pairAddress && !isExempt[recipient];\n        bool isSell = recipient == pairAddress && !isExempt[sender];\n\n        // Diamond Floor check\n        if (diamondFloor.enabled && isSell) {\n            require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\");\n            _checkPriceConditions();\n        }\n\n        // Cooldown check\n        if (cooldown.enabled && isSell) {\n            require(block.timestamp >= cooldown.cooldowns[sender], \"Cooldown active\");\n            cooldown.cooldowns[sender] = block.timestamp + cooldown.duration;\n        }\n\n        uint256 taxAmount = _calculateTax(sender, recipient, amount);\n        uint256 netAmount = amount.sub(taxAmount);\n\n        // Max wallet check\n        if (!isExempt[recipient] && !isSell) {\n            require(\n                balanceOf(recipient).add(netAmount) <= _maxWalletSize(),\n                \"Max wallet exceeded\"\n            );\n        }\n\n        // Process taxes\n        if (taxAmount > 0) {\n            super._transfer(sender, address(this), taxAmount);\n            _distributeTax(taxAmount, isBuy, isSell);\n        }\n\n        // Execute transfer\n        super._transfer(sender, recipient, netAmount);\n\n        // Auto LP addition\n        if (_shouldSwapBack()) {\n            _swapAndLiquify();\n        }\n    }\n\n    function _calculateTax(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) private view returns (uint256) {\n        if (isExempt[sender] || isExempt[recipient]) return 0;\n\n        bool isBuy = sender == pairAddress;\n        bool isSell = recipient == pairAddress;\n\n        if (isBuy) {\n            return amount.mul(uint256(taxRates.buyLp).add(taxRates.buyEco)).div(BP_DIVISOR);\n        } \n        if (isSell) {\n            return amount.mul(uint256(taxRates.sellLp).add(taxRates.sellEco)).div(BP_DIVISOR);\n        }\n        \n        uint256 sellTotal = uint256(taxRates.sellLp).add(taxRates.sellEco);\n        uint256 transferTax = sellTotal.mul(TRANSFER_MULTIPLIER).div(10);\n        return amount.mul(transferTax).div(BP_DIVISOR);\n    }\n\n    function _distributeTax(uint256 taxAmount, bool isBuy, bool isSell) private {\n        uint256 lpShare;\n        uint256 ecoShare;\n\n        if (isBuy) {\n            uint256 total = uint256(taxRates.buyLp).add(taxRates.buyEco);\n            require(total > 0, \"Buy tax not set\");\n            lpShare = taxAmount.mul(taxRates.buyLp).div(total);\n        } else if (isSell) {\n            uint256 total = uint256(taxRates.sellLp).add(taxRates.sellEco);\n            require(total > 0, \"Sell tax not set\");\n            lpShare = taxAmount.mul(taxRates.sellLp).div(total);\n        } else {\n            uint256 total = uint256(taxRates.sellLp).add(taxRates.sellEco);\n            require(total > 0, \"Transfer tax not set\");\n            lpShare = taxAmount.mul(taxRates.sellLp).div(total).mul(TRANSFER_MULTIPLIER).div(10);\n        }\n\n        ecoShare = taxAmount.sub(lpShare);\n        accumulatedLp = accumulatedLp.add(lpShare);\n        accumulatedEco = accumulatedEco.add(ecoShare);\n\n        emit TaxesCollected(lpShare, ecoShare);\n    }\n\n    function _checkPriceConditions() private {\n        uint256 currentPrice = pairPrice();\n        if (currentPrice == 0) return;\n\n        if (currentPrice > diamondFloor.athPrice) {\n            diamondFloor.athPrice = currentPrice;\n            diamondFloor.sellStopped = false;\n            return;\n        }\n\n        uint256 thresholdPrice = diamondFloor.athPrice\n            .mul(BP_DIVISOR.sub(diamondFloor.triggerPercentage))\n            .div(BP_DIVISOR);\n\n        if (currentPrice < thresholdPrice) {\n            diamondFloor.sellStopped = true;\n            diamondFloor.blockedAth = diamondFloor.athPrice;\n        }\n\n        if (diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2)) {\n            diamondFloor.sellStopped = false;\n            diamondFloor.athPrice = currentPrice;\n        }\n    }\n\n    function _swapAndLiquify() private {\n        uint256 totalTokens = accumulatedLp.add(accumulatedEco);\n        if (totalTokens < swapThreshold) return;\n\n        swapping = true;\n        uint256 initialBalance = address(this).balance;\n\n        // Process ecosystem tax\n        _swapTokensForETH(accumulatedEco);\n        uint256 ecoETH = address(this).balance.sub(initialBalance);\n        payable(owner()).transfer(ecoETH);\n\n        // Process LP tax\n        uint256 lpTokens = accumulatedLp;\n        uint256 half = lpTokens.div(2);\n        _swapTokensForETH(half);\n        \n        uint256 lpETH = address(this).balance.sub(ecoETH);\n        _addLiquidity(lpTokens.sub(half), lpETH);\n\n        accumulatedLp = 0;\n        accumulatedEco = 0;\n        swapping = false;\n    }\n\n    function pairPrice() public view returns (uint256) {\n        (uint112 reserve0, uint112 reserve1,) = IUniswapV2Pair(pairAddress).getReserves();\n        if (reserve0 == 0 || reserve1 == 0) return 0;\n        \n        return IUniswapV2Pair(pairAddress).token0() == address(this) ?\n            uint256(reserve1).mul(1e18).div(uint256(reserve0)) :\n            uint256(reserve0).mul(1e18).div(uint256(reserve1));\n    }\n\n    function cooldownRemaining(address account) public view returns (\n        uint256 days_, \n        uint256 hours_, \n        uint256 minutes_, \n        uint256 seconds_\n    ) {\n        uint256 remaining = cooldown.cooldowns[account] > block.timestamp ? \n            cooldown.cooldowns[account].sub(block.timestamp) : 0;\n        \n        days_ = remaining.div(86400);\n        remaining %= 86400;\n        hours_ = remaining.div(3600);\n        remaining %= 3600;\n        minutes_ = remaining.div(60);\n        seconds_ = remaining % 60;\n    }\n\n    function priceDeviation() public view returns (int256) {\n        if (diamondFloor.athPrice == 0) return 0;\n        uint256 currentPrice = pairPrice();\n        return currentPrice > diamondFloor.athPrice ?\n            int256(currentPrice.sub(diamondFloor.athPrice).mul(1e18).div(diamondFloor.athPrice)) :\n            -int256(diamondFloor.athPrice.sub(currentPrice).mul(1e18).div(diamondFloor.athPrice));\n    }\n\n    function setRouter(address newRouter) external onlyOwner {\n        routerAddress = newRouter;\n        _setupPair();\n        emit RouterUpdated(newRouter);\n    }\n\n    function setTaxRates(uint16 buyLp, uint16 buyEco, uint16 sellLp, uint16 sellEco) external onlyOwner {\n        require(buyLp + buyEco <= 2500, \"Max 25% buy tax\");\n        require(sellLp + sellEco <= 2500, \"Max 25% sell tax\");\n        taxRates = TaxRates(buyLp, buyEco, sellLp, sellEco);\n    }\n\n    function setThreshold(uint256 threshold) external onlyOwner {\n        swapThreshold = threshold;\n    }\n\n    function configureCooldown(bool enabled, uint32 duration) external onlyOwner {\n        cooldown.enabled = enabled;\n        cooldown.duration = duration * 1 minutes;\n    }\n\n    function configureDiamondFloor(bool enabled, uint16 triggerPercent) external onlyOwner {\n        require(triggerPercent <= BP_DIVISOR, \"Invalid percentage\");\n        diamondFloor.enabled = enabled;\n        diamondFloor.triggerPercentage = triggerPercent;\n    }\n\n    function setExempt(address account, bool exempt) external onlyOwner {\n        isExempt[account] = exempt;\n    }\n\n    function _setupPair() private {\n        pairAddress = IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())\n            .createPair(address(this), IUniswapV2Router(routerAddress).WETH());\n    }\n\n    function _swapTokensForETH(uint256 amount) private {\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = IUniswapV2Router(routerAddress).WETH();\n\n        _approve(address(this), routerAddress, amount);\n        IUniswapV2Router(routerAddress).swapExactTokensForETH(\n            amount,\n            0,\n            path,\n            address(this),\n            block.timestamp\n        );\n    }\n\n    function _addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\n        _approve(address(this), routerAddress, tokenAmount);\n        IUniswapV2Router(routerAddress).addLiquidityETH{value: ethAmount}(\n            address(this),\n            tokenAmount,\n            0,\n            0,\n            owner(),\n            block.timestamp\n        );\n        emit LiquidityAdded(tokenAmount, ethAmount);\n    }\n\n    function _maxWalletSize() public view returns (uint256) {\n        return TOTAL_SUPPLY.mul(maxWalletPercentage).div(BP_DIVISOR);\n    }\n\n    function _shouldSwapBack() private view returns (bool) {\n        return !swapping &&\n            accumulatedLp.add(accumulatedEco) >= swapThreshold &&\n            msg.sender != pairAddress;\n    }\n\n    function setMaxWalletPercentage(uint256 percentage) external onlyOwner {\n        require(percentage >= 100, \"Max 1% wallet limit\");\n        maxWalletPercentage = percentage;\n        emit MaxWalletUpdated(percentage);\n    }\n\n    receive() external payable {}\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bff2674b5b8364a938ce76c69d94c8c6bbdde56662337050e0d72e56c50a81ee64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bff2674b5b8364a938ce76c69d94c8c6bbdde56662337050e0d72e56c50a81ee64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF CALLCODE PUSH8 0x4B5B8364A938CE76 0xC6 SWAP14 SWAP5 0xC8 0xC6 0xBB 0xDD 0xE5 PUSH7 0x62337050E0D72E JUMP 0xC5 EXP DUP2 0xEE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "482:6210:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bff2674b5b8364a938ce76c69d94c8c6bbdde56662337050e0d72e56c50a81ee64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF CALLCODE PUSH8 0x4B5B8364A938CE76 0xC6 SWAP14 SWAP5 0xC8 0xC6 0xBB 0xDD 0xE5 PUSH7 0x62337050E0D72E JUMP 0xC5 EXP DUP2 0xEE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "482:6210:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bff2674b5b8364a938ce76c69d94c8c6bbdde56662337050e0d72e56c50a81ee64736f6c63430008190033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts@4.9.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@4.9.3/utils/Context.sol",
								"contracts/gainzilla.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts@4.9.3/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:862   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":709:712   */\n  dup7\n    /* \"#utility.yul\":702:706   */\n  0x20\n    /* \"#utility.yul\":697:699   */\n  dup6\n    /* \"#utility.yul\":689:695   */\n  dup9\n    /* \"#utility.yul\":685:700   */\n  add\n    /* \"#utility.yul\":681:707   */\n  add\n    /* \"#utility.yul\":678:713   */\n  gt\n    /* \"#utility.yul\":675:730   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":726:727   */\n  0x00\n    /* \"#utility.yul\":723:724   */\n  dup1\n    /* \"#utility.yul\":716:728   */\n  revert\n    /* \"#utility.yul\":675:730   */\ntag_24:\n    /* \"#utility.yul\":783:785   */\n  dup4\n    /* \"#utility.yul\":776:780   */\n  0x20\n    /* \"#utility.yul\":768:774   */\n  dup8\n    /* \"#utility.yul\":764:781   */\n  add\n    /* \"#utility.yul\":757:761   */\n  0x20\n    /* \"#utility.yul\":749:755   */\n  dup4\n    /* \"#utility.yul\":745:762   */\n  add\n    /* \"#utility.yul\":739:786   */\n  mcopy\n    /* \"#utility.yul\":830:831   */\n  0x00\n    /* \"#utility.yul\":823:827   */\n  0x20\n    /* \"#utility.yul\":818:820   */\n  dup6\n    /* \"#utility.yul\":810:816   */\n  dup4\n    /* \"#utility.yul\":806:821   */\n  add\n    /* \"#utility.yul\":802:828   */\n  add\n    /* \"#utility.yul\":795:832   */\n  mstore\n    /* \"#utility.yul\":850:856   */\n  dup1\n    /* \"#utility.yul\":841:856   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:862   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":867:1429   */\ntag_3:\n    /* \"#utility.yul\":966:972   */\n  0x00\n    /* \"#utility.yul\":974:980   */\n  dup1\n    /* \"#utility.yul\":1027:1029   */\n  0x40\n    /* \"#utility.yul\":1015:1024   */\n  dup4\n    /* \"#utility.yul\":1006:1013   */\n  dup6\n    /* \"#utility.yul\":1002:1025   */\n  sub\n    /* \"#utility.yul\":998:1030   */\n  slt\n    /* \"#utility.yul\":995:1047   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1043:1044   */\n  0x00\n    /* \"#utility.yul\":1040:1041   */\n  dup1\n    /* \"#utility.yul\":1033:1045   */\n  revert\n    /* \"#utility.yul\":995:1047   */\ntag_26:\n    /* \"#utility.yul\":1070:1086   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1135:1149   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1132:1166   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1162:1163   */\n  0x00\n    /* \"#utility.yul\":1159:1160   */\n  dup1\n    /* \"#utility.yul\":1152:1164   */\n  revert\n    /* \"#utility.yul\":1132:1166   */\ntag_27:\n    /* \"#utility.yul\":1185:1246   */\n  tag_28\n    /* \"#utility.yul\":1238:1245   */\n  dup7\n    /* \"#utility.yul\":1229:1235   */\n  dup4\n    /* \"#utility.yul\":1218:1227   */\n  dup8\n    /* \"#utility.yul\":1214:1236   */\n  add\n    /* \"#utility.yul\":1185:1246   */\n  tag_11\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1175:1246   */\n  swap4\n  pop\n    /* \"#utility.yul\":1292:1294   */\n  0x20\n    /* \"#utility.yul\":1281:1290   */\n  dup6\n    /* \"#utility.yul\":1277:1295   */\n  add\n    /* \"#utility.yul\":1271:1296   */\n  mload\n    /* \"#utility.yul\":1255:1296   */\n  swap2\n  pop\n    /* \"#utility.yul\":1321:1323   */\n  dup1\n    /* \"#utility.yul\":1311:1319   */\n  dup3\n    /* \"#utility.yul\":1308:1324   */\n  gt\n    /* \"#utility.yul\":1305:1341   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1337:1338   */\n  0x00\n    /* \"#utility.yul\":1334:1335   */\n  dup1\n    /* \"#utility.yul\":1327:1339   */\n  revert\n    /* \"#utility.yul\":1305:1341   */\ntag_29:\n  pop\n    /* \"#utility.yul\":1360:1423   */\n  tag_30\n    /* \"#utility.yul\":1415:1422   */\n  dup6\n    /* \"#utility.yul\":1404:1412   */\n  dup3\n    /* \"#utility.yul\":1393:1402   */\n  dup7\n    /* \"#utility.yul\":1389:1413   */\n  add\n    /* \"#utility.yul\":1360:1423   */\n  tag_11\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1350:1423   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":867:1429   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1434:1814   */\ntag_12:\n    /* \"#utility.yul\":1513:1514   */\n  0x01\n    /* \"#utility.yul\":1509:1521   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1556:1568   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1577:1638   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1631:1635   */\n  0x7f\n    /* \"#utility.yul\":1623:1629   */\n  dup3\n    /* \"#utility.yul\":1619:1636   */\n  and\n    /* \"#utility.yul\":1609:1636   */\n  swap2\n  pop\n    /* \"#utility.yul\":1577:1638   */\ntag_32:\n    /* \"#utility.yul\":1684:1686   */\n  0x20\n    /* \"#utility.yul\":1676:1682   */\n  dup3\n    /* \"#utility.yul\":1673:1687   */\n  lt\n    /* \"#utility.yul\":1653:1671   */\n  dup2\n    /* \"#utility.yul\":1650:1688   */\n  sub\n    /* \"#utility.yul\":1647:1808   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1730:1740   */\n  0x4e487b71\n    /* \"#utility.yul\":1725:1728   */\n  0xe0\n    /* \"#utility.yul\":1721:1741   */\n  shl\n    /* \"#utility.yul\":1718:1719   */\n  0x00\n    /* \"#utility.yul\":1711:1742   */\n  mstore\n    /* \"#utility.yul\":1765:1769   */\n  0x22\n    /* \"#utility.yul\":1762:1763   */\n  0x04\n    /* \"#utility.yul\":1755:1770   */\n  mstore\n    /* \"#utility.yul\":1793:1797   */\n  0x24\n    /* \"#utility.yul\":1790:1791   */\n  0x00\n    /* \"#utility.yul\":1783:1798   */\n  revert\n    /* \"#utility.yul\":1647:1808   */\ntag_33:\n  pop\n    /* \"#utility.yul\":1434:1814   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1945:2463   */\ntag_14:\n    /* \"#utility.yul\":2047:2049   */\n  0x1f\n    /* \"#utility.yul\":2042:2045   */\n  dup3\n    /* \"#utility.yul\":2039:2050   */\n  gt\n    /* \"#utility.yul\":2036:2457   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":2083:2088   */\n  dup1\n    /* \"#utility.yul\":2080:2081   */\n  0x00\n    /* \"#utility.yul\":2073:2089   */\n  mstore\n    /* \"#utility.yul\":2127:2131   */\n  0x20\n    /* \"#utility.yul\":2124:2125   */\n  0x00\n    /* \"#utility.yul\":2114:2132   */\n  keccak256\n    /* \"#utility.yul\":2197:2199   */\n  0x1f\n    /* \"#utility.yul\":2185:2195   */\n  dup5\n    /* \"#utility.yul\":2181:2200   */\n  add\n    /* \"#utility.yul\":2178:2179   */\n  0x05\n    /* \"#utility.yul\":2174:2201   */\n  shr\n    /* \"#utility.yul\":2168:2172   */\n  dup2\n    /* \"#utility.yul\":2164:2202   */\n  add\n    /* \"#utility.yul\":2233:2237   */\n  0x20\n    /* \"#utility.yul\":2221:2231   */\n  dup6\n    /* \"#utility.yul\":2218:2238   */\n  lt\n    /* \"#utility.yul\":2215:2262   */\n  iszero\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":2256:2260   */\n  dup1\n    /* \"#utility.yul\":2215:2262   */\ntag_37:\n    /* \"#utility.yul\":2311:2313   */\n  0x1f\n    /* \"#utility.yul\":2306:2309   */\n  dup5\n    /* \"#utility.yul\":2302:2314   */\n  add\n    /* \"#utility.yul\":2299:2300   */\n  0x05\n    /* \"#utility.yul\":2295:2315   */\n  shr\n    /* \"#utility.yul\":2289:2293   */\n  dup3\n    /* \"#utility.yul\":2285:2316   */\n  add\n    /* \"#utility.yul\":2275:2316   */\n  swap2\n  pop\n    /* \"#utility.yul\":2366:2447   */\ntag_38:\n    /* \"#utility.yul\":2384:2386   */\n  dup2\n    /* \"#utility.yul\":2377:2382   */\n  dup2\n    /* \"#utility.yul\":2374:2387   */\n  lt\n    /* \"#utility.yul\":2366:2447   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2443:2444   */\n  0x00\n    /* \"#utility.yul\":2429:2445   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2410:2411   */\n  0x01\n    /* \"#utility.yul\":2399:2412   */\n  add\n    /* \"#utility.yul\":2366:2447   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":2370:2373   */\n  pop\n  pop\n    /* \"#utility.yul\":2036:2457   */\ntag_36:\n    /* \"#utility.yul\":1945:2463   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2639:3984   */\ntag_7:\n    /* \"#utility.yul\":2759:2769   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2781:2811   */\n  dup2\n  gt\n    /* \"#utility.yul\":2778:2834   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2814:2832   */\n  tag_44\n  tag_10\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":2843:2940   */\n  tag_45\n    /* \"#utility.yul\":2933:2939   */\n  dup2\n    /* \"#utility.yul\":2893:2931   */\n  tag_46\n    /* \"#utility.yul\":2925:2929   */\n  dup5\n    /* \"#utility.yul\":2919:2930   */\n  sload\n    /* \"#utility.yul\":2893:2931   */\n  tag_12\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2887:2891   */\n  dup5\n    /* \"#utility.yul\":2843:2940   */\n  tag_14\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2995:2999   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3052:3054   */\n  0x1f\n    /* \"#utility.yul\":3041:3055   */\n  dup4\n  gt\n    /* \"#utility.yul\":3069:3070   */\n  0x01\n    /* \"#utility.yul\":3064:3727   */\n  dup2\n  eq\n  tag_48\n  jumpi\n    /* \"#utility.yul\":3771:3772   */\n  0x00\n    /* \"#utility.yul\":3788:3794   */\n  dup5\n    /* \"#utility.yul\":3785:3874   */\n  iszero\n  tag_49\n  jumpi\n  pop\n    /* \"#utility.yul\":3840:3859   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3834:3860   */\n  mload\n    /* \"#utility.yul\":3785:3874   */\ntag_49:\n  not(0x00)\n    /* \"#utility.yul\":2596:2597   */\n  0x03\n    /* \"#utility.yul\":2592:2603   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2588:2612   */\n  shr\n    /* \"#utility.yul\":2584:2613   */\n  not\n    /* \"#utility.yul\":2574:2614   */\n  and\n    /* \"#utility.yul\":2620:2621   */\n  0x01\n    /* \"#utility.yul\":2616:2627   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2571:2628   */\n  or\n    /* \"#utility.yul\":3887:3968   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3034:3978   */\n  jump(tag_47)\n    /* \"#utility.yul\":3064:3727   */\ntag_48:\n    /* \"#utility.yul\":1892:1893   */\n  0x00\n    /* \"#utility.yul\":1885:1899   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1929:1933   */\n  0x20\n    /* \"#utility.yul\":1916:1934   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3100:3120   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3218:3454   */\ntag_52:\n    /* \"#utility.yul\":3232:3239   */\n  dup3\n    /* \"#utility.yul\":3229:3230   */\n  dup2\n    /* \"#utility.yul\":3226:3240   */\n  lt\n    /* \"#utility.yul\":3218:3454   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3321:3340   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3315:3341   */\n  mload\n    /* \"#utility.yul\":3300:3342   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3413:3440   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3381:3382   */\n  0x01\n    /* \"#utility.yul\":3369:3383   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3248:3267   */\n  dup5\n  add\n    /* \"#utility.yul\":3218:3454   */\n  jump(tag_52)\ntag_54:\n    /* \"#utility.yul\":3222:3225   */\n  pop\n    /* \"#utility.yul\":3482:3488   */\n  dup6\n    /* \"#utility.yul\":3473:3480   */\n  dup3\n    /* \"#utility.yul\":3470:3489   */\n  lt\n    /* \"#utility.yul\":3467:3668   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3543:3562   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3537:3563   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3626:3627   */\n  0x03\n    /* \"#utility.yul\":3622:3636   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3638:3641   */\n  0xf8\n    /* \"#utility.yul\":3618:3642   */\n  and\n    /* \"#utility.yul\":3614:3651   */\n  shr\n    /* \"#utility.yul\":3610:3652   */\n  not\n    /* \"#utility.yul\":3595:3653   */\n  and\n    /* \"#utility.yul\":3580:3654   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3467:3668   */\ntag_55:\n  pop\n  pop\n    /* \"#utility.yul\":3714:3715   */\n  0x01\n    /* \"#utility.yul\":3705:3711   */\n  dup5\n    /* \"#utility.yul\":3702:3703   */\n  0x01\n    /* \"#utility.yul\":3698:3712   */\n  shl\n    /* \"#utility.yul\":3694:3716   */\n  add\n    /* \"#utility.yul\":3688:3692   */\n  dup6\n    /* \"#utility.yul\":3681:3717   */\n  sstore\n    /* \"#utility.yul\":3034:3978   */\ntag_47:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2639:3984   */\n  pop\n  pop\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1039:1053   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1032:1054   */\n      iszero\n        /* \"#utility.yul\":1014:1055   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1002:1004   */\n      0x20\n        /* \"#utility.yul\":987:1005   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":874:1061   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1212:1237   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1200:1202   */\n      0x20\n        /* \"#utility.yul\":1185:1203   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1066:1243   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1723:1759   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1711:1713   */\n      0x20\n        /* \"#utility.yul\":1696:1714   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1581:1765   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3040:3042   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3022:3043   */\n      mstore\n        /* \"#utility.yul\":3079:3081   */\n      0x25\n        /* \"#utility.yul\":3059:3077   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3052:3082   */\n      mstore\n        /* \"#utility.yul\":3118:3152   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3098:3116   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3091:3153   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3169:3187   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3162:3197   */\n      mstore\n        /* \"#utility.yul\":3214:3233   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3428:3449   */\n      mstore\n        /* \"#utility.yul\":3485:3487   */\n      0x24\n        /* \"#utility.yul\":3465:3483   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3458:3488   */\n      mstore\n        /* \"#utility.yul\":3524:3558   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3504:3522   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3497:3559   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3575:3593   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3568:3602   */\n      mstore\n        /* \"#utility.yul\":3619:3638   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3244:3644   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3851:3853   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3833:3854   */\n      mstore\n        /* \"#utility.yul\":3890:3892   */\n      0x22\n        /* \"#utility.yul\":3870:3888   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3863:3893   */\n      mstore\n        /* \"#utility.yul\":3929:3963   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3909:3927   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3902:3964   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3980:3998   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3973:4005   */\n      mstore\n        /* \"#utility.yul\":4022:4041   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3649:4047   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1212:1237   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1185:1203   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4254:4256   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4236:4257   */\n      mstore\n        /* \"#utility.yul\":4293:4295   */\n      0x1d\n        /* \"#utility.yul\":4273:4291   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4266:4296   */\n      mstore\n        /* \"#utility.yul\":4332:4363   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4312:4330   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4305:4364   */\n      mstore\n        /* \"#utility.yul\":4381:4399   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4052:4405   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4612:4614   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4594:4615   */\n      mstore\n        /* \"#utility.yul\":4651:4653   */\n      0x25\n        /* \"#utility.yul\":4631:4649   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4624:4654   */\n      mstore\n        /* \"#utility.yul\":4690:4724   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4670:4688   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4663:4725   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4741:4759   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4734:4769   */\n      mstore\n        /* \"#utility.yul\":4786:4805   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4410:4811   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5018:5020   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5000:5021   */\n      mstore\n        /* \"#utility.yul\":5057:5059   */\n      0x23\n        /* \"#utility.yul\":5037:5055   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5030:5060   */\n      mstore\n        /* \"#utility.yul\":5096:5130   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5076:5094   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5069:5131   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5147:5165   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5140:5173   */\n      mstore\n        /* \"#utility.yul\":5190:5209   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4816:5215   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5422:5424   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5404:5425   */\n      mstore\n        /* \"#utility.yul\":5461:5463   */\n      0x26\n        /* \"#utility.yul\":5441:5459   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5434:5464   */\n      mstore\n        /* \"#utility.yul\":5500:5534   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5480:5498   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5473:5535   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5551:5569   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5544:5580   */\n      mstore\n        /* \"#utility.yul\":5597:5616   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5220:5622   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1212:1237   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1185:1203   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:432   */\n    tag_18:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_140:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_144:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:869   */\n    tag_21:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_146:\n        /* \"#utility.yul\":783:812   */\n      tag_147\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_140\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":859:861   */\n      0x20\n        /* \"#utility.yul\":844:862   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":831:863   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:869   */\n      jump\t// out\n        /* \"#utility.yul\":1248:1576   */\n    tag_31:\n        /* \"#utility.yul\":1325:1331   */\n      0x00\n        /* \"#utility.yul\":1333:1339   */\n      dup1\n        /* \"#utility.yul\":1341:1347   */\n      0x00\n        /* \"#utility.yul\":1394:1396   */\n      0x60\n        /* \"#utility.yul\":1382:1391   */\n      dup5\n        /* \"#utility.yul\":1373:1380   */\n      dup7\n        /* \"#utility.yul\":1369:1392   */\n      sub\n        /* \"#utility.yul\":1365:1397   */\n      slt\n        /* \"#utility.yul\":1362:1414   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1410:1411   */\n      0x00\n        /* \"#utility.yul\":1407:1408   */\n      dup1\n        /* \"#utility.yul\":1400:1412   */\n      revert\n        /* \"#utility.yul\":1362:1414   */\n    tag_151:\n        /* \"#utility.yul\":1433:1462   */\n      tag_152\n        /* \"#utility.yul\":1452:1461   */\n      dup5\n        /* \"#utility.yul\":1433:1462   */\n      tag_140\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1423:1462   */\n      swap3\n      pop\n        /* \"#utility.yul\":1481:1519   */\n      tag_153\n        /* \"#utility.yul\":1515:1517   */\n      0x20\n        /* \"#utility.yul\":1504:1513   */\n      dup6\n        /* \"#utility.yul\":1500:1518   */\n      add\n        /* \"#utility.yul\":1481:1519   */\n      tag_140\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1471:1519   */\n      swap2\n      pop\n        /* \"#utility.yul\":1566:1568   */\n      0x40\n        /* \"#utility.yul\":1555:1564   */\n      dup5\n        /* \"#utility.yul\":1551:1569   */\n      add\n        /* \"#utility.yul\":1538:1570   */\n      calldataload\n        /* \"#utility.yul\":1528:1570   */\n      swap1\n      pop\n        /* \"#utility.yul\":1248:1576   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1770:1956   */\n    tag_44:\n        /* \"#utility.yul\":1829:1835   */\n      0x00\n        /* \"#utility.yul\":1882:1884   */\n      0x20\n        /* \"#utility.yul\":1870:1879   */\n      dup3\n        /* \"#utility.yul\":1861:1868   */\n      dup5\n        /* \"#utility.yul\":1857:1880   */\n      sub\n        /* \"#utility.yul\":1853:1885   */\n      slt\n        /* \"#utility.yul\":1850:1902   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1898:1899   */\n      0x00\n        /* \"#utility.yul\":1895:1896   */\n      dup1\n        /* \"#utility.yul\":1888:1900   */\n      revert\n        /* \"#utility.yul\":1850:1902   */\n    tag_156:\n        /* \"#utility.yul\":1921:1950   */\n      tag_157\n        /* \"#utility.yul\":1940:1949   */\n      dup3\n        /* \"#utility.yul\":1921:1950   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1911:1950   */\n      swap4\n        /* \"#utility.yul\":1770:1956   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1961:2221   */\n    tag_60:\n        /* \"#utility.yul\":2029:2035   */\n      0x00\n        /* \"#utility.yul\":2037:2043   */\n      dup1\n        /* \"#utility.yul\":2090:2092   */\n      0x40\n        /* \"#utility.yul\":2078:2087   */\n      dup4\n        /* \"#utility.yul\":2069:2076   */\n      dup6\n        /* \"#utility.yul\":2065:2088   */\n      sub\n        /* \"#utility.yul\":2061:2093   */\n      slt\n        /* \"#utility.yul\":2058:2110   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2106:2107   */\n      0x00\n        /* \"#utility.yul\":2103:2104   */\n      dup1\n        /* \"#utility.yul\":2096:2108   */\n      revert\n        /* \"#utility.yul\":2058:2110   */\n    tag_159:\n        /* \"#utility.yul\":2129:2158   */\n      tag_160\n        /* \"#utility.yul\":2148:2157   */\n      dup4\n        /* \"#utility.yul\":2129:2158   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2119:2158   */\n      swap2\n      pop\n        /* \"#utility.yul\":2177:2215   */\n      tag_161\n        /* \"#utility.yul\":2211:2213   */\n      0x20\n        /* \"#utility.yul\":2200:2209   */\n      dup5\n        /* \"#utility.yul\":2196:2214   */\n      add\n        /* \"#utility.yul\":2177:2215   */\n      tag_140\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2167:2215   */\n      swap1\n      pop\n        /* \"#utility.yul\":1961:2221   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2226:2606   */\n    tag_65:\n        /* \"#utility.yul\":2305:2306   */\n      0x01\n        /* \"#utility.yul\":2301:2313   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2348:2360   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2369:2430   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2423:2427   */\n      0x7f\n        /* \"#utility.yul\":2415:2421   */\n      dup3\n        /* \"#utility.yul\":2411:2428   */\n      and\n        /* \"#utility.yul\":2401:2428   */\n      swap2\n      pop\n        /* \"#utility.yul\":2369:2430   */\n    tag_163:\n        /* \"#utility.yul\":2476:2478   */\n      0x20\n        /* \"#utility.yul\":2468:2474   */\n      dup3\n        /* \"#utility.yul\":2465:2479   */\n      lt\n        /* \"#utility.yul\":2445:2463   */\n      dup2\n        /* \"#utility.yul\":2442:2480   */\n      sub\n        /* \"#utility.yul\":2439:2600   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2522:2532   */\n      0x4e487b71\n        /* \"#utility.yul\":2517:2520   */\n      0xe0\n        /* \"#utility.yul\":2513:2533   */\n      shl\n        /* \"#utility.yul\":2510:2511   */\n      0x00\n        /* \"#utility.yul\":2503:2534   */\n      mstore\n        /* \"#utility.yul\":2557:2561   */\n      0x22\n        /* \"#utility.yul\":2554:2555   */\n      0x04\n        /* \"#utility.yul\":2547:2562   */\n      mstore\n        /* \"#utility.yul\":2585:2589   */\n      0x24\n        /* \"#utility.yul\":2582:2583   */\n      0x00\n        /* \"#utility.yul\":2575:2590   */\n      revert\n        /* \"#utility.yul\":2439:2600   */\n    tag_164:\n      pop\n        /* \"#utility.yul\":2226:2606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2611:2833   */\n    tag_88:\n        /* \"#utility.yul\":2676:2685   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2697:2707   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2694:2827   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2749:2759   */\n      0x4e487b71\n        /* \"#utility.yul\":2744:2747   */\n      0xe0\n        /* \"#utility.yul\":2740:2760   */\n      shl\n        /* \"#utility.yul\":2737:2738   */\n      0x00\n        /* \"#utility.yul\":2730:2761   */\n      mstore\n        /* \"#utility.yul\":2784:2788   */\n      0x11\n        /* \"#utility.yul\":2781:2782   */\n      0x04\n        /* \"#utility.yul\":2774:2789   */\n      mstore\n        /* \"#utility.yul\":2812:2816   */\n      0x24\n        /* \"#utility.yul\":2809:2810   */\n      0x00\n        /* \"#utility.yul\":2802:2817   */\n      revert\n\n    auxdata: 0xa264697066735822122090e4af7cd9ffb9b46c49a42bc69d404577b9bd08df0979ba0c2be62d9183cde364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_469": {
									"entryPoint": null,
									"id": 469,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 386,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 79,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3986:7",
										"nodeType": "YulBlock",
										"src": "0:3986:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:7",
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:7",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:7",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:7",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nativeSrc": "66:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nativeSrc": "56:31:7",
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nativeSrc": "56:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:7",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:7",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nativeSrc": "96:15:7",
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nativeSrc": "96:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:7",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:7",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nativeSrc": "120:15:7",
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nativeSrc": "120:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nativeSrc": "210:652:7",
													"nodeType": "YulBlock",
													"src": "210:652:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:7",
																"nodeType": "YulBlock",
																"src": "259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:7"
																			},
																			"nativeSrc": "261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:7"
																		},
																		"nativeSrc": "261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:7",
																						"nodeType": "YulLiteral",
																						"src": "246:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:7"
																				},
																				"nativeSrc": "234:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:7"
																		},
																		"nativeSrc": "230:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:7"
																},
																"nativeSrc": "223:35:7",
																"nodeType": "YulFunctionCall",
																"src": "223:35:7"
															},
															"nativeSrc": "220:55:7",
															"nodeType": "YulIf",
															"src": "220:55:7"
														},
														{
															"nativeSrc": "284:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:7"
																},
																"nativeSrc": "294:13:7",
																"nodeType": "YulFunctionCall",
																"src": "294:13:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:7",
																	"nodeType": "YulTypedName",
																	"src": "288:2:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:7",
																				"nodeType": "YulLiteral",
																				"src": "334:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:7",
																				"nodeType": "YulLiteral",
																				"src": "338:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:7"
																		},
																		"nativeSrc": "330:10:7",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:7",
																		"nodeType": "YulLiteral",
																		"src": "342:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:7"
																},
																"nativeSrc": "326:18:7",
																"nodeType": "YulFunctionCall",
																"src": "326:18:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:7",
																	"nodeType": "YulTypedName",
																	"src": "320:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:7",
																"nodeType": "YulBlock",
																"src": "367:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:7"
																			},
																			"nativeSrc": "369:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:7"
																		},
																		"nativeSrc": "369:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:7"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:7"
																},
																"nativeSrc": "356:10:7",
																"nodeType": "YulFunctionCall",
																"src": "356:10:7"
															},
															"nativeSrc": "353:36:7",
															"nodeType": "YulIf",
															"src": "353:36:7"
														},
														{
															"nativeSrc": "398:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:7",
																		"nodeType": "YulLiteral",
																		"src": "412:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:7"
																},
																"nativeSrc": "408:7:7",
																"nodeType": "YulFunctionCall",
																"src": "408:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:7",
																	"nodeType": "YulTypedName",
																	"src": "402:2:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:7",
																		"nodeType": "YulLiteral",
																		"src": "444:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:7"
																},
																"nativeSrc": "438:9:7",
																"nodeType": "YulFunctionCall",
																"src": "438:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:7",
																	"nodeType": "YulTypedName",
																	"src": "428:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:7",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:7",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:7",
																										"nodeType": "YulLiteral",
																										"src": "506:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:7"
																								},
																								"nativeSrc": "498:13:7",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:7"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:7",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:7"
																						},
																						"nativeSrc": "494:22:7",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:7",
																						"nodeType": "YulLiteral",
																						"src": "518:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:7"
																				},
																				"nativeSrc": "490:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:7"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:7"
																		},
																		"nativeSrc": "486:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:7"
																},
																"nativeSrc": "474:53:7",
																"nodeType": "YulFunctionCall",
																"src": "474:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:7",
																	"nodeType": "YulTypedName",
																	"src": "460:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:7",
																"nodeType": "YulBlock",
																"src": "586:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:7"
																			},
																			"nativeSrc": "588:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:7"
																		},
																		"nativeSrc": "588:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:7"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:7"
																		},
																		"nativeSrc": "542:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:7"
																		},
																		"nativeSrc": "562:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:7"
																},
																"nativeSrc": "539:46:7",
																"nodeType": "YulFunctionCall",
																"src": "539:46:7"
															},
															"nativeSrc": "536:72:7",
															"nodeType": "YulIf",
															"src": "536:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:7",
																		"nodeType": "YulLiteral",
																		"src": "624:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:7"
																},
																"nativeSrc": "617:22:7",
																"nodeType": "YulFunctionCall",
																"src": "617:22:7"
															},
															"nativeSrc": "617:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:7"
																},
																"nativeSrc": "648:18:7",
																"nodeType": "YulFunctionCall",
																"src": "648:18:7"
															},
															"nativeSrc": "648:18:7",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:7"
														},
														{
															"body": {
																"nativeSrc": "714:16:7",
																"nodeType": "YulBlock",
																"src": "714:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "723:1:7",
																					"nodeType": "YulLiteral",
																					"src": "723:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "726:1:7",
																					"nodeType": "YulLiteral",
																					"src": "726:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "716:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "716:6:7"
																			},
																			"nativeSrc": "716:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "716:12:7"
																		},
																		"nativeSrc": "716:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "716:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "689:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "689:6:7"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "697:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "697:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "685:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "685:3:7"
																				},
																				"nativeSrc": "685:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "685:15:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "702:4:7",
																				"nodeType": "YulLiteral",
																				"src": "702:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "681:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "681:3:7"
																		},
																		"nativeSrc": "681:26:7",
																		"nodeType": "YulFunctionCall",
																		"src": "681:26:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "709:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "709:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "678:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "678:2:7"
																},
																"nativeSrc": "678:35:7",
																"nodeType": "YulFunctionCall",
																"src": "678:35:7"
															},
															"nativeSrc": "675:55:7",
															"nodeType": "YulIf",
															"src": "675:55:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "749:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "749:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "757:4:7",
																				"nodeType": "YulLiteral",
																				"src": "757:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "745:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "745:3:7"
																		},
																		"nativeSrc": "745:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "745:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "768:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "776:4:7",
																				"nodeType": "YulLiteral",
																				"src": "776:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "764:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "764:3:7"
																		},
																		"nativeSrc": "764:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "764:17:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "783:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "783:2:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "739:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "739:5:7"
																},
																"nativeSrc": "739:47:7",
																"nodeType": "YulFunctionCall",
																"src": "739:47:7"
															},
															"nativeSrc": "739:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "739:47:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "810:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:7"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "818:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "818:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "806:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "806:3:7"
																				},
																				"nativeSrc": "806:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "806:15:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "823:4:7",
																				"nodeType": "YulLiteral",
																				"src": "823:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "802:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:7"
																		},
																		"nativeSrc": "802:26:7",
																		"nodeType": "YulFunctionCall",
																		"src": "802:26:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:7",
																		"nodeType": "YulLiteral",
																		"src": "830:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "795:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:7"
																},
																"nativeSrc": "795:37:7",
																"nodeType": "YulFunctionCall",
																"src": "795:37:7"
															},
															"nativeSrc": "795:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "795:37:7"
														},
														{
															"nativeSrc": "841:15:7",
															"nodeType": "YulAssignment",
															"src": "841:15:7",
															"value": {
																"name": "memPtr",
																"nativeSrc": "850:6:7",
																"nodeType": "YulIdentifier",
																"src": "850:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "841:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "841:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:716:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:7",
														"nodeType": "YulTypedName",
														"src": "184:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:7",
														"nodeType": "YulTypedName",
														"src": "192:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:7",
														"nodeType": "YulTypedName",
														"src": "200:5:7",
														"type": ""
													}
												],
												"src": "146:716:7"
											},
											{
												"body": {
													"nativeSrc": "985:444:7",
													"nodeType": "YulBlock",
													"src": "985:444:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1031:16:7",
																"nodeType": "YulBlock",
																"src": "1031:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1043:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1043:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1033:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1033:6:7"
																			},
																			"nativeSrc": "1033:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1033:12:7"
																		},
																		"nativeSrc": "1033:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1033:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1006:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1006:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1015:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1015:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1002:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1002:3:7"
																		},
																		"nativeSrc": "1002:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1002:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1027:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1027:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "998:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "998:3:7"
																},
																"nativeSrc": "998:32:7",
																"nodeType": "YulFunctionCall",
																"src": "998:32:7"
															},
															"nativeSrc": "995:52:7",
															"nodeType": "YulIf",
															"src": "995:52:7"
														},
														{
															"nativeSrc": "1056:30:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1056:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1076:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1076:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1070:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1070:5:7"
																},
																"nativeSrc": "1070:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1070:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1060:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1060:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1095:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1095:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1113:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1113:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1117:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1117:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1109:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1109:3:7"
																		},
																		"nativeSrc": "1109:10:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1109:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1121:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1121:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1105:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1105:3:7"
																},
																"nativeSrc": "1105:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1105:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1099:2:7",
																	"nodeType": "YulTypedName",
																	"src": "1099:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1150:16:7",
																"nodeType": "YulBlock",
																"src": "1150:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1159:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1159:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1162:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1162:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1152:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1152:6:7"
																			},
																			"nativeSrc": "1152:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1152:12:7"
																		},
																		"nativeSrc": "1152:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1152:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1138:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1138:6:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1146:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "1146:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1135:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1135:2:7"
																},
																"nativeSrc": "1135:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1135:14:7"
															},
															"nativeSrc": "1132:34:7",
															"nodeType": "YulIf",
															"src": "1132:34:7"
														},
														{
															"nativeSrc": "1175:71:7",
															"nodeType": "YulAssignment",
															"src": "1175:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1218:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1218:9:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1229:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1229:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1214:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1214:3:7"
																		},
																		"nativeSrc": "1214:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1214:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1238:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "1238:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1185:28:7",
																	"nodeType": "YulIdentifier",
																	"src": "1185:28:7"
																},
																"nativeSrc": "1185:61:7",
																"nodeType": "YulFunctionCall",
																"src": "1185:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1175:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1175:6:7"
																}
															]
														},
														{
															"nativeSrc": "1255:41:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1281:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1281:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1292:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1292:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1277:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1277:3:7"
																		},
																		"nativeSrc": "1277:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1277:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1271:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1271:5:7"
																},
																"nativeSrc": "1271:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1271:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1259:8:7",
																	"nodeType": "YulTypedName",
																	"src": "1259:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1325:16:7",
																"nodeType": "YulBlock",
																"src": "1325:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1334:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1334:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1337:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1337:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1327:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1327:6:7"
																			},
																			"nativeSrc": "1327:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1327:12:7"
																		},
																		"nativeSrc": "1327:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1327:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1311:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1311:8:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1321:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "1321:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1308:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1308:2:7"
																},
																"nativeSrc": "1308:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1308:16:7"
															},
															"nativeSrc": "1305:36:7",
															"nodeType": "YulIf",
															"src": "1305:36:7"
														},
														{
															"nativeSrc": "1350:73:7",
															"nodeType": "YulAssignment",
															"src": "1350:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1393:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1404:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1404:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1389:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:7"
																		},
																		"nativeSrc": "1389:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1389:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1415:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "1415:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1360:28:7",
																	"nodeType": "YulIdentifier",
																	"src": "1360:28:7"
																},
																"nativeSrc": "1360:63:7",
																"nodeType": "YulFunctionCall",
																"src": "1360:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1350:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "867:562:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "943:9:7",
														"nodeType": "YulTypedName",
														"src": "943:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "954:7:7",
														"nodeType": "YulTypedName",
														"src": "954:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "966:6:7",
														"nodeType": "YulTypedName",
														"src": "966:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "974:6:7",
														"nodeType": "YulTypedName",
														"src": "974:6:7",
														"type": ""
													}
												],
												"src": "867:562:7"
											},
											{
												"body": {
													"nativeSrc": "1489:325:7",
													"nodeType": "YulBlock",
													"src": "1489:325:7",
													"statements": [
														{
															"nativeSrc": "1499:22:7",
															"nodeType": "YulAssignment",
															"src": "1499:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1513:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1513:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1516:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1516:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1509:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1509:3:7"
																},
																"nativeSrc": "1509:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1509:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1499:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1499:6:7"
																}
															]
														},
														{
															"nativeSrc": "1530:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1530:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1560:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1560:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1566:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1566:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1556:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1556:3:7"
																},
																"nativeSrc": "1556:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1556:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1534:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1534:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:31:7",
																"nodeType": "YulBlock",
																"src": "1607:31:7",
																"statements": [
																	{
																		"nativeSrc": "1609:27:7",
																		"nodeType": "YulAssignment",
																		"src": "1609:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1623:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1623:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1631:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1631:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1619:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1619:3:7"
																			},
																			"nativeSrc": "1619:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1619:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1609:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1609:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1587:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1587:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1580:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1580:6:7"
																},
																"nativeSrc": "1580:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1580:26:7"
															},
															"nativeSrc": "1577:61:7",
															"nodeType": "YulIf",
															"src": "1577:61:7"
														},
														{
															"body": {
																"nativeSrc": "1697:111:7",
																"nodeType": "YulBlock",
																"src": "1697:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1718:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1718:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1725:3:7",
																							"nodeType": "YulLiteral",
																							"src": "1725:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1730:10:7",
																							"nodeType": "YulLiteral",
																							"src": "1730:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1721:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1721:3:7"
																					},
																					"nativeSrc": "1721:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1721:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1711:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:7"
																			},
																			"nativeSrc": "1711:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1711:31:7"
																		},
																		"nativeSrc": "1711:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1711:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1762:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1762:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1765:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1765:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1755:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1755:6:7"
																			},
																			"nativeSrc": "1755:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1755:15:7"
																		},
																		"nativeSrc": "1755:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1755:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1790:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1790:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1793:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1793:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1783:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1783:6:7"
																			},
																			"nativeSrc": "1783:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1783:15:7"
																		},
																		"nativeSrc": "1783:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1783:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1653:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1653:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1676:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1684:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1684:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1673:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1673:2:7"
																		},
																		"nativeSrc": "1673:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1673:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1650:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1650:2:7"
																},
																"nativeSrc": "1650:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1650:38:7"
															},
															"nativeSrc": "1647:161:7",
															"nodeType": "YulIf",
															"src": "1647:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1434:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1469:4:7",
														"nodeType": "YulTypedName",
														"src": "1469:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1478:6:7",
														"nodeType": "YulTypedName",
														"src": "1478:6:7",
														"type": ""
													}
												],
												"src": "1434:380:7"
											},
											{
												"body": {
													"nativeSrc": "1875:65:7",
													"nodeType": "YulBlock",
													"src": "1875:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1892:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1892:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1895:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1895:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1885:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1885:6:7"
																},
																"nativeSrc": "1885:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1885:14:7"
															},
															"nativeSrc": "1885:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "1885:14:7"
														},
														{
															"nativeSrc": "1908:26:7",
															"nodeType": "YulAssignment",
															"src": "1908:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1926:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1926:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1929:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1929:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1916:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1916:9:7"
																},
																"nativeSrc": "1916:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1916:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1908:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1908:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1819:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1858:3:7",
														"nodeType": "YulTypedName",
														"src": "1858:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1866:4:7",
														"nodeType": "YulTypedName",
														"src": "1866:4:7",
														"type": ""
													}
												],
												"src": "1819:121:7"
											},
											{
												"body": {
													"nativeSrc": "2026:437:7",
													"nodeType": "YulBlock",
													"src": "2026:437:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2059:398:7",
																"nodeType": "YulBlock",
																"src": "2059:398:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2080:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2080:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2083:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2083:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2073:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2073:6:7"
																			},
																			"nativeSrc": "2073:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2073:16:7"
																		},
																		"nativeSrc": "2073:16:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2073:16:7"
																	},
																	{
																		"nativeSrc": "2102:30:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2102:30:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2124:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2124:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2127:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2127:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2114:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2114:9:7"
																			},
																			"nativeSrc": "2114:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2114:18:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2106:4:7",
																				"nodeType": "YulTypedName",
																				"src": "2106:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2145:57:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2145:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2168:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "2168:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2178:1:7",
																							"nodeType": "YulLiteral",
																							"src": "2178:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2185:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "2185:10:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2197:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2197:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2181:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2181:3:7"
																							},
																							"nativeSrc": "2181:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2181:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2174:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2174:3:7"
																					},
																					"nativeSrc": "2174:27:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2174:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2164:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2164:3:7"
																			},
																			"nativeSrc": "2164:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2164:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2149:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2149:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2239:23:7",
																			"nodeType": "YulBlock",
																			"src": "2239:23:7",
																			"statements": [
																				{
																					"nativeSrc": "2241:19:7",
																					"nodeType": "YulAssignment",
																					"src": "2241:19:7",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2256:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2256:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2241:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "2241:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2221:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "2221:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2233:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2233:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2218:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "2218:2:7"
																			},
																			"nativeSrc": "2218:20:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2218:20:7"
																		},
																		"nativeSrc": "2215:47:7",
																		"nodeType": "YulIf",
																		"src": "2215:47:7"
																	},
																	{
																		"nativeSrc": "2275:41:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2275:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2289:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "2289:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2299:1:7",
																							"nodeType": "YulLiteral",
																							"src": "2299:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2306:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2306:3:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2311:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2311:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2302:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2302:3:7"
																							},
																							"nativeSrc": "2302:12:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2302:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2295:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2295:3:7"
																					},
																					"nativeSrc": "2295:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2295:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2285:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2285:3:7"
																			},
																			"nativeSrc": "2285:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2285:31:7"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2279:2:7",
																				"nodeType": "YulTypedName",
																				"src": "2279:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2329:24:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2329:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2342:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "2342:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2333:5:7",
																				"nodeType": "YulTypedName",
																				"src": "2333:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2427:20:7",
																			"nodeType": "YulBlock",
																			"src": "2427:20:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2436:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2436:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2443:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2443:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2429:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2429:6:7"
																						},
																						"nativeSrc": "2429:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2429:16:7"
																					},
																					"nativeSrc": "2429:16:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "2429:16:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2377:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2377:5:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2384:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "2384:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2374:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "2374:2:7"
																			},
																			"nativeSrc": "2374:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2374:13:7"
																		},
																		"nativeSrc": "2366:81:7",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2388:26:7",
																			"nodeType": "YulBlock",
																			"src": "2388:26:7",
																			"statements": [
																				{
																					"nativeSrc": "2390:22:7",
																					"nodeType": "YulAssignment",
																					"src": "2390:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2403:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2403:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2410:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2410:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2399:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2399:3:7"
																						},
																						"nativeSrc": "2399:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2399:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2390:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "2390:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2370:3:7",
																			"nodeType": "YulBlock",
																			"src": "2370:3:7",
																			"statements": []
																		},
																		"src": "2366:81:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2042:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2042:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2047:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2047:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2039:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2039:2:7"
																},
																"nativeSrc": "2039:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2039:11:7"
															},
															"nativeSrc": "2036:421:7",
															"nodeType": "YulIf",
															"src": "2036:421:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1945:518:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1998:5:7",
														"nodeType": "YulTypedName",
														"src": "1998:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2005:3:7",
														"nodeType": "YulTypedName",
														"src": "2005:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2010:10:7",
														"nodeType": "YulTypedName",
														"src": "2010:10:7",
														"type": ""
													}
												],
												"src": "1945:518:7"
											},
											{
												"body": {
													"nativeSrc": "2553:81:7",
													"nodeType": "YulBlock",
													"src": "2553:81:7",
													"statements": [
														{
															"nativeSrc": "2563:65:7",
															"nodeType": "YulAssignment",
															"src": "2563:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2578:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2578:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2596:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2596:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2599:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2599:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2592:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2592:3:7"
																								},
																								"nativeSrc": "2592:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2592:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2609:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2609:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2605:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2605:3:7"
																								},
																								"nativeSrc": "2605:6:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2605:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2588:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2588:3:7"
																						},
																						"nativeSrc": "2588:24:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2588:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2584:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2584:3:7"
																				},
																				"nativeSrc": "2584:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2574:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2574:3:7"
																		},
																		"nativeSrc": "2574:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2623:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2623:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2616:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2616:3:7"
																		},
																		"nativeSrc": "2616:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2616:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2571:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2571:2:7"
																},
																"nativeSrc": "2571:57:7",
																"nodeType": "YulFunctionCall",
																"src": "2571:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2563:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2563:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2468:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2530:4:7",
														"nodeType": "YulTypedName",
														"src": "2530:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2536:3:7",
														"nodeType": "YulTypedName",
														"src": "2536:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2544:4:7",
														"nodeType": "YulTypedName",
														"src": "2544:4:7",
														"type": ""
													}
												],
												"src": "2468:166:7"
											},
											{
												"body": {
													"nativeSrc": "2735:1249:7",
													"nodeType": "YulBlock",
													"src": "2735:1249:7",
													"statements": [
														{
															"nativeSrc": "2745:24:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2745:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2765:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2765:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2759:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2759:5:7"
																},
																"nativeSrc": "2759:10:7",
																"nodeType": "YulFunctionCall",
																"src": "2759:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2749:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2749:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2812:22:7",
																"nodeType": "YulBlock",
																"src": "2812:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2814:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2814:16:7"
																			},
																			"nativeSrc": "2814:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2814:18:7"
																		},
																		"nativeSrc": "2814:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2814:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2784:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2800:2:7",
																						"nodeType": "YulLiteral",
																						"src": "2800:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2804:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2804:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2796:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2796:3:7"
																				},
																				"nativeSrc": "2796:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2796:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2808:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2808:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2792:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2792:3:7"
																		},
																		"nativeSrc": "2792:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2792:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2781:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2781:2:7"
																},
																"nativeSrc": "2781:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2781:30:7"
															},
															"nativeSrc": "2778:56:7",
															"nodeType": "YulIf",
															"src": "2778:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2887:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2887:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2925:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2925:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2919:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2919:5:7"
																				},
																				"nativeSrc": "2919:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2919:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2893:25:7",
																			"nodeType": "YulIdentifier",
																			"src": "2893:25:7"
																		},
																		"nativeSrc": "2893:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2893:38:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2933:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2933:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2843:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2843:43:7"
																},
																"nativeSrc": "2843:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2843:97:7"
															},
															"nativeSrc": "2843:97:7",
															"nodeType": "YulExpressionStatement",
															"src": "2843:97:7"
														},
														{
															"nativeSrc": "2949:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2949:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2966:1:7",
																"nodeType": "YulLiteral",
																"src": "2966:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2953:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2953:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2976:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2976:23:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2995:4:7",
																"nodeType": "YulLiteral",
																"src": "2995:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "2980:11:7",
																	"nodeType": "YulTypedName",
																	"src": "2980:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3008:17:7",
															"nodeType": "YulAssignment",
															"src": "3008:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3021:4:7",
																"nodeType": "YulLiteral",
																"src": "3021:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3008:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3008:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3071:656:7",
																		"nodeType": "YulBlock",
																		"src": "3071:656:7",
																		"statements": [
																			{
																				"nativeSrc": "3085:35:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3085:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3104:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "3104:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3116:2:7",
																									"nodeType": "YulLiteral",
																									"src": "3116:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3112:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "3112:3:7"
																							},
																							"nativeSrc": "3112:7:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3112:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3100:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3100:3:7"
																					},
																					"nativeSrc": "3100:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3100:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3089:7:7",
																						"nodeType": "YulTypedName",
																						"src": "3089:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3133:49:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3133:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3177:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3177:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3147:29:7",
																						"nodeType": "YulIdentifier",
																						"src": "3147:29:7"
																					},
																					"nativeSrc": "3147:35:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3147:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3137:6:7",
																						"nodeType": "YulTypedName",
																						"src": "3137:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3195:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3195:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3204:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3204:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3199:1:7",
																						"nodeType": "YulTypedName",
																						"src": "3199:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3282:172:7",
																					"nodeType": "YulBlock",
																					"src": "3282:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3307:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "3307:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3325:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "3325:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3330:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "3330:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3321:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "3321:3:7"
																												},
																												"nativeSrc": "3321:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "3321:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3315:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "3315:5:7"
																										},
																										"nativeSrc": "3315:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3315:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3300:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3300:6:7"
																								},
																								"nativeSrc": "3300:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3300:42:7"
																							},
																							"nativeSrc": "3300:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "3300:42:7"
																						},
																						{
																							"nativeSrc": "3359:24:7",
																							"nodeType": "YulAssignment",
																							"src": "3359:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3373:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "3373:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3381:1:7",
																										"nodeType": "YulLiteral",
																										"src": "3381:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3369:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3369:3:7"
																								},
																								"nativeSrc": "3369:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3369:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3359:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3359:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3400:40:7",
																							"nodeType": "YulAssignment",
																							"src": "3400:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3417:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "3417:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3428:11:7",
																										"nodeType": "YulIdentifier",
																										"src": "3428:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3413:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3413:3:7"
																								},
																								"nativeSrc": "3413:27:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3413:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3400:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "3400:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3229:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "3229:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3232:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "3232:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3226:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "3226:2:7"
																					},
																					"nativeSrc": "3226:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3226:14:7"
																				},
																				"nativeSrc": "3218:236:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3241:28:7",
																					"nodeType": "YulBlock",
																					"src": "3241:28:7",
																					"statements": [
																						{
																							"nativeSrc": "3243:24:7",
																							"nodeType": "YulAssignment",
																							"src": "3243:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3252:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "3252:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3255:11:7",
																										"nodeType": "YulIdentifier",
																										"src": "3255:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3248:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3248:3:7"
																								},
																								"nativeSrc": "3248:19:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3248:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3243:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "3243:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3222:3:7",
																					"nodeType": "YulBlock",
																					"src": "3222:3:7",
																					"statements": []
																				},
																				"src": "3218:236:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "3502:166:7",
																					"nodeType": "YulBlock",
																					"src": "3502:166:7",
																					"statements": [
																						{
																							"nativeSrc": "3520:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3520:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3547:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "3547:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3552:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3552:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3543:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3543:3:7"
																										},
																										"nativeSrc": "3543:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3543:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3537:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3537:5:7"
																								},
																								"nativeSrc": "3537:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3537:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3524:9:7",
																									"nodeType": "YulTypedName",
																									"src": "3524:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3587:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "3587:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3599:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3599:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3626:1:7",
																																				"nodeType": "YulLiteral",
																																				"src": "3626:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3629:6:7",
																																				"nodeType": "YulIdentifier",
																																				"src": "3629:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3622:3:7",
																																			"nodeType": "YulIdentifier",
																																			"src": "3622:3:7"
																																		},
																																		"nativeSrc": "3622:14:7",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3622:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3638:3:7",
																																		"nodeType": "YulLiteral",
																																		"src": "3638:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3618:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "3618:3:7"
																																},
																																"nativeSrc": "3618:24:7",
																																"nodeType": "YulFunctionCall",
																																"src": "3618:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3648:1:7",
																																		"nodeType": "YulLiteral",
																																		"src": "3648:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3644:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "3644:3:7"
																																},
																																"nativeSrc": "3644:6:7",
																																"nodeType": "YulFunctionCall",
																																"src": "3644:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3614:3:7",
																															"nodeType": "YulIdentifier",
																															"src": "3614:3:7"
																														},
																														"nativeSrc": "3614:37:7",
																														"nodeType": "YulFunctionCall",
																														"src": "3614:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3610:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "3610:3:7"
																												},
																												"nativeSrc": "3610:42:7",
																												"nodeType": "YulFunctionCall",
																												"src": "3610:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3595:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3595:3:7"
																										},
																										"nativeSrc": "3595:58:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3595:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3580:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3580:6:7"
																								},
																								"nativeSrc": "3580:74:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3580:74:7"
																							},
																							"nativeSrc": "3580:74:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "3580:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3473:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "3473:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3482:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "3482:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3470:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "3470:2:7"
																					},
																					"nativeSrc": "3470:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3470:19:7"
																				},
																				"nativeSrc": "3467:201:7",
																				"nodeType": "YulIf",
																				"src": "3467:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3688:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3688:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3702:1:7",
																											"nodeType": "YulLiteral",
																											"src": "3702:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3705:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "3705:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3698:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "3698:3:7"
																									},
																									"nativeSrc": "3698:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "3698:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3714:1:7",
																									"nodeType": "YulLiteral",
																									"src": "3714:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3694:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "3694:3:7"
																							},
																							"nativeSrc": "3694:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3694:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3681:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3681:6:7"
																					},
																					"nativeSrc": "3681:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3681:36:7"
																				},
																				"nativeSrc": "3681:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3681:36:7"
																			}
																		]
																	},
																	"nativeSrc": "3064:663:7",
																	"nodeType": "YulCase",
																	"src": "3064:663:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3069:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3069:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3744:234:7",
																		"nodeType": "YulBlock",
																		"src": "3744:234:7",
																		"statements": [
																			{
																				"nativeSrc": "3758:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3758:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3771:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3771:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3762:5:7",
																						"nodeType": "YulTypedName",
																						"src": "3762:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3807:67:7",
																					"nodeType": "YulBlock",
																					"src": "3807:67:7",
																					"statements": [
																						{
																							"nativeSrc": "3825:35:7",
																							"nodeType": "YulAssignment",
																							"src": "3825:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3844:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "3844:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3849:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3849:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3840:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3840:3:7"
																										},
																										"nativeSrc": "3840:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3840:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3834:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3834:5:7"
																								},
																								"nativeSrc": "3834:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3834:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3825:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3825:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3788:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3788:6:7"
																				},
																				"nativeSrc": "3785:89:7",
																				"nodeType": "YulIf",
																				"src": "3785:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3894:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3894:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3953:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3953:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3960:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3960:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3900:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "3900:52:7"
																							},
																							"nativeSrc": "3900:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3900:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3887:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3887:6:7"
																					},
																					"nativeSrc": "3887:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3887:81:7"
																				},
																				"nativeSrc": "3887:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3887:81:7"
																			}
																		]
																	},
																	"nativeSrc": "3736:242:7",
																	"nodeType": "YulCase",
																	"src": "3736:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3052:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3052:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3041:2:7"
																},
																"nativeSrc": "3041:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3041:14:7"
															},
															"nativeSrc": "3034:944:7",
															"nodeType": "YulSwitch",
															"src": "3034:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2639:1345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2720:4:7",
														"nodeType": "YulTypedName",
														"src": "2720:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2726:3:7",
														"nodeType": "YulTypedName",
														"src": "2726:3:7",
														"type": ""
													}
												],
												"src": "2639:1345:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610ab3380380610ab383398101604081905261002e916100eb565b600361003a83826101ce565b50600461004782826101ce565b50505061028d565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610072575f80fd5b81516001600160401b038082111561008c5761008c61004f565b604051601f8301601f19908116603f011681019082821181831017156100b4576100b461004f565b816040528381528660208588010111156100cc575f80fd5b8360208701602083015e5f602085830101528094505050505092915050565b5f80604083850312156100fc575f80fd5b82516001600160401b0380821115610112575f80fd5b61011e86838701610063565b93506020850151915080821115610133575f80fd5b5061014085828601610063565b9150509250929050565b600181811c9082168061015e57607f821691505b60208210810361017c57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101c957805f5260205f20601f840160051c810160208510156101a75750805b601f840160051c820191505b818110156101c6575f81556001016101b3565b50505b505050565b81516001600160401b038111156101e7576101e761004f565b6101fb816101f5845461014a565b84610182565b602080601f83116001811461022e575f84156102175750858301515b5f19600386901b1c1916600185901b178555610285565b5f85815260208120601f198616915b8281101561025c5788860151825594840194600190910190840161023d565b508582101561027957878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6108198061029a5f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106da565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610702565b610244565b604051601281526020016100bf565b6100db61012d3660046106da565b610267565b6100ef61014036600461073b565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106da565b610297565b6100db6101833660046106da565b610316565b6100ef61019636600461075b565b610323565b6060600380546101aa9061078c565b80601f01602080910402602001604051908101604052809291908181526020018280546101d69061078c565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107c4565b61034d565b6060600480546101aa9061078c565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106d5575f80fd5b919050565b5f80604083850312156106eb575f80fd5b6106f4836106bf565b946020939093013593505050565b5f805f60608486031215610714575f80fd5b61071d846106bf565b925061072b602085016106bf565b9150604084013590509250925092565b5f6020828403121561074b575f80fd5b610754826106bf565b9392505050565b5f806040838503121561076c575f80fd5b610775836106bf565b9150610783602084016106bf565b90509250929050565b600181811c908216806107a057607f821691505b6020821081036107be57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea264697066735822122090e4af7cd9ffb9b46c49a42bc69d404577b9bd08df0979ba0c2be62d9183cde364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAB3 CODESIZE SUB DUP1 PUSH2 0xAB3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xEB JUMP JUMPDEST PUSH1 0x3 PUSH2 0x3A DUP4 DUP3 PUSH2 0x1CE JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x47 DUP3 DUP3 PUSH2 0x1CE JUMP JUMPDEST POP POP POP PUSH2 0x28D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x72 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x8C JUMPI PUSH2 0x8C PUSH2 0x4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xB4 JUMPI PUSH2 0xB4 PUSH2 0x4F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xCC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x112 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11E DUP7 DUP4 DUP8 ADD PUSH2 0x63 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x133 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 DUP6 DUP3 DUP7 ADD PUSH2 0x63 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1C9 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1A7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C6 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E7 JUMPI PUSH2 0x1E7 PUSH2 0x4F JUMP JUMPDEST PUSH2 0x1FB DUP2 PUSH2 0x1F5 DUP5 SLOAD PUSH2 0x14A JUMP JUMPDEST DUP5 PUSH2 0x182 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x22E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x217 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x285 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x25C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x23D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x279 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x819 DUP1 PUSH2 0x29A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x75B JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x78C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78C JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x714 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x71D DUP5 PUSH2 0x6BF JUMP JUMPDEST SWAP3 POP PUSH2 0x72B PUSH1 0x20 DUP6 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x754 DUP3 PUSH2 0x6BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x76C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x775 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP PUSH2 0x783 PUSH1 0x20 DUP5 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xE4 0xAF PUSH29 0xD9FFB9B46C49A42BC69D404577B9BD08DF0979BA0C2BE62D9183CDE364 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "1532:11312:2:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:2;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:7;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:716;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:7;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:7;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;709:3;702:4;697:2;689:6;685:15;681:26;678:35;675:55;;;726:1;723;716:12;675:55;783:2;776:4;768:6;764:17;757:4;749:6;745:17;739:47;830:1;823:4;818:2;810:6;806:15;802:26;795:37;850:6;841:15;;;;;;146:716;;;;:::o;867:562::-;966:6;974;1027:2;1015:9;1006:7;1002:23;998:32;995:52;;;1043:1;1040;1033:12;995:52;1070:16;;-1:-1:-1;;;;;1135:14:7;;;1132:34;;;1162:1;1159;1152:12;1132:34;1185:61;1238:7;1229:6;1218:9;1214:22;1185:61;:::i;:::-;1175:71;;1292:2;1281:9;1277:18;1271:25;1255:41;;1321:2;1311:8;1308:16;1305:36;;;1337:1;1334;1327:12;1305:36;;1360:63;1415:7;1404:8;1393:9;1389:24;1360:63;:::i;:::-;1350:73;;;867:562;;;;;:::o;1434:380::-;1513:1;1509:12;;;;1556;;;1577:61;;1631:4;1623:6;1619:17;1609:27;;1577:61;1684:2;1676:6;1673:14;1653:18;1650:38;1647:161;;1730:10;1725:3;1721:20;1718:1;1711:31;1765:4;1762:1;1755:15;1793:4;1790:1;1783:15;1647:161;;1434:380;;;:::o;1945:518::-;2047:2;2042:3;2039:11;2036:421;;;2083:5;2080:1;2073:16;2127:4;2124:1;2114:18;2197:2;2185:10;2181:19;2178:1;2174:27;2168:4;2164:38;2233:4;2221:10;2218:20;2215:47;;;-1:-1:-1;2256:4:7;2215:47;2311:2;2306:3;2302:12;2299:1;2295:20;2289:4;2285:31;2275:41;;2366:81;2384:2;2377:5;2374:13;2366:81;;;2443:1;2429:16;;2410:1;2399:13;2366:81;;;2370:3;;2036:421;1945:518;;;:::o;2639:1345::-;2759:10;;-1:-1:-1;;;;;2781:30:7;;2778:56;;;2814:18;;:::i;:::-;2843:97;2933:6;2893:38;2925:4;2919:11;2893:38;:::i;:::-;2887:4;2843:97;:::i;:::-;2995:4;;3052:2;3041:14;;3069:1;3064:663;;;;3771:1;3788:6;3785:89;;;-1:-1:-1;3840:19:7;;;3834:26;3785:89;-1:-1:-1;;2596:1:7;2592:11;;;2588:24;2584:29;2574:40;2620:1;2616:11;;;2571:57;3887:81;;3034:944;;3064:663;1892:1;1885:14;;;1929:4;1916:18;;-1:-1:-1;;3100:20:7;;;3218:236;3232:7;3229:1;3226:14;3218:236;;;3321:19;;;3315:26;3300:42;;3413:27;;;;3381:1;3369:14;;;;3248:19;;3218:236;;;3222:3;3482:6;3473:7;3470:19;3467:201;;;3543:19;;;3537:26;-1:-1:-1;;3626:1:7;3622:14;;;3638:3;3618:24;3614:37;3610:42;3595:58;3580:74;;3467:201;;;3714:1;3705:6;3702:1;3698:14;3694:22;3688:4;3681:36;3034:944;;;;;2639:1345;;:::o;:::-;1532:11312:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1010": {
									"entryPoint": null,
									"id": 1010,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_945": {
									"entryPoint": 845,
									"id": 945,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_999": {
									"entryPoint": null,
									"id": 999,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1126": {
									"entryPoint": null,
									"id": 1126,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_988": {
									"entryPoint": 1136,
									"id": 988,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_771": {
									"entryPoint": 1256,
									"id": 771,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_566": {
									"entryPoint": 803,
									"id": 566,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_591": {
									"entryPoint": 555,
									"id": 591,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_523": {
									"entryPoint": null,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_499": {
									"entryPoint": null,
									"id": 499,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_694": {
									"entryPoint": 663,
									"id": 694,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_653": {
									"entryPoint": 615,
									"id": 653,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_479": {
									"entryPoint": 411,
									"id": 479,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_489": {
									"entryPoint": 648,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_509": {
									"entryPoint": null,
									"id": 509,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_624": {
									"entryPoint": 580,
									"id": 624,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_548": {
									"entryPoint": 790,
									"id": 548,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5624:7",
										"nodeType": "YulBlock",
										"src": "0:5624:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:7",
													"nodeType": "YulBlock",
													"src": "135:297:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:7",
																		"nodeType": "YulLiteral",
																		"src": "163:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:7"
																},
																"nativeSrc": "145:21:7",
																"nodeType": "YulFunctionCall",
																"src": "145:21:7"
															},
															"nativeSrc": "145:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:7"
														},
														{
															"nativeSrc": "175:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:7"
																},
																"nativeSrc": "189:13:7",
																"nodeType": "YulFunctionCall",
																"src": "189:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:7",
																	"nodeType": "YulTypedName",
																	"src": "179:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:7",
																				"nodeType": "YulLiteral",
																				"src": "233:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:7"
																		},
																		"nativeSrc": "218:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:7"
																},
																"nativeSrc": "211:34:7",
																"nodeType": "YulFunctionCall",
																"src": "211:34:7"
															},
															"nativeSrc": "211:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:7",
																				"nodeType": "YulLiteral",
																				"src": "275:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:7"
																		},
																		"nativeSrc": "260:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:7",
																				"nodeType": "YulLiteral",
																				"src": "292:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:7"
																		},
																		"nativeSrc": "280:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:7"
																},
																"nativeSrc": "254:50:7",
																"nodeType": "YulFunctionCall",
																"src": "254:50:7"
															},
															"nativeSrc": "254:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:7"
																				},
																				"nativeSrc": "324:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:7",
																				"nodeType": "YulLiteral",
																				"src": "348:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:7"
																		},
																		"nativeSrc": "320:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:7",
																		"nodeType": "YulLiteral",
																		"src": "353:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:7"
																},
																"nativeSrc": "313:42:7",
																"nodeType": "YulFunctionCall",
																"src": "313:42:7"
															},
															"nativeSrc": "313:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:7"
														},
														{
															"nativeSrc": "364:62:7",
															"nodeType": "YulAssignment",
															"src": "364:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:7",
																								"nodeType": "YulLiteral",
																								"src": "407:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:7"
																						},
																						"nativeSrc": "395:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:7",
																								"nodeType": "YulLiteral",
																								"src": "416:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:7"
																						},
																						"nativeSrc": "412:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:7"
																				},
																				"nativeSrc": "391:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:7"
																		},
																		"nativeSrc": "376:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:7",
																		"nodeType": "YulLiteral",
																		"src": "423:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:7"
																},
																"nativeSrc": "372:54:7",
																"nodeType": "YulFunctionCall",
																"src": "372:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:7",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:7",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:7",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:418:7"
											},
											{
												"body": {
													"nativeSrc": "486:124:7",
													"nodeType": "YulBlock",
													"src": "486:124:7",
													"statements": [
														{
															"nativeSrc": "496:29:7",
															"nodeType": "YulAssignment",
															"src": "496:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:7"
																},
																"nativeSrc": "505:20:7",
																"nodeType": "YulFunctionCall",
																"src": "505:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:7",
																"nodeType": "YulBlock",
																"src": "588:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:7",
																					"nodeType": "YulLiteral",
																					"src": "597:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:7",
																					"nodeType": "YulLiteral",
																					"src": "600:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:7"
																			},
																			"nativeSrc": "590:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:7"
																		},
																		"nativeSrc": "590:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:7",
																										"nodeType": "YulLiteral",
																										"src": "573:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:7",
																										"nodeType": "YulLiteral",
																										"src": "578:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:7"
																								},
																								"nativeSrc": "569:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:7",
																								"nodeType": "YulLiteral",
																								"src": "582:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:7"
																						},
																						"nativeSrc": "565:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:7"
																				},
																				"nativeSrc": "554:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:7"
																		},
																		"nativeSrc": "544:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:7"
																},
																"nativeSrc": "537:50:7",
																"nodeType": "YulFunctionCall",
																"src": "537:50:7"
															},
															"nativeSrc": "534:70:7",
															"nodeType": "YulIf",
															"src": "534:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:7",
														"nodeType": "YulTypedName",
														"src": "465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:7",
														"nodeType": "YulTypedName",
														"src": "476:5:7",
														"type": ""
													}
												],
												"src": "437:173:7"
											},
											{
												"body": {
													"nativeSrc": "702:167:7",
													"nodeType": "YulBlock",
													"src": "702:167:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:7",
																"nodeType": "YulBlock",
																"src": "748:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:7",
																					"nodeType": "YulLiteral",
																					"src": "757:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:7",
																					"nodeType": "YulLiteral",
																					"src": "760:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:7"
																			},
																			"nativeSrc": "750:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:7"
																		},
																		"nativeSrc": "750:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:7"
																		},
																		"nativeSrc": "719:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:7",
																		"nodeType": "YulLiteral",
																		"src": "744:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:7"
																},
																"nativeSrc": "715:32:7",
																"nodeType": "YulFunctionCall",
																"src": "715:32:7"
															},
															"nativeSrc": "712:52:7",
															"nodeType": "YulIf",
															"src": "712:52:7"
														},
														{
															"nativeSrc": "773:39:7",
															"nodeType": "YulAssignment",
															"src": "773:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:7"
																},
																"nativeSrc": "783:29:7",
																"nodeType": "YulFunctionCall",
																"src": "783:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:7"
																}
															]
														},
														{
															"nativeSrc": "821:42:7",
															"nodeType": "YulAssignment",
															"src": "821:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "848:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "848:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "859:2:7",
																				"nodeType": "YulLiteral",
																				"src": "859:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "844:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "844:3:7"
																		},
																		"nativeSrc": "844:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "844:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "831:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "831:12:7"
																},
																"nativeSrc": "831:32:7",
																"nodeType": "YulFunctionCall",
																"src": "831:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "821:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "821:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:254:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:7",
														"nodeType": "YulTypedName",
														"src": "660:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:7",
														"nodeType": "YulTypedName",
														"src": "671:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:7",
														"nodeType": "YulTypedName",
														"src": "683:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:7",
														"nodeType": "YulTypedName",
														"src": "691:6:7",
														"type": ""
													}
												],
												"src": "615:254:7"
											},
											{
												"body": {
													"nativeSrc": "969:92:7",
													"nodeType": "YulBlock",
													"src": "969:92:7",
													"statements": [
														{
															"nativeSrc": "979:26:7",
															"nodeType": "YulAssignment",
															"src": "979:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "991:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "991:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1002:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1002:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "987:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "987:3:7"
																},
																"nativeSrc": "987:18:7",
																"nodeType": "YulFunctionCall",
																"src": "987:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "979:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "979:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1021:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1021:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1046:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1046:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1039:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1039:6:7"
																				},
																				"nativeSrc": "1039:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1039:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1032:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1032:6:7"
																		},
																		"nativeSrc": "1032:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1032:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1014:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1014:6:7"
																},
																"nativeSrc": "1014:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1014:41:7"
															},
															"nativeSrc": "1014:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1014:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "874:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "938:9:7",
														"nodeType": "YulTypedName",
														"src": "938:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "949:6:7",
														"nodeType": "YulTypedName",
														"src": "949:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "960:4:7",
														"nodeType": "YulTypedName",
														"src": "960:4:7",
														"type": ""
													}
												],
												"src": "874:187:7"
											},
											{
												"body": {
													"nativeSrc": "1167:76:7",
													"nodeType": "YulBlock",
													"src": "1167:76:7",
													"statements": [
														{
															"nativeSrc": "1177:26:7",
															"nodeType": "YulAssignment",
															"src": "1177:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1189:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1189:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1200:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1200:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1185:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1185:3:7"
																},
																"nativeSrc": "1185:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1185:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1177:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1177:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1219:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1219:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1212:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:7"
																},
																"nativeSrc": "1212:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1212:25:7"
															},
															"nativeSrc": "1212:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "1212:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1066:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1136:9:7",
														"nodeType": "YulTypedName",
														"src": "1136:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1147:6:7",
														"nodeType": "YulTypedName",
														"src": "1147:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1158:4:7",
														"nodeType": "YulTypedName",
														"src": "1158:4:7",
														"type": ""
													}
												],
												"src": "1066:177:7"
											},
											{
												"body": {
													"nativeSrc": "1352:224:7",
													"nodeType": "YulBlock",
													"src": "1352:224:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1398:16:7",
																"nodeType": "YulBlock",
																"src": "1398:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1407:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1407:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1410:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1410:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1400:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1400:6:7"
																			},
																			"nativeSrc": "1400:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1400:12:7"
																		},
																		"nativeSrc": "1400:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1400:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1373:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1373:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1382:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1382:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1369:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1369:3:7"
																		},
																		"nativeSrc": "1369:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1369:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1394:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1394:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1365:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1365:3:7"
																},
																"nativeSrc": "1365:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1365:32:7"
															},
															"nativeSrc": "1362:52:7",
															"nodeType": "YulIf",
															"src": "1362:52:7"
														},
														{
															"nativeSrc": "1423:39:7",
															"nodeType": "YulAssignment",
															"src": "1423:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1452:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1452:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1433:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1433:18:7"
																},
																"nativeSrc": "1433:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1433:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1423:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1423:6:7"
																}
															]
														},
														{
															"nativeSrc": "1471:48:7",
															"nodeType": "YulAssignment",
															"src": "1471:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1504:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1504:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1515:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1500:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1500:3:7"
																		},
																		"nativeSrc": "1500:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1500:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1481:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1481:18:7"
																},
																"nativeSrc": "1481:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1481:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1471:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1471:6:7"
																}
															]
														},
														{
															"nativeSrc": "1528:42:7",
															"nodeType": "YulAssignment",
															"src": "1528:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1555:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1555:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1566:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1566:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1551:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1551:3:7"
																		},
																		"nativeSrc": "1551:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1551:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1538:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1538:12:7"
																},
																"nativeSrc": "1538:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1538:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1528:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1528:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1248:328:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1302:9:7",
														"nodeType": "YulTypedName",
														"src": "1302:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1313:7:7",
														"nodeType": "YulTypedName",
														"src": "1313:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1325:6:7",
														"nodeType": "YulTypedName",
														"src": "1325:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1333:6:7",
														"nodeType": "YulTypedName",
														"src": "1333:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1341:6:7",
														"nodeType": "YulTypedName",
														"src": "1341:6:7",
														"type": ""
													}
												],
												"src": "1248:328:7"
											},
											{
												"body": {
													"nativeSrc": "1678:87:7",
													"nodeType": "YulBlock",
													"src": "1678:87:7",
													"statements": [
														{
															"nativeSrc": "1688:26:7",
															"nodeType": "YulAssignment",
															"src": "1688:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1700:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1700:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1711:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1711:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1696:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1696:3:7"
																},
																"nativeSrc": "1696:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1696:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1688:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1688:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1730:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1730:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1745:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1745:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1753:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1753:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1741:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1741:3:7"
																		},
																		"nativeSrc": "1741:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1741:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1723:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:7"
																},
																"nativeSrc": "1723:36:7",
																"nodeType": "YulFunctionCall",
																"src": "1723:36:7"
															},
															"nativeSrc": "1723:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "1723:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1581:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1647:9:7",
														"nodeType": "YulTypedName",
														"src": "1647:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1658:6:7",
														"nodeType": "YulTypedName",
														"src": "1658:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1669:4:7",
														"nodeType": "YulTypedName",
														"src": "1669:4:7",
														"type": ""
													}
												],
												"src": "1581:184:7"
											},
											{
												"body": {
													"nativeSrc": "1840:116:7",
													"nodeType": "YulBlock",
													"src": "1840:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1886:16:7",
																"nodeType": "YulBlock",
																"src": "1886:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1895:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1895:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1898:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1898:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1888:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1888:6:7"
																			},
																			"nativeSrc": "1888:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1888:12:7"
																		},
																		"nativeSrc": "1888:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1888:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1861:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1861:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1870:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1870:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1857:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1857:3:7"
																		},
																		"nativeSrc": "1857:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1857:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1882:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1882:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1853:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1853:3:7"
																},
																"nativeSrc": "1853:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1853:32:7"
															},
															"nativeSrc": "1850:52:7",
															"nodeType": "YulIf",
															"src": "1850:52:7"
														},
														{
															"nativeSrc": "1911:39:7",
															"nodeType": "YulAssignment",
															"src": "1911:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1940:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1940:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1921:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1921:18:7"
																},
																"nativeSrc": "1921:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1921:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1911:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1911:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1770:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1806:9:7",
														"nodeType": "YulTypedName",
														"src": "1806:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1817:7:7",
														"nodeType": "YulTypedName",
														"src": "1817:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1829:6:7",
														"nodeType": "YulTypedName",
														"src": "1829:6:7",
														"type": ""
													}
												],
												"src": "1770:186:7"
											},
											{
												"body": {
													"nativeSrc": "2048:173:7",
													"nodeType": "YulBlock",
													"src": "2048:173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2094:16:7",
																"nodeType": "YulBlock",
																"src": "2094:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2103:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2103:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2106:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2106:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2096:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2096:6:7"
																			},
																			"nativeSrc": "2096:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2096:12:7"
																		},
																		"nativeSrc": "2096:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2096:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2069:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2069:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2078:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2078:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2065:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2065:3:7"
																		},
																		"nativeSrc": "2065:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2065:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2090:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2090:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2061:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2061:3:7"
																},
																"nativeSrc": "2061:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2061:32:7"
															},
															"nativeSrc": "2058:52:7",
															"nodeType": "YulIf",
															"src": "2058:52:7"
														},
														{
															"nativeSrc": "2119:39:7",
															"nodeType": "YulAssignment",
															"src": "2119:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2148:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2148:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2129:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2129:18:7"
																},
																"nativeSrc": "2129:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2129:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2119:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2119:6:7"
																}
															]
														},
														{
															"nativeSrc": "2167:48:7",
															"nodeType": "YulAssignment",
															"src": "2167:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2200:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2200:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2211:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2211:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2196:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2196:3:7"
																		},
																		"nativeSrc": "2196:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2196:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2177:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2177:18:7"
																},
																"nativeSrc": "2177:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2177:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2167:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2167:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "1961:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2006:9:7",
														"nodeType": "YulTypedName",
														"src": "2006:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2017:7:7",
														"nodeType": "YulTypedName",
														"src": "2017:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2029:6:7",
														"nodeType": "YulTypedName",
														"src": "2029:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2037:6:7",
														"nodeType": "YulTypedName",
														"src": "2037:6:7",
														"type": ""
													}
												],
												"src": "1961:260:7"
											},
											{
												"body": {
													"nativeSrc": "2281:325:7",
													"nodeType": "YulBlock",
													"src": "2281:325:7",
													"statements": [
														{
															"nativeSrc": "2291:22:7",
															"nodeType": "YulAssignment",
															"src": "2291:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2305:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2305:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2308:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2308:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2301:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2301:3:7"
																},
																"nativeSrc": "2301:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2301:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2291:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2291:6:7"
																}
															]
														},
														{
															"nativeSrc": "2322:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2322:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2352:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2352:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2358:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2358:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2348:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2348:3:7"
																},
																"nativeSrc": "2348:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2348:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2326:18:7",
																	"nodeType": "YulTypedName",
																	"src": "2326:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2399:31:7",
																"nodeType": "YulBlock",
																"src": "2399:31:7",
																"statements": [
																	{
																		"nativeSrc": "2401:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2401:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2415:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2415:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2423:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2423:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2411:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2411:3:7"
																			},
																			"nativeSrc": "2411:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2411:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2401:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2401:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2379:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2379:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2372:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2372:6:7"
																},
																"nativeSrc": "2372:26:7",
																"nodeType": "YulFunctionCall",
																"src": "2372:26:7"
															},
															"nativeSrc": "2369:61:7",
															"nodeType": "YulIf",
															"src": "2369:61:7"
														},
														{
															"body": {
																"nativeSrc": "2489:111:7",
																"nodeType": "YulBlock",
																"src": "2489:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2510:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2517:3:7",
																							"nodeType": "YulLiteral",
																							"src": "2517:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2522:10:7",
																							"nodeType": "YulLiteral",
																							"src": "2522:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2513:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2513:3:7"
																					},
																					"nativeSrc": "2513:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2513:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2503:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2503:6:7"
																			},
																			"nativeSrc": "2503:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2503:31:7"
																		},
																		"nativeSrc": "2503:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2503:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2554:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2554:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2557:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2557:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2547:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2547:6:7"
																			},
																			"nativeSrc": "2547:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2547:15:7"
																		},
																		"nativeSrc": "2547:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2547:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2582:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2582:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2585:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2585:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2575:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2575:6:7"
																			},
																			"nativeSrc": "2575:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2575:15:7"
																		},
																		"nativeSrc": "2575:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2575:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2445:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2445:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2468:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2468:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2476:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2476:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2465:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2465:2:7"
																		},
																		"nativeSrc": "2465:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2465:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2442:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2442:2:7"
																},
																"nativeSrc": "2442:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2442:38:7"
															},
															"nativeSrc": "2439:161:7",
															"nodeType": "YulIf",
															"src": "2439:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2226:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2261:4:7",
														"nodeType": "YulTypedName",
														"src": "2261:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2270:6:7",
														"nodeType": "YulTypedName",
														"src": "2270:6:7",
														"type": ""
													}
												],
												"src": "2226:380:7"
											},
											{
												"body": {
													"nativeSrc": "2659:174:7",
													"nodeType": "YulBlock",
													"src": "2659:174:7",
													"statements": [
														{
															"nativeSrc": "2669:16:7",
															"nodeType": "YulAssignment",
															"src": "2669:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2680:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2680:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2683:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2676:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2676:3:7"
																},
																"nativeSrc": "2676:9:7",
																"nodeType": "YulFunctionCall",
																"src": "2676:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2669:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2669:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2716:111:7",
																"nodeType": "YulBlock",
																"src": "2716:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2737:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2737:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2744:3:7",
																							"nodeType": "YulLiteral",
																							"src": "2744:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2749:10:7",
																							"nodeType": "YulLiteral",
																							"src": "2749:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2740:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2740:3:7"
																					},
																					"nativeSrc": "2740:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2740:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2730:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2730:6:7"
																			},
																			"nativeSrc": "2730:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2730:31:7"
																		},
																		"nativeSrc": "2730:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2730:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2781:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2781:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2784:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2784:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2774:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2774:6:7"
																			},
																			"nativeSrc": "2774:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2774:15:7"
																		},
																		"nativeSrc": "2774:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2774:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2809:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2809:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2812:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2812:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2802:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2802:6:7"
																			},
																			"nativeSrc": "2802:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2802:15:7"
																		},
																		"nativeSrc": "2802:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2802:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2700:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2700:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2703:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2703:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2697:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2697:2:7"
																},
																"nativeSrc": "2697:10:7",
																"nodeType": "YulFunctionCall",
																"src": "2697:10:7"
															},
															"nativeSrc": "2694:133:7",
															"nodeType": "YulIf",
															"src": "2694:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2611:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2642:1:7",
														"nodeType": "YulTypedName",
														"src": "2642:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2645:1:7",
														"nodeType": "YulTypedName",
														"src": "2645:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2651:3:7",
														"nodeType": "YulTypedName",
														"src": "2651:3:7",
														"type": ""
													}
												],
												"src": "2611:222:7"
											},
											{
												"body": {
													"nativeSrc": "3012:227:7",
													"nodeType": "YulBlock",
													"src": "3012:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3029:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3029:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3040:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3040:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3022:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3022:6:7"
																},
																"nativeSrc": "3022:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3022:21:7"
															},
															"nativeSrc": "3022:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3022:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3063:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3063:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3074:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3074:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3059:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3059:3:7"
																		},
																		"nativeSrc": "3059:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3059:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3079:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3079:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3052:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3052:6:7"
																},
																"nativeSrc": "3052:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3052:30:7"
															},
															"nativeSrc": "3052:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3052:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3102:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3102:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3113:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3113:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3098:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3098:3:7"
																		},
																		"nativeSrc": "3098:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3098:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3118:34:7",
																		"nodeType": "YulLiteral",
																		"src": "3118:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3091:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3091:6:7"
																},
																"nativeSrc": "3091:62:7",
																"nodeType": "YulFunctionCall",
																"src": "3091:62:7"
															},
															"nativeSrc": "3091:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "3091:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3173:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3173:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3184:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3184:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3169:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3169:3:7"
																		},
																		"nativeSrc": "3169:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3189:7:7",
																		"nodeType": "YulLiteral",
																		"src": "3189:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3162:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:7"
																},
																"nativeSrc": "3162:35:7",
																"nodeType": "YulFunctionCall",
																"src": "3162:35:7"
															},
															"nativeSrc": "3162:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "3162:35:7"
														},
														{
															"nativeSrc": "3206:27:7",
															"nodeType": "YulAssignment",
															"src": "3206:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3218:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3218:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3229:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3229:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3214:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3214:3:7"
																},
																"nativeSrc": "3214:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3214:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3206:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3206:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2838:401:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2989:9:7",
														"nodeType": "YulTypedName",
														"src": "2989:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3003:4:7",
														"nodeType": "YulTypedName",
														"src": "3003:4:7",
														"type": ""
													}
												],
												"src": "2838:401:7"
											},
											{
												"body": {
													"nativeSrc": "3418:226:7",
													"nodeType": "YulBlock",
													"src": "3418:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3435:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3435:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3446:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3446:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3428:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3428:6:7"
																},
																"nativeSrc": "3428:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3428:21:7"
															},
															"nativeSrc": "3428:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3428:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3469:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3469:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3480:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3480:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3465:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3465:3:7"
																		},
																		"nativeSrc": "3465:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3465:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3485:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3485:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3458:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3458:6:7"
																},
																"nativeSrc": "3458:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3458:30:7"
															},
															"nativeSrc": "3458:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3458:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3508:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3508:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3519:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3519:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3504:3:7"
																		},
																		"nativeSrc": "3504:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3504:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3524:34:7",
																		"nodeType": "YulLiteral",
																		"src": "3524:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																},
																"nativeSrc": "3497:62:7",
																"nodeType": "YulFunctionCall",
																"src": "3497:62:7"
															},
															"nativeSrc": "3497:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "3497:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3579:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3579:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3590:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3590:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3575:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3575:3:7"
																		},
																		"nativeSrc": "3575:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3575:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3595:6:7",
																		"nodeType": "YulLiteral",
																		"src": "3595:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3568:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3568:6:7"
																},
																"nativeSrc": "3568:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3568:34:7"
															},
															"nativeSrc": "3568:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3568:34:7"
														},
														{
															"nativeSrc": "3611:27:7",
															"nodeType": "YulAssignment",
															"src": "3611:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3623:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3623:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3634:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3634:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3619:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3619:3:7"
																},
																"nativeSrc": "3619:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3619:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3611:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3611:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3244:400:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3395:9:7",
														"nodeType": "YulTypedName",
														"src": "3395:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3409:4:7",
														"nodeType": "YulTypedName",
														"src": "3409:4:7",
														"type": ""
													}
												],
												"src": "3244:400:7"
											},
											{
												"body": {
													"nativeSrc": "3823:224:7",
													"nodeType": "YulBlock",
													"src": "3823:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3840:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3840:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3851:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3851:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3833:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3833:6:7"
																},
																"nativeSrc": "3833:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3833:21:7"
															},
															"nativeSrc": "3833:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3833:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3874:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3874:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3885:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3885:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3870:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3870:3:7"
																		},
																		"nativeSrc": "3870:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3870:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3890:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3890:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3863:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3863:6:7"
																},
																"nativeSrc": "3863:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3863:30:7"
															},
															"nativeSrc": "3863:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3863:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3913:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3913:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3924:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3924:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3909:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3909:3:7"
																		},
																		"nativeSrc": "3909:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3909:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "3929:34:7",
																		"nodeType": "YulLiteral",
																		"src": "3929:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3902:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3902:6:7"
																},
																"nativeSrc": "3902:62:7",
																"nodeType": "YulFunctionCall",
																"src": "3902:62:7"
															},
															"nativeSrc": "3902:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "3902:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3984:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3984:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3995:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3995:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3980:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3980:3:7"
																		},
																		"nativeSrc": "3980:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3980:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4000:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4000:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3973:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3973:6:7"
																},
																"nativeSrc": "3973:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3973:32:7"
															},
															"nativeSrc": "3973:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "3973:32:7"
														},
														{
															"nativeSrc": "4014:27:7",
															"nodeType": "YulAssignment",
															"src": "4014:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4026:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4026:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4037:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4037:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4022:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4022:3:7"
																},
																"nativeSrc": "4022:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4022:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4014:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4014:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3649:398:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3800:9:7",
														"nodeType": "YulTypedName",
														"src": "3800:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3814:4:7",
														"nodeType": "YulTypedName",
														"src": "3814:4:7",
														"type": ""
													}
												],
												"src": "3649:398:7"
											},
											{
												"body": {
													"nativeSrc": "4226:179:7",
													"nodeType": "YulBlock",
													"src": "4226:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4243:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4243:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4254:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4254:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4236:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4236:6:7"
																},
																"nativeSrc": "4236:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4236:21:7"
															},
															"nativeSrc": "4236:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4236:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4277:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4277:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4288:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4288:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4273:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4273:3:7"
																		},
																		"nativeSrc": "4273:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4273:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4293:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4293:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4266:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4266:6:7"
																},
																"nativeSrc": "4266:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4266:30:7"
															},
															"nativeSrc": "4266:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4266:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4316:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4316:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4327:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4327:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4312:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4312:3:7"
																		},
																		"nativeSrc": "4312:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4312:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4332:31:7",
																		"nodeType": "YulLiteral",
																		"src": "4332:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4305:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4305:6:7"
																},
																"nativeSrc": "4305:59:7",
																"nodeType": "YulFunctionCall",
																"src": "4305:59:7"
															},
															"nativeSrc": "4305:59:7",
															"nodeType": "YulExpressionStatement",
															"src": "4305:59:7"
														},
														{
															"nativeSrc": "4373:26:7",
															"nodeType": "YulAssignment",
															"src": "4373:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4385:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4385:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4396:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4396:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4381:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4381:3:7"
																},
																"nativeSrc": "4381:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4381:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4373:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4373:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4052:353:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4203:9:7",
														"nodeType": "YulTypedName",
														"src": "4203:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4217:4:7",
														"nodeType": "YulTypedName",
														"src": "4217:4:7",
														"type": ""
													}
												],
												"src": "4052:353:7"
											},
											{
												"body": {
													"nativeSrc": "4584:227:7",
													"nodeType": "YulBlock",
													"src": "4584:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4601:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4601:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4612:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4612:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4594:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4594:6:7"
																},
																"nativeSrc": "4594:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4594:21:7"
															},
															"nativeSrc": "4594:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4594:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4635:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4635:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4646:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4646:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4631:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4631:3:7"
																		},
																		"nativeSrc": "4631:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4651:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4651:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4624:6:7"
																},
																"nativeSrc": "4624:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4624:30:7"
															},
															"nativeSrc": "4624:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4624:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4674:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4674:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4685:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4685:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4670:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4670:3:7"
																		},
																		"nativeSrc": "4670:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4670:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4690:34:7",
																		"nodeType": "YulLiteral",
																		"src": "4690:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4663:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:7"
																},
																"nativeSrc": "4663:62:7",
																"nodeType": "YulFunctionCall",
																"src": "4663:62:7"
															},
															"nativeSrc": "4663:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "4663:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4745:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4745:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4756:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4756:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4741:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4741:3:7"
																		},
																		"nativeSrc": "4741:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4761:7:7",
																		"nodeType": "YulLiteral",
																		"src": "4761:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4734:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4734:6:7"
																},
																"nativeSrc": "4734:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4734:35:7"
															},
															"nativeSrc": "4734:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4734:35:7"
														},
														{
															"nativeSrc": "4778:27:7",
															"nodeType": "YulAssignment",
															"src": "4778:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4790:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4790:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4801:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4801:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4786:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4786:3:7"
																},
																"nativeSrc": "4786:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4786:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4778:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4778:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4410:401:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4561:9:7",
														"nodeType": "YulTypedName",
														"src": "4561:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4575:4:7",
														"nodeType": "YulTypedName",
														"src": "4575:4:7",
														"type": ""
													}
												],
												"src": "4410:401:7"
											},
											{
												"body": {
													"nativeSrc": "4990:225:7",
													"nodeType": "YulBlock",
													"src": "4990:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5007:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5007:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5018:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5018:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5000:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5000:6:7"
																},
																"nativeSrc": "5000:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5000:21:7"
															},
															"nativeSrc": "5000:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5000:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5041:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5041:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5052:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5052:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5037:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5037:3:7"
																		},
																		"nativeSrc": "5037:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5037:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5057:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5057:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5030:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5030:6:7"
																},
																"nativeSrc": "5030:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5030:30:7"
															},
															"nativeSrc": "5030:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5030:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5080:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5080:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5091:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5091:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5076:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5076:3:7"
																		},
																		"nativeSrc": "5076:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5096:34:7",
																		"nodeType": "YulLiteral",
																		"src": "5096:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5069:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5069:6:7"
																},
																"nativeSrc": "5069:62:7",
																"nodeType": "YulFunctionCall",
																"src": "5069:62:7"
															},
															"nativeSrc": "5069:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "5069:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5151:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5151:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5162:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5162:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5147:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5147:3:7"
																		},
																		"nativeSrc": "5147:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5147:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5167:5:7",
																		"nodeType": "YulLiteral",
																		"src": "5167:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5140:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5140:6:7"
																},
																"nativeSrc": "5140:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5140:33:7"
															},
															"nativeSrc": "5140:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "5140:33:7"
														},
														{
															"nativeSrc": "5182:27:7",
															"nodeType": "YulAssignment",
															"src": "5182:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5194:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5194:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5205:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5205:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5190:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5190:3:7"
																},
																"nativeSrc": "5190:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5190:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5182:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5182:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4816:399:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4967:9:7",
														"nodeType": "YulTypedName",
														"src": "4967:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4981:4:7",
														"nodeType": "YulTypedName",
														"src": "4981:4:7",
														"type": ""
													}
												],
												"src": "4816:399:7"
											},
											{
												"body": {
													"nativeSrc": "5394:228:7",
													"nodeType": "YulBlock",
													"src": "5394:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5411:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5411:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5422:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5422:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5404:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5404:6:7"
																},
																"nativeSrc": "5404:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5404:21:7"
															},
															"nativeSrc": "5404:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5404:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5445:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5445:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5456:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5456:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5441:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5441:3:7"
																		},
																		"nativeSrc": "5441:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5441:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5461:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5461:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5434:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5434:6:7"
																},
																"nativeSrc": "5434:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5434:30:7"
															},
															"nativeSrc": "5434:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5434:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5484:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5484:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5495:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5495:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5480:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5480:3:7"
																		},
																		"nativeSrc": "5480:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5480:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5500:34:7",
																		"nodeType": "YulLiteral",
																		"src": "5500:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5473:6:7"
																},
																"nativeSrc": "5473:62:7",
																"nodeType": "YulFunctionCall",
																"src": "5473:62:7"
															},
															"nativeSrc": "5473:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "5473:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5555:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5555:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5566:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5566:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5551:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5551:3:7"
																		},
																		"nativeSrc": "5551:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5551:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5571:8:7",
																		"nodeType": "YulLiteral",
																		"src": "5571:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5544:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5544:6:7"
																},
																"nativeSrc": "5544:36:7",
																"nodeType": "YulFunctionCall",
																"src": "5544:36:7"
															},
															"nativeSrc": "5544:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "5544:36:7"
														},
														{
															"nativeSrc": "5589:27:7",
															"nodeType": "YulAssignment",
															"src": "5589:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5601:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5601:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5612:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5612:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5597:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5597:3:7"
																},
																"nativeSrc": "5597:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5597:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5589:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5589:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5220:402:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5371:9:7",
														"nodeType": "YulTypedName",
														"src": "5371:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5385:4:7",
														"nodeType": "YulTypedName",
														"src": "5385:4:7",
														"type": ""
													}
												],
												"src": "5220:402:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106da565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610702565b610244565b604051601281526020016100bf565b6100db61012d3660046106da565b610267565b6100ef61014036600461073b565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106da565b610297565b6100db6101833660046106da565b610316565b6100ef61019636600461075b565b610323565b6060600380546101aa9061078c565b80601f01602080910402602001604051908101604052809291908181526020018280546101d69061078c565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107c4565b61034d565b6060600480546101aa9061078c565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106d5575f80fd5b919050565b5f80604083850312156106eb575f80fd5b6106f4836106bf565b946020939093013593505050565b5f805f60608486031215610714575f80fd5b61071d846106bf565b925061072b602085016106bf565b9150604084013590509250925092565b5f6020828403121561074b575f80fd5b610754826106bf565b9392505050565b5f806040838503121561076c575f80fd5b610775836106bf565b9150610783602084016106bf565b90509250929050565b600181811c908216806107a057607f821691505b6020821081036107be57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea264697066735822122090e4af7cd9ffb9b46c49a42bc69d404577b9bd08df0979ba0c2be62d9183cde364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x75B JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x78C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78C JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x714 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x71D DUP5 PUSH2 0x6BF JUMP JUMPDEST SWAP3 POP PUSH2 0x72B PUSH1 0x20 DUP6 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x754 DUP3 PUSH2 0x6BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x76C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x775 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP PUSH2 0x783 PUSH1 0x20 DUP5 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xE4 0xAF PUSH29 0xD9FFB9B46C49A42BC69D404577B9BD08DF0979BA0C2BE62D9183CDE364 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "1532:11312:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1039:14:7;;1032:22;1014:41;;1002:2;987:18;4444:197:2;874:187:7;3255:106:2;3342:12;;3255:106;;;1212:25:7;;;1200:2;1185:18;3255:106:2;1066:177:7;5203:256:2;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1723:36:7;;1711:2;1696:18;3104:91:2;1581:184:7;5854:234:2;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:5;4581:32:2;719:10:5;4597:7:2;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:5;5356:38:2;5372:4;719:10:5;5387:6:2;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:2;;5203:256;-1:-1:-1;;;;5203:256:2:o;5854:234::-;5942:4;719:10:5;5996:64:2;719:10:5;6012:7:2;6049:10;6021:25;719:10:5;6012:7:2;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:5;6668:4:2;6749:25;719:10:5;6766:7:2;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:2;;3040:2:7;6784:85:2;;;3022:21:7;3079:2;3059:18;;;3052:30;3118:34;3098:18;;;3091:62;-1:-1:-1;;;3169:18:7;;;3162:35;3214:19;;6784:85:2;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:5;3873:28:2;719:10:5;3890:2:2;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:2;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:2;;10550:68;;;;-1:-1:-1;;;10550:68:2;;3446:2:7;10550:68:2;;;3428:21:7;3485:2;3465:18;;;3458:30;3524:34;3504:18;;;3497:62;-1:-1:-1;;;3575:18:7;;;3568:34;3619:19;;10550:68:2;3244:400:7;10550:68:2;-1:-1:-1;;;;;10636:21:2;;10628:68;;;;-1:-1:-1;;;10628:68:2;;3851:2:7;10628:68:2;;;3833:21:7;3890:2;3870:18;;;3863:30;3929:34;3909:18;;;3902:62;-1:-1:-1;;;3980:18:7;;;3973:32;4022:19;;10628:68:2;3649:398:7;10628:68:2;-1:-1:-1;;;;;10707:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1212:25:7;;;10758:32:2;;1185:18:7;10758:32:2;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:2;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:2;;4254:2:7;11297:68:2;;;4236:21:7;4293:2;4273:18;;;4266:30;4332:31;4312:18;;;4305:59;4381:18;;11297:68:2;4052:353:7;11297:68:2;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:2;;7544:68;;;;-1:-1:-1;;;7544:68:2;;4612:2:7;7544:68:2;;;4594:21:7;4651:2;4631:18;;;4624:30;4690:34;4670:18;;;4663:62;-1:-1:-1;;;4741:18:7;;;4734:35;4786:19;;7544:68:2;4410:401:7;7544:68:2;-1:-1:-1;;;;;7630:16:2;;7622:64;;;;-1:-1:-1;;;7622:64:2;;5018:2:7;7622:64:2;;;5000:21:7;5057:2;5037:18;;;5030:30;5096:34;5076:18;;;5069:62;-1:-1:-1;;;5147:18:7;;;5140:33;5190:19;;7622:64:2;4816:399:7;7622:64:2;-1:-1:-1;;;;;7768:15:2;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:2;;5422:2:7;7793:72:2;;;5404:21:7;5461:2;5441:18;;;5434:30;5500:34;5480:18;;;5473:62;-1:-1:-1;;;5551:18:7;;;5544:36;5597:19;;7793:72:2;5220:402:7;7793:72:2;-1:-1:-1;;;;;7899:15:2;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1212:25:7;;;8114:13:2;;8163:26;;1185:18:7;8163:26:2;;;;;;;8200:37;12073:91;14:418:7;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:7;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:254::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;859:2;844:18;;;;831:32;;-1:-1:-1;;;615:254:7:o;1248:328::-;1325:6;1333;1341;1394:2;1382:9;1373:7;1369:23;1365:32;1362:52;;;1410:1;1407;1400:12;1362:52;1433:29;1452:9;1433:29;:::i;:::-;1423:39;;1481:38;1515:2;1504:9;1500:18;1481:38;:::i;:::-;1471:48;;1566:2;1555:9;1551:18;1538:32;1528:42;;1248:328;;;;;:::o;1770:186::-;1829:6;1882:2;1870:9;1861:7;1857:23;1853:32;1850:52;;;1898:1;1895;1888:12;1850:52;1921:29;1940:9;1921:29;:::i;:::-;1911:39;1770:186;-1:-1:-1;;;1770:186:7:o;1961:260::-;2029:6;2037;2090:2;2078:9;2069:7;2065:23;2061:32;2058:52;;;2106:1;2103;2096:12;2058:52;2129:29;2148:9;2129:29;:::i;:::-;2119:39;;2177:38;2211:2;2200:9;2196:18;2177:38;:::i;:::-;2167:48;;1961:260;;;;;:::o;2226:380::-;2305:1;2301:12;;;;2348;;;2369:61;;2423:4;2415:6;2411:17;2401:27;;2369:61;2476:2;2468:6;2465:14;2445:18;2442:38;2439:161;;2522:10;2517:3;2513:20;2510:1;2503:31;2557:4;2554:1;2547:15;2585:4;2582:1;2575:15;2439:161;;2226:380;;;:::o;2611:222::-;2676:9;;;2697:10;;;2694:133;;;2749:10;2744:3;2740:20;2737:1;2730:31;2784:4;2781:1;2774:15;2812:4;2809:1;2802:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "414600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27011",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51133",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 862,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 862,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 709,
									"end": 712,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 702,
									"end": 706,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 697,
									"end": 699,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 689,
									"end": 695,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 685,
									"end": 700,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 681,
									"end": 707,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 678,
									"end": 713,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 675,
									"end": 730,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 675,
									"end": 730,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 726,
									"end": 727,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 723,
									"end": 724,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 716,
									"end": 728,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 675,
									"end": 730,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 783,
									"end": 785,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 776,
									"end": 780,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 768,
									"end": 774,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 764,
									"end": 781,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 757,
									"end": 761,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 749,
									"end": 755,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 745,
									"end": 762,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 739,
									"end": 786,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 823,
									"end": 827,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 818,
									"end": 820,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 810,
									"end": 816,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 806,
									"end": 821,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 802,
									"end": 828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 795,
									"end": 832,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 850,
									"end": 856,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 841,
									"end": 856,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 966,
									"end": 972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 980,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1027,
									"end": 1029,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1015,
									"end": 1024,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1006,
									"end": 1013,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1002,
									"end": 1025,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 998,
									"end": 1030,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1043,
									"end": 1044,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1033,
									"end": 1045,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1070,
									"end": 1086,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1070,
									"end": 1086,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1135,
									"end": 1149,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1135,
									"end": 1149,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1135,
									"end": 1149,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1163,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1159,
									"end": 1160,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1152,
									"end": 1164,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1238,
									"end": 1245,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1229,
									"end": 1235,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1218,
									"end": 1227,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1214,
									"end": 1236,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1185,
									"end": 1246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1292,
									"end": 1294,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1281,
									"end": 1290,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1277,
									"end": 1295,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1296,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 1296,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 1296,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 1323,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1319,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1308,
									"end": 1324,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1337,
									"end": 1338,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1334,
									"end": 1335,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1327,
									"end": 1339,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1415,
									"end": 1422,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1404,
									"end": 1412,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1393,
									"end": 1402,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1389,
									"end": 1413,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1360,
									"end": 1423,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1423,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 867,
									"end": 1429,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1556,
									"end": 1568,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1556,
									"end": 1568,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1556,
									"end": 1568,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1631,
									"end": 1635,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1623,
									"end": 1629,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1636,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1609,
									"end": 1636,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1609,
									"end": 1636,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1676,
									"end": 1682,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1687,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1653,
									"end": 1671,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1650,
									"end": 1688,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1725,
									"end": 1728,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1721,
									"end": 1741,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1718,
									"end": 1719,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1765,
									"end": 1769,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1762,
									"end": 1763,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1755,
									"end": 1770,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1793,
									"end": 1797,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1790,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1783,
									"end": 1798,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2047,
									"end": 2049,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2042,
									"end": 2045,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2039,
									"end": 2050,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2083,
									"end": 2088,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2080,
									"end": 2081,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2073,
									"end": 2089,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2127,
									"end": 2131,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2124,
									"end": 2125,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2114,
									"end": 2132,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2197,
									"end": 2199,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2185,
									"end": 2195,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2181,
									"end": 2200,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2178,
									"end": 2179,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2174,
									"end": 2201,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2168,
									"end": 2172,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2164,
									"end": 2202,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2233,
									"end": 2237,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2221,
									"end": 2231,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2218,
									"end": 2238,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2256,
									"end": 2260,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2311,
									"end": 2313,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2306,
									"end": 2309,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2302,
									"end": 2314,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2299,
									"end": 2300,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2295,
									"end": 2315,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2293,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2285,
									"end": 2316,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2275,
									"end": 2316,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2275,
									"end": 2316,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2384,
									"end": 2386,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2382,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2374,
									"end": 2387,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2443,
									"end": 2444,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2445,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2429,
									"end": 2445,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2410,
									"end": 2411,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2399,
									"end": 2412,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2463,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2759,
									"end": 2769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2759,
									"end": 2769,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2781,
									"end": 2811,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2811,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2778,
									"end": 2834,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2778,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2778,
									"end": 2834,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 2814,
									"end": 2832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 2933,
									"end": 2939,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2925,
									"end": 2929,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2930,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 2893,
									"end": 2931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 2891,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2843,
									"end": 2940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2995,
									"end": 2999,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2995,
									"end": 2999,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3052,
									"end": 3054,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3041,
									"end": 3055,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3041,
									"end": 3055,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3069,
									"end": 3070,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3771,
									"end": 3772,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3788,
									"end": 3794,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3834,
									"end": 3860,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2596,
									"end": 2597,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2592,
									"end": 2603,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2592,
									"end": 2603,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2592,
									"end": 2603,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2612,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2584,
									"end": 2613,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2574,
									"end": 2614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2620,
									"end": 2621,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2616,
									"end": 2627,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2616,
									"end": 2627,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2616,
									"end": 2627,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2571,
									"end": 2628,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3887,
									"end": 3968,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3887,
									"end": 3968,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1892,
									"end": 1893,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1885,
									"end": 1899,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 1899,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 1899,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1929,
									"end": 1933,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1916,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1916,
									"end": 1934,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3232,
									"end": 3239,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3229,
									"end": 3230,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 3240,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3321,
									"end": 3340,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3321,
									"end": 3340,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3321,
									"end": 3340,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3315,
									"end": 3341,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3300,
									"end": 3342,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3300,
									"end": 3342,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3381,
									"end": 3382,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 3267,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 3267,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3225,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3482,
									"end": 3488,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3473,
									"end": 3480,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3470,
									"end": 3489,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3543,
									"end": 3562,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3543,
									"end": 3562,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3543,
									"end": 3562,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3537,
									"end": 3563,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3626,
									"end": 3627,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3622,
									"end": 3636,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3622,
									"end": 3636,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3622,
									"end": 3636,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3638,
									"end": 3641,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 3618,
									"end": 3642,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3614,
									"end": 3651,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3610,
									"end": 3652,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3595,
									"end": 3653,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3580,
									"end": 3654,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3580,
									"end": 3654,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3714,
									"end": 3715,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3705,
									"end": 3711,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3702,
									"end": 3703,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3694,
									"end": 3716,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3688,
									"end": 3692,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3681,
									"end": 3717,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 3984,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122090e4af7cd9ffb9b46c49a42bc69d404577b9bd08df0979ba0c2be62d9183cde364736f6c63430008190033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1039,
											"end": 1053,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1054,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1002,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 874,
											"end": 1061,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1202,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1066,
											"end": 1243,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1723,
											"end": 1759,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1759,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1713,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1696,
											"end": 1714,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1581,
											"end": 1765,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3042,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3043,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3079,
											"end": 3081,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3152,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3098,
											"end": 3116,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3098,
											"end": 3116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3091,
											"end": 3153,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3169,
											"end": 3187,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3169,
											"end": 3187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3169,
											"end": 3187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3233,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3214,
											"end": 3233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3449,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3487,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3488,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3504,
											"end": 3522,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3504,
											"end": 3522,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3504,
											"end": 3522,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3559,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3575,
											"end": 3593,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3575,
											"end": 3593,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3568,
											"end": 3602,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3244,
											"end": 3644,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3853,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3870,
											"end": 3888,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3870,
											"end": 3888,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3893,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3929,
											"end": 3963,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3909,
											"end": 3927,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3909,
											"end": 3927,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3909,
											"end": 3927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 3964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3649,
											"end": 4047,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4254,
											"end": 4256,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4236,
											"end": 4257,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4296,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4363,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4364,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4381,
											"end": 4399,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4381,
											"end": 4399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4052,
											"end": 4405,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4614,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4594,
											"end": 4615,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4653,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4631,
											"end": 4649,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4631,
											"end": 4649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4649,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4624,
											"end": 4654,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4724,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4663,
											"end": 4725,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4769,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4410,
											"end": 4811,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5018,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5021,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5059,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5060,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5130,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5131,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5209,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5190,
											"end": 5209,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4816,
											"end": 5215,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5422,
											"end": 5424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5425,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 5463,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5441,
											"end": 5459,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5441,
											"end": 5459,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5464,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5534,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5535,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5580,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5220,
											"end": 5622,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 869,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 615,
											"end": 869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 859,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 844,
											"end": 862,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 844,
											"end": 862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 862,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 844,
											"end": 862,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 831,
											"end": 863,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 831,
											"end": 863,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1339,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1396,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1382,
											"end": 1391,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1392,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1397,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1408,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1412,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1433,
											"end": 1462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1515,
											"end": 1517,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1513,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1481,
											"end": 1519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1519,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1481,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1519,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1566,
											"end": 1568,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1564,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1551,
											"end": 1569,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1538,
											"end": 1570,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1528,
											"end": 1570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1528,
											"end": 1570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1956,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1770,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1884,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1870,
											"end": 1879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 1868,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1880,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1885,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1902,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1850,
											"end": 1902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1899,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1896,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1902,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1850,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1940,
											"end": 1949,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1921,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1950,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1956,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2035,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2043,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2076,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2088,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2061,
											"end": 2093,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2110,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2058,
											"end": 2110,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2104,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2108,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2110,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2058,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2148,
											"end": 2157,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2129,
											"end": 2158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2158,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2129,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2211,
											"end": 2213,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2209,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2196,
											"end": 2214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2177,
											"end": 2215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2215,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2177,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2215,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2606,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2226,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2306,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2348,
											"end": 2360,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2348,
											"end": 2360,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2348,
											"end": 2360,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2369,
											"end": 2430,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2427,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2415,
											"end": 2421,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2428,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2430,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2369,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2478,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2468,
											"end": 2474,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2479,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2480,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2439,
											"end": 2600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2532,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2517,
											"end": 2520,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2513,
											"end": 2533,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2511,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2534,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2561,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2554,
											"end": 2555,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2547,
											"end": 2562,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2589,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2600,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2439,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2833,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2611,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2685,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2685,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2685,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2694,
											"end": 2827,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2694,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2694,
											"end": 2827,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2759,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2744,
											"end": 2747,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 2788,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2781,
											"end": 2782,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2774,
											"end": 2789,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2812,
											"end": 2816,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2809,
											"end": 2810,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2817,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts@4.9.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@4.9.3/utils/Context.sol",
								"contracts/gainzilla.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 440,
								"contract": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 446,
								"contract": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 448,
								"contract": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 450,
								"contract": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 452,
								"contract": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/gainzilla.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPair(address,address)": "c9c65396"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/gainzilla.sol\":{\"keccak256\":\"0x1f5fe749bdbccea1babd51e6cf600c090ac0bddf2fe5bc5d072516f34ebd0bec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12add13c868c489ca04075c9d83a6f648ffc218181a929d7617b1f48f7698fea\",\"dweb:/ipfs/QmPE8hhAQDXwFTGxfrnvnXCFaojEupH6Cf3tKwHpAJDs5Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Pair": {
					"abi": [
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getReserves()": "0902f1ac",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/gainzilla.sol\":{\"keccak256\":\"0x1f5fe749bdbccea1babd51e6cf600c090ac0bddf2fe5bc5d072516f34ebd0bec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12add13c868c489ca04075c9d83a6f648ffc218181a929d7617b1f48f7698fea\",\"dweb:/ipfs/QmPE8hhAQDXwFTGxfrnvnXCFaojEupH6Cf3tKwHpAJDs5Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Router": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IUniswapV2Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/gainzilla.sol\":{\"keccak256\":\"0x1f5fe749bdbccea1babd51e6cf600c090ac0bddf2fe5bc5d072516f34ebd0bec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12add13c868c489ca04075c9d83a6f648ffc218181a929d7617b1f48f7698fea\",\"dweb:/ipfs/QmPE8hhAQDXwFTGxfrnvnXCFaojEupH6Cf3tKwHpAJDs5Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MemeCoin": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newPercentage",
									"type": "uint256"
								}
							],
							"name": "MaxWalletUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newRouter",
									"type": "address"
								}
							],
							"name": "RouterUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lpAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ecoAmount",
									"type": "uint256"
								}
							],
							"name": "TaxesCollected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_maxWalletSize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "accumulatedEco",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "accumulatedLp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint32",
									"name": "duration",
									"type": "uint32"
								}
							],
							"name": "configureCooldown",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint16",
									"name": "triggerPercent",
									"type": "uint16"
								}
							],
							"name": "configureDiamondFloor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cooldown",
							"outputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint32",
									"name": "duration",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "cooldownRemaining",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "days_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "hours_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minutes_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "seconds_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "diamondFloor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint16",
									"name": "triggerPercentage",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "athPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "sellStopped",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "blockedAth",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExempt",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxWalletPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pairAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pairPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceDeviation",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "routerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "exempt",
									"type": "bool"
								}
							],
							"name": "setExempt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "percentage",
									"type": "uint256"
								}
							],
							"name": "setMaxWalletPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRouter",
									"type": "address"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "buyLp",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "buyEco",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "sellLp",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "sellEco",
									"type": "uint16"
								}
							],
							"name": "setTaxRates",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								}
							],
							"name": "setThreshold",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxRates",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "buyLp",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "buyEco",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "sellLp",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "sellEco",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/gainzilla.sol\":1203:12034  contract MemeCoin is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/gainzilla.sol\":1383:1386  100 */\n  0x64\n    /* \"contracts/gainzilla.sol\":1346:1386  uint256 public maxWalletPercentage = 100 */\n  0x06\n  sstore\n    /* \"contracts/gainzilla.sol\":1697:1716  TOTAL_SUPPLY / 1000 */\n  tag_1\n    /* \"contracts/gainzilla.sol\":1712:1716  1000 */\n  0x03e8\n    /* \"contracts/gainzilla.sol\":1318:1340  1_000_000_000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"contracts/gainzilla.sol\":1697:1716  TOTAL_SUPPLY / 1000 */\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/gainzilla.sol\":1666:1716  uint256 public swapThreshold = TOTAL_SUPPLY / 1000 */\n  0x08\n  sstore\n    /* \"contracts/gainzilla.sol\":2620:2947  constructor() ERC20(\"Meme Coin\", \"MEME\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb9, 0x26b2b6b29021b7b4b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x4d454d45)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":955:967  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_15\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"contracts/gainzilla.sol\":2671:2701  _transferOwnership(msg.sender) */\n  tag_17\n    /* \"contracts/gainzilla.sol\":2690:2700  msg.sender */\n  caller\n    /* \"contracts/gainzilla.sol\":2671:2689  _transferOwnership */\n  tag_15\n    /* \"contracts/gainzilla.sol\":2671:2701  _transferOwnership(msg.sender) */\n  jump\t// in\ntag_17:\n    /* \"contracts/gainzilla.sol\":2711:2742  _mint(msg.sender, TOTAL_SUPPLY) */\n  tag_18\n    /* \"contracts/gainzilla.sol\":2717:2727  msg.sender */\n  caller\n    /* \"contracts/gainzilla.sol\":1318:1340  1_000_000_000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"contracts/gainzilla.sol\":2711:2716  _mint */\n  tag_19\n    /* \"contracts/gainzilla.sol\":2711:2742  _mint(msg.sender, TOTAL_SUPPLY) */\n  jump\t// in\ntag_18:\n    /* \"contracts/gainzilla.sol\":2752:2765  routerAddress */\n  0x12\n    /* \"contracts/gainzilla.sol\":2752:2782  routerAddress = DEFAULT_ROUTER */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/gainzilla.sol\":2299:2341  0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  0x10ed43c718714eb63d5aa57b78b54704e256024e\n    /* \"contracts/gainzilla.sol\":2752:2782  routerAddress = DEFAULT_ROUTER */\n  or\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":2792:2804  _setupPair() */\n  tag_20\n    /* \"contracts/gainzilla.sol\":2792:2802  _setupPair */\n  tag_21\n    /* \"contracts/gainzilla.sol\":2792:2804  _setupPair() */\n  jump\t// in\ntag_20:\n    /* \"contracts/gainzilla.sol\":2834:2854  TaxRates(0, 0, 0, 0) */\n  0x40\n  dup1\n  mload\n  0x80\n  dup2\n  add\n  dup3\n  mstore\n  0x00\n  dup1\n  dup3\n  mstore\n  0x20\n  dup1\n  dup4\n  add\n  dup3\n  swap1\n  mstore\n  dup3\n  dup5\n  add\n  dup3\n  swap1\n  mstore\n  0x60\n  swap1\n  swap3\n  add\n  dup2\n  swap1\n  mstore\n    /* \"contracts/gainzilla.sol\":2823:2831  taxRates */\n  0x07\n    /* \"contracts/gainzilla.sol\":2823:2854  taxRates = TaxRates(0, 0, 0, 0) */\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":2882:2892  msg.sender */\n  caller\n    /* \"contracts/gainzilla.sol\":2873:2893  isExempt[msg.sender] */\n  dup2\n  mstore\n    /* \"contracts/gainzilla.sol\":2873:2881  isExempt */\n  0x14\n    /* \"contracts/gainzilla.sol\":2873:2893  isExempt[msg.sender] */\n  swap1\n  swap2\n  mstore\n  dup2\n  dup2\n  keccak256\n    /* \"contracts/gainzilla.sol\":2873:2900  isExempt[msg.sender] = true */\n  dup1\n  sload\n  not(0xff)\n  swap1\n  dup2\n  and\n    /* \"contracts/gainzilla.sol\":2823:2854  taxRates = TaxRates(0, 0, 0, 0) */\n  0x01\n    /* \"contracts/gainzilla.sol\":2873:2900  isExempt[msg.sender] = true */\n  swap1\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/gainzilla.sol\":2927:2931  this */\n  address\n    /* \"contracts/gainzilla.sol\":2910:2933  isExempt[address(this)] */\n  dup4\n  mstore\n  swap3\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/gainzilla.sol\":2910:2940  isExempt[address(this)] = true */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":1203:12034  contract MemeCoin is ERC20, Ownable {... */\n  jump(tag_57)\n    /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2518:2524  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2518:2524  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_26\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3125:3127   */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3107:3128   */\n  mstore\n    /* \"#utility.yul\":3164:3166   */\n  0x1f\n    /* \"#utility.yul\":3144:3162   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3137:3167   */\n  mstore\n    /* \"#utility.yul\":3203:3236   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":3183:3201   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3176:3237   */\n  mstore\n    /* \"#utility.yul\":3254:3272   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_26:\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8747:8753  amount */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8899:8908  _balances */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n  dup1\n  sload\n  dup7\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload\n    /* \"#utility.yul\":3656:3681   */\n  dup5\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":3629:3647   */\n  add\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/gainzilla.sol\":10370:10570  function _setupPair() private {... */\ntag_21:\n    /* \"contracts/gainzilla.sol\":10459:10472  routerAddress */\n  0x12\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":10442:10481  IUniswapV2Router(routerAddress).factory */\n  and\n  0xc45a0155\n    /* \"contracts/gainzilla.sol\":10442:10483  IUniswapV2Router(routerAddress).factory() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_39\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_39:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":10424:10508  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n  and\n  0xc9c65396\n    /* \"contracts/gainzilla.sol\":10517:10521  this */\n  address\n    /* \"contracts/gainzilla.sol\":10541:10554  routerAddress */\n  0x12\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":10524:10560  IUniswapV2Router(routerAddress).WETH */\n  and\n  0xad5c4648\n    /* \"contracts/gainzilla.sol\":10524:10562  IUniswapV2Router(routerAddress).WETH() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_43\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_43:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_44\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_44:\n    /* \"contracts/gainzilla.sol\":10424:10563  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n  mload(0x40)\n  not(sub(shl(0xe0, 0x01), 0x01))\n  0xe0\n  dup6\n  swap1\n  shl\n  and\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4217:4232   */\n  swap3\n  dup4\n  and\n    /* \"contracts/gainzilla.sol\":10424:10563  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4199:4233   */\n  mstore\n    /* \"#utility.yul\":4269:4284   */\n  swap2\n  and\n    /* \"#utility.yul\":4249:4267   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4242:4285   */\n  mstore\n    /* \"#utility.yul\":4134:4152   */\n  0x44\n  add\n    /* \"contracts/gainzilla.sol\":10424:10563  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_48\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_48:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_49\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_49:\n    /* \"contracts/gainzilla.sol\":10410:10421  pairAddress */\n  0x13\n    /* \"contracts/gainzilla.sol\":10410:10563  pairAddress = IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":10370:10570  function _setupPair() private {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\ntag_30:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:231   */\ntag_2:\n    /* \"#utility.yul\":54:55   */\n  0x00\n    /* \"#utility.yul\":80:81   */\n  dup3\n    /* \"#utility.yul\":70:202   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":124:134   */\n  0x4e487b71\n    /* \"#utility.yul\":119:122   */\n  0xe0\n    /* \"#utility.yul\":115:135   */\n  shl\n    /* \"#utility.yul\":112:113   */\n  0x00\n    /* \"#utility.yul\":105:136   */\n  mstore\n    /* \"#utility.yul\":159:163   */\n  0x12\n    /* \"#utility.yul\":156:157   */\n  0x04\n    /* \"#utility.yul\":149:164   */\n  mstore\n    /* \"#utility.yul\":187:191   */\n  0x24\n    /* \"#utility.yul\":184:185   */\n  0x00\n    /* \"#utility.yul\":177:192   */\n  revert\n    /* \"#utility.yul\":70:202   */\ntag_59:\n  pop\n    /* \"#utility.yul\":216:225   */\n  div\n  swap1\n    /* \"#utility.yul\":14:231   */\n  jump\t// out\n    /* \"#utility.yul\":236:363   */\ntag_52:\n    /* \"#utility.yul\":297:307   */\n  0x4e487b71\n    /* \"#utility.yul\":292:295   */\n  0xe0\n    /* \"#utility.yul\":288:308   */\n  shl\n    /* \"#utility.yul\":285:286   */\n  0x00\n    /* \"#utility.yul\":278:309   */\n  mstore\n    /* \"#utility.yul\":328:332   */\n  0x41\n    /* \"#utility.yul\":325:326   */\n  0x04\n    /* \"#utility.yul\":318:333   */\n  mstore\n    /* \"#utility.yul\":352:356   */\n  0x24\n    /* \"#utility.yul\":349:350   */\n  0x00\n    /* \"#utility.yul\":342:357   */\n  revert\n    /* \"#utility.yul\":368:748   */\ntag_53:\n    /* \"#utility.yul\":447:448   */\n  0x01\n    /* \"#utility.yul\":443:455   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":490:502   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":511:572   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":565:569   */\n  0x7f\n    /* \"#utility.yul\":557:563   */\n  dup3\n    /* \"#utility.yul\":553:570   */\n  and\n    /* \"#utility.yul\":543:570   */\n  swap2\n  pop\n    /* \"#utility.yul\":511:572   */\ntag_62:\n    /* \"#utility.yul\":618:620   */\n  0x20\n    /* \"#utility.yul\":610:616   */\n  dup3\n    /* \"#utility.yul\":607:621   */\n  lt\n    /* \"#utility.yul\":587:605   */\n  dup2\n    /* \"#utility.yul\":584:622   */\n  sub\n    /* \"#utility.yul\":581:742   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":664:674   */\n  0x4e487b71\n    /* \"#utility.yul\":659:662   */\n  0xe0\n    /* \"#utility.yul\":655:675   */\n  shl\n    /* \"#utility.yul\":652:653   */\n  0x00\n    /* \"#utility.yul\":645:676   */\n  mstore\n    /* \"#utility.yul\":699:703   */\n  0x22\n    /* \"#utility.yul\":696:697   */\n  0x04\n    /* \"#utility.yul\":689:704   */\n  mstore\n    /* \"#utility.yul\":727:731   */\n  0x24\n    /* \"#utility.yul\":724:725   */\n  0x00\n    /* \"#utility.yul\":717:732   */\n  revert\n    /* \"#utility.yul\":581:742   */\ntag_63:\n  pop\n    /* \"#utility.yul\":368:748   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":879:1397   */\ntag_55:\n    /* \"#utility.yul\":981:983   */\n  0x1f\n    /* \"#utility.yul\":976:979   */\n  dup3\n    /* \"#utility.yul\":973:984   */\n  gt\n    /* \"#utility.yul\":970:1391   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1017:1022   */\n  dup1\n    /* \"#utility.yul\":1014:1015   */\n  0x00\n    /* \"#utility.yul\":1007:1023   */\n  mstore\n    /* \"#utility.yul\":1061:1065   */\n  0x20\n    /* \"#utility.yul\":1058:1059   */\n  0x00\n    /* \"#utility.yul\":1048:1066   */\n  keccak256\n    /* \"#utility.yul\":1131:1133   */\n  0x1f\n    /* \"#utility.yul\":1119:1129   */\n  dup5\n    /* \"#utility.yul\":1115:1134   */\n  add\n    /* \"#utility.yul\":1112:1113   */\n  0x05\n    /* \"#utility.yul\":1108:1135   */\n  shr\n    /* \"#utility.yul\":1102:1106   */\n  dup2\n    /* \"#utility.yul\":1098:1136   */\n  add\n    /* \"#utility.yul\":1167:1171   */\n  0x20\n    /* \"#utility.yul\":1155:1165   */\n  dup6\n    /* \"#utility.yul\":1152:1172   */\n  lt\n    /* \"#utility.yul\":1149:1196   */\n  iszero\n  tag_67\n  jumpi\n  pop\n    /* \"#utility.yul\":1190:1194   */\n  dup1\n    /* \"#utility.yul\":1149:1196   */\ntag_67:\n    /* \"#utility.yul\":1245:1247   */\n  0x1f\n    /* \"#utility.yul\":1240:1243   */\n  dup5\n    /* \"#utility.yul\":1236:1248   */\n  add\n    /* \"#utility.yul\":1233:1234   */\n  0x05\n    /* \"#utility.yul\":1229:1249   */\n  shr\n    /* \"#utility.yul\":1223:1227   */\n  dup3\n    /* \"#utility.yul\":1219:1250   */\n  add\n    /* \"#utility.yul\":1209:1250   */\n  swap2\n  pop\n    /* \"#utility.yul\":1300:1381   */\ntag_68:\n    /* \"#utility.yul\":1318:1320   */\n  dup2\n    /* \"#utility.yul\":1311:1316   */\n  dup2\n    /* \"#utility.yul\":1308:1321   */\n  lt\n    /* \"#utility.yul\":1300:1381   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1377:1378   */\n  0x00\n    /* \"#utility.yul\":1363:1379   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1344:1345   */\n  0x01\n    /* \"#utility.yul\":1333:1346   */\n  add\n    /* \"#utility.yul\":1300:1381   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":1304:1307   */\n  pop\n  pop\n    /* \"#utility.yul\":879:1397   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1573:2918   */\ntag_9:\n    /* \"#utility.yul\":1693:1703   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1715:1745   */\n  dup2\n  gt\n    /* \"#utility.yul\":1712:1768   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":1748:1766   */\n  tag_74\n  tag_52\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1777:1874   */\n  tag_75\n    /* \"#utility.yul\":1867:1873   */\n  dup2\n    /* \"#utility.yul\":1827:1865   */\n  tag_76\n    /* \"#utility.yul\":1859:1863   */\n  dup5\n    /* \"#utility.yul\":1853:1864   */\n  sload\n    /* \"#utility.yul\":1827:1865   */\n  tag_53\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1821:1825   */\n  dup5\n    /* \"#utility.yul\":1777:1874   */\n  tag_55\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1929:1933   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1986:1988   */\n  0x1f\n    /* \"#utility.yul\":1975:1989   */\n  dup4\n  gt\n    /* \"#utility.yul\":2003:2004   */\n  0x01\n    /* \"#utility.yul\":1998:2661   */\n  dup2\n  eq\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2705:2706   */\n  0x00\n    /* \"#utility.yul\":2722:2728   */\n  dup5\n    /* \"#utility.yul\":2719:2808   */\n  iszero\n  tag_79\n  jumpi\n  pop\n    /* \"#utility.yul\":2774:2793   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2768:2794   */\n  mload\n    /* \"#utility.yul\":2719:2808   */\ntag_79:\n  not(0x00)\n    /* \"#utility.yul\":1530:1531   */\n  0x03\n    /* \"#utility.yul\":1526:1537   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1522:1546   */\n  shr\n    /* \"#utility.yul\":1518:1547   */\n  not\n    /* \"#utility.yul\":1508:1548   */\n  and\n    /* \"#utility.yul\":1554:1555   */\n  0x01\n    /* \"#utility.yul\":1550:1561   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1505:1562   */\n  or\n    /* \"#utility.yul\":2821:2902   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1968:2912   */\n  jump(tag_77)\n    /* \"#utility.yul\":1998:2661   */\ntag_78:\n    /* \"#utility.yul\":826:827   */\n  0x00\n    /* \"#utility.yul\":819:833   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":863:867   */\n  0x20\n    /* \"#utility.yul\":850:868   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2034:2054   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2152:2388   */\ntag_82:\n    /* \"#utility.yul\":2166:2173   */\n  dup3\n    /* \"#utility.yul\":2163:2164   */\n  dup2\n    /* \"#utility.yul\":2160:2174   */\n  lt\n    /* \"#utility.yul\":2152:2388   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n    /* \"#utility.yul\":2234:2276   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2347:2374   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2315:2316   */\n  0x01\n    /* \"#utility.yul\":2303:2317   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2182:2201   */\n  dup5\n  add\n    /* \"#utility.yul\":2152:2388   */\n  jump(tag_82)\ntag_84:\n    /* \"#utility.yul\":2156:2159   */\n  pop\n    /* \"#utility.yul\":2416:2422   */\n  dup6\n    /* \"#utility.yul\":2407:2414   */\n  dup3\n    /* \"#utility.yul\":2404:2423   */\n  lt\n    /* \"#utility.yul\":2401:2602   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":2477:2496   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2471:2497   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2560:2561   */\n  0x03\n    /* \"#utility.yul\":2556:2570   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2572:2575   */\n  0xf8\n    /* \"#utility.yul\":2552:2576   */\n  and\n    /* \"#utility.yul\":2548:2585   */\n  shr\n    /* \"#utility.yul\":2544:2586   */\n  not\n    /* \"#utility.yul\":2529:2587   */\n  and\n    /* \"#utility.yul\":2514:2588   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2401:2602   */\ntag_85:\n  pop\n  pop\n    /* \"#utility.yul\":2648:2649   */\n  0x01\n    /* \"#utility.yul\":2639:2645   */\n  dup5\n    /* \"#utility.yul\":2636:2637   */\n  0x01\n    /* \"#utility.yul\":2632:2646   */\n  shl\n    /* \"#utility.yul\":2628:2650   */\n  add\n    /* \"#utility.yul\":2622:2626   */\n  dup6\n    /* \"#utility.yul\":2615:2651   */\n  sstore\n    /* \"#utility.yul\":1968:2912   */\ntag_77:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1573:2918   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3283:3505   */\ntag_32:\n    /* \"#utility.yul\":3348:3357   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3369:3379   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3366:3499   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3421:3431   */\n  0x4e487b71\n    /* \"#utility.yul\":3416:3419   */\n  0xe0\n    /* \"#utility.yul\":3412:3432   */\n  shl\n    /* \"#utility.yul\":3409:3410   */\n  0x00\n    /* \"#utility.yul\":3402:3433   */\n  mstore\n    /* \"#utility.yul\":3456:3460   */\n  0x11\n    /* \"#utility.yul\":3453:3454   */\n  0x04\n    /* \"#utility.yul\":3446:3461   */\n  mstore\n    /* \"#utility.yul\":3484:3488   */\n  0x24\n    /* \"#utility.yul\":3481:3482   */\n  0x00\n    /* \"#utility.yul\":3474:3489   */\n  revert\n    /* \"#utility.yul\":3366:3499   */\ntag_88:\n    /* \"#utility.yul\":3283:3505   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3692:3982   */\ntag_41:\n    /* \"#utility.yul\":3762:3768   */\n  0x00\n    /* \"#utility.yul\":3815:3817   */\n  0x20\n    /* \"#utility.yul\":3803:3812   */\n  dup3\n    /* \"#utility.yul\":3794:3801   */\n  dup5\n    /* \"#utility.yul\":3790:3813   */\n  sub\n    /* \"#utility.yul\":3786:3818   */\n  slt\n    /* \"#utility.yul\":3783:3835   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3831:3832   */\n  0x00\n    /* \"#utility.yul\":3828:3829   */\n  dup1\n    /* \"#utility.yul\":3821:3833   */\n  revert\n    /* \"#utility.yul\":3783:3835   */\ntag_91:\n    /* \"#utility.yul\":3857:3873   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3902:3933   */\n  dup2\n  and\n    /* \"#utility.yul\":3892:3934   */\n  dup2\n  eq\n    /* \"#utility.yul\":3882:3952   */\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3948:3949   */\n  0x00\n    /* \"#utility.yul\":3945:3946   */\n  dup1\n    /* \"#utility.yul\":3938:3950   */\n  revert\n    /* \"#utility.yul\":3882:3952   */\ntag_92:\n    /* \"#utility.yul\":3971:3976   */\n  swap4\n    /* \"#utility.yul\":3692:3982   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3987:4291   */\ntag_57:\n    /* \"contracts/gainzilla.sol\":1203:12034  contract MemeCoin is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/gainzilla.sol\":1203:12034  contract MemeCoin is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8f9a55c0\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xad5dff73\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xd8d61c40\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xd8d61c40\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xfe0bb982\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xfe6b751e\n      eq\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0xad5dff73\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xc0d78655\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xc531b108\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xc95457ff\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x9d82190f\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x9d82190f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x9fde54f5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa8b08982\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x8f9a55c0\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9491f94d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x960bfe04\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x333f4b3d\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7773168f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x787a08a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7a845ece\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x333f4b3d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x599ca397\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x18160ddd\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3268cc56\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup1\n      0x0445b667\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1569d181\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/gainzilla.sol\":1666:1716  uint256 public swapThreshold = TOTAL_SUPPLY / 1000 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      sload(0x08)\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/gainzilla.sol\":1666:1716  uint256 public swapThreshold = TOTAL_SUPPLY / 1000 */\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n        /* \"#utility.yul\":1240:1254   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1233:1255   */\n      iszero\n        /* \"#utility.yul\":1215:1256   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1203:1205   */\n      0x20\n        /* \"#utility.yul\":1188:1206   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_50\n        /* \"#utility.yul\":1075:1262   */\n      jump\n        /* \"contracts/gainzilla.sol\":9406:9697  function setTaxRates(uint16 buyLp, uint16 buyEco, uint16 sellLp, uint16 sellEco) external onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      jump(tag_48)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_58\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":2440:2476   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2428:2430   */\n      0x20\n        /* \"#utility.yul\":2413:2431   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_50\n        /* \"#utility.yul\":2298:2482   */\n      jump\n        /* \"contracts/gainzilla.sol\":2191:2219  address public routerAddress */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      sload(0x12)\n      tag_85\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_85:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2651:2683   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2633:2684   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2621:2623   */\n      0x20\n        /* \"#utility.yul\":2606:2624   */\n      add\n        /* \"contracts/gainzilla.sol\":2191:2219  address public routerAddress */\n      tag_50\n        /* \"#utility.yul\":2487:2690   */\n      jump\n        /* \"contracts/gainzilla.sol\":1563:1587  TaxRates public taxRates */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      sload(0x07)\n      tag_90\n      swap1\n      0xffff\n      dup1\n      dup3\n      and\n      swap2\n      0x010000\n      dup2\n      div\n      dup3\n      and\n      swap2\n      shl(0x20, 0x01)\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0x30, 0x01)\n      swap1\n      div\n      and\n      dup5\n      jump\n    tag_90:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2928:2934   */\n      0xffff\n        /* \"#utility.yul\":2961:2976   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":2943:2977   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3013:3028   */\n      swap4\n      dup6\n      and\n        /* \"#utility.yul\":3008:3010   */\n      0x20\n        /* \"#utility.yul\":2993:3011   */\n      dup6\n      add\n        /* \"#utility.yul\":2986:3029   */\n      mstore\n        /* \"#utility.yul\":3065:3080   */\n      swap2\n      dup5\n      and\n        /* \"#utility.yul\":3045:3063   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":3038:3081   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3117:3132   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3112:3114   */\n      0x60\n        /* \"#utility.yul\":3097:3115   */\n      dup3\n      add\n        /* \"#utility.yul\":3090:3133   */\n      mstore\n        /* \"#utility.yul\":2905:2908   */\n      0x80\n        /* \"#utility.yul\":2890:2909   */\n      add\n        /* \"contracts/gainzilla.sol\":1563:1587  TaxRates public taxRates */\n      tag_50\n        /* \"#utility.yul\":2695:3139   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_58\n      tag_96\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":1346:1386  uint256 public maxWalletPercentage = 100 */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_48\n      sload(0x06)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_48\n      tag_105\n      calldatasize\n      0x04\n      tag_106\n      jump\t// in\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_65\n      tag_111\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":8826:9234  function priceDeviation() public view returns (int256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_48\n      tag_114\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":1947:1977  CooldownConfig public cooldown */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      sload(0x0c)\n      tag_118\n      swap1\n      0xff\n      dup2\n      and\n      swap1\n      0x0100\n      swap1\n      div\n      0xffffffff\n      and\n      dup3\n      jump\n    tag_118:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3767:3781   */\n      swap3\n      iszero\n        /* \"#utility.yul\":3760:3782   */\n      iszero\n        /* \"#utility.yul\":3742:3783   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3831:3841   */\n      0xffffffff\n        /* \"#utility.yul\":3819:3842   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3814:3816   */\n      0x20\n        /* \"#utility.yul\":3799:3817   */\n      dup4\n      add\n        /* \"#utility.yul\":3792:3843   */\n      mstore\n        /* \"#utility.yul\":3715:3733   */\n      add\n        /* \"contracts/gainzilla.sol\":1947:1977  CooldownConfig public cooldown */\n      tag_50\n        /* \"#utility.yul\":3576:3849   */\n      jump\n        /* \"contracts/gainzilla.sol\":11775:11997  function setMaxWalletPercentage(uint256 percentage) external onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_65\n      tag_124\n      calldatasize\n      0x04\n      tag_125\n      jump\t// in\n    tag_124:\n      tag_126\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_85)\n        /* \"contracts/gainzilla.sol\":11435:11568  function _maxWalletSize() public view returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_48\n      tag_133\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":7866:8278  function pairPrice() public view returns (uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_48\n      tag_137\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_53\n      tag_141\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9703:9805  function setThreshold(uint256 threshold) external onlyOwner {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_65\n      tag_145\n      calldatasize\n      0x04\n      tag_125\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":8284:8820  function cooldownRemaining(address account) public view returns (... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_148\n      tag_149\n      calldatasize\n      0x04\n      tag_106\n      jump\t// in\n    tag_149:\n      tag_150\n      jump\t// in\n    tag_148:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4270:4295   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":4326:4328   */\n      0x20\n        /* \"#utility.yul\":4311:4329   */\n      dup6\n      add\n        /* \"#utility.yul\":4304:4338   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":4354:4372   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":4347:4381   */\n      mstore\n        /* \"#utility.yul\":4412:4414   */\n      0x60\n        /* \"#utility.yul\":4397:4415   */\n      dup3\n      add\n        /* \"#utility.yul\":4390:4424   */\n      mstore\n        /* \"#utility.yul\":4257:4260   */\n      0x80\n        /* \"#utility.yul\":4242:4261   */\n      add\n        /* \"contracts/gainzilla.sol\":8284:8820  function cooldownRemaining(address account) public view returns (... */\n      tag_50\n        /* \"#utility.yul\":4039:4430   */\n      jump\n        /* \"contracts/gainzilla.sol\":10253:10364  function setExempt(address account, bool exempt) external onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_65\n      tag_155\n      calldatasize\n      0x04\n      tag_156\n      jump\t// in\n    tag_155:\n      tag_157\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_58\n      tag_160\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":2225:2251  address public pairAddress */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      sload(0x13)\n      tag_85\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_58\n      tag_169\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":2348:2388  mapping(address => bool) public isExempt */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      tag_58\n      tag_174\n      calldatasize\n      0x04\n      tag_106\n      jump\t// in\n    tag_174:\n      mstore(0x20, 0x14)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":9240:9400  function setRouter(address newRouter) external onlyOwner {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      tag_65\n      tag_179\n      calldatasize\n      0x04\n      tag_106\n      jump\t// in\n    tag_179:\n      tag_180\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":1756:1785  uint256 public accumulatedEco */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      tag_48\n      sload(0x0a)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":2152:2184  DiamondFloor public diamondFloor */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      sload(0x0e)\n      sload(0x0f)\n      sload(0x10)\n      sload(0x11)\n      tag_186\n      swap4\n      0xff\n      dup1\n      dup3\n      and\n      swap5\n      0x0100\n      swap1\n      swap3\n      div\n      0xffff\n      and\n      swap4\n      swap2\n      swap3\n      swap2\n      and\n      swap1\n      dup6\n      jump\n    tag_186:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5190:5204   */\n      swap6\n      iszero\n        /* \"#utility.yul\":5183:5205   */\n      iszero\n        /* \"#utility.yul\":5165:5206   */\n      dup7\n      mstore\n        /* \"#utility.yul\":5254:5260   */\n      0xffff\n        /* \"#utility.yul\":5242:5261   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":5237:5239   */\n      0x20\n        /* \"#utility.yul\":5222:5240   */\n      dup7\n      add\n        /* \"#utility.yul\":5215:5262   */\n      mstore\n        /* \"#utility.yul\":5278:5296   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":5271:5305   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5348:5362   */\n      iszero\n        /* \"#utility.yul\":5341:5363   */\n      iszero\n        /* \"#utility.yul\":5336:5338   */\n      0x60\n        /* \"#utility.yul\":5321:5339   */\n      dup4\n      add\n        /* \"#utility.yul\":5314:5364   */\n      mstore\n        /* \"#utility.yul\":5395:5398   */\n      0x80\n        /* \"#utility.yul\":5380:5399   */\n      dup3\n      add\n        /* \"#utility.yul\":5373:5408   */\n      mstore\n        /* \"#utility.yul\":5152:5155   */\n      0xa0\n        /* \"#utility.yul\":5137:5156   */\n      add\n        /* \"contracts/gainzilla.sol\":2152:2184  DiamondFloor public diamondFloor */\n      tag_50\n        /* \"#utility.yul\":4920:5414   */\n      jump\n        /* \"contracts/gainzilla.sol\":1722:1750  uint256 public accumulatedLp */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      pop\n      tag_48\n      sload(0x09)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n      pop\n      tag_48\n      tag_196\n      calldatasize\n      0x04\n      tag_197\n      jump\t// in\n    tag_196:\n      tag_198\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      pop\n      tag_65\n      tag_202\n      calldatasize\n      0x04\n      tag_106\n      jump\t// in\n    tag_202:\n      tag_203\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9987:10247  function configureDiamondFloor(bool enabled, uint16 triggerPercent) external onlyOwner {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n      tag_65\n      tag_206\n      calldatasize\n      0x04\n      tag_207\n      jump\t// in\n    tag_206:\n      tag_208\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9811:9981  function configureCooldown(bool enabled, uint32 duration) external onlyOwner {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n      pop\n      tag_65\n      tag_211\n      calldatasize\n      0x04\n      tag_212\n      jump\t// in\n    tag_211:\n      tag_213\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_217\n      swap1\n      tag_216\n      jump\t// in\n    tag_217:\n      dup1\n      iszero\n      tag_218\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_219\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_218)\n    tag_219:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_220:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_220\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_224\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_225\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_221:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":9406:9697  function setTaxRates(uint16 buyLp, uint16 buyEco, uint16 sellLp, uint16 sellEco) external onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_227\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_228\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_227:\n        /* \"contracts/gainzilla.sol\":9542:9546  2500 */\n      0x09c4\n        /* \"contracts/gainzilla.sol\":9524:9538  buyLp + buyEco */\n      tag_230\n        /* \"contracts/gainzilla.sol\":9532:9538  buyEco */\n      dup5\n        /* \"contracts/gainzilla.sol\":9524:9529  buyLp */\n      dup7\n        /* \"contracts/gainzilla.sol\":9524:9538  buyLp + buyEco */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"contracts/gainzilla.sol\":9524:9546  buyLp + buyEco <= 2500 */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":9516:9566  require(buyLp + buyEco <= 2500, \"Max 25% buy tax\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7405:7407   */\n      0x20\n        /* \"contracts/gainzilla.sol\":9516:9566  require(buyLp + buyEco <= 2500, \"Max 25% buy tax\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7387:7408   */\n      mstore\n        /* \"#utility.yul\":7444:7446   */\n      0x0f\n        /* \"#utility.yul\":7424:7442   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7417:7447   */\n      mstore\n      shl(0x8b, 0x09ac2f040646a4a40c4eaf240e8c2f)\n        /* \"#utility.yul\":7463:7481   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7456:7501   */\n      mstore\n        /* \"#utility.yul\":7518:7536   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":9516:9566  require(buyLp + buyEco <= 2500, \"Max 25% buy tax\") */\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"contracts/gainzilla.sol\":9604:9608  2500 */\n      0x09c4\n        /* \"contracts/gainzilla.sol\":9584:9600  sellLp + sellEco */\n      tag_235\n        /* \"contracts/gainzilla.sol\":9593:9600  sellEco */\n      dup3\n        /* \"contracts/gainzilla.sol\":9584:9590  sellLp */\n      dup5\n        /* \"contracts/gainzilla.sol\":9584:9600  sellLp + sellEco */\n      tag_231\n      jump\t// in\n    tag_235:\n        /* \"contracts/gainzilla.sol\":9584:9608  sellLp + sellEco <= 2500 */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":9576:9629  require(sellLp + sellEco <= 2500, \"Max 25% sell tax\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7749:7751   */\n      0x20\n        /* \"contracts/gainzilla.sol\":9576:9629  require(sellLp + sellEco <= 2500, \"Max 25% sell tax\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7731:7752   */\n      mstore\n        /* \"#utility.yul\":7788:7790   */\n      0x10\n        /* \"#utility.yul\":7768:7786   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7761:7791   */\n      mstore\n      shl(0x83, 0x09ac2f040646a4a40e6cad8d840e8c2f)\n        /* \"#utility.yul\":7807:7825   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7800:7846   */\n      mstore\n        /* \"#utility.yul\":7863:7881   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":9576:9629  require(sellLp + sellEco <= 2500, \"Max 25% sell tax\") */\n      tag_233\n        /* \"#utility.yul\":7547:7887   */\n      jump\n        /* \"contracts/gainzilla.sol\":9576:9629  require(sellLp + sellEco <= 2500, \"Max 25% sell tax\") */\n    tag_236:\n        /* \"contracts/gainzilla.sol\":9650:9690  TaxRates(buyLp, buyEco, sellLp, sellEco) */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      0xffff\n      swap6\n      dup7\n      and\n      dup1\n      dup3\n      mstore\n      swap5\n      dup7\n      and\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap4\n      dup7\n      and\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      swap2\n      swap1\n      swap5\n      and\n      0x60\n      swap1\n      swap2\n      add\n      dup2\n      swap1\n      mstore\n        /* \"contracts/gainzilla.sol\":9639:9647  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":9639:9690  taxRates = TaxRates(buyLp, buyEco, sellLp, sellEco) */\n      dup1\n      sload\n      not(0xffffffff)\n      and\n      swap1\n      swap4\n      or\n      0x010000\n      swap1\n      swap3\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      not(0xffffffff00000000)\n      and\n      shl(0x20, 0x01)\n      swap1\n      swap4\n      mul\n      not(0xffff000000000000)\n      and\n      swap3\n      swap1\n      swap3\n      or\n      shl(0x30, 0x01)\n      swap1\n      swap3\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":9406:9697  function setTaxRates(uint16 buyLp, uint16 buyEco, uint16 sellLp, uint16 sellEco) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_242\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_243\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_244\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_245\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5441:5452  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_240:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_224\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_250\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_198\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_225\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_111:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_255\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_228\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_257\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_258\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":8826:9234  function priceDeviation() public view returns (int256) {... */\n    tag_114:\n        /* \"contracts/gainzilla.sol\":8895:8916  diamondFloor.athPrice */\n      sload(0x0f)\n        /* \"contracts/gainzilla.sol\":8873:8879  int256 */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":8895:8921  diamondFloor.athPrice == 0 */\n      dup2\n      sub\n        /* \"contracts/gainzilla.sol\":8891:8931  if (diamondFloor.athPrice == 0) return 0 */\n      tag_260\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":8930:8931  0 */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":8826:9234  function priceDeviation() public view returns (int256) {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":8891:8931  if (diamondFloor.athPrice == 0) return 0 */\n    tag_260:\n        /* \"contracts/gainzilla.sol\":8941:8961  uint256 currentPrice */\n      0x00\n        /* \"contracts/gainzilla.sol\":8964:8975  pairPrice() */\n      tag_261\n        /* \"contracts/gainzilla.sol\":8964:8973  pairPrice */\n      tag_137\n        /* \"contracts/gainzilla.sol\":8964:8975  pairPrice() */\n      jump\t// in\n    tag_261:\n        /* \"contracts/gainzilla.sol\":9007:9028  diamondFloor.athPrice */\n      sload(0x0f)\n        /* \"contracts/gainzilla.sol\":8941:8975  uint256 currentPrice = pairPrice() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":8992:9028  currentPrice > diamondFloor.athPrice */\n      dup2\n      gt\n        /* \"contracts/gainzilla.sol\":8992:9227  currentPrice > diamondFloor.athPrice ?... */\n      tag_262\n      jumpi\n        /* \"contracts/gainzilla.sol\":9204:9225  diamondFloor.athPrice */\n      sload(0x0f)\n        /* \"contracts/gainzilla.sol\":9150:9226  diamondFloor.athPrice.sub(currentPrice).mul(1e18).div(diamondFloor.athPrice) */\n      tag_263\n      swap1\n        /* \"contracts/gainzilla.sol\":9150:9199  diamondFloor.athPrice.sub(currentPrice).mul(1e18) */\n      tag_264\n        /* \"contracts/gainzilla.sol\":9194:9198  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":9150:9189  diamondFloor.athPrice.sub(currentPrice) */\n      tag_265\n        /* \"contracts/gainzilla.sol\":9204:9225  diamondFloor.athPrice */\n      dup4\n        /* \"contracts/gainzilla.sol\":9176:9188  currentPrice */\n      dup7\n        /* \"contracts/gainzilla.sol\":9150:9175  diamondFloor.athPrice.sub */\n      tag_266\n        /* \"contracts/gainzilla.sol\":9150:9189  diamondFloor.athPrice.sub(currentPrice) */\n      jump\t// in\n    tag_265:\n        /* \"contracts/gainzilla.sol\":9150:9193  diamondFloor.athPrice.sub(currentPrice).mul */\n      swap1\n      tag_267\n        /* \"contracts/gainzilla.sol\":9150:9199  diamondFloor.athPrice.sub(currentPrice).mul(1e18) */\n      jump\t// in\n    tag_264:\n        /* \"contracts/gainzilla.sol\":9150:9203  diamondFloor.athPrice.sub(currentPrice).mul(1e18).div */\n      swap1\n      tag_268\n        /* \"contracts/gainzilla.sol\":9150:9226  diamondFloor.athPrice.sub(currentPrice).mul(1e18).div(diamondFloor.athPrice) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/gainzilla.sol\":9142:9227  -int256(diamondFloor.athPrice.sub(currentPrice).mul(1e18).div(diamondFloor.athPrice)) */\n      tag_269\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"contracts/gainzilla.sol\":8992:9227  currentPrice > diamondFloor.athPrice ?... */\n      jump(tag_272)\n    tag_262:\n        /* \"contracts/gainzilla.sol\":9104:9125  diamondFloor.athPrice */\n      sload(0x0f)\n        /* \"contracts/gainzilla.sol\":9050:9126  currentPrice.sub(diamondFloor.athPrice).mul(1e18).div(diamondFloor.athPrice) */\n      tag_272\n      swap1\n        /* \"contracts/gainzilla.sol\":9050:9099  currentPrice.sub(diamondFloor.athPrice).mul(1e18) */\n      tag_264\n        /* \"contracts/gainzilla.sol\":9094:9098  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":9050:9089  currentPrice.sub(diamondFloor.athPrice) */\n      tag_265\n        /* \"contracts/gainzilla.sol\":9050:9062  currentPrice */\n      dup6\n        /* \"contracts/gainzilla.sol\":9104:9125  diamondFloor.athPrice */\n      dup5\n        /* \"contracts/gainzilla.sol\":9050:9066  currentPrice.sub */\n      tag_266\n        /* \"contracts/gainzilla.sol\":9050:9089  currentPrice.sub(diamondFloor.athPrice) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9050:9126  currentPrice.sub(diamondFloor.athPrice).mul(1e18).div(diamondFloor.athPrice) */\n    tag_272:\n        /* \"contracts/gainzilla.sol\":8985:9227  return currentPrice > diamondFloor.athPrice ?... */\n      swap2\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":8826:9234  function priceDeviation() public view returns (int256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":11775:11997  function setMaxWalletPercentage(uint256 percentage) external onlyOwner {... */\n    tag_126:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_276\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_228\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_276:\n        /* \"contracts/gainzilla.sol\":11878:11881  100 */\n      0x64\n        /* \"contracts/gainzilla.sol\":11864:11874  percentage */\n      dup2\n        /* \"contracts/gainzilla.sol\":11864:11881  percentage >= 100 */\n      lt\n      iszero\n        /* \"contracts/gainzilla.sol\":11856:11905  require(percentage >= 100, \"Max 1% wallet limit\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8365:8367   */\n      0x20\n        /* \"contracts/gainzilla.sol\":11856:11905  require(percentage >= 100, \"Max 1% wallet limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8347:8368   */\n      mstore\n        /* \"#utility.yul\":8404:8406   */\n      0x13\n        /* \"#utility.yul\":8384:8402   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8377:8407   */\n      mstore\n      shl(0x6a, 0x13585e080c49481dd85b1b195d081b1a5b5a5d)\n        /* \"#utility.yul\":8423:8441   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8416:8465   */\n      mstore\n        /* \"#utility.yul\":8482:8500   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":11856:11905  require(percentage >= 100, \"Max 1% wallet limit\") */\n      tag_233\n        /* \"#utility.yul\":8163:8506   */\n      jump\n        /* \"contracts/gainzilla.sol\":11856:11905  require(percentage >= 100, \"Max 1% wallet limit\") */\n    tag_278:\n        /* \"contracts/gainzilla.sol\":11915:11934  maxWalletPercentage */\n      0x06\n        /* \"contracts/gainzilla.sol\":11915:11947  maxWalletPercentage = percentage */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":11962:11990  MaxWalletUpdated(percentage) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":11962:11990  MaxWalletUpdated(percentage) */\n      0x12528a3c61e0f3b2d6fc707a9fc58b1af86e252cad0d7f4c154ebeabb162dace\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/gainzilla.sol\":11962:11990  MaxWalletUpdated(percentage) */\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/gainzilla.sol\":11775:11997  function setMaxWalletPercentage(uint256 percentage) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":11435:11568  function _maxWalletSize() public view returns (uint256) {... */\n    tag_133:\n        /* \"contracts/gainzilla.sol\":11482:11489  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":11508:11561  TOTAL_SUPPLY.mul(maxWalletPercentage).div(BP_DIVISOR) */\n      tag_284\n        /* \"contracts/gainzilla.sol\":1430:1436  10_000 */\n      0x2710\n        /* \"contracts/gainzilla.sol\":11508:11545  TOTAL_SUPPLY.mul(maxWalletPercentage) */\n      tag_264\n        /* \"contracts/gainzilla.sol\":11525:11544  maxWalletPercentage */\n      sload(0x06)\n        /* \"contracts/gainzilla.sol\":1318:1340  1_000_000_000 * 10**18 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"contracts/gainzilla.sol\":11508:11524  TOTAL_SUPPLY.mul */\n      tag_267\n      swap1\n        /* \"contracts/gainzilla.sol\":11508:11545  TOTAL_SUPPLY.mul(maxWalletPercentage) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":11508:11561  TOTAL_SUPPLY.mul(maxWalletPercentage).div(BP_DIVISOR) */\n    tag_284:\n        /* \"contracts/gainzilla.sol\":11501:11561  return TOTAL_SUPPLY.mul(maxWalletPercentage).div(BP_DIVISOR) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":11435:11568  function _maxWalletSize() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":7866:8278  function pairPrice() public view returns (uint256) {... */\n    tag_137:\n        /* \"contracts/gainzilla.sol\":7908:7915  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":7928:7944  uint112 reserve0 */\n      dup1\n        /* \"contracts/gainzilla.sol\":7946:7962  uint112 reserve1 */\n      0x00\n        /* \"contracts/gainzilla.sol\":7982:7993  pairAddress */\n      0x13\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":7967:8006  IUniswapV2Pair(pairAddress).getReserves */\n      and\n      0x0902f1ac\n        /* \"contracts/gainzilla.sol\":7967:8008  IUniswapV2Pair(pairAddress).getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_288\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_288:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_289\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n        /* \"contracts/gainzilla.sol\":7927:8008  (uint112 reserve0, uint112 reserve1,) = IUniswapV2Pair(pairAddress).getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":8022:8030  reserve0 */\n      dup2\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":8022:8035  reserve0 == 0 */\n      and\n        /* \"contracts/gainzilla.sol\":8034:8035  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":8022:8035  reserve0 == 0 */\n      eq\n        /* \"contracts/gainzilla.sol\":8022:8052  reserve0 == 0 || reserve1 == 0 */\n      dup1\n      tag_291\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":8039:8052  reserve1 == 0 */\n      dup2\n      and\n      iszero\n        /* \"contracts/gainzilla.sol\":8022:8052  reserve0 == 0 || reserve1 == 0 */\n    tag_291:\n        /* \"contracts/gainzilla.sol\":8018:8062  if (reserve0 == 0 || reserve1 == 0) return 0 */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/gainzilla.sol\":8061:8062  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":8054:8062  return 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":7866:8278  function pairPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":8018:8062  if (reserve0 == 0 || reserve1 == 0) return 0 */\n    tag_292:\n        /* \"contracts/gainzilla.sol\":8103:8114  pairAddress */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":8088:8124  IUniswapV2Pair(pairAddress).token0() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x0dfe1681)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/gainzilla.sol\":8136:8140  this */\n      address\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":8103:8114  pairAddress */\n      and\n      swap2\n        /* \"contracts/gainzilla.sol\":8088:8122  IUniswapV2Pair(pairAddress).token0 */\n      0x0dfe1681\n      swap2\n        /* \"contracts/gainzilla.sol\":8088:8124  IUniswapV2Pair(pairAddress).token0() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/gainzilla.sol\":8103:8114  pairAddress */\n      dup7\n        /* \"contracts/gainzilla.sol\":8088:8124  IUniswapV2Pair(pairAddress).token0() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_294\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_294:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_295\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":8088:8141  IUniswapV2Pair(pairAddress).token0() == address(this) */\n      and\n      eq\n        /* \"contracts/gainzilla.sol\":8088:8271  IUniswapV2Pair(pairAddress).token0() == address(this) ?... */\n      tag_297\n      jumpi\n        /* \"contracts/gainzilla.sol\":8221:8271  uint256(reserve0).mul(1e18).div(uint256(reserve1)) */\n      tag_298\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":8253:8270  uint256(reserve1) */\n      dup1\n      dup4\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":8221:8248  uint256(reserve0).mul(1e18) */\n      tag_264\n      swap1\n        /* \"contracts/gainzilla.sol\":8221:8238  uint256(reserve0) */\n      dup6\n      and\n        /* \"contracts/gainzilla.sol\":8243:8247  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":8221:8242  uint256(reserve0).mul */\n      tag_267\n        /* \"contracts/gainzilla.sol\":8221:8248  uint256(reserve0).mul(1e18) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":8221:8271  uint256(reserve0).mul(1e18).div(uint256(reserve1)) */\n    tag_298:\n        /* \"contracts/gainzilla.sol\":8088:8271  IUniswapV2Pair(pairAddress).token0() == address(this) ?... */\n      jump(tag_301)\n    tag_297:\n        /* \"contracts/gainzilla.sol\":8156:8206  uint256(reserve1).mul(1e18).div(uint256(reserve0)) */\n      tag_301\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":8188:8205  uint256(reserve0) */\n      dup1\n      dup5\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":8156:8183  uint256(reserve1).mul(1e18) */\n      tag_264\n      swap1\n        /* \"contracts/gainzilla.sol\":8156:8173  uint256(reserve1) */\n      dup5\n      and\n        /* \"contracts/gainzilla.sol\":8178:8182  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":8156:8177  uint256(reserve1).mul */\n      tag_267\n        /* \"contracts/gainzilla.sol\":8156:8183  uint256(reserve1).mul(1e18) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":8156:8206  uint256(reserve1).mul(1e18).div(uint256(reserve0)) */\n    tag_301:\n        /* \"contracts/gainzilla.sol\":8081:8271  return IUniswapV2Pair(pairAddress).token0() == address(this) ?... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":7866:8278  function pairPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9703:9805  function setThreshold(uint256 threshold) external onlyOwner {... */\n    tag_146:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_310\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_228\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_310:\n        /* \"contracts/gainzilla.sol\":9773:9786  swapThreshold */\n      0x08\n        /* \"contracts/gainzilla.sol\":9773:9798  swapThreshold = threshold */\n      sstore\n        /* \"contracts/gainzilla.sol\":9703:9805  function setThreshold(uint256 threshold) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":8284:8820  function cooldownRemaining(address account) public view returns (... */\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":8487:8514  cooldown.cooldowns[account] */\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":8358:8371  uint256 days_ */\n      0x00\n        /* \"contracts/gainzilla.sol\":8487:8514  cooldown.cooldowns[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":8487:8505  cooldown.cooldowns */\n      0x0d\n        /* \"contracts/gainzilla.sol\":8487:8514  cooldown.cooldowns[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":8358:8371  uint256 days_ */\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"contracts/gainzilla.sol\":8517:8532  block.timestamp */\n      timestamp\n      lt\n        /* \"contracts/gainzilla.sol\":8487:8600  cooldown.cooldowns[account] > block.timestamp ? ... */\n      tag_313\n      jumpi\n        /* \"contracts/gainzilla.sol\":8599:8600  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":8487:8600  cooldown.cooldowns[account] > block.timestamp ? ... */\n      jump(tag_315)\n    tag_313:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":8548:8575  cooldown.cooldowns[account] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":8548:8566  cooldown.cooldowns */\n      0x0d\n        /* \"contracts/gainzilla.sol\":8548:8575  cooldown.cooldowns[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":8548:8596  cooldown.cooldowns[account].sub(block.timestamp) */\n      tag_315\n      swap1\n        /* \"contracts/gainzilla.sol\":8580:8595  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":8548:8579  cooldown.cooldowns[account].sub */\n      tag_266\n        /* \"contracts/gainzilla.sol\":8548:8596  cooldown.cooldowns[account].sub(block.timestamp) */\n      jump\t// in\n    tag_315:\n        /* \"contracts/gainzilla.sol\":8467:8600  uint256 remaining = cooldown.cooldowns[account] > block.timestamp ? ... */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":8627:8647  remaining.div(86400) */\n      tag_316\n        /* \"contracts/gainzilla.sol\":8467:8600  uint256 remaining = cooldown.cooldowns[account] > block.timestamp ? ... */\n      dup2\n        /* \"contracts/gainzilla.sol\":8641:8646  86400 */\n      0x015180\n        /* \"contracts/gainzilla.sol\":8627:8640  remaining.div */\n      tag_268\n        /* \"contracts/gainzilla.sol\":8627:8647  remaining.div(86400) */\n      jump\t// in\n    tag_316:\n        /* \"contracts/gainzilla.sol\":8619:8647  days_ = remaining.div(86400) */\n      swap5\n      pop\n        /* \"contracts/gainzilla.sol\":8657:8675  remaining %= 86400 */\n      tag_317\n        /* \"contracts/gainzilla.sol\":8670:8675  86400 */\n      0x015180\n        /* \"contracts/gainzilla.sol\":8657:8675  remaining %= 86400 */\n      dup3\n      tag_318\n      jump\t// in\n    tag_317:\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":8694:8713  remaining.div(3600) */\n      tag_319\n        /* \"contracts/gainzilla.sol\":8657:8675  remaining %= 86400 */\n      dup2\n        /* \"contracts/gainzilla.sol\":8708:8712  3600 */\n      0x0e10\n        /* \"contracts/gainzilla.sol\":8694:8707  remaining.div */\n      tag_268\n        /* \"contracts/gainzilla.sol\":8694:8713  remaining.div(3600) */\n      jump\t// in\n    tag_319:\n        /* \"contracts/gainzilla.sol\":8685:8713  hours_ = remaining.div(3600) */\n      swap4\n      pop\n        /* \"contracts/gainzilla.sol\":8723:8740  remaining %= 3600 */\n      tag_320\n        /* \"contracts/gainzilla.sol\":8736:8740  3600 */\n      0x0e10\n        /* \"contracts/gainzilla.sol\":8723:8740  remaining %= 3600 */\n      dup3\n      tag_318\n      jump\t// in\n    tag_320:\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":8761:8778  remaining.div(60) */\n      tag_321\n        /* \"contracts/gainzilla.sol\":8723:8740  remaining %= 3600 */\n      dup2\n        /* \"contracts/gainzilla.sol\":8775:8777  60 */\n      0x3c\n        /* \"contracts/gainzilla.sol\":8761:8774  remaining.div */\n      tag_268\n        /* \"contracts/gainzilla.sol\":8761:8778  remaining.div(60) */\n      jump\t// in\n    tag_321:\n        /* \"contracts/gainzilla.sol\":8750:8778  minutes_ = remaining.div(60) */\n      swap3\n      pop\n        /* \"contracts/gainzilla.sol\":8799:8813  remaining % 60 */\n      tag_322\n        /* \"contracts/gainzilla.sol\":8811:8813  60 */\n      0x3c\n        /* \"contracts/gainzilla.sol\":8799:8808  remaining */\n      dup3\n        /* \"contracts/gainzilla.sol\":8799:8813  remaining % 60 */\n      tag_318\n      jump\t// in\n    tag_322:\n        /* \"contracts/gainzilla.sol\":8788:8813  seconds_ = remaining % 60 */\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":8457:8820  {... */\n      pop\n        /* \"contracts/gainzilla.sol\":8284:8820  function cooldownRemaining(address account) public view returns (... */\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":10253:10364  function setExempt(address account, bool exempt) external onlyOwner {... */\n    tag_157:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_324\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_228\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_324:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":10331:10348  isExempt[account] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":10331:10339  isExempt */\n      0x14\n        /* \"contracts/gainzilla.sol\":10331:10348  isExempt[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":10331:10357  isExempt[account] = exempt */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":10253:10364  function setExempt(address account, bool exempt) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_328\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_198\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9835:9837   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9817:9838   */\n      mstore\n        /* \"#utility.yul\":9874:9876   */\n      0x25\n        /* \"#utility.yul\":9854:9872   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9847:9877   */\n      mstore\n        /* \"#utility.yul\":9913:9947   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":9893:9911   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9886:9948   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":9964:9982   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9957:9992   */\n      mstore\n        /* \"#utility.yul\":10009:10028   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_233\n        /* \"#utility.yul\":9633:10034   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_329:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_332\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_225\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_332:\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6991:6995  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_224\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_245\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9240:9400  function setRouter(address newRouter) external onlyOwner {... */\n    tag_180:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_337\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_228\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_337:\n        /* \"contracts/gainzilla.sol\":9307:9320  routerAddress */\n      0x12\n        /* \"contracts/gainzilla.sol\":9307:9332  routerAddress = newRouter */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":9342:9354  _setupPair() */\n      tag_339\n        /* \"contracts/gainzilla.sol\":9342:9352  _setupPair */\n      tag_340\n        /* \"contracts/gainzilla.sol\":9342:9354  _setupPair() */\n      jump\t// in\n    tag_339:\n        /* \"contracts/gainzilla.sol\":9369:9393  RouterUpdated(newRouter) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2651:2683   */\n      dup3\n      and\n        /* \"#utility.yul\":2633:2684   */\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":9369:9393  RouterUpdated(newRouter) */\n      0x7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc80\n      swap1\n        /* \"#utility.yul\":2621:2623   */\n      0x20\n        /* \"#utility.yul\":2606:2624   */\n      add\n        /* \"contracts/gainzilla.sol\":9369:9393  RouterUpdated(newRouter) */\n      tag_281\n        /* \"#utility.yul\":2487:2690   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_203:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_344\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_228\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_344:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10241:10243   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10223:10244   */\n      mstore\n        /* \"#utility.yul\":10280:10282   */\n      0x26\n        /* \"#utility.yul\":10260:10278   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10253:10283   */\n      mstore\n        /* \"#utility.yul\":10319:10353   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10299:10317   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10292:10354   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":10370:10388   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10363:10399   */\n      mstore\n        /* \"#utility.yul\":10416:10435   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_233\n        /* \"#utility.yul\":10039:10441   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_346:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_349\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_258\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":9987:10247  function configureDiamondFloor(bool enabled, uint16 triggerPercent) external onlyOwner {... */\n    tag_208:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_351\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_228\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_351:\n        /* \"contracts/gainzilla.sol\":1430:1436  10_000 */\n      0x2710\n        /* \"contracts/gainzilla.sol\":10092:10106  triggerPercent */\n      dup2\n        /* \"contracts/gainzilla.sol\":10092:10120  triggerPercent <= BP_DIVISOR */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":10084:10143  require(triggerPercent <= BP_DIVISOR, \"Invalid percentage\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10648:10650   */\n      0x20\n        /* \"contracts/gainzilla.sol\":10084:10143  require(triggerPercent <= BP_DIVISOR, \"Invalid percentage\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10630:10651   */\n      mstore\n        /* \"#utility.yul\":10687:10689   */\n      0x12\n        /* \"#utility.yul\":10667:10685   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10660:10690   */\n      mstore\n      shl(0x70, 0x496e76616c69642070657263656e74616765)\n        /* \"#utility.yul\":10706:10724   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10699:10747   */\n      mstore\n        /* \"#utility.yul\":10764:10782   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":10084:10143  require(triggerPercent <= BP_DIVISOR, \"Invalid percentage\") */\n      tag_233\n        /* \"#utility.yul\":10446:10788   */\n      jump\n        /* \"contracts/gainzilla.sol\":10084:10143  require(triggerPercent <= BP_DIVISOR, \"Invalid percentage\") */\n    tag_353:\n        /* \"contracts/gainzilla.sol\":10153:10165  diamondFloor */\n      0x0e\n        /* \"contracts/gainzilla.sol\":10153:10183  diamondFloor.enabled = enabled */\n      dup1\n      sload\n      not(0xffffff)\n        /* \"contracts/gainzilla.sol\":10193:10240  diamondFloor.triggerPercentage = triggerPercent */\n      and\n        /* \"contracts/gainzilla.sol\":10153:10183  diamondFloor.enabled = enabled */\n      swap3\n      iszero\n      iszero\n      not(0xffff00)\n        /* \"contracts/gainzilla.sol\":10193:10240  diamondFloor.triggerPercentage = triggerPercent */\n      and\n      swap3\n      swap1\n      swap3\n      or\n        /* \"contracts/gainzilla.sol\":10153:10183  diamondFloor.enabled = enabled */\n      0x0100\n        /* \"contracts/gainzilla.sol\":10193:10240  diamondFloor.triggerPercentage = triggerPercent */\n      0xffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":9987:10247  function configureDiamondFloor(bool enabled, uint16 triggerPercent) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":9811:9981  function configureCooldown(bool enabled, uint32 duration) external onlyOwner {... */\n    tag_213:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_357\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_228\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_357:\n        /* \"contracts/gainzilla.sol\":9898:9906  cooldown */\n      0x0c\n        /* \"contracts/gainzilla.sol\":9898:9924  cooldown.enabled = enabled */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup4\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":9954:9974  duration * 1 minutes */\n      tag_359\n        /* \"contracts/gainzilla.sol\":9954:9962  duration */\n      dup2\n        /* \"contracts/gainzilla.sol\":9965:9974  1 minutes */\n      0x3c\n        /* \"contracts/gainzilla.sol\":9954:9974  duration * 1 minutes */\n      tag_360\n      jump\t// in\n    tag_359:\n        /* \"contracts/gainzilla.sol\":9934:9942  cooldown */\n      0x0c\n        /* \"contracts/gainzilla.sol\":9934:9974  cooldown.duration = duration * 1 minutes */\n      dup1\n      sload\n      0xffffffff\n      swap3\n      swap1\n      swap3\n      and\n      0x0100\n      mul\n      not(0xffffffff00)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":9811:9981  function configureCooldown(bool enabled, uint32 duration) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11249:11251   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11231:11252   */\n      mstore\n        /* \"#utility.yul\":11288:11290   */\n      0x24\n        /* \"#utility.yul\":11268:11286   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11261:11291   */\n      mstore\n        /* \"#utility.yul\":11327:11361   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":11307:11325   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11300:11362   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":11378:11396   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11371:11405   */\n      mstore\n        /* \"#utility.yul\":11422:11441   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_233\n        /* \"#utility.yul\":11047:11447   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_363:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_366\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11654:11656   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11636:11657   */\n      mstore\n        /* \"#utility.yul\":11693:11695   */\n      0x22\n        /* \"#utility.yul\":11673:11691   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11666:11696   */\n      mstore\n        /* \"#utility.yul\":11732:11766   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":11712:11730   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11705:11767   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":11783:11801   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11776:11808   */\n      mstore\n        /* \"#utility.yul\":11825:11844   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_233\n        /* \"#utility.yul\":11452:11850   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_366:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":160:185   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_228:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12057:12059   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12039:12060   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12076:12094   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12069:12099   */\n      mstore\n        /* \"#utility.yul\":12135:12169   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12115:12133   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12108:12170   */\n      mstore\n        /* \"#utility.yul\":12187:12205   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_233\n        /* \"#utility.yul\":11855:12211   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_243:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_377\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_198\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_377:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_382\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12418:12420   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12400:12421   */\n      mstore\n        /* \"#utility.yul\":12457:12459   */\n      0x1d\n        /* \"#utility.yul\":12437:12455   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12430:12460   */\n      mstore\n        /* \"#utility.yul\":12496:12527   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":12476:12494   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12469:12528   */\n      mstore\n        /* \"#utility.yul\":12545:12563   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_233\n        /* \"#utility.yul\":12216:12569   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_379:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_382\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_225\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":2953:4458  function _transfer(... */\n    tag_245:\n        /* \"contracts/gainzilla.sol\":3106:3107  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":3097:3103  amount */\n      dup2\n        /* \"contracts/gainzilla.sol\":3097:3107  amount > 0 */\n      gt\n        /* \"contracts/gainzilla.sol\":3089:3138  require(amount > 0, \"Transfer amount must be >0\") */\n      tag_384\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12776:12778   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3089:3138  require(amount > 0, \"Transfer amount must be >0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12758:12779   */\n      mstore\n        /* \"#utility.yul\":12815:12817   */\n      0x1a\n        /* \"#utility.yul\":12795:12813   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12788:12818   */\n      mstore\n        /* \"#utility.yul\":12854:12882   */\n      0x5472616e7366657220616d6f756e74206d757374206265203e30000000000000\n        /* \"#utility.yul\":12834:12852   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12827:12883   */\n      mstore\n        /* \"#utility.yul\":12900:12918   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3089:3138  require(amount > 0, \"Transfer amount must be >0\") */\n      tag_233\n        /* \"#utility.yul\":12574:12924   */\n      jump\n        /* \"contracts/gainzilla.sol\":3089:3138  require(amount > 0, \"Transfer amount must be >0\") */\n    tag_384:\n        /* \"contracts/gainzilla.sol\":3172:3183  pairAddress */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":3149:3159  bool isBuy */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3162:3183  sender == pairAddress */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":3172:3183  pairAddress */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":3162:3183  sender == pairAddress */\n      eq\n        /* \"contracts/gainzilla.sol\":3162:3207  sender == pairAddress && !isExempt[recipient] */\n      dup1\n      iszero\n      tag_387\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3188:3207  isExempt[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":3188:3196  isExempt */\n      0x14\n        /* \"contracts/gainzilla.sol\":3188:3207  isExempt[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":3187:3207  !isExempt[recipient] */\n      iszero\n        /* \"contracts/gainzilla.sol\":3162:3207  sender == pairAddress && !isExempt[recipient] */\n    tag_387:\n        /* \"contracts/gainzilla.sol\":3244:3255  pairAddress */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":3149:3207  bool isBuy = sender == pairAddress && !isExempt[recipient] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":3217:3228  bool isSell */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3231:3255  recipient == pairAddress */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":3244:3255  pairAddress */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":3231:3255  recipient == pairAddress */\n      eq\n        /* \"contracts/gainzilla.sol\":3231:3276  recipient == pairAddress && !isExempt[sender] */\n      dup1\n      iszero\n      tag_388\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3260:3276  isExempt[sender] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":3260:3268  isExempt */\n      0x14\n        /* \"contracts/gainzilla.sol\":3260:3276  isExempt[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":3259:3276  !isExempt[sender] */\n      iszero\n        /* \"contracts/gainzilla.sol\":3231:3276  recipient == pairAddress && !isExempt[sender] */\n    tag_388:\n        /* \"contracts/gainzilla.sol\":3322:3334  diamondFloor */\n      0x0e\n        /* \"contracts/gainzilla.sol\":3322:3342  diamondFloor.enabled */\n      sload\n        /* \"contracts/gainzilla.sol\":3217:3276  bool isSell = recipient == pairAddress && !isExempt[sender] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":3322:3342  diamondFloor.enabled */\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":3322:3352  diamondFloor.enabled && isSell */\n      dup1\n      iszero\n      tag_389\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":3346:3352  isSell */\n      dup1\n        /* \"contracts/gainzilla.sol\":3322:3352  diamondFloor.enabled && isSell */\n    tag_389:\n        /* \"contracts/gainzilla.sol\":3318:3484  if (diamondFloor.enabled && isSell) {... */\n      iszero\n      tag_394\n      jumpi\n        /* \"contracts/gainzilla.sol\":3377:3401  diamondFloor.sellStopped */\n      and(0xff, sload(0x10))\n        /* \"contracts/gainzilla.sol\":3376:3401  !diamondFloor.sellStopped */\n      iszero\n        /* \"contracts/gainzilla.sol\":3368:3436  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n      tag_391\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13131:13133   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3368:3436  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13113:13134   */\n      mstore\n        /* \"#utility.yul\":13170:13172   */\n      0x1e\n        /* \"#utility.yul\":13150:13168   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13143:13173   */\n      mstore\n        /* \"#utility.yul\":13209:13241   */\n      0x53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f720000\n        /* \"#utility.yul\":13189:13207   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13182:13242   */\n      mstore\n        /* \"#utility.yul\":13259:13277   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3368:3436  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n      tag_233\n        /* \"#utility.yul\":12929:13283   */\n      jump\n        /* \"contracts/gainzilla.sol\":3368:3436  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n    tag_391:\n        /* \"contracts/gainzilla.sol\":3450:3473  _checkPriceConditions() */\n      tag_394\n        /* \"contracts/gainzilla.sol\":3450:3471  _checkPriceConditions */\n      tag_395\n        /* \"contracts/gainzilla.sol\":3450:3473  _checkPriceConditions() */\n      jump\t// in\n    tag_394:\n        /* \"contracts/gainzilla.sol\":3524:3532  cooldown */\n      0x0c\n        /* \"contracts/gainzilla.sol\":3524:3540  cooldown.enabled */\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":3524:3550  cooldown.enabled && isSell */\n      dup1\n      iszero\n      tag_396\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":3544:3550  isSell */\n      dup1\n        /* \"contracts/gainzilla.sol\":3524:3550  cooldown.enabled && isSell */\n    tag_396:\n        /* \"contracts/gainzilla.sol\":3520:3728  if (cooldown.enabled && isSell) {... */\n      iszero\n      tag_397\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3593:3619  cooldown.cooldowns[sender] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":3593:3611  cooldown.cooldowns */\n      0x0d\n        /* \"contracts/gainzilla.sol\":3593:3619  cooldown.cooldowns[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":3574:3589  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":3574:3619  block.timestamp >= cooldown.cooldowns[sender] */\n      lt\n      iszero\n        /* \"contracts/gainzilla.sol\":3566:3639  require(block.timestamp >= cooldown.cooldowns[sender], \"Cooldown active\") */\n      tag_398\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13490:13492   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3566:3639  require(block.timestamp >= cooldown.cooldowns[sender], \"Cooldown active\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13472:13493   */\n      mstore\n        /* \"#utility.yul\":13529:13531   */\n      0x0f\n        /* \"#utility.yul\":13509:13527   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13502:13532   */\n      mstore\n      shl(0x88, 0x436f6f6c646f776e20616374697665)\n        /* \"#utility.yul\":13548:13566   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13541:13586   */\n      mstore\n        /* \"#utility.yul\":13603:13621   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3566:3639  require(block.timestamp >= cooldown.cooldowns[sender], \"Cooldown active\") */\n      tag_233\n        /* \"#utility.yul\":13288:13627   */\n      jump\n        /* \"contracts/gainzilla.sol\":3566:3639  require(block.timestamp >= cooldown.cooldowns[sender], \"Cooldown active\") */\n    tag_398:\n        /* \"contracts/gainzilla.sol\":3700:3708  cooldown */\n      0x0c\n        /* \"contracts/gainzilla.sol\":3700:3717  cooldown.duration */\n      sload\n        /* \"contracts/gainzilla.sol\":3682:3717  block.timestamp + cooldown.duration */\n      tag_401\n      swap1\n        /* \"contracts/gainzilla.sol\":3700:3717  cooldown.duration */\n      0x0100\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/gainzilla.sol\":3682:3697  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":3682:3717  block.timestamp + cooldown.duration */\n      tag_252\n      jump\t// in\n    tag_401:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3653:3679  cooldown.cooldowns[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":3653:3671  cooldown.cooldowns */\n      0x0d\n        /* \"contracts/gainzilla.sol\":3653:3679  cooldown.cooldowns[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":3653:3717  cooldown.cooldowns[sender] = block.timestamp + cooldown.duration */\n      sstore\n        /* \"contracts/gainzilla.sol\":3520:3728  if (cooldown.enabled && isSell) {... */\n    tag_397:\n        /* \"contracts/gainzilla.sol\":3738:3755  uint256 taxAmount */\n      0x00\n        /* \"contracts/gainzilla.sol\":3758:3798  _calculateTax(sender, recipient, amount) */\n      tag_402\n        /* \"contracts/gainzilla.sol\":3772:3778  sender */\n      dup7\n        /* \"contracts/gainzilla.sol\":3780:3789  recipient */\n      dup7\n        /* \"contracts/gainzilla.sol\":3791:3797  amount */\n      dup7\n        /* \"contracts/gainzilla.sol\":3758:3771  _calculateTax */\n      tag_403\n        /* \"contracts/gainzilla.sol\":3758:3798  _calculateTax(sender, recipient, amount) */\n      jump\t// in\n    tag_402:\n        /* \"contracts/gainzilla.sol\":3738:3798  uint256 taxAmount = _calculateTax(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":3808:3825  uint256 netAmount */\n      0x00\n        /* \"contracts/gainzilla.sol\":3828:3849  amount.sub(taxAmount) */\n      tag_404\n        /* \"contracts/gainzilla.sol\":3828:3834  amount */\n      dup6\n        /* \"contracts/gainzilla.sol\":3738:3798  uint256 taxAmount = _calculateTax(sender, recipient, amount) */\n      dup4\n        /* \"contracts/gainzilla.sol\":3828:3838  amount.sub */\n      tag_266\n        /* \"contracts/gainzilla.sol\":3828:3849  amount.sub(taxAmount) */\n      jump\t// in\n    tag_404:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3893:3912  isExempt[recipient] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":3893:3901  isExempt */\n      0x14\n        /* \"contracts/gainzilla.sol\":3893:3912  isExempt[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":3808:3849  uint256 netAmount = amount.sub(taxAmount) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":3893:3912  isExempt[recipient] */\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":3892:3912  !isExempt[recipient] */\n      iszero\n        /* \"contracts/gainzilla.sol\":3892:3923  !isExempt[recipient] && !isSell */\n      dup1\n      iszero\n      tag_405\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":3917:3923  isSell */\n      dup3\n        /* \"contracts/gainzilla.sol\":3916:3923  !isSell */\n      iszero\n        /* \"contracts/gainzilla.sol\":3892:3923  !isExempt[recipient] && !isSell */\n    tag_405:\n        /* \"contracts/gainzilla.sol\":3888:4083  if (!isExempt[recipient] && !isSell) {... */\n      iszero\n      tag_411\n      jumpi\n        /* \"contracts/gainzilla.sol\":4003:4019  _maxWalletSize() */\n      tag_407\n        /* \"contracts/gainzilla.sol\":4003:4017  _maxWalletSize */\n      tag_133\n        /* \"contracts/gainzilla.sol\":4003:4019  _maxWalletSize() */\n      jump\t// in\n    tag_407:\n        /* \"contracts/gainzilla.sol\":3964:3999  balanceOf(recipient).add(netAmount) */\n      tag_408\n        /* \"contracts/gainzilla.sol\":3989:3998  netAmount */\n      dup3\n        /* \"contracts/gainzilla.sol\":3964:3984  balanceOf(recipient) */\n      tag_409\n        /* \"contracts/gainzilla.sol\":3974:3983  recipient */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":3964:3984  balanceOf(recipient) */\n    tag_409:\n        /* \"contracts/gainzilla.sol\":3964:3988  balanceOf(recipient).add */\n      swap1\n      tag_410\n        /* \"contracts/gainzilla.sol\":3964:3999  balanceOf(recipient).add(netAmount) */\n      jump\t// in\n    tag_408:\n        /* \"contracts/gainzilla.sol\":3964:4019  balanceOf(recipient).add(netAmount) <= _maxWalletSize() */\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":3939:4072  require(... */\n      tag_411\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13834:13836   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3939:4072  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13816:13837   */\n      mstore\n        /* \"#utility.yul\":13873:13875   */\n      0x13\n        /* \"#utility.yul\":13853:13871   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13846:13876   */\n      mstore\n      shl(0x6a, 0x13585e081dd85b1b195d08195e18d959591959)\n        /* \"#utility.yul\":13892:13910   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13885:13934   */\n      mstore\n        /* \"#utility.yul\":13951:13969   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3939:4072  require(... */\n      tag_233\n        /* \"#utility.yul\":13632:13975   */\n      jump\n        /* \"contracts/gainzilla.sol\":3939:4072  require(... */\n    tag_411:\n        /* \"contracts/gainzilla.sol\":4122:4135  taxAmount > 0 */\n      dup2\n      iszero\n        /* \"contracts/gainzilla.sol\":4118:4265  if (taxAmount > 0) {... */\n      tag_417\n      jumpi\n        /* \"contracts/gainzilla.sol\":4151:4200  super._transfer(sender, address(this), taxAmount) */\n      tag_415\n        /* \"contracts/gainzilla.sol\":4167:4173  sender */\n      dup8\n        /* \"contracts/gainzilla.sol\":4183:4187  this */\n      address\n        /* \"contracts/gainzilla.sol\":4190:4199  taxAmount */\n      dup5\n        /* \"contracts/gainzilla.sol\":4151:4166  super._transfer */\n      tag_416\n        /* \"contracts/gainzilla.sol\":4151:4200  super._transfer(sender, address(this), taxAmount) */\n      jump\t// in\n    tag_415:\n        /* \"contracts/gainzilla.sol\":4214:4254  _distributeTax(taxAmount, isBuy, isSell) */\n      tag_417\n        /* \"contracts/gainzilla.sol\":4229:4238  taxAmount */\n      dup3\n        /* \"contracts/gainzilla.sol\":4240:4245  isBuy */\n      dup6\n        /* \"contracts/gainzilla.sol\":4247:4253  isSell */\n      dup6\n        /* \"contracts/gainzilla.sol\":4214:4228  _distributeTax */\n      tag_418\n        /* \"contracts/gainzilla.sol\":4214:4254  _distributeTax(taxAmount, isBuy, isSell) */\n      jump\t// in\n    tag_417:\n        /* \"contracts/gainzilla.sol\":4303:4348  super._transfer(sender, recipient, netAmount) */\n      tag_419\n        /* \"contracts/gainzilla.sol\":4319:4325  sender */\n      dup8\n        /* \"contracts/gainzilla.sol\":4327:4336  recipient */\n      dup8\n        /* \"contracts/gainzilla.sol\":4338:4347  netAmount */\n      dup4\n        /* \"contracts/gainzilla.sol\":4303:4318  super._transfer */\n      tag_416\n        /* \"contracts/gainzilla.sol\":4303:4348  super._transfer(sender, recipient, netAmount) */\n      jump\t// in\n    tag_419:\n        /* \"contracts/gainzilla.sol\":4391:4408  _shouldSwapBack() */\n      tag_420\n        /* \"contracts/gainzilla.sol\":4391:4406  _shouldSwapBack */\n      tag_421\n        /* \"contracts/gainzilla.sol\":4391:4408  _shouldSwapBack() */\n      jump\t// in\n    tag_420:\n        /* \"contracts/gainzilla.sol\":4387:4452  if (_shouldSwapBack()) {... */\n      iszero\n      tag_423\n      jumpi\n        /* \"contracts/gainzilla.sol\":4424:4441  _swapAndLiquify() */\n      tag_423\n        /* \"contracts/gainzilla.sol\":4424:4439  _swapAndLiquify */\n      tag_424\n        /* \"contracts/gainzilla.sol\":4424:4441  _swapAndLiquify() */\n      jump\t// in\n    tag_423:\n        /* \"contracts/gainzilla.sol\":3079:4458  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":2953:4458  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_258:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2518:2524  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2518:2524  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_240\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_428\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_240\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_431\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_240\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_434\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":10370:10570  function _setupPair() private {... */\n    tag_340:\n        /* \"contracts/gainzilla.sol\":10459:10472  routerAddress */\n      0x12\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":10442:10481  IUniswapV2Router(routerAddress).factory */\n      and\n      0xc45a0155\n        /* \"contracts/gainzilla.sol\":10442:10483  IUniswapV2Router(routerAddress).factory() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_437\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_437:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_438\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_438:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":10424:10508  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n      and\n      0xc9c65396\n        /* \"contracts/gainzilla.sol\":10517:10521  this */\n      address\n        /* \"contracts/gainzilla.sol\":10541:10554  routerAddress */\n      0x12\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":10524:10560  IUniswapV2Router(routerAddress).WETH */\n      and\n      0xad5c4648\n        /* \"contracts/gainzilla.sol\":10524:10562  IUniswapV2Router(routerAddress).WETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_440\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_440:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_441\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_441:\n        /* \"contracts/gainzilla.sol\":10424:10563  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14641:14656   */\n      swap3\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":10424:10563  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14623:14657   */\n      mstore\n        /* \"#utility.yul\":14693:14708   */\n      swap2\n      and\n        /* \"#utility.yul\":14673:14691   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14666:14709   */\n      mstore\n        /* \"#utility.yul\":14558:14576   */\n      0x44\n      add\n        /* \"contracts/gainzilla.sol\":10424:10563  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_445\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_445:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_446\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_446:\n        /* \"contracts/gainzilla.sol\":10410:10421  pairAddress */\n      0x13\n        /* \"contracts/gainzilla.sol\":10410:10563  pairAddress = IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":10370:10570  function _setupPair() private {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":6266:7086  function _checkPriceConditions() private {... */\n    tag_395:\n        /* \"contracts/gainzilla.sol\":6317:6337  uint256 currentPrice */\n      0x00\n        /* \"contracts/gainzilla.sol\":6340:6351  pairPrice() */\n      tag_448\n        /* \"contracts/gainzilla.sol\":6340:6349  pairPrice */\n      tag_137\n        /* \"contracts/gainzilla.sol\":6340:6351  pairPrice() */\n      jump\t// in\n    tag_448:\n        /* \"contracts/gainzilla.sol\":6317:6351  uint256 currentPrice = pairPrice() */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":6365:6377  currentPrice */\n      dup1\n        /* \"contracts/gainzilla.sol\":6381:6382  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":6365:6382  currentPrice == 0 */\n      sub\n        /* \"contracts/gainzilla.sol\":6361:6391  if (currentPrice == 0) return; */\n      tag_449\n      jumpi\n        /* \"contracts/gainzilla.sol\":6384:6391  return; */\n      pop\n        /* \"contracts/gainzilla.sol\":6266:7086  function _checkPriceConditions() private {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":6361:6391  if (currentPrice == 0) return; */\n    tag_449:\n        /* \"contracts/gainzilla.sol\":6420:6441  diamondFloor.athPrice */\n      sload(0x0f)\n        /* \"contracts/gainzilla.sol\":6405:6441  currentPrice > diamondFloor.athPrice */\n      dup2\n      gt\n        /* \"contracts/gainzilla.sol\":6401:6570  if (currentPrice > diamondFloor.athPrice) {... */\n      iszero\n      tag_450\n      jumpi\n        /* \"contracts/gainzilla.sol\":6457:6478  diamondFloor.athPrice */\n      0x0f\n        /* \"contracts/gainzilla.sol\":6457:6493  diamondFloor.athPrice = currentPrice */\n      sstore\n        /* \"contracts/gainzilla.sol\":6507:6531  diamondFloor.sellStopped */\n      0x10\n        /* \"contracts/gainzilla.sol\":6507:6539  diamondFloor.sellStopped = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":6266:7086  function _checkPriceConditions() private {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":6401:6570  if (currentPrice > diamondFloor.athPrice) {... */\n    tag_450:\n        /* \"contracts/gainzilla.sol\":6659:6671  diamondFloor */\n      0x0e\n        /* \"contracts/gainzilla.sol\":6659:6689  diamondFloor.triggerPercentage */\n      sload\n        /* \"contracts/gainzilla.sol\":6580:6602  uint256 thresholdPrice */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":6605:6720  diamondFloor.athPrice... */\n      tag_451\n      swap1\n        /* \"contracts/gainzilla.sol\":1430:1436  10_000 */\n      0x2710\n      swap1\n        /* \"contracts/gainzilla.sol\":6605:6691  diamondFloor.athPrice... */\n      tag_264\n      swap1\n        /* \"contracts/gainzilla.sol\":6644:6690  BP_DIVISOR.sub(diamondFloor.triggerPercentage) */\n      tag_453\n      swap1\n        /* \"contracts/gainzilla.sol\":1430:1436  10_000 */\n      dup4\n      swap1\n        /* \"contracts/gainzilla.sol\":6659:6689  diamondFloor.triggerPercentage */\n      0x0100\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/gainzilla.sol\":6644:6658  BP_DIVISOR.sub */\n      tag_266\n        /* \"contracts/gainzilla.sol\":6644:6690  BP_DIVISOR.sub(diamondFloor.triggerPercentage) */\n      jump\t// in\n    tag_453:\n        /* \"contracts/gainzilla.sol\":6605:6626  diamondFloor.athPrice */\n      sload(0x0f)\n      swap1\n        /* \"contracts/gainzilla.sol\":6605:6643  diamondFloor.athPrice... */\n      tag_267\n        /* \"contracts/gainzilla.sol\":6605:6691  diamondFloor.athPrice... */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":6605:6720  diamondFloor.athPrice... */\n    tag_451:\n        /* \"contracts/gainzilla.sol\":6580:6720  uint256 thresholdPrice = diamondFloor.athPrice... */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":6750:6764  thresholdPrice */\n      dup1\n        /* \"contracts/gainzilla.sol\":6735:6747  currentPrice */\n      dup3\n        /* \"contracts/gainzilla.sol\":6735:6764  currentPrice < thresholdPrice */\n      lt\n        /* \"contracts/gainzilla.sol\":6731:6883  if (currentPrice < thresholdPrice) {... */\n      iszero\n      tag_454\n      jumpi\n        /* \"contracts/gainzilla.sol\":6780:6804  diamondFloor.sellStopped */\n      0x10\n        /* \"contracts/gainzilla.sol\":6780:6811  diamondFloor.sellStopped = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":6807:6811  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":6780:6811  diamondFloor.sellStopped = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":6851:6872  diamondFloor.athPrice */\n      sload(0x0f)\n        /* \"contracts/gainzilla.sol\":6825:6848  diamondFloor.blockedAth */\n      0x11\n        /* \"contracts/gainzilla.sol\":6825:6872  diamondFloor.blockedAth = diamondFloor.athPrice */\n      sstore\n        /* \"contracts/gainzilla.sol\":6731:6883  if (currentPrice < thresholdPrice) {... */\n    tag_454:\n        /* \"contracts/gainzilla.sol\":6897:6921  diamondFloor.sellStopped */\n      and(0xff, sload(0x10))\n        /* \"contracts/gainzilla.sol\":6897:6971  diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2) */\n      dup1\n      iszero\n      tag_455\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":6941:6964  diamondFloor.blockedAth */\n      sload(0x11)\n        /* \"contracts/gainzilla.sol\":6941:6971  diamondFloor.blockedAth.mul(2) */\n      tag_456\n      swap1\n        /* \"contracts/gainzilla.sol\":6969:6970  2 */\n      0x02\n        /* \"contracts/gainzilla.sol\":6941:6968  diamondFloor.blockedAth.mul */\n      tag_267\n        /* \"contracts/gainzilla.sol\":6941:6971  diamondFloor.blockedAth.mul(2) */\n      jump\t// in\n    tag_456:\n        /* \"contracts/gainzilla.sol\":6925:6937  currentPrice */\n      dup3\n        /* \"contracts/gainzilla.sol\":6925:6971  currentPrice >= diamondFloor.blockedAth.mul(2) */\n      lt\n      iszero\n        /* \"contracts/gainzilla.sol\":6897:6971  diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2) */\n    tag_455:\n        /* \"contracts/gainzilla.sol\":6893:7080  if (diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2)) {... */\n      iszero\n      tag_457\n      jumpi\n        /* \"contracts/gainzilla.sol\":6987:7011  diamondFloor.sellStopped */\n      0x10\n        /* \"contracts/gainzilla.sol\":6987:7019  diamondFloor.sellStopped = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":7033:7054  diamondFloor.athPrice */\n      0x0f\n        /* \"contracts/gainzilla.sol\":7033:7069  diamondFloor.athPrice = currentPrice */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":6893:7080  if (diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2)) {... */\n    tag_457:\n        /* \"contracts/gainzilla.sol\":6307:7086  {... */\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":6266:7086  function _checkPriceConditions() private {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":4464:5230  function _calculateTax(... */\n    tag_403:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":4613:4629  isExempt[sender] */\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":4590:4597  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":4613:4629  isExempt[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":4613:4621  isExempt */\n      0x14\n        /* \"contracts/gainzilla.sol\":4613:4629  isExempt[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/gainzilla.sol\":4613:4652  isExempt[sender] || isExempt[recipient] */\n      tag_459\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":4633:4652  isExempt[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":4633:4641  isExempt */\n      0x14\n        /* \"contracts/gainzilla.sol\":4633:4652  isExempt[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":4613:4652  isExempt[sender] || isExempt[recipient] */\n    tag_459:\n        /* \"contracts/gainzilla.sol\":4609:4662  if (isExempt[sender] || isExempt[recipient]) return 0 */\n      iszero\n      tag_460\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":4661:4662  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":4654:4662  return 0 */\n      jump(tag_240)\n        /* \"contracts/gainzilla.sol\":4609:4662  if (isExempt[sender] || isExempt[recipient]) return 0 */\n    tag_460:\n        /* \"contracts/gainzilla.sol\":4696:4707  pairAddress */\n      sload(0x13)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":4686:4707  sender == pairAddress */\n      dup6\n      dup3\n      and\n      dup2\n      eq\n      swap2\n        /* \"contracts/gainzilla.sol\":4731:4755  recipient == pairAddress */\n      dup6\n      and\n      eq\n        /* \"contracts/gainzilla.sol\":4766:4881  if (isBuy) {... */\n      dup2\n      iszero\n      tag_461\n      jumpi\n        /* \"contracts/gainzilla.sol\":4837:4845  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":4837:4852  taxRates.buyEco */\n      sload\n        /* \"contracts/gainzilla.sol\":4798:4870  amount.mul(uint256(taxRates.buyLp).add(taxRates.buyEco)).div(BP_DIVISOR) */\n      tag_462\n      swap1\n        /* \"contracts/gainzilla.sol\":1430:1436  10_000 */\n      0x2710\n      swap1\n        /* \"contracts/gainzilla.sol\":4798:4854  amount.mul(uint256(taxRates.buyLp).add(taxRates.buyEco)) */\n      tag_264\n      swap1\n        /* \"contracts/gainzilla.sol\":4809:4853  uint256(taxRates.buyLp).add(taxRates.buyEco) */\n      tag_464\n      swap1\n        /* \"contracts/gainzilla.sol\":4837:4852  taxRates.buyEco */\n      0xffff\n        /* \"contracts/gainzilla.sol\":4817:4831  taxRates.buyLp */\n      dup1\n      dup3\n      and\n      swap2\n        /* \"contracts/gainzilla.sol\":4837:4852  taxRates.buyEco */\n      0x010000\n      swap1\n      div\n      and\n        /* \"contracts/gainzilla.sol\":4809:4836  uint256(taxRates.buyLp).add */\n      tag_410\n        /* \"contracts/gainzilla.sol\":4809:4853  uint256(taxRates.buyLp).add(taxRates.buyEco) */\n      jump\t// in\n    tag_464:\n        /* \"contracts/gainzilla.sol\":4798:4804  amount */\n      dup8\n      swap1\n        /* \"contracts/gainzilla.sol\":4798:4808  amount.mul */\n      tag_267\n        /* \"contracts/gainzilla.sol\":4798:4854  amount.mul(uint256(taxRates.buyLp).add(taxRates.buyEco)) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":4798:4870  amount.mul(uint256(taxRates.buyLp).add(taxRates.buyEco)).div(BP_DIVISOR) */\n    tag_462:\n        /* \"contracts/gainzilla.sol\":4791:4870  return amount.mul(uint256(taxRates.buyLp).add(taxRates.buyEco)).div(BP_DIVISOR) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_240)\n        /* \"contracts/gainzilla.sol\":4766:4881  if (isBuy) {... */\n    tag_461:\n        /* \"contracts/gainzilla.sol\":4895:4901  isSell */\n      dup1\n        /* \"contracts/gainzilla.sol\":4891:5009  if (isSell) {... */\n      iszero\n      tag_465\n      jumpi\n        /* \"contracts/gainzilla.sol\":4964:4972  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":4964:4980  taxRates.sellEco */\n      sload\n        /* \"contracts/gainzilla.sol\":4924:4998  amount.mul(uint256(taxRates.sellLp).add(taxRates.sellEco)).div(BP_DIVISOR) */\n      tag_462\n      swap1\n        /* \"contracts/gainzilla.sol\":1430:1436  10_000 */\n      0x2710\n      swap1\n        /* \"contracts/gainzilla.sol\":4924:4982  amount.mul(uint256(taxRates.sellLp).add(taxRates.sellEco)) */\n      tag_264\n      swap1\n        /* \"contracts/gainzilla.sol\":4935:4981  uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      tag_464\n      swap1\n        /* \"contracts/gainzilla.sol\":4964:4980  taxRates.sellEco */\n      0xffff\n      shl(0x20, 0x01)\n        /* \"contracts/gainzilla.sol\":4943:4958  taxRates.sellLp */\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0x30, 0x01)\n        /* \"contracts/gainzilla.sol\":4964:4980  taxRates.sellEco */\n      swap1\n      div\n      and\n        /* \"contracts/gainzilla.sol\":4935:4963  uint256(taxRates.sellLp).add */\n      tag_410\n        /* \"contracts/gainzilla.sol\":4935:4981  uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":4891:5009  if (isSell) {... */\n    tag_465:\n        /* \"contracts/gainzilla.sol\":5076:5084  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":5076:5092  taxRates.sellEco */\n      sload\n        /* \"contracts/gainzilla.sol\":5027:5044  uint256 sellTotal */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":5047:5093  uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      tag_469\n      swap1\n        /* \"contracts/gainzilla.sol\":5076:5092  taxRates.sellEco */\n      0xffff\n      shl(0x20, 0x01)\n        /* \"contracts/gainzilla.sol\":5055:5070  taxRates.sellLp */\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0x30, 0x01)\n        /* \"contracts/gainzilla.sol\":5076:5092  taxRates.sellEco */\n      swap1\n      div\n      and\n        /* \"contracts/gainzilla.sol\":5047:5075  uint256(taxRates.sellLp).add */\n      tag_410\n        /* \"contracts/gainzilla.sol\":5047:5093  uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      jump\t// in\n    tag_469:\n        /* \"contracts/gainzilla.sol\":5027:5093  uint256 sellTotal = uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":5103:5122  uint256 transferTax */\n      0x00\n        /* \"contracts/gainzilla.sol\":5125:5167  sellTotal.mul(TRANSFER_MULTIPLIER).div(10) */\n      tag_470\n        /* \"contracts/gainzilla.sol\":5164:5166  10 */\n      0x0a\n        /* \"contracts/gainzilla.sol\":5125:5159  sellTotal.mul(TRANSFER_MULTIPLIER) */\n      tag_264\n        /* \"contracts/gainzilla.sol\":5027:5093  uint256 sellTotal = uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      dup5\n        /* \"contracts/gainzilla.sol\":1640:1642  35 */\n      0x23\n        /* \"contracts/gainzilla.sol\":5125:5138  sellTotal.mul */\n      tag_267\n        /* \"contracts/gainzilla.sol\":5125:5159  sellTotal.mul(TRANSFER_MULTIPLIER) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":5125:5167  sellTotal.mul(TRANSFER_MULTIPLIER).div(10) */\n    tag_470:\n        /* \"contracts/gainzilla.sol\":5103:5167  uint256 transferTax = sellTotal.mul(TRANSFER_MULTIPLIER).div(10) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":5184:5223  amount.mul(transferTax).div(BP_DIVISOR) */\n      tag_472\n        /* \"contracts/gainzilla.sol\":1430:1436  10_000 */\n      0x2710\n        /* \"contracts/gainzilla.sol\":5184:5207  amount.mul(transferTax) */\n      tag_264\n        /* \"contracts/gainzilla.sol\":5184:5190  amount */\n      dup9\n        /* \"contracts/gainzilla.sol\":5103:5167  uint256 transferTax = sellTotal.mul(TRANSFER_MULTIPLIER).div(10) */\n      dup5\n        /* \"contracts/gainzilla.sol\":5184:5194  amount.mul */\n      tag_267\n        /* \"contracts/gainzilla.sol\":5184:5207  amount.mul(transferTax) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":5184:5223  amount.mul(transferTax).div(BP_DIVISOR) */\n    tag_472:\n        /* \"contracts/gainzilla.sol\":5177:5223  return amount.mul(transferTax).div(BP_DIVISOR) */\n      swap9\n        /* \"contracts/gainzilla.sol\":4464:5230  function _calculateTax(... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_410:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_240\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_252\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_416:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_477\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14922:14924   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14904:14925   */\n      mstore\n        /* \"#utility.yul\":14961:14963   */\n      0x25\n        /* \"#utility.yul\":14941:14959   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14934:14964   */\n      mstore\n        /* \"#utility.yul\":15000:15034   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":14980:14998   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14973:15035   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":15051:15069   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15044:15079   */\n      mstore\n        /* \"#utility.yul\":15096:15115   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_233\n        /* \"#utility.yul\":14720:15121   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_477:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_480\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15328:15330   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15310:15331   */\n      mstore\n        /* \"#utility.yul\":15367:15369   */\n      0x23\n        /* \"#utility.yul\":15347:15365   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15340:15370   */\n      mstore\n        /* \"#utility.yul\":15406:15440   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":15386:15404   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15379:15441   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":15457:15475   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15450:15483   */\n      mstore\n        /* \"#utility.yul\":15500:15519   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_233\n        /* \"#utility.yul\":15126:15525   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_480:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_485\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15732:15734   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15714:15735   */\n      mstore\n        /* \"#utility.yul\":15771:15773   */\n      0x26\n        /* \"#utility.yul\":15751:15769   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15744:15774   */\n      mstore\n        /* \"#utility.yul\":15810:15844   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":15790:15808   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15783:15845   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":15861:15879   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15854:15890   */\n      mstore\n        /* \"#utility.yul\":15907:15926   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_233\n        /* \"#utility.yul\":15530:15932   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_485:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":160:185   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_382\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"contracts/gainzilla.sol\":5236:6260  function _distributeTax(uint256 taxAmount, bool isBuy, bool isSell) private {... */\n    tag_418:\n        /* \"contracts/gainzilla.sol\":5322:5337  uint256 lpShare */\n      0x00\n        /* \"contracts/gainzilla.sol\":5347:5363  uint256 ecoShare */\n      dup1\n        /* \"contracts/gainzilla.sol\":5378:5383  isBuy */\n      dup4\n        /* \"contracts/gainzilla.sol\":5374:6054  if (isBuy) {... */\n      iszero\n      tag_492\n      jumpi\n        /* \"contracts/gainzilla.sol\":5443:5451  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":5443:5458  taxRates.buyEco */\n      sload\n        /* \"contracts/gainzilla.sol\":5399:5412  uint256 total */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":5415:5459  uint256(taxRates.buyLp).add(taxRates.buyEco) */\n      tag_493\n      swap1\n        /* \"contracts/gainzilla.sol\":5443:5458  taxRates.buyEco */\n      0xffff\n        /* \"contracts/gainzilla.sol\":5423:5437  taxRates.buyLp */\n      dup1\n      dup3\n      and\n      swap2\n        /* \"contracts/gainzilla.sol\":5443:5458  taxRates.buyEco */\n      0x010000\n      swap1\n      div\n      and\n        /* \"contracts/gainzilla.sol\":5415:5442  uint256(taxRates.buyLp).add */\n      tag_410\n        /* \"contracts/gainzilla.sol\":5415:5459  uint256(taxRates.buyLp).add(taxRates.buyEco) */\n      jump\t// in\n    tag_493:\n        /* \"contracts/gainzilla.sol\":5399:5459  uint256 total = uint256(taxRates.buyLp).add(taxRates.buyEco) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":5489:5490  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":5481:5486  total */\n      dup2\n        /* \"contracts/gainzilla.sol\":5481:5490  total > 0 */\n      gt\n        /* \"contracts/gainzilla.sol\":5473:5510  require(total > 0, \"Buy tax not set\") */\n      tag_494\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16139:16141   */\n      0x20\n        /* \"contracts/gainzilla.sol\":5473:5510  require(total > 0, \"Buy tax not set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16121:16142   */\n      mstore\n        /* \"#utility.yul\":16178:16180   */\n      0x0f\n        /* \"#utility.yul\":16158:16176   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16151:16181   */\n      mstore\n      shl(0x8a, 0x109d5e481d185e081b9bdd081cd95d)\n        /* \"#utility.yul\":16197:16215   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16190:16235   */\n      mstore\n        /* \"#utility.yul\":16252:16270   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":5473:5510  require(total > 0, \"Buy tax not set\") */\n      tag_233\n        /* \"#utility.yul\":15937:16276   */\n      jump\n        /* \"contracts/gainzilla.sol\":5473:5510  require(total > 0, \"Buy tax not set\") */\n    tag_494:\n        /* \"contracts/gainzilla.sol\":5548:5556  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":5548:5562  taxRates.buyLp */\n      sload\n        /* \"contracts/gainzilla.sol\":5534:5574  taxAmount.mul(taxRates.buyLp).div(total) */\n      tag_497\n      swap1\n        /* \"contracts/gainzilla.sol\":5568:5573  total */\n      dup3\n      swap1\n        /* \"contracts/gainzilla.sol\":5534:5563  taxAmount.mul(taxRates.buyLp) */\n      tag_264\n      swap1\n        /* \"contracts/gainzilla.sol\":5534:5543  taxAmount */\n      dup10\n      swap1\n        /* \"contracts/gainzilla.sol\":5548:5562  taxRates.buyLp */\n      0xffff\n      and\n        /* \"contracts/gainzilla.sol\":5534:5547  taxAmount.mul */\n      tag_267\n        /* \"contracts/gainzilla.sol\":5534:5563  taxAmount.mul(taxRates.buyLp) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":5534:5574  taxAmount.mul(taxRates.buyLp).div(total) */\n    tag_497:\n        /* \"contracts/gainzilla.sol\":5524:5574  lpShare = taxAmount.mul(taxRates.buyLp).div(total) */\n      swap3\n      pop\n        /* \"contracts/gainzilla.sol\":5385:5585  {... */\n      pop\n        /* \"contracts/gainzilla.sol\":5374:6054  if (isBuy) {... */\n      jump(tag_507)\n    tag_492:\n        /* \"contracts/gainzilla.sol\":5595:5601  isSell */\n      dup3\n        /* \"contracts/gainzilla.sol\":5591:6054  if (isSell) {... */\n      iszero\n      tag_500\n      jumpi\n        /* \"contracts/gainzilla.sol\":5662:5670  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":5662:5678  taxRates.sellEco */\n      sload\n        /* \"contracts/gainzilla.sol\":5617:5630  uint256 total */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":5633:5679  uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      tag_501\n      swap1\n        /* \"contracts/gainzilla.sol\":5662:5678  taxRates.sellEco */\n      0xffff\n      shl(0x20, 0x01)\n        /* \"contracts/gainzilla.sol\":5641:5656  taxRates.sellLp */\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0x30, 0x01)\n        /* \"contracts/gainzilla.sol\":5662:5678  taxRates.sellEco */\n      swap1\n      div\n      and\n        /* \"contracts/gainzilla.sol\":5633:5661  uint256(taxRates.sellLp).add */\n      tag_410\n        /* \"contracts/gainzilla.sol\":5633:5679  uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      jump\t// in\n    tag_501:\n        /* \"contracts/gainzilla.sol\":5617:5679  uint256 total = uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":5709:5710  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":5701:5706  total */\n      dup2\n        /* \"contracts/gainzilla.sol\":5701:5710  total > 0 */\n      gt\n        /* \"contracts/gainzilla.sol\":5693:5731  require(total > 0, \"Sell tax not set\") */\n      tag_502\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16483:16485   */\n      0x20\n        /* \"contracts/gainzilla.sol\":5693:5731  require(total > 0, \"Sell tax not set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16465:16486   */\n      mstore\n        /* \"#utility.yul\":16522:16524   */\n      0x10\n        /* \"#utility.yul\":16502:16520   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16495:16525   */\n      mstore\n      shl(0x82, 0x14d95b1b081d185e081b9bdd081cd95d)\n        /* \"#utility.yul\":16541:16559   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16534:16580   */\n      mstore\n        /* \"#utility.yul\":16597:16615   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":5693:5731  require(total > 0, \"Sell tax not set\") */\n      tag_233\n        /* \"#utility.yul\":16281:16621   */\n      jump\n        /* \"contracts/gainzilla.sol\":5693:5731  require(total > 0, \"Sell tax not set\") */\n    tag_502:\n        /* \"contracts/gainzilla.sol\":5769:5777  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":5769:5784  taxRates.sellLp */\n      sload\n        /* \"contracts/gainzilla.sol\":5755:5796  taxAmount.mul(taxRates.sellLp).div(total) */\n      tag_497\n      swap1\n        /* \"contracts/gainzilla.sol\":5790:5795  total */\n      dup3\n      swap1\n        /* \"contracts/gainzilla.sol\":5755:5785  taxAmount.mul(taxRates.sellLp) */\n      tag_264\n      swap1\n        /* \"contracts/gainzilla.sol\":5755:5764  taxAmount */\n      dup10\n      swap1\n      shl(0x20, 0x01)\n        /* \"contracts/gainzilla.sol\":5769:5784  taxRates.sellLp */\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/gainzilla.sol\":5755:5768  taxAmount.mul */\n      tag_267\n        /* \"contracts/gainzilla.sol\":5755:5785  taxAmount.mul(taxRates.sellLp) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":5591:6054  if (isSell) {... */\n    tag_500:\n        /* \"contracts/gainzilla.sol\":5872:5880  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":5872:5888  taxRates.sellEco */\n      sload\n        /* \"contracts/gainzilla.sol\":5827:5840  uint256 total */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":5843:5889  uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      tag_508\n      swap1\n        /* \"contracts/gainzilla.sol\":5872:5888  taxRates.sellEco */\n      0xffff\n      shl(0x20, 0x01)\n        /* \"contracts/gainzilla.sol\":5851:5866  taxRates.sellLp */\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0x30, 0x01)\n        /* \"contracts/gainzilla.sol\":5872:5888  taxRates.sellEco */\n      swap1\n      div\n      and\n        /* \"contracts/gainzilla.sol\":5843:5871  uint256(taxRates.sellLp).add */\n      tag_410\n        /* \"contracts/gainzilla.sol\":5843:5889  uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      jump\t// in\n    tag_508:\n        /* \"contracts/gainzilla.sol\":5827:5889  uint256 total = uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":5919:5920  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":5911:5916  total */\n      dup2\n        /* \"contracts/gainzilla.sol\":5911:5920  total > 0 */\n      gt\n        /* \"contracts/gainzilla.sol\":5903:5945  require(total > 0, \"Transfer tax not set\") */\n      tag_509\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16828:16830   */\n      0x20\n        /* \"contracts/gainzilla.sol\":5903:5945  require(total > 0, \"Transfer tax not set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16810:16831   */\n      mstore\n        /* \"#utility.yul\":16867:16869   */\n      0x14\n        /* \"#utility.yul\":16847:16865   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16840:16870   */\n      mstore\n      shl(0x62, 0x151c985b9cd9995c881d185e081b9bdd081cd95d)\n        /* \"#utility.yul\":16886:16904   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16879:16929   */\n      mstore\n        /* \"#utility.yul\":16946:16964   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":5903:5945  require(total > 0, \"Transfer tax not set\") */\n      tag_233\n        /* \"#utility.yul\":16626:16970   */\n      jump\n        /* \"contracts/gainzilla.sol\":5903:5945  require(total > 0, \"Transfer tax not set\") */\n    tag_509:\n        /* \"contracts/gainzilla.sol\":5983:5991  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":5983:5998  taxRates.sellLp */\n      sload\n        /* \"contracts/gainzilla.sol\":5969:6043  taxAmount.mul(taxRates.sellLp).div(total).mul(TRANSFER_MULTIPLIER).div(10) */\n      tag_512\n      swap1\n        /* \"contracts/gainzilla.sol\":6040:6042  10 */\n      0x0a\n      swap1\n        /* \"contracts/gainzilla.sol\":5969:6035  taxAmount.mul(taxRates.sellLp).div(total).mul(TRANSFER_MULTIPLIER) */\n      tag_264\n      swap1\n        /* \"contracts/gainzilla.sol\":1640:1642  35 */\n      0x23\n      swap1\n        /* \"contracts/gainzilla.sol\":5969:6010  taxAmount.mul(taxRates.sellLp).div(total) */\n      tag_265\n      swap1\n        /* \"contracts/gainzilla.sol\":6004:6009  total */\n      dup7\n      swap1\n        /* \"contracts/gainzilla.sol\":5969:6035  taxAmount.mul(taxRates.sellLp).div(total).mul(TRANSFER_MULTIPLIER) */\n      dup5\n      swap1\n        /* \"contracts/gainzilla.sol\":5969:5978  taxAmount */\n      dup14\n      swap1\n      shl(0x20, 0x01)\n        /* \"contracts/gainzilla.sol\":5983:5998  taxRates.sellLp */\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/gainzilla.sol\":5969:5982  taxAmount.mul */\n      tag_267\n        /* \"contracts/gainzilla.sol\":5969:5999  taxAmount.mul(taxRates.sellLp) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":5969:6043  taxAmount.mul(taxRates.sellLp).div(total).mul(TRANSFER_MULTIPLIER).div(10) */\n    tag_512:\n        /* \"contracts/gainzilla.sol\":5959:6043  lpShare = taxAmount.mul(taxRates.sellLp).div(total).mul(TRANSFER_MULTIPLIER).div(10) */\n      swap3\n      pop\n        /* \"contracts/gainzilla.sol\":5813:6054  {... */\n      pop\n        /* \"contracts/gainzilla.sol\":5591:6054  if (isSell) {... */\n    tag_507:\n        /* \"contracts/gainzilla.sol\":6075:6097  taxAmount.sub(lpShare) */\n      tag_516\n        /* \"contracts/gainzilla.sol\":6075:6084  taxAmount */\n      dup6\n        /* \"contracts/gainzilla.sol\":6089:6096  lpShare */\n      dup4\n        /* \"contracts/gainzilla.sol\":6075:6088  taxAmount.sub */\n      tag_266\n        /* \"contracts/gainzilla.sol\":6075:6097  taxAmount.sub(lpShare) */\n      jump\t// in\n    tag_516:\n        /* \"contracts/gainzilla.sol\":6123:6136  accumulatedLp */\n      sload(0x09)\n        /* \"contracts/gainzilla.sol\":6064:6097  ecoShare = taxAmount.sub(lpShare) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":6123:6149  accumulatedLp.add(lpShare) */\n      tag_517\n      swap1\n        /* \"contracts/gainzilla.sol\":6141:6148  lpShare */\n      dup4\n        /* \"contracts/gainzilla.sol\":6123:6140  accumulatedLp.add */\n      tag_410\n        /* \"contracts/gainzilla.sol\":6123:6149  accumulatedLp.add(lpShare) */\n      jump\t// in\n    tag_517:\n        /* \"contracts/gainzilla.sol\":6107:6120  accumulatedLp */\n      0x09\n        /* \"contracts/gainzilla.sol\":6107:6149  accumulatedLp = accumulatedLp.add(lpShare) */\n      sstore\n        /* \"contracts/gainzilla.sol\":6176:6190  accumulatedEco */\n      sload(0x0a)\n        /* \"contracts/gainzilla.sol\":6176:6204  accumulatedEco.add(ecoShare) */\n      tag_518\n      swap1\n        /* \"contracts/gainzilla.sol\":6195:6203  ecoShare */\n      dup3\n        /* \"contracts/gainzilla.sol\":6176:6194  accumulatedEco.add */\n      tag_410\n        /* \"contracts/gainzilla.sol\":6176:6204  accumulatedEco.add(ecoShare) */\n      jump\t// in\n    tag_518:\n        /* \"contracts/gainzilla.sol\":6159:6173  accumulatedEco */\n      0x0a\n        /* \"contracts/gainzilla.sol\":6159:6204  accumulatedEco = accumulatedEco.add(ecoShare) */\n      sstore\n        /* \"contracts/gainzilla.sol\":6220:6253  TaxesCollected(lpShare, ecoShare) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":17149:17174   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":17205:17207   */\n      0x20\n        /* \"#utility.yul\":17190:17208   */\n      dup2\n      add\n        /* \"#utility.yul\":17183:17217   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/gainzilla.sol\":6220:6253  TaxesCollected(lpShare, ecoShare) */\n      0xf2d9f3f00fc700757eb74f9aa3dba0e2eb1280e0c6e0cf65962cc055528d7a90\n      swap2\n        /* \"#utility.yul\":17122:17140   */\n      add\n        /* \"contracts/gainzilla.sol\":6220:6253  TaxesCollected(lpShare, ecoShare) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/gainzilla.sol\":5312:6260  {... */\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":5236:6260  function _distributeTax(uint256 taxAmount, bool isBuy, bool isSell) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":11574:11769  function _shouldSwapBack() private view returns (bool) {... */\n    tag_421:\n        /* \"contracts/gainzilla.sol\":11647:11655  swapping */\n      sload(0x0b)\n        /* \"contracts/gainzilla.sol\":11623:11627  bool */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":11647:11655  swapping */\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":11646:11655  !swapping */\n      iszero\n        /* \"contracts/gainzilla.sol\":11646:11721  !swapping &&... */\n      dup1\n      iszero\n      tag_522\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":11708:11721  swapThreshold */\n      sload(0x08)\n        /* \"contracts/gainzilla.sol\":11689:11703  accumulatedEco */\n      sload(0x0a)\n        /* \"contracts/gainzilla.sol\":11671:11684  accumulatedLp */\n      sload(0x09)\n        /* \"contracts/gainzilla.sol\":11671:11704  accumulatedLp.add(accumulatedEco) */\n      tag_523\n      swap2\n        /* \"contracts/gainzilla.sol\":11671:11688  accumulatedLp.add */\n      tag_410\n        /* \"contracts/gainzilla.sol\":11671:11704  accumulatedLp.add(accumulatedEco) */\n      jump\t// in\n    tag_523:\n        /* \"contracts/gainzilla.sol\":11671:11721  accumulatedLp.add(accumulatedEco) >= swapThreshold */\n      lt\n      iszero\n        /* \"contracts/gainzilla.sol\":11646:11721  !swapping &&... */\n    tag_522:\n        /* \"contracts/gainzilla.sol\":11646:11762  !swapping &&... */\n      dup1\n      iszero\n      tag_284\n      jumpi\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":11751:11762  pairAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x13))\n        /* \"contracts/gainzilla.sol\":11737:11747  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":11737:11762  msg.sender != pairAddress */\n      eq\n      iszero\n      swap1\n        /* \"contracts/gainzilla.sol\":11574:11769  function _shouldSwapBack() private view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":7092:7860  function _swapAndLiquify() private {... */\n    tag_424:\n        /* \"contracts/gainzilla.sol\":7137:7156  uint256 totalTokens */\n      0x00\n        /* \"contracts/gainzilla.sol\":7159:7192  accumulatedLp.add(accumulatedEco) */\n      tag_526\n        /* \"contracts/gainzilla.sol\":7177:7191  accumulatedEco */\n      sload(0x0a)\n        /* \"contracts/gainzilla.sol\":7159:7172  accumulatedLp */\n      sload(0x09)\n        /* \"contracts/gainzilla.sol\":7159:7176  accumulatedLp.add */\n      tag_410\n      swap1\n        /* \"contracts/gainzilla.sol\":7159:7192  accumulatedLp.add(accumulatedEco) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_526:\n        /* \"contracts/gainzilla.sol\":7137:7192  uint256 totalTokens = accumulatedLp.add(accumulatedEco) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":7220:7233  swapThreshold */\n      sload(0x08)\n        /* \"contracts/gainzilla.sol\":7206:7217  totalTokens */\n      dup2\n        /* \"contracts/gainzilla.sol\":7206:7233  totalTokens < swapThreshold */\n      lt\n        /* \"contracts/gainzilla.sol\":7202:7242  if (totalTokens < swapThreshold) return; */\n      iszero\n      tag_527\n      jumpi\n        /* \"contracts/gainzilla.sol\":7235:7242  return; */\n      pop\n        /* \"contracts/gainzilla.sol\":7092:7860  function _swapAndLiquify() private {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":7202:7242  if (totalTokens < swapThreshold) return; */\n    tag_527:\n        /* \"contracts/gainzilla.sol\":7252:7260  swapping */\n      0x0b\n        /* \"contracts/gainzilla.sol\":7252:7267  swapping = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":7263:7267  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":7252:7267  swapping = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":7385:7399  accumulatedEco */\n      sload(0x0a)\n        /* \"contracts/gainzilla.sol\":7302:7323  address(this).balance */\n      selfbalance\n      swap1\n        /* \"contracts/gainzilla.sol\":7367:7400  _swapTokensForETH(accumulatedEco) */\n      tag_528\n      swap1\n        /* \"contracts/gainzilla.sol\":7367:7384  _swapTokensForETH */\n      tag_529\n        /* \"contracts/gainzilla.sol\":7367:7400  _swapTokensForETH(accumulatedEco) */\n      jump\t// in\n    tag_528:\n        /* \"contracts/gainzilla.sol\":7410:7424  uint256 ecoETH */\n      0x00\n        /* \"contracts/gainzilla.sol\":7427:7468  address(this).balance.sub(initialBalance) */\n      tag_530\n        /* \"contracts/gainzilla.sol\":7427:7448  address(this).balance */\n      selfbalance\n        /* \"contracts/gainzilla.sol\":7453:7467  initialBalance */\n      dup4\n        /* \"contracts/gainzilla.sol\":7427:7452  address(this).balance.sub */\n      tag_266\n        /* \"contracts/gainzilla.sol\":7427:7468  address(this).balance.sub(initialBalance) */\n      jump\t// in\n    tag_530:\n        /* \"contracts/gainzilla.sol\":7410:7468  uint256 ecoETH = address(this).balance.sub(initialBalance) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":7486:7493  owner() */\n      tag_531\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":7486:7493  owner() */\n    tag_531:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":7478:7503  payable(owner()).transfer */\n      and\n        /* \"contracts/gainzilla.sol\":7478:7511  payable(owner()).transfer(ecoETH) */\n      0x08fc\n        /* \"contracts/gainzilla.sol\":7504:7510  ecoETH */\n      dup3\n        /* \"contracts/gainzilla.sol\":7478:7511  payable(owner()).transfer(ecoETH) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_533\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_533:\n      pop\n        /* \"contracts/gainzilla.sol\":7567:7580  accumulatedLp */\n      sload(0x09)\n        /* \"contracts/gainzilla.sol\":7548:7564  uint256 lpTokens */\n      0x00\n        /* \"contracts/gainzilla.sol\":7605:7620  lpTokens.div(2) */\n      tag_534\n        /* \"contracts/gainzilla.sol\":7567:7580  accumulatedLp */\n      dup3\n        /* \"contracts/gainzilla.sol\":7618:7619  2 */\n      0x02\n        /* \"contracts/gainzilla.sol\":7605:7617  lpTokens.div */\n      tag_268\n        /* \"contracts/gainzilla.sol\":7605:7620  lpTokens.div(2) */\n      jump\t// in\n    tag_534:\n        /* \"contracts/gainzilla.sol\":7590:7620  uint256 half = lpTokens.div(2) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":7630:7653  _swapTokensForETH(half) */\n      tag_535\n        /* \"contracts/gainzilla.sol\":7648:7652  half */\n      dup2\n        /* \"contracts/gainzilla.sol\":7630:7647  _swapTokensForETH */\n      tag_529\n        /* \"contracts/gainzilla.sol\":7630:7653  _swapTokensForETH(half) */\n      jump\t// in\n    tag_535:\n        /* \"contracts/gainzilla.sol\":7672:7685  uint256 lpETH */\n      0x00\n        /* \"contracts/gainzilla.sol\":7688:7721  address(this).balance.sub(ecoETH) */\n      tag_536\n        /* \"contracts/gainzilla.sol\":7688:7709  address(this).balance */\n      selfbalance\n        /* \"contracts/gainzilla.sol\":7714:7720  ecoETH */\n      dup6\n        /* \"contracts/gainzilla.sol\":7688:7713  address(this).balance.sub */\n      tag_266\n        /* \"contracts/gainzilla.sol\":7688:7721  address(this).balance.sub(ecoETH) */\n      jump\t// in\n    tag_536:\n        /* \"contracts/gainzilla.sol\":7672:7721  uint256 lpETH = address(this).balance.sub(ecoETH) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":7731:7771  _addLiquidity(lpTokens.sub(half), lpETH) */\n      tag_537\n        /* \"contracts/gainzilla.sol\":7745:7763  lpTokens.sub(half) */\n      tag_538\n        /* \"contracts/gainzilla.sol\":7745:7753  lpTokens */\n      dup5\n        /* \"contracts/gainzilla.sol\":7758:7762  half */\n      dup5\n        /* \"contracts/gainzilla.sol\":7745:7757  lpTokens.sub */\n      tag_266\n        /* \"contracts/gainzilla.sol\":7745:7763  lpTokens.sub(half) */\n      jump\t// in\n    tag_538:\n        /* \"contracts/gainzilla.sol\":7765:7770  lpETH */\n      dup3\n        /* \"contracts/gainzilla.sol\":7731:7744  _addLiquidity */\n      tag_539\n        /* \"contracts/gainzilla.sol\":7731:7771  _addLiquidity(lpTokens.sub(half), lpETH) */\n      jump\t// in\n    tag_537:\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":7798:7799  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":7782:7795  accumulatedLp */\n      0x09\n        /* \"contracts/gainzilla.sol\":7782:7799  accumulatedLp = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":7809:7823  accumulatedEco */\n      0x0a\n        /* \"contracts/gainzilla.sol\":7809:7827  accumulatedEco = 0 */\n      sstore\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":7837:7845  swapping */\n      0x0b\n        /* \"contracts/gainzilla.sol\":7837:7853  swapping = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":7092:7860  function _swapAndLiquify() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_484:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":10576:11014  function _swapTokensForETH(uint256 amount) private {... */\n    tag_529:\n        /* \"contracts/gainzilla.sol\":10661:10677  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/gainzilla.sol\":10675:10676  2 */\n      0x02\n        /* \"contracts/gainzilla.sol\":10661:10677  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"contracts/gainzilla.sol\":10637:10658  address[] memory path */\n      0x00\n      swap3\n        /* \"contracts/gainzilla.sol\":10661:10677  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":10637:10677  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":10705:10709  this */\n      address\n        /* \"contracts/gainzilla.sol\":10687:10691  path */\n      dup2\n        /* \"contracts/gainzilla.sol\":10692:10693  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":10687:10694  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_548\n      jumpi\n      tag_548\n      tag_549\n      jump\t// in\n    tag_548:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":10687:10710  path[0] = address(this) */\n      swap3\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":10687:10694  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      dup2\n      add\n        /* \"contracts/gainzilla.sol\":10687:10710  path[0] = address(this) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/gainzilla.sol\":10747:10760  routerAddress */\n      sload(0x12)\n        /* \"contracts/gainzilla.sol\":10730:10768  IUniswapV2Router(routerAddress).WETH() */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x15ab88c9)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/gainzilla.sol\":10747:10760  routerAddress */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"contracts/gainzilla.sol\":10730:10766  IUniswapV2Router(routerAddress).WETH */\n      0xad5c4648\n      swap3\n        /* \"contracts/gainzilla.sol\":10730:10768  IUniswapV2Router(routerAddress).WETH() */\n      0x04\n      dup1\n      dup4\n      add\n      swap4\n        /* \"contracts/gainzilla.sol\":10687:10694  path[0] */\n      swap2\n      swap3\n        /* \"contracts/gainzilla.sol\":10730:10768  IUniswapV2Router(routerAddress).WETH() */\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/gainzilla.sol\":10747:10760  routerAddress */\n      dup7\n        /* \"contracts/gainzilla.sol\":10730:10768  IUniswapV2Router(routerAddress).WETH() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_551\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_551:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_552\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_552:\n        /* \"contracts/gainzilla.sol\":10720:10724  path */\n      dup2\n        /* \"contracts/gainzilla.sol\":10725:10726  1 */\n      0x01\n        /* \"contracts/gainzilla.sol\":10720:10727  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_554\n      jumpi\n      tag_554\n      tag_549\n      jump\t// in\n    tag_554:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":10720:10768  path[1] = IUniswapV2Router(routerAddress).WETH() */\n      swap3\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":10720:10727  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/gainzilla.sol\":10720:10768  path[1] = IUniswapV2Router(routerAddress).WETH() */\n      mstore\n        /* \"contracts/gainzilla.sol\":10803:10816  routerAddress */\n      sload(0x12)\n        /* \"contracts/gainzilla.sol\":10779:10825  _approve(address(this), routerAddress, amount) */\n      tag_555\n      swap2\n        /* \"contracts/gainzilla.sol\":10796:10800  this */\n      address\n      swap2\n        /* \"contracts/gainzilla.sol\":10803:10816  routerAddress */\n      and\n        /* \"contracts/gainzilla.sol\":10818:10824  amount */\n      dup5\n        /* \"contracts/gainzilla.sol\":10779:10787  _approve */\n      tag_225\n        /* \"contracts/gainzilla.sol\":10779:10825  _approve(address(this), routerAddress, amount) */\n      jump\t// in\n    tag_555:\n        /* \"contracts/gainzilla.sol\":10852:10865  routerAddress */\n      sload(0x12)\n        /* \"contracts/gainzilla.sol\":10835:11007  IUniswapV2Router(routerAddress).swapExactTokensForETH(... */\n      mload(0x40)\n      shl(0xe0, 0x18cbafe5)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":10852:10865  routerAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":10835:10888  IUniswapV2Router(routerAddress).swapExactTokensForETH */\n      0x18cbafe5\n      swap1\n        /* \"contracts/gainzilla.sol\":10835:11007  IUniswapV2Router(routerAddress).swapExactTokensForETH(... */\n      tag_556\n      swap1\n        /* \"contracts/gainzilla.sol\":10902:10908  amount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":10852:10865  routerAddress */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":10937:10941  path */\n      dup7\n      swap1\n        /* \"contracts/gainzilla.sol\":10963:10967  this */\n      address\n      swap1\n        /* \"contracts/gainzilla.sol\":10982:10997  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/gainzilla.sol\":10835:11007  IUniswapV2Router(routerAddress).swapExactTokensForETH(... */\n      0x04\n      add\n      tag_557\n      jump\t// in\n    tag_556:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_559\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_559:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_484\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_561\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":11020:11429  function _addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {... */\n    tag_539:\n        /* \"contracts/gainzilla.sol\":11125:11138  routerAddress */\n      sload(0x12)\n        /* \"contracts/gainzilla.sol\":11101:11152  _approve(address(this), routerAddress, tokenAmount) */\n      tag_563\n      swap1\n        /* \"contracts/gainzilla.sol\":11118:11122  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":11125:11138  routerAddress */\n      and\n        /* \"contracts/gainzilla.sol\":11140:11151  tokenAmount */\n      dup5\n        /* \"contracts/gainzilla.sol\":11101:11109  _approve */\n      tag_225\n        /* \"contracts/gainzilla.sol\":11101:11152  _approve(address(this), routerAddress, tokenAmount) */\n      jump\t// in\n    tag_563:\n        /* \"contracts/gainzilla.sol\":11179:11192  routerAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x12))\n        /* \"contracts/gainzilla.sol\":11162:11209  IUniswapV2Router(routerAddress).addLiquidityETH */\n      0xf305d719\n        /* \"contracts/gainzilla.sol\":11217:11226  ethAmount */\n      dup3\n        /* \"contracts/gainzilla.sol\":11249:11253  this */\n      address\n        /* \"contracts/gainzilla.sol\":11268:11279  tokenAmount */\n      dup6\n        /* \"contracts/gainzilla.sol\":11179:11192  routerAddress */\n      0x00\n      dup1\n        /* \"contracts/gainzilla.sol\":11323:11330  owner() */\n      tag_564\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":11323:11330  owner() */\n    tag_564:\n        /* \"contracts/gainzilla.sol\":11162:11369  IUniswapV2Router(routerAddress).addLiquidityETH{value: ethAmount}(... */\n      mload(0x40)\n      0xe0\n      dup9\n      swap1\n      shl\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":19946:19961   */\n      swap6\n      dup7\n      and\n        /* \"contracts/gainzilla.sol\":11162:11369  IUniswapV2Router(routerAddress).addLiquidityETH{value: ethAmount}(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19928:19962   */\n      mstore\n        /* \"#utility.yul\":19978:19996   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":19971:20005   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":20021:20039   */\n      0x44\n      dup5\n      add\n        /* \"#utility.yul\":20014:20048   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":20064:20082   */\n      0x64\n      dup4\n      add\n        /* \"#utility.yul\":20057:20091   */\n      mstore\n        /* \"#utility.yul\":20128:20143   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":20107:20126   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":20100:20144   */\n      mstore\n        /* \"contracts/gainzilla.sol\":11344:11359  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":20160:20179   */\n      0xa4\n      dup3\n      add\n        /* \"#utility.yul\":20153:20188   */\n      mstore\n        /* \"#utility.yul\":19862:19881   */\n      0xc4\n      add\n        /* \"contracts/gainzilla.sol\":11162:11369  IUniswapV2Router(routerAddress).addLiquidityETH{value: ethAmount}(... */\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_568\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_568:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_569\n      swap2\n      swap1\n      tag_570\n      jump\t// in\n    tag_569:\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":11384:11422  LiquidityAdded(tokenAmount, ethAmount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":17149:17174   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":17205:17207   */\n      0x20\n        /* \"#utility.yul\":17190:17208   */\n      dup2\n      add\n        /* \"#utility.yul\":17183:17217   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/gainzilla.sol\":11384:11422  LiquidityAdded(tokenAmount, ethAmount) */\n      0x38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b\n      swap3\n      pop\n        /* \"#utility.yul\":17122:17140   */\n      add\n        /* \"contracts/gainzilla.sol\":11384:11422  LiquidityAdded(tokenAmount, ethAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/gainzilla.sol\":11020:11429  function _addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:614   */\n    tag_56:\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup2\n        /* \"#utility.yul\":327:348   */\n      mstore\n        /* \"#utility.yul\":308:312   */\n      0x00\n        /* \"#utility.yul\":377:383   */\n      dup3\n        /* \"#utility.yul\":371:384   */\n      mload\n        /* \"#utility.yul\":420:426   */\n      dup1\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":404:413   */\n      dup5\n        /* \"#utility.yul\":400:418   */\n      add\n        /* \"#utility.yul\":393:427   */\n      mstore\n        /* \"#utility.yul\":479:485   */\n      dup1\n        /* \"#utility.yul\":474:476   */\n      0x20\n        /* \"#utility.yul\":466:472   */\n      dup6\n        /* \"#utility.yul\":462:477   */\n      add\n        /* \"#utility.yul\":457:459   */\n      0x40\n        /* \"#utility.yul\":446:455   */\n      dup6\n        /* \"#utility.yul\":442:460   */\n      add\n        /* \"#utility.yul\":436:486   */\n      mcopy\n        /* \"#utility.yul\":535:536   */\n      0x00\n        /* \"#utility.yul\":530:532   */\n      0x40\n        /* \"#utility.yul\":521:527   */\n      dup3\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:528   */\n      add\n        /* \"#utility.yul\":502:533   */\n      add\n        /* \"#utility.yul\":495:537   */\n      mstore\n        /* \"#utility.yul\":605:607   */\n      0x40\n        /* \"#utility.yul\":598:600   */\n      0x1f\n        /* \"#utility.yul\":594:601   */\n      not\n        /* \"#utility.yul\":589:591   */\n      0x1f\n        /* \"#utility.yul\":581:587   */\n      dup4\n        /* \"#utility.yul\":577:592   */\n      add\n        /* \"#utility.yul\":573:602   */\n      and\n        /* \"#utility.yul\":562:571   */\n      dup5\n        /* \"#utility.yul\":558:603   */\n      add\n        /* \"#utility.yul\":554:608   */\n      add\n        /* \"#utility.yul\":546:608   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":196:614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":619:750   */\n    tag_572:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":694:725   */\n      dup2\n      and\n        /* \"#utility.yul\":684:726   */\n      dup2\n      eq\n        /* \"#utility.yul\":674:744   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":740:741   */\n      0x00\n        /* \"#utility.yul\":737:738   */\n      dup1\n        /* \"#utility.yul\":730:742   */\n      revert\n        /* \"#utility.yul\":755:1070   */\n    tag_60:\n        /* \"#utility.yul\":823:829   */\n      0x00\n        /* \"#utility.yul\":831:837   */\n      dup1\n        /* \"#utility.yul\":884:886   */\n      0x40\n        /* \"#utility.yul\":872:881   */\n      dup4\n        /* \"#utility.yul\":863:870   */\n      dup6\n        /* \"#utility.yul\":859:882   */\n      sub\n        /* \"#utility.yul\":855:887   */\n      slt\n        /* \"#utility.yul\":852:904   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":900:901   */\n      0x00\n        /* \"#utility.yul\":897:898   */\n      dup1\n        /* \"#utility.yul\":890:902   */\n      revert\n        /* \"#utility.yul\":852:904   */\n    tag_585:\n        /* \"#utility.yul\":939:948   */\n      dup3\n        /* \"#utility.yul\":926:949   */\n      calldataload\n        /* \"#utility.yul\":958:989   */\n      tag_586\n        /* \"#utility.yul\":983:988   */\n      dup2\n        /* \"#utility.yul\":958:989   */\n      tag_572\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":1008:1013   */\n      swap5\n        /* \"#utility.yul\":1060:1062   */\n      0x20\n        /* \"#utility.yul\":1045:1063   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1032:1064   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":755:1070   */\n      jump\t// out\n        /* \"#utility.yul\":1267:1426   */\n    tag_573:\n        /* \"#utility.yul\":1334:1354   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1394:1400   */\n      0xffff\n        /* \"#utility.yul\":1383:1401   */\n      dup2\n      and\n        /* \"#utility.yul\":1373:1402   */\n      dup2\n      eq\n        /* \"#utility.yul\":1363:1420   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":1416:1417   */\n      0x00\n        /* \"#utility.yul\":1413:1414   */\n      dup1\n        /* \"#utility.yul\":1406:1418   */\n      revert\n        /* \"#utility.yul\":1363:1420   */\n    tag_589:\n        /* \"#utility.yul\":1267:1426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1431:1832   */\n    tag_67:\n        /* \"#utility.yul\":1513:1519   */\n      0x00\n        /* \"#utility.yul\":1521:1527   */\n      dup1\n        /* \"#utility.yul\":1529:1535   */\n      0x00\n        /* \"#utility.yul\":1537:1543   */\n      dup1\n        /* \"#utility.yul\":1590:1593   */\n      0x80\n        /* \"#utility.yul\":1578:1587   */\n      dup6\n        /* \"#utility.yul\":1569:1576   */\n      dup8\n        /* \"#utility.yul\":1565:1588   */\n      sub\n        /* \"#utility.yul\":1561:1594   */\n      slt\n        /* \"#utility.yul\":1558:1611   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":1607:1608   */\n      0x00\n        /* \"#utility.yul\":1604:1605   */\n      dup1\n        /* \"#utility.yul\":1597:1609   */\n      revert\n        /* \"#utility.yul\":1558:1611   */\n    tag_591:\n        /* \"#utility.yul\":1630:1658   */\n      tag_592\n        /* \"#utility.yul\":1648:1657   */\n      dup6\n        /* \"#utility.yul\":1630:1658   */\n      tag_573\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":1620:1658   */\n      swap4\n      pop\n        /* \"#utility.yul\":1677:1714   */\n      tag_593\n        /* \"#utility.yul\":1710:1712   */\n      0x20\n        /* \"#utility.yul\":1699:1708   */\n      dup7\n        /* \"#utility.yul\":1695:1713   */\n      add\n        /* \"#utility.yul\":1677:1714   */\n      tag_573\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":1667:1714   */\n      swap3\n      pop\n        /* \"#utility.yul\":1733:1770   */\n      tag_594\n        /* \"#utility.yul\":1766:1768   */\n      0x40\n        /* \"#utility.yul\":1755:1764   */\n      dup7\n        /* \"#utility.yul\":1751:1769   */\n      add\n        /* \"#utility.yul\":1733:1770   */\n      tag_573\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":1723:1770   */\n      swap2\n      pop\n        /* \"#utility.yul\":1789:1826   */\n      tag_595\n        /* \"#utility.yul\":1822:1824   */\n      0x60\n        /* \"#utility.yul\":1811:1820   */\n      dup7\n        /* \"#utility.yul\":1807:1825   */\n      add\n        /* \"#utility.yul\":1789:1826   */\n      tag_573\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":1779:1826   */\n      swap1\n      pop\n        /* \"#utility.yul\":1431:1832   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1837:2293   */\n    tag_76:\n        /* \"#utility.yul\":1914:1920   */\n      0x00\n        /* \"#utility.yul\":1922:1928   */\n      dup1\n        /* \"#utility.yul\":1930:1936   */\n      0x00\n        /* \"#utility.yul\":1983:1985   */\n      0x60\n        /* \"#utility.yul\":1971:1980   */\n      dup5\n        /* \"#utility.yul\":1962:1969   */\n      dup7\n        /* \"#utility.yul\":1958:1981   */\n      sub\n        /* \"#utility.yul\":1954:1986   */\n      slt\n        /* \"#utility.yul\":1951:2003   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":1999:2000   */\n      0x00\n        /* \"#utility.yul\":1996:1997   */\n      dup1\n        /* \"#utility.yul\":1989:2001   */\n      revert\n        /* \"#utility.yul\":1951:2003   */\n    tag_597:\n        /* \"#utility.yul\":2038:2047   */\n      dup4\n        /* \"#utility.yul\":2025:2048   */\n      calldataload\n        /* \"#utility.yul\":2057:2088   */\n      tag_598\n        /* \"#utility.yul\":2082:2087   */\n      dup2\n        /* \"#utility.yul\":2057:2088   */\n      tag_572\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":2107:2112   */\n      swap3\n      pop\n        /* \"#utility.yul\":2164:2166   */\n      0x20\n        /* \"#utility.yul\":2149:2167   */\n      dup5\n      add\n        /* \"#utility.yul\":2136:2168   */\n      calldataload\n        /* \"#utility.yul\":2177:2210   */\n      tag_599\n        /* \"#utility.yul\":2136:2168   */\n      dup2\n        /* \"#utility.yul\":2177:2210   */\n      tag_572\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":1837:2293   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2229:2236   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2283:2285   */\n      0x40\n        /* \"#utility.yul\":2268:2286   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2255:2287   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1837:2293   */\n      jump\t// out\n        /* \"#utility.yul\":3144:3391   */\n    tag_106:\n        /* \"#utility.yul\":3203:3209   */\n      0x00\n        /* \"#utility.yul\":3256:3258   */\n      0x20\n        /* \"#utility.yul\":3244:3253   */\n      dup3\n        /* \"#utility.yul\":3235:3242   */\n      dup5\n        /* \"#utility.yul\":3231:3254   */\n      sub\n        /* \"#utility.yul\":3227:3259   */\n      slt\n        /* \"#utility.yul\":3224:3276   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":3272:3273   */\n      0x00\n        /* \"#utility.yul\":3269:3270   */\n      dup1\n        /* \"#utility.yul\":3262:3274   */\n      revert\n        /* \"#utility.yul\":3224:3276   */\n    tag_604:\n        /* \"#utility.yul\":3311:3320   */\n      dup2\n        /* \"#utility.yul\":3298:3321   */\n      calldataload\n        /* \"#utility.yul\":3330:3361   */\n      tag_240\n        /* \"#utility.yul\":3355:3360   */\n      dup2\n        /* \"#utility.yul\":3330:3361   */\n      tag_572\n      jump\t// in\n        /* \"#utility.yul\":3854:4034   */\n    tag_125:\n        /* \"#utility.yul\":3913:3919   */\n      0x00\n        /* \"#utility.yul\":3966:3968   */\n      0x20\n        /* \"#utility.yul\":3954:3963   */\n      dup3\n        /* \"#utility.yul\":3945:3952   */\n      dup5\n        /* \"#utility.yul\":3941:3964   */\n      sub\n        /* \"#utility.yul\":3937:3969   */\n      slt\n        /* \"#utility.yul\":3934:3986   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":3982:3983   */\n      0x00\n        /* \"#utility.yul\":3979:3980   */\n      dup1\n        /* \"#utility.yul\":3972:3984   */\n      revert\n        /* \"#utility.yul\":3934:3986   */\n    tag_609:\n      pop\n        /* \"#utility.yul\":4005:4028   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3854:4034   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4435:4595   */\n    tag_574:\n        /* \"#utility.yul\":4500:4520   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":4556:4569   */\n      dup1\n      iszero\n        /* \"#utility.yul\":4549:4570   */\n      iszero\n        /* \"#utility.yul\":4539:4571   */\n      dup2\n      eq\n        /* \"#utility.yul\":4529:4589   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":4585:4586   */\n      0x00\n        /* \"#utility.yul\":4582:4583   */\n      dup1\n        /* \"#utility.yul\":4575:4587   */\n      revert\n        /* \"#utility.yul\":4600:4915   */\n    tag_156:\n        /* \"#utility.yul\":4665:4671   */\n      0x00\n        /* \"#utility.yul\":4673:4679   */\n      dup1\n        /* \"#utility.yul\":4726:4728   */\n      0x40\n        /* \"#utility.yul\":4714:4723   */\n      dup4\n        /* \"#utility.yul\":4705:4712   */\n      dup6\n        /* \"#utility.yul\":4701:4724   */\n      sub\n        /* \"#utility.yul\":4697:4729   */\n      slt\n        /* \"#utility.yul\":4694:4746   */\n      iszero\n      tag_614\n      jumpi\n        /* \"#utility.yul\":4742:4743   */\n      0x00\n        /* \"#utility.yul\":4739:4740   */\n      dup1\n        /* \"#utility.yul\":4732:4744   */\n      revert\n        /* \"#utility.yul\":4694:4746   */\n    tag_614:\n        /* \"#utility.yul\":4781:4790   */\n      dup3\n        /* \"#utility.yul\":4768:4791   */\n      calldataload\n        /* \"#utility.yul\":4800:4831   */\n      tag_615\n        /* \"#utility.yul\":4825:4830   */\n      dup2\n        /* \"#utility.yul\":4800:4831   */\n      tag_572\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":4850:4855   */\n      swap2\n      pop\n        /* \"#utility.yul\":4874:4909   */\n      tag_616\n        /* \"#utility.yul\":4905:4907   */\n      0x20\n        /* \"#utility.yul\":4890:4908   */\n      dup5\n      add\n        /* \"#utility.yul\":4874:4909   */\n      tag_574\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":4864:4909   */\n      swap1\n      pop\n        /* \"#utility.yul\":4600:4915   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5419:5807   */\n    tag_197:\n        /* \"#utility.yul\":5487:5493   */\n      0x00\n        /* \"#utility.yul\":5495:5501   */\n      dup1\n        /* \"#utility.yul\":5548:5550   */\n      0x40\n        /* \"#utility.yul\":5536:5545   */\n      dup4\n        /* \"#utility.yul\":5527:5534   */\n      dup6\n        /* \"#utility.yul\":5523:5546   */\n      sub\n        /* \"#utility.yul\":5519:5551   */\n      slt\n        /* \"#utility.yul\":5516:5568   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":5564:5565   */\n      0x00\n        /* \"#utility.yul\":5561:5562   */\n      dup1\n        /* \"#utility.yul\":5554:5566   */\n      revert\n        /* \"#utility.yul\":5516:5568   */\n    tag_619:\n        /* \"#utility.yul\":5603:5612   */\n      dup3\n        /* \"#utility.yul\":5590:5613   */\n      calldataload\n        /* \"#utility.yul\":5622:5653   */\n      tag_620\n        /* \"#utility.yul\":5647:5652   */\n      dup2\n        /* \"#utility.yul\":5622:5653   */\n      tag_572\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":5672:5677   */\n      swap2\n      pop\n        /* \"#utility.yul\":5729:5731   */\n      0x20\n        /* \"#utility.yul\":5714:5732   */\n      dup4\n      add\n        /* \"#utility.yul\":5701:5733   */\n      calldataload\n        /* \"#utility.yul\":5742:5775   */\n      tag_621\n        /* \"#utility.yul\":5701:5733   */\n      dup2\n        /* \"#utility.yul\":5742:5775   */\n      tag_572\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":5794:5801   */\n      dup1\n        /* \"#utility.yul\":5784:5801   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5419:5807   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5812:6064   */\n    tag_207:\n        /* \"#utility.yul\":5876:5882   */\n      0x00\n        /* \"#utility.yul\":5884:5890   */\n      dup1\n        /* \"#utility.yul\":5937:5939   */\n      0x40\n        /* \"#utility.yul\":5925:5934   */\n      dup4\n        /* \"#utility.yul\":5916:5923   */\n      dup6\n        /* \"#utility.yul\":5912:5935   */\n      sub\n        /* \"#utility.yul\":5908:5940   */\n      slt\n        /* \"#utility.yul\":5905:5957   */\n      iszero\n      tag_623\n      jumpi\n        /* \"#utility.yul\":5953:5954   */\n      0x00\n        /* \"#utility.yul\":5950:5951   */\n      dup1\n        /* \"#utility.yul\":5943:5955   */\n      revert\n        /* \"#utility.yul\":5905:5957   */\n    tag_623:\n        /* \"#utility.yul\":5976:6002   */\n      tag_624\n        /* \"#utility.yul\":5992:6001   */\n      dup4\n        /* \"#utility.yul\":5976:6002   */\n      tag_574\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":5966:6002   */\n      swap2\n      pop\n        /* \"#utility.yul\":6021:6058   */\n      tag_616\n        /* \"#utility.yul\":6054:6056   */\n      0x20\n        /* \"#utility.yul\":6043:6052   */\n      dup5\n        /* \"#utility.yul\":6039:6057   */\n      add\n        /* \"#utility.yul\":6021:6058   */\n      tag_573\n      jump\t// in\n        /* \"#utility.yul\":6069:6190   */\n    tag_575:\n        /* \"#utility.yul\":6154:6164   */\n      0xffffffff\n        /* \"#utility.yul\":6147:6152   */\n      dup2\n        /* \"#utility.yul\":6143:6165   */\n      and\n        /* \"#utility.yul\":6136:6141   */\n      dup2\n        /* \"#utility.yul\":6133:6166   */\n      eq\n        /* \"#utility.yul\":6123:6184   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":6180:6181   */\n      0x00\n        /* \"#utility.yul\":6177:6178   */\n      dup1\n        /* \"#utility.yul\":6170:6182   */\n      revert\n        /* \"#utility.yul\":6195:6508   */\n    tag_212:\n        /* \"#utility.yul\":6259:6265   */\n      0x00\n        /* \"#utility.yul\":6267:6273   */\n      dup1\n        /* \"#utility.yul\":6320:6322   */\n      0x40\n        /* \"#utility.yul\":6308:6317   */\n      dup4\n        /* \"#utility.yul\":6299:6306   */\n      dup6\n        /* \"#utility.yul\":6295:6318   */\n      sub\n        /* \"#utility.yul\":6291:6323   */\n      slt\n        /* \"#utility.yul\":6288:6340   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":6336:6337   */\n      0x00\n        /* \"#utility.yul\":6333:6334   */\n      dup1\n        /* \"#utility.yul\":6326:6338   */\n      revert\n        /* \"#utility.yul\":6288:6340   */\n    tag_629:\n        /* \"#utility.yul\":6359:6385   */\n      tag_630\n        /* \"#utility.yul\":6375:6384   */\n      dup4\n        /* \"#utility.yul\":6359:6385   */\n      tag_574\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":6349:6385   */\n      swap2\n      pop\n        /* \"#utility.yul\":6435:6437   */\n      0x20\n        /* \"#utility.yul\":6424:6433   */\n      dup4\n        /* \"#utility.yul\":6420:6438   */\n      add\n        /* \"#utility.yul\":6407:6439   */\n      calldataload\n        /* \"#utility.yul\":6448:6478   */\n      tag_621\n        /* \"#utility.yul\":6472:6477   */\n      dup2\n        /* \"#utility.yul\":6448:6478   */\n      tag_575\n      jump\t// in\n        /* \"#utility.yul\":6513:6893   */\n    tag_216:\n        /* \"#utility.yul\":6592:6593   */\n      0x01\n        /* \"#utility.yul\":6588:6600   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6635:6647   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6656:6717   */\n      tag_633\n      jumpi\n        /* \"#utility.yul\":6710:6714   */\n      0x7f\n        /* \"#utility.yul\":6702:6708   */\n      dup3\n        /* \"#utility.yul\":6698:6715   */\n      and\n        /* \"#utility.yul\":6688:6715   */\n      swap2\n      pop\n        /* \"#utility.yul\":6656:6717   */\n    tag_633:\n        /* \"#utility.yul\":6763:6765   */\n      0x20\n        /* \"#utility.yul\":6755:6761   */\n      dup3\n        /* \"#utility.yul\":6752:6766   */\n      lt\n        /* \"#utility.yul\":6732:6750   */\n      dup2\n        /* \"#utility.yul\":6729:6767   */\n      sub\n        /* \"#utility.yul\":6726:6887   */\n      tag_634\n      jumpi\n        /* \"#utility.yul\":6809:6819   */\n      0x4e487b71\n        /* \"#utility.yul\":6804:6807   */\n      0xe0\n        /* \"#utility.yul\":6800:6820   */\n      shl\n        /* \"#utility.yul\":6797:6798   */\n      0x00\n        /* \"#utility.yul\":6790:6821   */\n      mstore\n        /* \"#utility.yul\":6844:6848   */\n      0x22\n        /* \"#utility.yul\":6841:6842   */\n      0x04\n        /* \"#utility.yul\":6834:6849   */\n      mstore\n        /* \"#utility.yul\":6872:6876   */\n      0x24\n        /* \"#utility.yul\":6869:6870   */\n      0x00\n        /* \"#utility.yul\":6862:6877   */\n      revert\n        /* \"#utility.yul\":6726:6887   */\n    tag_634:\n      pop\n        /* \"#utility.yul\":6513:6893   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6898:7025   */\n    tag_576:\n        /* \"#utility.yul\":6959:6969   */\n      0x4e487b71\n        /* \"#utility.yul\":6954:6957   */\n      0xe0\n        /* \"#utility.yul\":6950:6970   */\n      shl\n        /* \"#utility.yul\":6947:6948   */\n      0x00\n        /* \"#utility.yul\":6940:6971   */\n      mstore\n        /* \"#utility.yul\":6990:6994   */\n      0x11\n        /* \"#utility.yul\":6987:6988   */\n      0x04\n        /* \"#utility.yul\":6980:6995   */\n      mstore\n        /* \"#utility.yul\":7014:7018   */\n      0x24\n        /* \"#utility.yul\":7011:7012   */\n      0x00\n        /* \"#utility.yul\":7004:7019   */\n      revert\n        /* \"#utility.yul\":7030:7198   */\n    tag_231:\n        /* \"#utility.yul\":7097:7103   */\n      0xffff\n        /* \"#utility.yul\":7123:7133   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":7135:7145   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":7119:7146   */\n      add\n      swap1\n        /* \"#utility.yul\":7158:7169   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7155:7192   */\n      iszero\n      tag_638\n      jumpi\n        /* \"#utility.yul\":7172:7190   */\n      tag_638\n      tag_576\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":7155:7192   */\n      pop\n        /* \"#utility.yul\":7030:7198   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7892:8017   */\n    tag_252:\n        /* \"#utility.yul\":7957:7966   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7978:7988   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7975:8011   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":7991:8009   */\n      tag_221\n      tag_576\n      jump\t// in\n        /* \"#utility.yul\":8022:8158   */\n    tag_270:\n        /* \"#utility.yul\":8057:8060   */\n      0x00\n      shl(0xff, 0x01)\n        /* \"#utility.yul\":8078:8100   */\n      dup3\n      add\n        /* \"#utility.yul\":8075:8123   */\n      tag_646\n      jumpi\n        /* \"#utility.yul\":8103:8121   */\n      tag_646\n      tag_576\n      jump\t// in\n    tag_646:\n      pop\n        /* \"#utility.yul\":8143:8144   */\n      0x00\n        /* \"#utility.yul\":8139:8152   */\n      sub\n      swap1\n        /* \"#utility.yul\":8022:8158   */\n      jump\t// out\n        /* \"#utility.yul\":8511:8699   */\n    tag_577:\n        /* \"#utility.yul\":8590:8603   */\n      dup1\n      mload\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"#utility.yul\":8632:8674   */\n      dup2\n      and\n        /* \"#utility.yul\":8622:8675   */\n      dup2\n      eq\n        /* \"#utility.yul\":8612:8693   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":8689:8690   */\n      0x00\n        /* \"#utility.yul\":8686:8687   */\n      dup1\n        /* \"#utility.yul\":8679:8691   */\n      revert\n        /* \"#utility.yul\":8704:9123   */\n    tag_290:\n        /* \"#utility.yul\":8791:8797   */\n      0x00\n        /* \"#utility.yul\":8799:8805   */\n      dup1\n        /* \"#utility.yul\":8807:8813   */\n      0x00\n        /* \"#utility.yul\":8860:8862   */\n      0x60\n        /* \"#utility.yul\":8848:8857   */\n      dup5\n        /* \"#utility.yul\":8839:8846   */\n      dup7\n        /* \"#utility.yul\":8835:8858   */\n      sub\n        /* \"#utility.yul\":8831:8863   */\n      slt\n        /* \"#utility.yul\":8828:8880   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":8876:8877   */\n      0x00\n        /* \"#utility.yul\":8873:8874   */\n      dup1\n        /* \"#utility.yul\":8866:8878   */\n      revert\n        /* \"#utility.yul\":8828:8880   */\n    tag_651:\n        /* \"#utility.yul\":8899:8939   */\n      tag_652\n        /* \"#utility.yul\":8929:8938   */\n      dup5\n        /* \"#utility.yul\":8899:8939   */\n      tag_577\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":8889:8939   */\n      swap3\n      pop\n        /* \"#utility.yul\":8958:9007   */\n      tag_653\n        /* \"#utility.yul\":9003:9005   */\n      0x20\n        /* \"#utility.yul\":8992:9001   */\n      dup6\n        /* \"#utility.yul\":8988:9006   */\n      add\n        /* \"#utility.yul\":8958:9007   */\n      tag_577\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":8948:9007   */\n      swap2\n      pop\n        /* \"#utility.yul\":9050:9052   */\n      0x40\n        /* \"#utility.yul\":9039:9048   */\n      dup5\n        /* \"#utility.yul\":9035:9053   */\n      add\n        /* \"#utility.yul\":9029:9054   */\n      mload\n        /* \"#utility.yul\":9063:9093   */\n      tag_654\n        /* \"#utility.yul\":9087:9092   */\n      dup2\n        /* \"#utility.yul\":9063:9093   */\n      tag_575\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":9112:9117   */\n      dup1\n        /* \"#utility.yul\":9102:9117   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":8704:9123   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9128:9379   */\n    tag_296:\n        /* \"#utility.yul\":9198:9204   */\n      0x00\n        /* \"#utility.yul\":9251:9253   */\n      0x20\n        /* \"#utility.yul\":9239:9248   */\n      dup3\n        /* \"#utility.yul\":9230:9237   */\n      dup5\n        /* \"#utility.yul\":9226:9249   */\n      sub\n        /* \"#utility.yul\":9222:9254   */\n      slt\n        /* \"#utility.yul\":9219:9271   */\n      iszero\n      tag_656\n      jumpi\n        /* \"#utility.yul\":9267:9268   */\n      0x00\n        /* \"#utility.yul\":9264:9265   */\n      dup1\n        /* \"#utility.yul\":9257:9269   */\n      revert\n        /* \"#utility.yul\":9219:9271   */\n    tag_656:\n        /* \"#utility.yul\":9299:9308   */\n      dup2\n        /* \"#utility.yul\":9293:9309   */\n      mload\n        /* \"#utility.yul\":9318:9349   */\n      tag_240\n        /* \"#utility.yul\":9343:9348   */\n      dup2\n        /* \"#utility.yul\":9318:9349   */\n      tag_572\n      jump\t// in\n        /* \"#utility.yul\":9384:9511   */\n    tag_578:\n        /* \"#utility.yul\":9445:9455   */\n      0x4e487b71\n        /* \"#utility.yul\":9440:9443   */\n      0xe0\n        /* \"#utility.yul\":9436:9456   */\n      shl\n        /* \"#utility.yul\":9433:9434   */\n      0x00\n        /* \"#utility.yul\":9426:9457   */\n      mstore\n        /* \"#utility.yul\":9476:9480   */\n      0x12\n        /* \"#utility.yul\":9473:9474   */\n      0x04\n        /* \"#utility.yul\":9466:9481   */\n      mstore\n        /* \"#utility.yul\":9500:9504   */\n      0x24\n        /* \"#utility.yul\":9497:9498   */\n      0x00\n        /* \"#utility.yul\":9490:9505   */\n      revert\n        /* \"#utility.yul\":9516:9628   */\n    tag_318:\n        /* \"#utility.yul\":9548:9549   */\n      0x00\n        /* \"#utility.yul\":9574:9575   */\n      dup3\n        /* \"#utility.yul\":9564:9599   */\n      tag_661\n      jumpi\n        /* \"#utility.yul\":9579:9597   */\n      tag_661\n      tag_578\n      jump\t// in\n    tag_661:\n      pop\n        /* \"#utility.yul\":9613:9622   */\n      mod\n      swap1\n        /* \"#utility.yul\":9516:9628   */\n      jump\t// out\n        /* \"#utility.yul\":10793:11042   */\n    tag_360:\n        /* \"#utility.yul\":10864:10874   */\n      0xffffffff\n        /* \"#utility.yul\":10906:10916   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":10918:10928   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":10902:10929   */\n      mul\n        /* \"#utility.yul\":10949:10969   */\n      dup1\n      dup3\n      and\n      swap2\n        /* \"#utility.yul\":10864:10874   */\n      swap1\n        /* \"#utility.yul\":10988:11012   */\n      dup3\n      dup2\n      eq\n        /* \"#utility.yul\":10978:11036   */\n      tag_667\n      jumpi\n        /* \"#utility.yul\":11016:11034   */\n      tag_667\n      tag_576\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":10978:11036   */\n      pop\n      pop\n        /* \"#utility.yul\":10793:11042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13980:14108   */\n    tag_428:\n        /* \"#utility.yul\":14047:14056   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":14068:14079   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":14065:14102   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":14082:14100   */\n      tag_221\n      tag_576\n      jump\t// in\n        /* \"#utility.yul\":14113:14281   */\n    tag_431:\n        /* \"#utility.yul\":14186:14195   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":14217:14226   */\n      dup2\n      iszero\n        /* \"#utility.yul\":14234:14249   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":14228:14250   */\n      dup5\n      eq\n        /* \"#utility.yul\":14214:14251   */\n      or\n        /* \"#utility.yul\":14204:14275   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":14255:14273   */\n      tag_221\n      tag_576\n      jump\t// in\n        /* \"#utility.yul\":14286:14406   */\n    tag_434:\n        /* \"#utility.yul\":14326:14327   */\n      0x00\n        /* \"#utility.yul\":14352:14353   */\n      dup3\n        /* \"#utility.yul\":14342:14377   */\n      tag_684\n      jumpi\n        /* \"#utility.yul\":14357:14375   */\n      tag_684\n      tag_578\n      jump\t// in\n    tag_684:\n      pop\n        /* \"#utility.yul\":14391:14400   */\n      div\n      swap1\n        /* \"#utility.yul\":14286:14406   */\n      jump\t// out\n        /* \"#utility.yul\":17228:17355   */\n    tag_545:\n        /* \"#utility.yul\":17289:17299   */\n      0x4e487b71\n        /* \"#utility.yul\":17284:17287   */\n      0xe0\n        /* \"#utility.yul\":17280:17300   */\n      shl\n        /* \"#utility.yul\":17277:17278   */\n      0x00\n        /* \"#utility.yul\":17270:17301   */\n      mstore\n        /* \"#utility.yul\":17320:17324   */\n      0x41\n        /* \"#utility.yul\":17317:17318   */\n      0x04\n        /* \"#utility.yul\":17310:17325   */\n      mstore\n        /* \"#utility.yul\":17344:17348   */\n      0x24\n        /* \"#utility.yul\":17341:17342   */\n      0x00\n        /* \"#utility.yul\":17334:17349   */\n      revert\n        /* \"#utility.yul\":17360:17487   */\n    tag_549:\n        /* \"#utility.yul\":17421:17431   */\n      0x4e487b71\n        /* \"#utility.yul\":17416:17419   */\n      0xe0\n        /* \"#utility.yul\":17412:17432   */\n      shl\n        /* \"#utility.yul\":17409:17410   */\n      0x00\n        /* \"#utility.yul\":17402:17433   */\n      mstore\n        /* \"#utility.yul\":17452:17456   */\n      0x32\n        /* \"#utility.yul\":17449:17450   */\n      0x04\n        /* \"#utility.yul\":17442:17457   */\n      mstore\n        /* \"#utility.yul\":17476:17480   */\n      0x24\n        /* \"#utility.yul\":17473:17474   */\n      0x00\n        /* \"#utility.yul\":17466:17481   */\n      revert\n        /* \"#utility.yul\":17492:18472   */\n    tag_557:\n        /* \"#utility.yul\":17754:17758   */\n      0x00\n        /* \"#utility.yul\":17802:17805   */\n      0xa0\n        /* \"#utility.yul\":17791:17800   */\n      dup3\n        /* \"#utility.yul\":17787:17806   */\n      add\n        /* \"#utility.yul\":17833:17839   */\n      dup8\n        /* \"#utility.yul\":17822:17831   */\n      dup4\n        /* \"#utility.yul\":17815:17840   */\n      mstore\n        /* \"#utility.yul\":17859:17861   */\n      0x20\n        /* \"#utility.yul\":17897:17903   */\n      dup8\n        /* \"#utility.yul\":17892:17894   */\n      0x20\n        /* \"#utility.yul\":17881:17890   */\n      dup6\n        /* \"#utility.yul\":17877:17895   */\n      add\n        /* \"#utility.yul\":17870:17904   */\n      mstore\n        /* \"#utility.yul\":17940:17943   */\n      0xa0\n        /* \"#utility.yul\":17935:17937   */\n      0x40\n        /* \"#utility.yul\":17924:17933   */\n      dup6\n        /* \"#utility.yul\":17920:17938   */\n      add\n        /* \"#utility.yul\":17913:17944   */\n      mstore\n        /* \"#utility.yul\":17964:17970   */\n      dup2\n        /* \"#utility.yul\":17999:18005   */\n      dup8\n        /* \"#utility.yul\":17993:18006   */\n      mload\n        /* \"#utility.yul\":18030:18036   */\n      dup1\n        /* \"#utility.yul\":18022:18028   */\n      dup5\n        /* \"#utility.yul\":18015:18037   */\n      mstore\n        /* \"#utility.yul\":18068:18071   */\n      0xc0\n        /* \"#utility.yul\":18057:18066   */\n      dup7\n        /* \"#utility.yul\":18053:18072   */\n      add\n        /* \"#utility.yul\":18046:18072   */\n      swap2\n      pop\n        /* \"#utility.yul\":18107:18109   */\n      0x20\n        /* \"#utility.yul\":18099:18105   */\n      dup10\n        /* \"#utility.yul\":18095:18110   */\n      add\n        /* \"#utility.yul\":18081:18110   */\n      swap4\n      pop\n        /* \"#utility.yul\":18128:18129   */\n      0x00\n        /* \"#utility.yul\":18138:18333   */\n    tag_696:\n        /* \"#utility.yul\":18152:18158   */\n      dup2\n        /* \"#utility.yul\":18149:18150   */\n      dup2\n        /* \"#utility.yul\":18146:18159   */\n      lt\n        /* \"#utility.yul\":18138:18333   */\n      iszero\n      tag_698\n      jumpi\n        /* \"#utility.yul\":18217:18230   */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18213:18252   */\n      and\n        /* \"#utility.yul\":18201:18253   */\n      dup4\n      mstore\n        /* \"#utility.yul\":18308:18323   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":18273:18285   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":18249:18250   */\n      0x01\n        /* \"#utility.yul\":18167:18176   */\n      add\n        /* \"#utility.yul\":18138:18333   */\n      jump(tag_696)\n    tag_698:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18389:18421   */\n      swap7\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":18384:18386   */\n      0x60\n        /* \"#utility.yul\":18369:18387   */\n      dup6\n      add\n        /* \"#utility.yul\":18362:18422   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18453:18456   */\n      0x80\n        /* \"#utility.yul\":18438:18457   */\n      add\n        /* \"#utility.yul\":18431:18466   */\n      mstore\n        /* \"#utility.yul\":18350:18353   */\n      swap4\n        /* \"#utility.yul\":17492:18472   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18477:19582   */\n    tag_561:\n        /* \"#utility.yul\":18572:18578   */\n      0x00\n        /* \"#utility.yul\":18603:18605   */\n      0x20\n        /* \"#utility.yul\":18646:18648   */\n      dup1\n        /* \"#utility.yul\":18634:18643   */\n      dup4\n        /* \"#utility.yul\":18625:18632   */\n      dup6\n        /* \"#utility.yul\":18621:18644   */\n      sub\n        /* \"#utility.yul\":18617:18649   */\n      slt\n        /* \"#utility.yul\":18614:18666   */\n      iszero\n      tag_700\n      jumpi\n        /* \"#utility.yul\":18662:18663   */\n      0x00\n        /* \"#utility.yul\":18659:18660   */\n      dup1\n        /* \"#utility.yul\":18652:18664   */\n      revert\n        /* \"#utility.yul\":18614:18666   */\n    tag_700:\n        /* \"#utility.yul\":18695:18704   */\n      dup3\n        /* \"#utility.yul\":18689:18705   */\n      mload\n        /* \"#utility.yul\":18724:18742   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18765:18767   */\n      dup1\n        /* \"#utility.yul\":18757:18763   */\n      dup3\n        /* \"#utility.yul\":18754:18768   */\n      gt\n        /* \"#utility.yul\":18751:18785   */\n      iszero\n      tag_701\n      jumpi\n        /* \"#utility.yul\":18781:18782   */\n      0x00\n        /* \"#utility.yul\":18778:18779   */\n      dup1\n        /* \"#utility.yul\":18771:18783   */\n      revert\n        /* \"#utility.yul\":18751:18785   */\n    tag_701:\n        /* \"#utility.yul\":18819:18825   */\n      dup2\n        /* \"#utility.yul\":18808:18817   */\n      dup6\n        /* \"#utility.yul\":18804:18826   */\n      add\n        /* \"#utility.yul\":18794:18826   */\n      swap2\n      pop\n        /* \"#utility.yul\":18864:18871   */\n      dup6\n        /* \"#utility.yul\":18857:18861   */\n      0x1f\n        /* \"#utility.yul\":18853:18855   */\n      dup4\n        /* \"#utility.yul\":18849:18862   */\n      add\n        /* \"#utility.yul\":18845:18872   */\n      slt\n        /* \"#utility.yul\":18835:18890   */\n      tag_702\n      jumpi\n        /* \"#utility.yul\":18886:18887   */\n      0x00\n        /* \"#utility.yul\":18883:18884   */\n      dup1\n        /* \"#utility.yul\":18876:18888   */\n      revert\n        /* \"#utility.yul\":18835:18890   */\n    tag_702:\n        /* \"#utility.yul\":18915:18917   */\n      dup2\n        /* \"#utility.yul\":18909:18918   */\n      mload\n        /* \"#utility.yul\":18937:18939   */\n      dup2\n        /* \"#utility.yul\":18933:18935   */\n      dup2\n        /* \"#utility.yul\":18930:18940   */\n      gt\n        /* \"#utility.yul\":18927:18963   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":18943:18961   */\n      tag_704\n      tag_545\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":18989:18991   */\n      dup1\n        /* \"#utility.yul\":18986:18987   */\n      0x05\n        /* \"#utility.yul\":18982:18992   */\n      shl\n        /* \"#utility.yul\":19021:19023   */\n      0x40\n        /* \"#utility.yul\":19015:19024   */\n      mload\n        /* \"#utility.yul\":19084:19086   */\n      0x1f\n        /* \"#utility.yul\":19080:19087   */\n      not\n        /* \"#utility.yul\":19075:19077   */\n      0x3f\n        /* \"#utility.yul\":19071:19073   */\n      dup4\n        /* \"#utility.yul\":19067:19078   */\n      add\n        /* \"#utility.yul\":19063:19088   */\n      and\n        /* \"#utility.yul\":19055:19061   */\n      dup2\n        /* \"#utility.yul\":19051:19089   */\n      add\n        /* \"#utility.yul\":19139:19145   */\n      dup2\n        /* \"#utility.yul\":19127:19137   */\n      dup2\n        /* \"#utility.yul\":19124:19146   */\n      lt\n        /* \"#utility.yul\":19119:19121   */\n      dup6\n        /* \"#utility.yul\":19107:19117   */\n      dup3\n        /* \"#utility.yul\":19104:19122   */\n      gt\n        /* \"#utility.yul\":19101:19147   */\n      or\n        /* \"#utility.yul\":19098:19170   */\n      iszero\n      tag_706\n      jumpi\n        /* \"#utility.yul\":19150:19168   */\n      tag_706\n      tag_545\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":19186:19188   */\n      0x40\n        /* \"#utility.yul\":19179:19201   */\n      mstore\n        /* \"#utility.yul\":19236:19254   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":19270:19285   */\n      dup5\n      dup3\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":19312:19323   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":19308:19328   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":19340:19359   */\n      dup9\n      dup4\n      gt\n        /* \"#utility.yul\":19337:19376   */\n      iszero\n      tag_707\n      jumpi\n        /* \"#utility.yul\":19372:19373   */\n      0x00\n        /* \"#utility.yul\":19369:19370   */\n      dup1\n        /* \"#utility.yul\":19362:19374   */\n      revert\n        /* \"#utility.yul\":19337:19376   */\n    tag_707:\n        /* \"#utility.yul\":19396:19407   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":19416:19551   */\n    tag_708:\n        /* \"#utility.yul\":19432:19438   */\n      dup3\n        /* \"#utility.yul\":19427:19430   */\n      dup6\n        /* \"#utility.yul\":19424:19439   */\n      lt\n        /* \"#utility.yul\":19416:19551   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":19498:19508   */\n      dup5\n      mload\n        /* \"#utility.yul\":19486:19509   */\n      dup5\n      mstore\n        /* \"#utility.yul\":19449:19461   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":19529:19541   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":19416:19551   */\n      jump(tag_708)\n        /* \"#utility.yul\":20199:20505   */\n    tag_570:\n        /* \"#utility.yul\":20287:20293   */\n      0x00\n        /* \"#utility.yul\":20295:20301   */\n      dup1\n        /* \"#utility.yul\":20303:20309   */\n      0x00\n        /* \"#utility.yul\":20356:20358   */\n      0x60\n        /* \"#utility.yul\":20344:20353   */\n      dup5\n        /* \"#utility.yul\":20335:20342   */\n      dup7\n        /* \"#utility.yul\":20331:20354   */\n      sub\n        /* \"#utility.yul\":20327:20359   */\n      slt\n        /* \"#utility.yul\":20324:20376   */\n      iszero\n      tag_713\n      jumpi\n        /* \"#utility.yul\":20372:20373   */\n      0x00\n        /* \"#utility.yul\":20369:20370   */\n      dup1\n        /* \"#utility.yul\":20362:20374   */\n      revert\n        /* \"#utility.yul\":20324:20376   */\n    tag_713:\n        /* \"#utility.yul\":20401:20410   */\n      dup4\n        /* \"#utility.yul\":20395:20411   */\n      mload\n        /* \"#utility.yul\":20385:20411   */\n      swap3\n      pop\n        /* \"#utility.yul\":20451:20453   */\n      0x20\n        /* \"#utility.yul\":20440:20449   */\n      dup5\n        /* \"#utility.yul\":20436:20454   */\n      add\n        /* \"#utility.yul\":20430:20455   */\n      mload\n        /* \"#utility.yul\":20420:20455   */\n      swap2\n      pop\n        /* \"#utility.yul\":20495:20497   */\n      0x40\n        /* \"#utility.yul\":20484:20493   */\n      dup5\n        /* \"#utility.yul\":20480:20498   */\n      add\n        /* \"#utility.yul\":20474:20499   */\n      mload\n        /* \"#utility.yul\":20464:20499   */\n      swap1\n      pop\n        /* \"#utility.yul\":20199:20505   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209064509e96eb5ad31add3e9439730d8e3bca74dffe7f1b1ff9ec2c52023a7d4264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1374": {
									"entryPoint": null,
									"id": 1374,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_469": {
									"entryPoint": null,
									"id": 469,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1010": {
									"entryPoint": null,
									"id": 1010,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_999": {
									"entryPoint": 1009,
									"id": 999,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_828": {
									"entryPoint": 425,
									"id": 828,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1126": {
									"entryPoint": 340,
									"id": 1126,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupPair_2322": {
									"entryPoint": 618,
									"id": 2322,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_423": {
									"entryPoint": 344,
									"id": 423,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1121,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1045,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4293:7",
										"nodeType": "YulBlock",
										"src": "0:4293:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "60:171:7",
													"nodeType": "YulBlock",
													"src": "60:171:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "91:111:7",
																"nodeType": "YulBlock",
																"src": "91:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "112:1:7",
																					"nodeType": "YulLiteral",
																					"src": "112:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "119:3:7",
																							"nodeType": "YulLiteral",
																							"src": "119:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "124:10:7",
																							"nodeType": "YulLiteral",
																							"src": "124:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "115:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "115:3:7"
																					},
																					"nativeSrc": "115:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "115:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "105:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "105:6:7"
																			},
																			"nativeSrc": "105:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "105:31:7"
																		},
																		"nativeSrc": "105:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "105:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "156:1:7",
																					"nodeType": "YulLiteral",
																					"src": "156:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "159:4:7",
																					"nodeType": "YulLiteral",
																					"src": "159:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "149:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "149:6:7"
																			},
																			"nativeSrc": "149:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "149:15:7"
																		},
																		"nativeSrc": "149:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "149:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "184:1:7",
																					"nodeType": "YulLiteral",
																					"src": "184:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "187:4:7",
																					"nodeType": "YulLiteral",
																					"src": "187:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "177:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "177:6:7"
																			},
																			"nativeSrc": "177:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "177:15:7"
																		},
																		"nativeSrc": "177:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "177:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "80:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "80:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "73:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "73:6:7"
																},
																"nativeSrc": "73:9:7",
																"nodeType": "YulFunctionCall",
																"src": "73:9:7"
															},
															"nativeSrc": "70:132:7",
															"nodeType": "YulIf",
															"src": "70:132:7"
														},
														{
															"nativeSrc": "211:14:7",
															"nodeType": "YulAssignment",
															"src": "211:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "220:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "220:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "223:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "223:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "216:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "216:3:7"
																},
																"nativeSrc": "216:9:7",
																"nodeType": "YulFunctionCall",
																"src": "216:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "211:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "211:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "45:1:7",
														"nodeType": "YulTypedName",
														"src": "45:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "48:1:7",
														"nodeType": "YulTypedName",
														"src": "48:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "54:1:7",
														"nodeType": "YulTypedName",
														"src": "54:1:7",
														"type": ""
													}
												],
												"src": "14:217:7"
											},
											{
												"body": {
													"nativeSrc": "268:95:7",
													"nodeType": "YulBlock",
													"src": "268:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "285:1:7",
																		"nodeType": "YulLiteral",
																		"src": "285:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "292:3:7",
																				"nodeType": "YulLiteral",
																				"src": "292:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "297:10:7",
																				"nodeType": "YulLiteral",
																				"src": "297:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "288:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "288:3:7"
																		},
																		"nativeSrc": "288:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "288:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "278:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:7"
																},
																"nativeSrc": "278:31:7",
																"nodeType": "YulFunctionCall",
																"src": "278:31:7"
															},
															"nativeSrc": "278:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "278:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "325:1:7",
																		"nodeType": "YulLiteral",
																		"src": "325:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "328:4:7",
																		"nodeType": "YulLiteral",
																		"src": "328:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "318:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "318:6:7"
																},
																"nativeSrc": "318:15:7",
																"nodeType": "YulFunctionCall",
																"src": "318:15:7"
															},
															"nativeSrc": "318:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "318:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "349:1:7",
																		"nodeType": "YulLiteral",
																		"src": "349:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "352:4:7",
																		"nodeType": "YulLiteral",
																		"src": "352:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "342:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "342:6:7"
																},
																"nativeSrc": "342:15:7",
																"nodeType": "YulFunctionCall",
																"src": "342:15:7"
															},
															"nativeSrc": "342:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "342:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "236:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "236:127:7"
											},
											{
												"body": {
													"nativeSrc": "423:325:7",
													"nodeType": "YulBlock",
													"src": "423:325:7",
													"statements": [
														{
															"nativeSrc": "433:22:7",
															"nodeType": "YulAssignment",
															"src": "433:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "447:1:7",
																		"nodeType": "YulLiteral",
																		"src": "447:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "450:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "450:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "443:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "443:3:7"
																},
																"nativeSrc": "443:12:7",
																"nodeType": "YulFunctionCall",
																"src": "443:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																}
															]
														},
														{
															"nativeSrc": "464:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "464:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "494:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "494:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "500:1:7",
																		"nodeType": "YulLiteral",
																		"src": "500:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "490:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:3:7"
																},
																"nativeSrc": "490:12:7",
																"nodeType": "YulFunctionCall",
																"src": "490:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "468:18:7",
																	"nodeType": "YulTypedName",
																	"src": "468:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "541:31:7",
																"nodeType": "YulBlock",
																"src": "541:31:7",
																"statements": [
																	{
																		"nativeSrc": "543:27:7",
																		"nodeType": "YulAssignment",
																		"src": "543:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "557:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "557:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "565:4:7",
																					"nodeType": "YulLiteral",
																					"src": "565:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "553:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "553:3:7"
																			},
																			"nativeSrc": "553:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "553:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "543:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "543:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "521:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "521:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "514:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "514:6:7"
																},
																"nativeSrc": "514:26:7",
																"nodeType": "YulFunctionCall",
																"src": "514:26:7"
															},
															"nativeSrc": "511:61:7",
															"nodeType": "YulIf",
															"src": "511:61:7"
														},
														{
															"body": {
																"nativeSrc": "631:111:7",
																"nodeType": "YulBlock",
																"src": "631:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "652:1:7",
																					"nodeType": "YulLiteral",
																					"src": "652:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "659:3:7",
																							"nodeType": "YulLiteral",
																							"src": "659:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "664:10:7",
																							"nodeType": "YulLiteral",
																							"src": "664:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "655:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "655:3:7"
																					},
																					"nativeSrc": "655:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "655:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "645:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "645:6:7"
																			},
																			"nativeSrc": "645:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "645:31:7"
																		},
																		"nativeSrc": "645:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "645:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "696:1:7",
																					"nodeType": "YulLiteral",
																					"src": "696:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "699:4:7",
																					"nodeType": "YulLiteral",
																					"src": "699:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "689:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "689:6:7"
																			},
																			"nativeSrc": "689:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "689:15:7"
																		},
																		"nativeSrc": "689:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "689:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "724:1:7",
																					"nodeType": "YulLiteral",
																					"src": "724:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "727:4:7",
																					"nodeType": "YulLiteral",
																					"src": "727:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "717:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "717:6:7"
																			},
																			"nativeSrc": "717:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "717:15:7"
																		},
																		"nativeSrc": "717:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "717:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "587:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "587:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "610:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "610:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "618:2:7",
																				"nodeType": "YulLiteral",
																				"src": "618:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "607:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "607:2:7"
																		},
																		"nativeSrc": "607:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "607:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "584:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:7"
																},
																"nativeSrc": "584:38:7",
																"nodeType": "YulFunctionCall",
																"src": "584:38:7"
															},
															"nativeSrc": "581:161:7",
															"nodeType": "YulIf",
															"src": "581:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "368:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "403:4:7",
														"nodeType": "YulTypedName",
														"src": "403:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "412:6:7",
														"nodeType": "YulTypedName",
														"src": "412:6:7",
														"type": ""
													}
												],
												"src": "368:380:7"
											},
											{
												"body": {
													"nativeSrc": "809:65:7",
													"nodeType": "YulBlock",
													"src": "809:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "826:1:7",
																		"nodeType": "YulLiteral",
																		"src": "826:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "829:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "829:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "819:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "819:6:7"
																},
																"nativeSrc": "819:14:7",
																"nodeType": "YulFunctionCall",
																"src": "819:14:7"
															},
															"nativeSrc": "819:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "819:14:7"
														},
														{
															"nativeSrc": "842:26:7",
															"nodeType": "YulAssignment",
															"src": "842:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "860:1:7",
																		"nodeType": "YulLiteral",
																		"src": "860:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "863:4:7",
																		"nodeType": "YulLiteral",
																		"src": "863:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "850:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "850:9:7"
																},
																"nativeSrc": "850:18:7",
																"nodeType": "YulFunctionCall",
																"src": "850:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "842:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "842:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "753:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "792:3:7",
														"nodeType": "YulTypedName",
														"src": "792:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "800:4:7",
														"nodeType": "YulTypedName",
														"src": "800:4:7",
														"type": ""
													}
												],
												"src": "753:121:7"
											},
											{
												"body": {
													"nativeSrc": "960:437:7",
													"nodeType": "YulBlock",
													"src": "960:437:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "993:398:7",
																"nodeType": "YulBlock",
																"src": "993:398:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1014:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1014:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1017:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1017:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1007:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1007:6:7"
																			},
																			"nativeSrc": "1007:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1007:16:7"
																		},
																		"nativeSrc": "1007:16:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1007:16:7"
																	},
																	{
																		"nativeSrc": "1036:30:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1036:30:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1058:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1058:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1061:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1061:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1048:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1048:9:7"
																			},
																			"nativeSrc": "1048:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1048:18:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1040:4:7",
																				"nodeType": "YulTypedName",
																				"src": "1040:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1079:57:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1079:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1102:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1102:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1112:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1112:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1119:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1119:10:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1131:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1131:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1115:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1115:3:7"
																							},
																							"nativeSrc": "1115:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1115:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1108:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1108:3:7"
																					},
																					"nativeSrc": "1108:27:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1108:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1098:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:3:7"
																			},
																			"nativeSrc": "1098:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1083:11:7",
																				"nodeType": "YulTypedName",
																				"src": "1083:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1173:23:7",
																			"nodeType": "YulBlock",
																			"src": "1173:23:7",
																			"statements": [
																				{
																					"nativeSrc": "1175:19:7",
																					"nodeType": "YulAssignment",
																					"src": "1175:19:7",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1190:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1190:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1175:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "1175:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1155:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "1155:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1167:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1167:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1152:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1152:2:7"
																			},
																			"nativeSrc": "1152:20:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1152:20:7"
																		},
																		"nativeSrc": "1149:47:7",
																		"nodeType": "YulIf",
																		"src": "1149:47:7"
																	},
																	{
																		"nativeSrc": "1209:41:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1209:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1223:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1223:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1233:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1233:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1240:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1240:3:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1245:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1245:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1236:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1236:3:7"
																							},
																							"nativeSrc": "1236:12:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1236:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1229:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1229:3:7"
																					},
																					"nativeSrc": "1229:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1229:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1219:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1219:3:7"
																			},
																			"nativeSrc": "1219:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1219:31:7"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1213:2:7",
																				"nodeType": "YulTypedName",
																				"src": "1213:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1263:24:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1263:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1276:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "1276:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1267:5:7",
																				"nodeType": "YulTypedName",
																				"src": "1267:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1361:20:7",
																			"nodeType": "YulBlock",
																			"src": "1361:20:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1370:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1370:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1377:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1377:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1363:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "1363:6:7"
																						},
																						"nativeSrc": "1363:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1363:16:7"
																					},
																					"nativeSrc": "1363:16:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "1363:16:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1311:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1311:5:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1318:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1318:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1308:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1308:2:7"
																			},
																			"nativeSrc": "1308:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1308:13:7"
																		},
																		"nativeSrc": "1300:81:7",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1322:26:7",
																			"nodeType": "YulBlock",
																			"src": "1322:26:7",
																			"statements": [
																				{
																					"nativeSrc": "1324:22:7",
																					"nodeType": "YulAssignment",
																					"src": "1324:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1337:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1337:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1344:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1344:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1333:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1333:3:7"
																						},
																						"nativeSrc": "1333:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1333:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1324:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "1324:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1304:3:7",
																			"nodeType": "YulBlock",
																			"src": "1304:3:7",
																			"statements": []
																		},
																		"src": "1300:81:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "976:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "976:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:7",
																		"nodeType": "YulLiteral",
																		"src": "981:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "973:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "973:2:7"
																},
																"nativeSrc": "973:11:7",
																"nodeType": "YulFunctionCall",
																"src": "973:11:7"
															},
															"nativeSrc": "970:421:7",
															"nodeType": "YulIf",
															"src": "970:421:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "879:518:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "932:5:7",
														"nodeType": "YulTypedName",
														"src": "932:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "939:3:7",
														"nodeType": "YulTypedName",
														"src": "939:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "944:10:7",
														"nodeType": "YulTypedName",
														"src": "944:10:7",
														"type": ""
													}
												],
												"src": "879:518:7"
											},
											{
												"body": {
													"nativeSrc": "1487:81:7",
													"nodeType": "YulBlock",
													"src": "1487:81:7",
													"statements": [
														{
															"nativeSrc": "1497:65:7",
															"nodeType": "YulAssignment",
															"src": "1497:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1512:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1512:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1530:1:7",
																										"nodeType": "YulLiteral",
																										"src": "1530:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1533:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1533:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1526:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1526:3:7"
																								},
																								"nativeSrc": "1526:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1526:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1543:1:7",
																										"nodeType": "YulLiteral",
																										"src": "1543:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1539:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1539:3:7"
																								},
																								"nativeSrc": "1539:6:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1539:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1522:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1522:3:7"
																						},
																						"nativeSrc": "1522:24:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1522:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1518:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1518:3:7"
																				},
																				"nativeSrc": "1518:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1518:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1508:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1508:3:7"
																		},
																		"nativeSrc": "1508:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1508:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1554:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1554:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1557:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1557:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1550:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1550:3:7"
																		},
																		"nativeSrc": "1550:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1550:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1505:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1505:2:7"
																},
																"nativeSrc": "1505:57:7",
																"nodeType": "YulFunctionCall",
																"src": "1505:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1497:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1497:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1402:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1464:4:7",
														"nodeType": "YulTypedName",
														"src": "1464:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1470:3:7",
														"nodeType": "YulTypedName",
														"src": "1470:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1478:4:7",
														"nodeType": "YulTypedName",
														"src": "1478:4:7",
														"type": ""
													}
												],
												"src": "1402:166:7"
											},
											{
												"body": {
													"nativeSrc": "1669:1249:7",
													"nodeType": "YulBlock",
													"src": "1669:1249:7",
													"statements": [
														{
															"nativeSrc": "1679:24:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1679:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1699:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1699:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1693:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:5:7"
																},
																"nativeSrc": "1693:10:7",
																"nodeType": "YulFunctionCall",
																"src": "1693:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1683:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1683:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1746:22:7",
																"nodeType": "YulBlock",
																"src": "1746:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1748:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1748:16:7"
																			},
																			"nativeSrc": "1748:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1748:18:7"
																		},
																		"nativeSrc": "1748:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1718:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1718:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1734:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1734:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1738:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1738:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1730:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1730:3:7"
																				},
																				"nativeSrc": "1730:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1730:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1742:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1742:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1726:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1726:3:7"
																		},
																		"nativeSrc": "1726:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1726:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1715:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1715:2:7"
																},
																"nativeSrc": "1715:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1715:30:7"
															},
															"nativeSrc": "1712:56:7",
															"nodeType": "YulIf",
															"src": "1712:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1821:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1821:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1859:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1859:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1853:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1853:5:7"
																				},
																				"nativeSrc": "1853:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1853:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1827:25:7",
																			"nodeType": "YulIdentifier",
																			"src": "1827:25:7"
																		},
																		"nativeSrc": "1827:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:38:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1867:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1867:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1777:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1777:43:7"
																},
																"nativeSrc": "1777:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1777:97:7"
															},
															"nativeSrc": "1777:97:7",
															"nodeType": "YulExpressionStatement",
															"src": "1777:97:7"
														},
														{
															"nativeSrc": "1883:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1883:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1900:1:7",
																"nodeType": "YulLiteral",
																"src": "1900:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1887:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1887:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1910:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1910:23:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1929:4:7",
																"nodeType": "YulLiteral",
																"src": "1929:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1914:11:7",
																	"nodeType": "YulTypedName",
																	"src": "1914:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1942:17:7",
															"nodeType": "YulAssignment",
															"src": "1942:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1955:4:7",
																"nodeType": "YulLiteral",
																"src": "1955:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1942:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1942:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2005:656:7",
																		"nodeType": "YulBlock",
																		"src": "2005:656:7",
																		"statements": [
																			{
																				"nativeSrc": "2019:35:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2019:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2038:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2038:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2050:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2050:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2046:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2046:3:7"
																							},
																							"nativeSrc": "2046:7:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2046:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2034:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2034:3:7"
																					},
																					"nativeSrc": "2034:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2034:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2023:7:7",
																						"nodeType": "YulTypedName",
																						"src": "2023:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2067:49:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2067:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2111:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2111:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2081:29:7",
																						"nodeType": "YulIdentifier",
																						"src": "2081:29:7"
																					},
																					"nativeSrc": "2081:35:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2081:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2071:6:7",
																						"nodeType": "YulTypedName",
																						"src": "2071:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2129:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2129:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2138:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2138:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2133:1:7",
																						"nodeType": "YulTypedName",
																						"src": "2133:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2216:172:7",
																					"nodeType": "YulBlock",
																					"src": "2216:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2241:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2241:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2259:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "2259:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2264:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "2264:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2255:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "2255:3:7"
																												},
																												"nativeSrc": "2255:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "2255:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2249:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "2249:5:7"
																										},
																										"nativeSrc": "2249:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2249:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2234:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2234:6:7"
																								},
																								"nativeSrc": "2234:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2234:42:7"
																							},
																							"nativeSrc": "2234:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "2234:42:7"
																						},
																						{
																							"nativeSrc": "2293:24:7",
																							"nodeType": "YulAssignment",
																							"src": "2293:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2307:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2307:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2315:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2315:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2303:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2303:3:7"
																								},
																								"nativeSrc": "2303:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2303:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2293:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2293:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2334:40:7",
																							"nodeType": "YulAssignment",
																							"src": "2334:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2351:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "2351:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2362:11:7",
																										"nodeType": "YulIdentifier",
																										"src": "2362:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2347:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2347:3:7"
																								},
																								"nativeSrc": "2347:27:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2347:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2334:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "2334:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2163:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "2163:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2166:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "2166:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2160:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2160:2:7"
																					},
																					"nativeSrc": "2160:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2160:14:7"
																				},
																				"nativeSrc": "2152:236:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2175:28:7",
																					"nodeType": "YulBlock",
																					"src": "2175:28:7",
																					"statements": [
																						{
																							"nativeSrc": "2177:24:7",
																							"nodeType": "YulAssignment",
																							"src": "2177:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2186:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "2186:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2189:11:7",
																										"nodeType": "YulIdentifier",
																										"src": "2189:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2182:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2182:3:7"
																								},
																								"nativeSrc": "2182:19:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2182:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2177:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "2177:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2156:3:7",
																					"nodeType": "YulBlock",
																					"src": "2156:3:7",
																					"statements": []
																				},
																				"src": "2152:236:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "2436:166:7",
																					"nodeType": "YulBlock",
																					"src": "2436:166:7",
																					"statements": [
																						{
																							"nativeSrc": "2454:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2454:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2481:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "2481:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2486:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2486:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2477:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2477:3:7"
																										},
																										"nativeSrc": "2477:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2477:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2471:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2471:5:7"
																								},
																								"nativeSrc": "2471:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2471:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2458:9:7",
																									"nodeType": "YulTypedName",
																									"src": "2458:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2521:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2521:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2533:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2533:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2560:1:7",
																																				"nodeType": "YulLiteral",
																																				"src": "2560:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2563:6:7",
																																				"nodeType": "YulIdentifier",
																																				"src": "2563:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2556:3:7",
																																			"nodeType": "YulIdentifier",
																																			"src": "2556:3:7"
																																		},
																																		"nativeSrc": "2556:14:7",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2556:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2572:3:7",
																																		"nodeType": "YulLiteral",
																																		"src": "2572:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2552:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "2552:3:7"
																																},
																																"nativeSrc": "2552:24:7",
																																"nodeType": "YulFunctionCall",
																																"src": "2552:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2582:1:7",
																																		"nodeType": "YulLiteral",
																																		"src": "2582:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2578:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "2578:3:7"
																																},
																																"nativeSrc": "2578:6:7",
																																"nodeType": "YulFunctionCall",
																																"src": "2578:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2548:3:7",
																															"nodeType": "YulIdentifier",
																															"src": "2548:3:7"
																														},
																														"nativeSrc": "2548:37:7",
																														"nodeType": "YulFunctionCall",
																														"src": "2548:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2544:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "2544:3:7"
																												},
																												"nativeSrc": "2544:42:7",
																												"nodeType": "YulFunctionCall",
																												"src": "2544:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2529:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2529:3:7"
																										},
																										"nativeSrc": "2529:58:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2529:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2514:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2514:6:7"
																								},
																								"nativeSrc": "2514:74:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2514:74:7"
																							},
																							"nativeSrc": "2514:74:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "2514:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2407:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "2407:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2416:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2416:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2404:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2404:2:7"
																					},
																					"nativeSrc": "2404:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2404:19:7"
																				},
																				"nativeSrc": "2401:201:7",
																				"nodeType": "YulIf",
																				"src": "2401:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2622:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2622:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2636:1:7",
																											"nodeType": "YulLiteral",
																											"src": "2636:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2639:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "2639:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2632:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2632:3:7"
																									},
																									"nativeSrc": "2632:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "2632:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2648:1:7",
																									"nodeType": "YulLiteral",
																									"src": "2648:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2628:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2628:3:7"
																							},
																							"nativeSrc": "2628:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2628:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2615:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2615:6:7"
																					},
																					"nativeSrc": "2615:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2615:36:7"
																				},
																				"nativeSrc": "2615:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "2615:36:7"
																			}
																		]
																	},
																	"nativeSrc": "1998:663:7",
																	"nodeType": "YulCase",
																	"src": "1998:663:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2003:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2003:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2678:234:7",
																		"nodeType": "YulBlock",
																		"src": "2678:234:7",
																		"statements": [
																			{
																				"nativeSrc": "2692:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2692:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2705:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2705:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2696:5:7",
																						"nodeType": "YulTypedName",
																						"src": "2696:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2741:67:7",
																					"nodeType": "YulBlock",
																					"src": "2741:67:7",
																					"statements": [
																						{
																							"nativeSrc": "2759:35:7",
																							"nodeType": "YulAssignment",
																							"src": "2759:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2778:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "2778:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2783:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2783:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2774:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2774:3:7"
																										},
																										"nativeSrc": "2774:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2774:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2768:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2768:5:7"
																								},
																								"nativeSrc": "2768:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2768:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2759:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2759:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2722:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2722:6:7"
																				},
																				"nativeSrc": "2719:89:7",
																				"nodeType": "YulIf",
																				"src": "2719:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2828:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2828:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2887:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2887:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2894:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2894:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2834:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "2834:52:7"
																							},
																							"nativeSrc": "2834:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2834:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2821:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2821:6:7"
																					},
																					"nativeSrc": "2821:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2821:81:7"
																				},
																				"nativeSrc": "2821:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "2821:81:7"
																			}
																		]
																	},
																	"nativeSrc": "2670:242:7",
																	"nodeType": "YulCase",
																	"src": "2670:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1978:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1978:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1986:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1986:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1975:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1975:2:7"
																},
																"nativeSrc": "1975:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1975:14:7"
															},
															"nativeSrc": "1968:944:7",
															"nodeType": "YulSwitch",
															"src": "1968:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1573:1345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1654:4:7",
														"nodeType": "YulTypedName",
														"src": "1654:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1660:3:7",
														"nodeType": "YulTypedName",
														"src": "1660:3:7",
														"type": ""
													}
												],
												"src": "1573:1345:7"
											},
											{
												"body": {
													"nativeSrc": "3097:181:7",
													"nodeType": "YulBlock",
													"src": "3097:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3114:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3114:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3125:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3125:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3107:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3107:6:7"
																},
																"nativeSrc": "3107:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3107:21:7"
															},
															"nativeSrc": "3107:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3107:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3148:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3148:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3159:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3159:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3144:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3144:3:7"
																		},
																		"nativeSrc": "3144:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3144:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3164:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3164:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3137:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3137:6:7"
																},
																"nativeSrc": "3137:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3137:30:7"
															},
															"nativeSrc": "3137:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3137:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3187:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3187:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3198:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3198:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3183:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3183:3:7"
																		},
																		"nativeSrc": "3183:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3183:18:7"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "3203:33:7",
																		"nodeType": "YulLiteral",
																		"src": "3203:33:7",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3176:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3176:6:7"
																},
																"nativeSrc": "3176:61:7",
																"nodeType": "YulFunctionCall",
																"src": "3176:61:7"
															},
															"nativeSrc": "3176:61:7",
															"nodeType": "YulExpressionStatement",
															"src": "3176:61:7"
														},
														{
															"nativeSrc": "3246:26:7",
															"nodeType": "YulAssignment",
															"src": "3246:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3258:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3258:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3269:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3269:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3254:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3254:3:7"
																},
																"nativeSrc": "3254:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3254:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3246:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3246:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2923:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3074:9:7",
														"nodeType": "YulTypedName",
														"src": "3074:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3088:4:7",
														"nodeType": "YulTypedName",
														"src": "3088:4:7",
														"type": ""
													}
												],
												"src": "2923:355:7"
											},
											{
												"body": {
													"nativeSrc": "3331:174:7",
													"nodeType": "YulBlock",
													"src": "3331:174:7",
													"statements": [
														{
															"nativeSrc": "3341:16:7",
															"nodeType": "YulAssignment",
															"src": "3341:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3352:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3352:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3355:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3355:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3348:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3348:3:7"
																},
																"nativeSrc": "3348:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3348:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3341:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3341:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3388:111:7",
																"nodeType": "YulBlock",
																"src": "3388:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3409:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3409:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3416:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3416:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3421:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3421:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3412:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3412:3:7"
																					},
																					"nativeSrc": "3412:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3412:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3402:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3402:6:7"
																			},
																			"nativeSrc": "3402:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3402:31:7"
																		},
																		"nativeSrc": "3402:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3402:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3453:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3453:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3456:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3456:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3446:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3446:6:7"
																			},
																			"nativeSrc": "3446:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3446:15:7"
																		},
																		"nativeSrc": "3446:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3446:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3481:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3481:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3484:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3484:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3474:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3474:6:7"
																			},
																			"nativeSrc": "3474:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3474:15:7"
																		},
																		"nativeSrc": "3474:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3474:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3372:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3372:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3375:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3375:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3369:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3369:2:7"
																},
																"nativeSrc": "3369:10:7",
																"nodeType": "YulFunctionCall",
																"src": "3369:10:7"
															},
															"nativeSrc": "3366:133:7",
															"nodeType": "YulIf",
															"src": "3366:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3283:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3314:1:7",
														"nodeType": "YulTypedName",
														"src": "3314:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3317:1:7",
														"nodeType": "YulTypedName",
														"src": "3317:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3323:3:7",
														"nodeType": "YulTypedName",
														"src": "3323:3:7",
														"type": ""
													}
												],
												"src": "3283:222:7"
											},
											{
												"body": {
													"nativeSrc": "3611:76:7",
													"nodeType": "YulBlock",
													"src": "3611:76:7",
													"statements": [
														{
															"nativeSrc": "3621:26:7",
															"nodeType": "YulAssignment",
															"src": "3621:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3633:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3633:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3644:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3644:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3629:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3629:3:7"
																},
																"nativeSrc": "3629:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3629:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3621:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3621:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3663:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3663:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3674:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3674:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3656:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3656:6:7"
																},
																"nativeSrc": "3656:25:7",
																"nodeType": "YulFunctionCall",
																"src": "3656:25:7"
															},
															"nativeSrc": "3656:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "3656:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3510:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3580:9:7",
														"nodeType": "YulTypedName",
														"src": "3580:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3591:6:7",
														"nodeType": "YulTypedName",
														"src": "3591:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3602:4:7",
														"nodeType": "YulTypedName",
														"src": "3602:4:7",
														"type": ""
													}
												],
												"src": "3510:177:7"
											},
											{
												"body": {
													"nativeSrc": "3773:209:7",
													"nodeType": "YulBlock",
													"src": "3773:209:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3819:16:7",
																"nodeType": "YulBlock",
																"src": "3819:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3828:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3828:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3831:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3831:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3821:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:6:7"
																			},
																			"nativeSrc": "3821:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:12:7"
																		},
																		"nativeSrc": "3821:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3794:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3794:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3803:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3803:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3790:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:7"
																		},
																		"nativeSrc": "3790:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3790:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3815:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3815:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3786:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3786:3:7"
																},
																"nativeSrc": "3786:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3786:32:7"
															},
															"nativeSrc": "3783:52:7",
															"nodeType": "YulIf",
															"src": "3783:52:7"
														},
														{
															"nativeSrc": "3844:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3844:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3863:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3863:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3857:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3857:5:7"
																},
																"nativeSrc": "3857:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3857:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3848:5:7",
																	"nodeType": "YulTypedName",
																	"src": "3848:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3936:16:7",
																"nodeType": "YulBlock",
																"src": "3936:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3945:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3945:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3948:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3948:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3938:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3938:6:7"
																			},
																			"nativeSrc": "3938:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3938:12:7"
																		},
																		"nativeSrc": "3938:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3938:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3895:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3895:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3906:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3906:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3921:3:7",
																										"nodeType": "YulLiteral",
																										"src": "3921:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3926:1:7",
																										"nodeType": "YulLiteral",
																										"src": "3926:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3917:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3917:3:7"
																								},
																								"nativeSrc": "3917:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3917:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3930:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3930:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "3913:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3913:3:7"
																						},
																						"nativeSrc": "3913:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3913:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3902:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3902:3:7"
																				},
																				"nativeSrc": "3902:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3902:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3892:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3892:2:7"
																		},
																		"nativeSrc": "3892:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3885:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3885:6:7"
																},
																"nativeSrc": "3885:50:7",
																"nodeType": "YulFunctionCall",
																"src": "3885:50:7"
															},
															"nativeSrc": "3882:70:7",
															"nodeType": "YulIf",
															"src": "3882:70:7"
														},
														{
															"nativeSrc": "3961:15:7",
															"nodeType": "YulAssignment",
															"src": "3961:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "3971:5:7",
																"nodeType": "YulIdentifier",
																"src": "3971:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3961:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3961:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "3692:290:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3739:9:7",
														"nodeType": "YulTypedName",
														"src": "3739:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3750:7:7",
														"nodeType": "YulTypedName",
														"src": "3750:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3762:6:7",
														"nodeType": "YulTypedName",
														"src": "3762:6:7",
														"type": ""
													}
												],
												"src": "3692:290:7"
											},
											{
												"body": {
													"nativeSrc": "4116:175:7",
													"nodeType": "YulBlock",
													"src": "4116:175:7",
													"statements": [
														{
															"nativeSrc": "4126:26:7",
															"nodeType": "YulAssignment",
															"src": "4126:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4138:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4138:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4149:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4149:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4134:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4134:3:7"
																},
																"nativeSrc": "4134:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4134:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4126:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4126:4:7"
																}
															]
														},
														{
															"nativeSrc": "4161:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4161:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4179:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4179:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4184:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4184:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4175:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4175:3:7"
																		},
																		"nativeSrc": "4175:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4175:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4188:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4188:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4171:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4171:3:7"
																},
																"nativeSrc": "4171:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4171:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4165:2:7",
																	"nodeType": "YulTypedName",
																	"src": "4165:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4206:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4206:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4221:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4221:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4229:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4229:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4217:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4217:3:7"
																		},
																		"nativeSrc": "4217:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4217:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4199:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:7"
																},
																"nativeSrc": "4199:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4199:34:7"
															},
															"nativeSrc": "4199:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4199:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4253:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4253:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4264:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4264:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4249:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4249:3:7"
																		},
																		"nativeSrc": "4249:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4249:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4273:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4273:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4281:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4281:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4269:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4269:3:7"
																		},
																		"nativeSrc": "4269:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4269:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4242:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4242:6:7"
																},
																"nativeSrc": "4242:43:7",
																"nodeType": "YulFunctionCall",
																"src": "4242:43:7"
															},
															"nativeSrc": "4242:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "4242:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "3987:304:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4077:9:7",
														"nodeType": "YulTypedName",
														"src": "4077:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4088:6:7",
														"nodeType": "YulTypedName",
														"src": "4088:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4096:6:7",
														"nodeType": "YulTypedName",
														"src": "4096:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4107:4:7",
														"nodeType": "YulTypedName",
														"src": "4107:4:7",
														"type": ""
													}
												],
												"src": "3987:304:7"
											}
										]
									},
									"contents": "{\n    { }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x6 SSTORE PUSH2 0x21 PUSH2 0x3E8 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x26B2B6B29021B7B4B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x4D454D45 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x4AC JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x8B DUP3 DUP3 PUSH2 0x4AC JUMP JUMPDEST POP POP POP PUSH2 0xA4 PUSH2 0x9F PUSH2 0x154 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x158 JUMP JUMPDEST PUSH2 0xAD CALLER PUSH2 0x158 JUMP JUMPDEST PUSH2 0xC3 CALLER PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x10ED43C718714EB63D5AA57B78B54704E256024E OR SWAP1 SSTORE PUSH2 0xF1 PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND SWAP1 SSTORE CALLER DUP2 MSTORE PUSH1 0x14 SWAP1 SWAP2 MSTORE DUP2 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE ADDRESS DUP4 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x5BD JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x203 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x12 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS PUSH1 0x12 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x410 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x43D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x45B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3F1 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x486 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4A5 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x492 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4C5 JUMPI PUSH2 0x4C5 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x4D9 DUP2 PUSH2 0x4D3 DUP5 SLOAD PUSH2 0x429 JUMP JUMPDEST DUP5 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x50C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x4F5 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x563 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x53A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x51B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x557 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x58A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2496 DUP1 PUSH2 0x5CA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FF JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F9A55C0 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0xAD5DFF73 GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xD8D61C40 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xD8D61C40 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xFE0BB982 EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0xFE6B751E EQ PUSH2 0x6EA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD5DFF73 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0xC531B108 EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xC95457FF EQ PUSH2 0x614 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D82190F GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x9D82190F EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0x9FDE54F5 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0xA8B08982 EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x593 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F9A55C0 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x9491F94D EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x960BFE04 EQ PUSH2 0x4D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x333F4B3D GT PUSH2 0x194 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x7773168F EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x7A845ECE EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x47F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x333F4B3D EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x599CA397 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x3268CC56 EQ PUSH2 0x2F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x445B667 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x1569D181 EQ PUSH2 0x282 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x206 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x1FB6 JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x310 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x360 SWAP1 PUSH2 0xFFFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP6 DUP7 AND DUP2 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x3DC CALLDATASIZE PUSH1 0x4 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x925 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x938 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x444 SWAP1 PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x47A CALLDATASIZE PUSH1 0x4 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x9B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x310 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0xA42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0xA6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH2 0xBE1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x502 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x516 PUSH2 0x511 CALLDATASIZE PUSH1 0x4 PUSH2 0x2045 JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x541 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x550 CALLDATASIZE PUSH1 0x4 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0xCA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x310 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x5AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x5CC CALLDATASIZE PUSH1 0x4 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x5FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2045 JUMP JUMPDEST PUSH2 0xD6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH2 0x649 SWAP4 PUSH1 0xFF DUP1 DUP3 AND SWAP5 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP4 SWAP2 SWAP3 SWAP2 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH2 0xFFFF SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x683 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x698 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x6A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0xDD1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x6C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2045 JUMP JUMPDEST PUSH2 0xDFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x6E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x20F0 JUMP JUMPDEST PUSH2 0xE74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x704 CALLDATASIZE PUSH1 0x4 PUSH2 0x2129 JUMP JUMPDEST PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x718 SWAP1 PUSH2 0x2153 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x744 SWAP1 PUSH2 0x2153 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x78F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x766 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x78F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x772 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7A6 DUP2 DUP6 DUP6 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7BA PUSH2 0x105A JUMP JUMPDEST PUSH2 0x9C4 PUSH2 0x7C7 DUP5 DUP7 PUSH2 0x219F JUMP JUMPDEST PUSH2 0xFFFF AND GT ISZERO PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x9AC2F040646A4A40C4EAF240E8C2F PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C4 PUSH2 0x81D DUP3 DUP5 PUSH2 0x219F JUMP JUMPDEST PUSH2 0xFFFF AND GT ISZERO PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x9AC2F040646A4A40E6CAD8D840E8C2F PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH2 0xFFFF SWAP6 DUP7 AND DUP1 DUP3 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP4 DUP7 AND SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 SWAP1 SWAP5 AND PUSH1 0x60 SWAP1 SWAP2 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND SWAP1 SWAP4 OR PUSH3 0x10000 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH8 0xFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP4 MUL PUSH8 0xFFFF000000000000 NOT AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x30 SHL SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8EC DUP6 DUP3 DUP6 PUSH2 0x10B4 JUMP JUMPDEST PUSH2 0x8F7 DUP6 DUP6 DUP6 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7A6 DUP2 DUP6 DUP6 PUSH2 0x916 DUP4 DUP4 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0x920 SWAP2 SWAP1 PUSH2 0x21C1 JUMP JUMPDEST PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x92D PUSH2 0x105A JUMP JUMPDEST PUSH2 0x936 PUSH0 PUSH2 0x13FC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xF SLOAD PUSH0 SWAP1 DUP2 SUB PUSH2 0x948 JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x951 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 SWAP2 POP DUP2 GT PUSH2 0x994 JUMPI PUSH1 0xF SLOAD PUSH2 0x986 SWAP1 PUSH2 0x980 PUSH8 0xDE0B6B3A7640000 PUSH2 0x97A DUP4 DUP7 PUSH2 0x144D JUMP JUMPDEST SWAP1 PUSH2 0x1458 JUMP JUMPDEST SWAP1 PUSH2 0x1463 JUMP JUMPDEST PUSH2 0x98F SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x9B1 SWAP1 PUSH2 0x980 PUSH8 0xDE0B6B3A7640000 PUSH2 0x97A DUP6 DUP5 PUSH2 0x144D JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x9BF PUSH2 0x105A JUMP JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0xA06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585E080C49481DD85B1B195D081B1A5B5A5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x12528A3C61E0F3B2D6FC707A9FC58B1AF86E252CAD0D7F4C154EBEABB162DACE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA6A PUSH2 0x2710 PUSH2 0x980 PUSH1 0x6 SLOAD PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x1458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x13 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x2204 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH0 EQ DUP1 PUSH2 0xB09 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0xB16 JUMPI PUSH0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD ADDRESS SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB81 SWAP2 SWAP1 PUSH2 0x2248 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBB7 JUMPI PUSH2 0xBB2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP4 AND SWAP1 PUSH2 0x980 SWAP1 DUP6 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST PUSH2 0xBDA PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP5 AND SWAP1 PUSH2 0x980 SWAP1 DUP5 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x1458 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x718 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH2 0xBF8 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 TIMESTAMP LT PUSH2 0xC29 JUMPI PUSH0 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC4B SWAP1 TIMESTAMP PUSH2 0x144D JUMP JUMPDEST SWAP1 POP PUSH2 0xC5A DUP2 PUSH3 0x15180 PUSH2 0x1463 JUMP JUMPDEST SWAP5 POP PUSH2 0xC69 PUSH3 0x15180 DUP3 PUSH2 0x2277 JUMP JUMPDEST SWAP1 POP PUSH2 0xC77 DUP2 PUSH2 0xE10 PUSH2 0x1463 JUMP JUMPDEST SWAP4 POP PUSH2 0xC85 PUSH2 0xE10 DUP3 PUSH2 0x2277 JUMP JUMPDEST SWAP1 POP PUSH2 0xC92 DUP2 PUSH1 0x3C PUSH2 0x1463 JUMP JUMPDEST SWAP3 POP PUSH2 0xC9F PUSH1 0x3C DUP3 PUSH2 0x2277 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH2 0xCB1 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0xCE8 DUP3 DUP7 PUSH2 0xDD1 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH2 0xD55 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xF37 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7A6 DUP2 DUP6 DUP6 PUSH2 0x112C JUMP JUMPDEST PUSH2 0xD75 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH2 0xD98 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0x7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80 SWAP1 PUSH1 0x20 ADD PUSH2 0xA37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE03 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH2 0xE71 DUP2 PUSH2 0x13FC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE7C PUSH2 0x105A JUMP JUMPDEST PUSH2 0x2710 DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0xEC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642070657263656E74616765 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH3 0xFFFFFF NOT AND SWAP3 ISZERO ISZERO PUSH3 0xFFFF00 NOT AND SWAP3 SWAP1 SWAP3 OR PUSH2 0x100 PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xEF9 PUSH2 0x105A JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH2 0xF12 DUP2 PUSH1 0x3C PUSH2 0x228A JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH5 0xFFFFFFFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x936 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH0 PUSH2 0x10BF DUP5 DUP5 PUSH2 0xDD1 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x1126 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1119 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH2 0x1126 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xF37 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x117B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265203E30000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x11B2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH1 0x13 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x11EC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH1 0xE SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x11FE JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x125E JUMPI PUSH1 0x10 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C732073746F70706564206279204469616D6F6E6420466C6F6F720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH2 0x125E PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x126D JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x12FC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x12CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x436F6F6C646F776E20616374697665 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x12E3 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH0 PUSH2 0x1308 DUP7 DUP7 DUP7 PUSH2 0x16A7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1315 DUP6 DUP4 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x133E JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x13B7 JUMPI PUSH2 0x134B PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x1373 DUP3 PUSH2 0x136D DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x17CA JUMP JUMPDEST GT ISZERO PUSH2 0x13B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585E081DD85B1B195D08195E18D959591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x13D3 JUMPI PUSH2 0x13C8 DUP8 ADDRESS DUP5 PUSH2 0x17D5 JUMP JUMPDEST PUSH2 0x13D3 DUP3 DUP6 DUP6 PUSH2 0x1977 JUMP JUMPDEST PUSH2 0x13DE DUP8 DUP8 DUP4 PUSH2 0x17D5 JUMP JUMPDEST PUSH2 0x13E6 PUSH2 0x1B91 JUMP JUMPDEST ISZERO PUSH2 0x13F3 JUMPI PUSH2 0x13F3 PUSH2 0x1BD0 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8FD DUP3 DUP5 PUSH2 0x22B2 JUMP JUMPDEST PUSH0 PUSH2 0x8FD DUP3 DUP5 PUSH2 0x22C5 JUMP JUMPDEST PUSH0 PUSH2 0x8FD DUP3 DUP5 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x12 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14BE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E2 SWAP2 SWAP1 PUSH2 0x2248 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS PUSH1 0x12 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1541 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1565 SWAP2 SWAP1 PUSH2 0x2248 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15AF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15D3 SWAP2 SWAP1 PUSH2 0x2248 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x15FE PUSH2 0xA6F JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x160A JUMPI POP JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 GT ISZERO PUSH2 0x1623 JUMPI PUSH1 0xF SSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xE SLOAD PUSH0 SWAP1 PUSH2 0x1651 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x980 SWAP1 PUSH2 0x1648 SWAP1 DUP4 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x144D JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 PUSH2 0x1458 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x166F JUMPI PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xF SLOAD PUSH1 0x11 SSTORE JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x168E JUMPI POP PUSH1 0x11 SLOAD PUSH2 0x168A SWAP1 PUSH1 0x2 PUSH2 0x1458 JUMP JUMPDEST DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x16A3 JUMPI PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0xF DUP3 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x16E4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x16F0 JUMPI POP PUSH0 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 DUP3 AND DUP2 EQ SWAP2 DUP6 AND EQ DUP2 ISZERO PUSH2 0x1743 JUMPI PUSH1 0x7 SLOAD PUSH2 0x173A SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x980 SWAP1 PUSH2 0x1733 SWAP1 PUSH2 0xFFFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 SWAP1 DIV AND PUSH2 0x17CA JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x1458 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x8FD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1776 JUMPI PUSH1 0x7 SLOAD PUSH2 0x173A SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x980 SWAP1 PUSH2 0x1733 SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH2 0x1799 SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x17AC PUSH1 0xA PUSH2 0x980 DUP5 PUSH1 0x23 PUSH2 0x1458 JUMP JUMPDEST SWAP1 POP PUSH2 0x17BE PUSH2 0x2710 PUSH2 0x980 DUP9 DUP5 PUSH2 0x1458 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8FD DUP3 DUP5 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1839 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x189B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1912 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1126 JUMP JUMPDEST PUSH0 DUP1 DUP4 ISZERO PUSH2 0x19FE JUMPI PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH2 0x199B SWAP1 PUSH2 0xFFFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 SWAP1 DIV AND PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x19DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x109D5E481D185E081B9BDD081CD95D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x19F6 SWAP1 DUP3 SWAP1 PUSH2 0x980 SWAP1 DUP10 SWAP1 PUSH2 0xFFFF AND PUSH2 0x1458 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1B24 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x1A8A JUMPI PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH2 0x1A27 SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1A6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14D95B1B081D185E081B9BDD081CD95D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x19F6 SWAP1 DUP3 SWAP1 PUSH2 0x980 SWAP1 DUP10 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x1458 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH2 0x1AAD SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1AF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C881D185E081B9BDD081CD95D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1B20 SWAP1 PUSH1 0xA SWAP1 PUSH2 0x980 SWAP1 PUSH1 0x23 SWAP1 PUSH2 0x97A SWAP1 DUP7 SWAP1 DUP5 SWAP1 DUP14 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x1458 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH2 0x1B2E DUP6 DUP4 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x1B3E SWAP1 DUP4 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0xA SLOAD PUSH2 0x1B4E SWAP1 DUP3 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xF2D9F3F00FC700757EB74F9AA3DBA0E2EB1280E0C6E0CF65962CC055528D7A90 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH0 SWAP1 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1BB6 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0xA SLOAD PUSH1 0x9 SLOAD PUSH2 0x1BB3 SWAP2 PUSH2 0x17CA JUMP JUMPDEST LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xA6A JUMPI POP POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1BE8 PUSH1 0xA SLOAD PUSH1 0x9 SLOAD PUSH2 0x17CA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1BF7 JUMPI POP JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xA SLOAD SELFBALANCE SWAP1 PUSH2 0x1C12 SWAP1 PUSH2 0x1CC1 JUMP JUMPDEST PUSH0 PUSH2 0x1C1D SELFBALANCE DUP4 PUSH2 0x144D JUMP JUMPDEST SWAP1 POP PUSH2 0x1C31 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1C66 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH0 PUSH2 0x1C76 DUP3 PUSH1 0x2 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C81 DUP2 PUSH2 0x1CC1 JUMP JUMPDEST PUSH0 PUSH2 0x1C8C SELFBALANCE DUP6 PUSH2 0x144D JUMP JUMPDEST SWAP1 POP PUSH2 0x1CA1 PUSH2 0x1C9B DUP5 DUP5 PUSH2 0x144D JUMP JUMPDEST DUP3 PUSH2 0x1E22 JUMP JUMPDEST POP POP PUSH0 PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0xA SSTORE POP POP PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1CF4 JUMPI PUSH2 0x1CF4 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D4B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D6F SWAP2 SWAP1 PUSH2 0x2248 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1D82 JUMPI PUSH2 0x1D82 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x12 SLOAD PUSH2 0x1DA8 SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x18CBAFE5 SWAP1 PUSH2 0x1DE0 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x2317 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DFB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1CBC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2388 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x1E3A SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF305D719 DUP3 ADDRESS DUP6 PUSH0 DUP1 PUSH2 0x1E62 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP9 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x44 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x84 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EC8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EED SWAP2 SWAP1 PUSH2 0x2435 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE71 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F87 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F92 DUP2 PUSH2 0x1F62 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1FB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1FC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1FD2 DUP6 PUSH2 0x1FA0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FE0 PUSH1 0x20 DUP7 ADD PUSH2 0x1FA0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FEE PUSH1 0x40 DUP7 ADD PUSH2 0x1FA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFC PUSH1 0x60 DUP7 ADD PUSH2 0x1FA0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2019 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2024 DUP2 PUSH2 0x1F62 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2034 DUP2 PUSH2 0x1F62 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2055 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8FD DUP2 PUSH2 0x1F62 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2070 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1FB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2097 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x20A2 DUP2 PUSH2 0x1F62 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B0 PUSH1 0x20 DUP5 ADD PUSH2 0x2077 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20CA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x20D5 DUP2 PUSH2 0x1F62 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x20E5 DUP2 PUSH2 0x1F62 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2101 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x210A DUP4 PUSH2 0x2077 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B0 PUSH1 0x20 DUP5 ADD PUSH2 0x1FA0 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xE71 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x213A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2143 DUP4 PUSH2 0x2077 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x20E5 DUP2 PUSH2 0x2118 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2167 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2185 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x21BA JUMPI PUSH2 0x21BA PUSH2 0x218B JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x218B JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 ADD PUSH2 0x21E8 JUMPI PUSH2 0x21E8 PUSH2 0x218B JUMP JUMPDEST POP PUSH0 SUB SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1FB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2216 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x221F DUP5 PUSH2 0x21EE JUMP JUMPDEST SWAP3 POP PUSH2 0x222D PUSH1 0x20 DUP6 ADD PUSH2 0x21EE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x223D DUP2 PUSH2 0x2118 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2258 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8FD DUP2 PUSH2 0x1F62 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x2285 JUMPI PUSH2 0x2285 PUSH2 0x2263 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND MUL DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP2 EQ PUSH2 0x22AA JUMPI PUSH2 0x22AA PUSH2 0x218B JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x218B JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x218B JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x22EA JUMPI PUSH2 0x22EA PUSH2 0x2263 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP PUSH1 0x20 DUP10 ADD SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2367 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2342 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2399 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x23B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x23D5 JUMPI PUSH2 0x23D5 PUSH2 0x22EF JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x23FA JUMPI PUSH2 0x23FA PUSH2 0x22EF JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x2417 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x17BE JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x241C JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2447 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 PUSH5 0x509E96EB5A 0xD3 BYTE 0xDD RETURNDATACOPY SWAP5 CODECOPY PUSH20 0xD8E3BCA74DFFE7F1B1FF9EC2C52023A7D426473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1203:10831:6:-:0;;;1383:3;1346:40;;1697:19;1712:4;1318:22;1697:19;:::i;:::-;1666:50;;2620:327;;;;;;;;;;1980:113:2;;;;;;;;;;;;;-1:-1:-1;;;1980:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:2;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:2;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;2671:30:6::1;2690:10;2671:18;:30::i;:::-;2711:31;2717:10;1318:22;2711:5;:31::i;:::-;2752:13;:30:::0;;-1:-1:-1;;;;;;2752:30:6::1;2299:42;2752:30;::::0;;2792:12:::1;:10;:12::i;:::-;2834:20;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;2834:20:6;;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;2823:8:::1;:31:::0;;-1:-1:-1;;;;;;2823:31:6;;;2882:10:::1;2873:20:::0;;:8:::1;:20:::0;;;;;;:27;;-1:-1:-1;;2873:27:6;;::::1;2823:31:::0;2873:27;;::::1;::::0;;;2927:4:::1;2910:23:::0;;;;;;:30;;;;::::1;;::::0;;1203:10831;;640:96:5;719:10;;640:96::o;2426:187:1:-;2518:6;;;-1:-1:-1;;;;;2534:17:1;;;-1:-1:-1;;;;;;2534:17:1;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;8520:535:2:-;-1:-1:-1;;;;;8603:21:2;;8595:65;;;;-1:-1:-1;;;8595:65:2;;3125:2:7;8595:65:2;;;3107:21:7;3164:2;3144:18;;;3137:30;3203:33;3183:18;;;3176:61;3254:18;;8595:65:2;;;;;;;;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:2;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;3656:25:7;;;8952:37:2;;3629:18:7;8952:37:2;;;;;;;8520:535;;:::o;10370:200:6:-;10459:13;;;;;;;;;-1:-1:-1;;;;;10459:13:6;-1:-1:-1;;;;;10442:39:6;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10424:84:6;;10517:4;10541:13;;;;;;;;;-1:-1:-1;;;;;10541:13:6;-1:-1:-1;;;;;10524:36:6;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10424:139;;-1:-1:-1;;;;;;10424:139:6;;;;;;;-1:-1:-1;;;;;4217:15:7;;;10424:139:6;;;4199:34:7;4269:15;;4249:18;;;4242:43;4134:18;;10424:139:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10410:11;:153;;-1:-1:-1;;;;;;10410:153:6;-1:-1:-1;;;;;10410:153:6;;;;;;;;;;10370:200::o;12073:91:2:-;;;;:::o;14:217:7:-;54:1;80;70:132;;124:10;119:3;115:20;112:1;105:31;159:4;156:1;149:15;187:4;184:1;177:15;70:132;-1:-1:-1;216:9:7;;14:217::o;236:127::-;297:10;292:3;288:20;285:1;278:31;328:4;325:1;318:15;352:4;349:1;342:15;368:380;447:1;443:12;;;;490;;;511:61;;565:4;557:6;553:17;543:27;;511:61;618:2;610:6;607:14;587:18;584:38;581:161;;664:10;659:3;655:20;652:1;645:31;699:4;696:1;689:15;727:4;724:1;717:15;581:161;;368:380;;;:::o;879:518::-;981:2;976:3;973:11;970:421;;;1017:5;1014:1;1007:16;1061:4;1058:1;1048:18;1131:2;1119:10;1115:19;1112:1;1108:27;1102:4;1098:38;1167:4;1155:10;1152:20;1149:47;;;-1:-1:-1;1190:4:7;1149:47;1245:2;1240:3;1236:12;1233:1;1229:20;1223:4;1219:31;1209:41;;1300:81;1318:2;1311:5;1308:13;1300:81;;;1377:1;1363:16;;1344:1;1333:13;1300:81;;;1304:3;;879:518;;;:::o;1573:1345::-;1693:10;;-1:-1:-1;;;;;1715:30:7;;1712:56;;;1748:18;;:::i;:::-;1777:97;1867:6;1827:38;1859:4;1853:11;1827:38;:::i;:::-;1821:4;1777:97;:::i;:::-;1929:4;;1986:2;1975:14;;2003:1;1998:663;;;;2705:1;2722:6;2719:89;;;-1:-1:-1;2774:19:7;;;2768:26;2719:89;-1:-1:-1;;1530:1:7;1526:11;;;1522:24;1518:29;1508:40;1554:1;1550:11;;;1505:57;2821:81;;1968:944;;1998:663;826:1;819:14;;;863:4;850:18;;-1:-1:-1;;2034:20:7;;;2152:236;2166:7;2163:1;2160:14;2152:236;;;2255:19;;;2249:26;2234:42;;2347:27;;;;2315:1;2303:14;;;;2182:19;;2152:236;;;2156:3;2416:6;2407:7;2404:19;2401:201;;;2477:19;;;2471:26;-1:-1:-1;;2560:1:7;2556:14;;;2572:3;2552:24;2548:37;2544:42;2529:58;2514:74;;2401:201;;;2648:1;2639:6;2636:1;2632:14;2628:22;2622:4;2615:36;1968:944;;;;;1573:1345;;:::o;3283:222::-;3348:9;;;3369:10;;;3366:133;;;3421:10;3416:3;3412:20;3409:1;3402:31;3456:4;3453:1;3446:15;3484:4;3481:1;3474:15;3366:133;3283:222;;;;:::o;3692:290::-;3762:6;3815:2;3803:9;3794:7;3790:23;3786:32;3783:52;;;3831:1;3828;3821:12;3783:52;3857:16;;-1:-1:-1;;;;;3902:31:7;;3892:42;;3882:70;;3948:1;3945;3938:12;3882:70;3971:5;3692:290;-1:-1:-1;;;3692:290:7:o;3987:304::-;1203:10831:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_2485": {
									"entryPoint": null,
									"id": 2485,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addLiquidity_2423": {
									"entryPoint": 7714,
									"id": 2423,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1010": {
									"entryPoint": null,
									"id": 1010,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_945": {
									"entryPoint": 3895,
									"id": 945,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_999": {
									"entryPoint": 7356,
									"id": 999,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_calculateTax_1635": {
									"entryPoint": 5799,
									"id": 1635,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_checkOwner_366": {
									"entryPoint": 4186,
									"id": 366,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkPriceConditions_1870": {
									"entryPoint": 5621,
									"id": 1870,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_distributeTax_1780": {
									"entryPoint": 6519,
									"id": 1780,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_maxWalletSize_2437": {
									"entryPoint": 2626,
									"id": 2437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1126": {
									"entryPoint": null,
									"id": 1126,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupPair_2322": {
									"entryPoint": 5230,
									"id": 2322,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_shouldSwapBack_2458": {
									"entryPoint": 7057,
									"id": 2458,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_988": {
									"entryPoint": 4276,
									"id": 988,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_swapAndLiquify_1968": {
									"entryPoint": 7120,
									"id": 1968,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_swapTokensForETH_2382": {
									"entryPoint": 7361,
									"id": 2382,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_423": {
									"entryPoint": 5116,
									"id": 423,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1533": {
									"entryPoint": 4396,
									"id": 1533,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_771": {
									"entryPoint": 6101,
									"id": 771,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@accumulatedEco_1264": {
									"entryPoint": null,
									"id": 1264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@accumulatedLp_1262": {
									"entryPoint": null,
									"id": 1262,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_175": {
									"entryPoint": 6090,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_566": {
									"entryPoint": 3537,
									"id": 566,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_591": {
									"entryPoint": 1945,
									"id": 591,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_523": {
									"entryPoint": null,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@configureCooldown_2252": {
									"entryPoint": 3825,
									"id": 2252,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@configureDiamondFloor_2281": {
									"entryPoint": 3700,
									"id": 2281,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cooldownRemaining_2101": {
									"entryPoint": 3069,
									"id": 2101,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@cooldown_1278": {
									"entryPoint": null,
									"id": 1278,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_499": {
									"entryPoint": null,
									"id": 499,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_694": {
									"entryPoint": 3291,
									"id": 694,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@diamondFloor_1292": {
									"entryPoint": null,
									"id": 1292,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_220": {
									"entryPoint": 5219,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_653": {
									"entryPoint": 2308,
									"id": 653,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isExempt_1303": {
									"entryPoint": null,
									"id": 1303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxWalletPercentage_1237": {
									"entryPoint": null,
									"id": 1237,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_205": {
									"entryPoint": 5208,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_479": {
									"entryPoint": 1801,
									"id": 479,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_352": {
									"entryPoint": null,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pairAddress_1296": {
									"entryPoint": null,
									"id": 1296,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pairPrice_2032": {
									"entryPoint": 2671,
									"id": 2032,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@priceDeviation_2156": {
									"entryPoint": 2360,
									"id": 2156,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_380": {
									"entryPoint": 2341,
									"id": 380,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@routerAddress_1294": {
									"entryPoint": null,
									"id": 1294,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setExempt_2297": {
									"entryPoint": 3241,
									"id": 2297,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setMaxWalletPercentage_2481": {
									"entryPoint": 2487,
									"id": 2481,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRouter_2175": {
									"entryPoint": 3437,
									"id": 2175,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTaxRates_2216": {
									"entryPoint": 1970,
									"id": 2216,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setThreshold_2228": {
									"entryPoint": 3056,
									"id": 2228,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 5197,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapThreshold_1260": {
									"entryPoint": null,
									"id": 1260,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_489": {
									"entryPoint": 3041,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxRates_1252": {
									"entryPoint": null,
									"id": 1252,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_509": {
									"entryPoint": null,
									"id": 509,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_624": {
									"entryPoint": 2271,
									"id": 624,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_403": {
									"entryPoint": 3579,
									"id": 403,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_548": {
									"entryPoint": 3424,
									"id": 548,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 8311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 8776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 9096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_uint16": {
									"entryPoint": 8432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_boolt_uint32": {
									"entryPoint": 8489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory": {
									"entryPoint": 8708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint16t_uint16t_uint16t_uint16": {
									"entryPoint": 8118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 9269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_uint112_fromMemory": {
									"entryPoint": 8686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint16": {
									"entryPoint": 8096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint16_t_uint256_t_bool_t_uint256__to_t_bool_t_uint16_t_uint256_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint32__to_t_bool_t_uint32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_16a37e5ef25bc279f87ddedf10d3060d884d4b4915de8aaf5d2288b066e1e24b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_39f82e10faa0e3af80c3e100dfc7f5c499afc72a38d5e97ab509072a50a7371c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a5b3d2ddd2421ad686f304be3d3015a2ee589ad9c652c040c54c8fbfedd016ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b52f1cc5da7f7d352b528f141ea27097a592e54e4895628bd9cba7463eea14a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf60dfdf0bc628580395fc38657d86ed24105efc4a69fdfae0dbdbb8a1ef6412__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d02ce7a72410a6351efcb149b27b582bc4ff73b7af05eaebe8fe75a22e828801__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f090d1c11271f3393ea5511251471fa61f5244fcb411caac2ee82afbeeb3c955__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ff623882c30ff94ec292e83d2b5f0879ae4949c8c6608b2e3c6e348352f857d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16_t_uint16_t_uint16_t_uint16__to_t_uint16_t_uint16_t_uint16_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8983,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint16": {
									"entryPoint": 8607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint32": {
									"entryPoint": 8842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"negate_t_int256": {
									"entryPoint": 8660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8587,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8803,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8963,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8943,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 8034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_uint32": {
									"entryPoint": 8472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20507:7",
										"nodeType": "YulBlock",
										"src": "0:20507:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:7",
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nativeSrc": "125:26:7",
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nativeSrc": "133:18:7",
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nativeSrc": "160:25:7",
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nativeSrc": "160:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:7",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:7",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:7",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "317:297:7",
													"nodeType": "YulBlock",
													"src": "317:297:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "327:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "327:6:7"
																},
																"nativeSrc": "327:21:7",
																"nodeType": "YulFunctionCall",
																"src": "327:21:7"
															},
															"nativeSrc": "327:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "327:21:7"
														},
														{
															"nativeSrc": "357:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "357:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "377:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "377:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "371:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "371:5:7"
																},
																"nativeSrc": "371:13:7",
																"nodeType": "YulFunctionCall",
																"src": "371:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "361:6:7",
																	"nodeType": "YulTypedName",
																	"src": "361:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "404:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "404:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "415:2:7",
																				"nodeType": "YulLiteral",
																				"src": "415:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "400:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "400:3:7"
																		},
																		"nativeSrc": "400:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "400:18:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "420:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "420:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "393:6:7"
																},
																"nativeSrc": "393:34:7",
																"nodeType": "YulFunctionCall",
																"src": "393:34:7"
															},
															"nativeSrc": "393:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "393:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "446:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "446:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "457:2:7",
																				"nodeType": "YulLiteral",
																				"src": "457:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "442:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "442:3:7"
																		},
																		"nativeSrc": "442:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "442:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "466:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "466:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "474:2:7",
																				"nodeType": "YulLiteral",
																				"src": "474:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "462:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "462:3:7"
																		},
																		"nativeSrc": "462:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "462:15:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "479:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "479:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "436:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "436:5:7"
																},
																"nativeSrc": "436:50:7",
																"nodeType": "YulFunctionCall",
																"src": "436:50:7"
															},
															"nativeSrc": "436:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "436:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "510:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "510:9:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "521:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "521:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "506:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "506:3:7"
																				},
																				"nativeSrc": "506:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "506:22:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "530:2:7",
																				"nodeType": "YulLiteral",
																				"src": "530:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "502:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "502:3:7"
																		},
																		"nativeSrc": "502:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "502:31:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "535:1:7",
																		"nodeType": "YulLiteral",
																		"src": "535:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "495:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:7"
																},
																"nativeSrc": "495:42:7",
																"nodeType": "YulFunctionCall",
																"src": "495:42:7"
															},
															"nativeSrc": "495:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "495:42:7"
														},
														{
															"nativeSrc": "546:62:7",
															"nodeType": "YulAssignment",
															"src": "546:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "562:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "562:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "581:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "581:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "589:2:7",
																								"nodeType": "YulLiteral",
																								"src": "589:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "577:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "577:3:7"
																						},
																						"nativeSrc": "577:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "577:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "598:2:7",
																								"nodeType": "YulLiteral",
																								"src": "598:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "594:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "594:3:7"
																						},
																						"nativeSrc": "594:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "594:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "573:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "573:3:7"
																				},
																				"nativeSrc": "573:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "573:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "558:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:7"
																		},
																		"nativeSrc": "558:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "558:45:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "605:2:7",
																		"nodeType": "YulLiteral",
																		"src": "605:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "554:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "554:3:7"
																},
																"nativeSrc": "554:54:7",
																"nodeType": "YulFunctionCall",
																"src": "554:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "546:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "546:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "196:418:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "286:9:7",
														"nodeType": "YulTypedName",
														"src": "286:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "297:6:7",
														"nodeType": "YulTypedName",
														"src": "297:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "308:4:7",
														"nodeType": "YulTypedName",
														"src": "308:4:7",
														"type": ""
													}
												],
												"src": "196:418:7"
											},
											{
												"body": {
													"nativeSrc": "664:86:7",
													"nodeType": "YulBlock",
													"src": "664:86:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "728:16:7",
																"nodeType": "YulBlock",
																"src": "728:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "737:1:7",
																					"nodeType": "YulLiteral",
																					"src": "737:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "740:1:7",
																					"nodeType": "YulLiteral",
																					"src": "740:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "730:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "730:6:7"
																			},
																			"nativeSrc": "730:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "730:12:7"
																		},
																		"nativeSrc": "730:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "730:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "687:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "687:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "698:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "698:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "713:3:7",
																										"nodeType": "YulLiteral",
																										"src": "713:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "718:1:7",
																										"nodeType": "YulLiteral",
																										"src": "718:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "709:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "709:3:7"
																								},
																								"nativeSrc": "709:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "709:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "722:1:7",
																								"nodeType": "YulLiteral",
																								"src": "722:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "705:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "705:3:7"
																						},
																						"nativeSrc": "705:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "705:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "694:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "694:3:7"
																				},
																				"nativeSrc": "694:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "694:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "684:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "684:2:7"
																		},
																		"nativeSrc": "684:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "684:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "677:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "677:6:7"
																},
																"nativeSrc": "677:50:7",
																"nodeType": "YulFunctionCall",
																"src": "677:50:7"
															},
															"nativeSrc": "674:70:7",
															"nodeType": "YulIf",
															"src": "674:70:7"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "619:131:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "653:5:7",
														"nodeType": "YulTypedName",
														"src": "653:5:7",
														"type": ""
													}
												],
												"src": "619:131:7"
											},
											{
												"body": {
													"nativeSrc": "842:228:7",
													"nodeType": "YulBlock",
													"src": "842:228:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "888:16:7",
																"nodeType": "YulBlock",
																"src": "888:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "897:1:7",
																					"nodeType": "YulLiteral",
																					"src": "897:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "900:1:7",
																					"nodeType": "YulLiteral",
																					"src": "900:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "890:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "890:6:7"
																			},
																			"nativeSrc": "890:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "890:12:7"
																		},
																		"nativeSrc": "890:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "890:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "863:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "863:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "872:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "872:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "859:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "859:3:7"
																		},
																		"nativeSrc": "859:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "859:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "884:2:7",
																		"nodeType": "YulLiteral",
																		"src": "884:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "855:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "855:3:7"
																},
																"nativeSrc": "855:32:7",
																"nodeType": "YulFunctionCall",
																"src": "855:32:7"
															},
															"nativeSrc": "852:52:7",
															"nodeType": "YulIf",
															"src": "852:52:7"
														},
														{
															"nativeSrc": "913:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "913:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "939:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "939:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "926:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:12:7"
																},
																"nativeSrc": "926:23:7",
																"nodeType": "YulFunctionCall",
																"src": "926:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "917:5:7",
																	"nodeType": "YulTypedName",
																	"src": "917:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "983:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "983:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "958:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "958:24:7"
																},
																"nativeSrc": "958:31:7",
																"nodeType": "YulFunctionCall",
																"src": "958:31:7"
															},
															"nativeSrc": "958:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "958:31:7"
														},
														{
															"nativeSrc": "998:15:7",
															"nodeType": "YulAssignment",
															"src": "998:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1008:5:7",
																"nodeType": "YulIdentifier",
																"src": "1008:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "998:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "998:6:7"
																}
															]
														},
														{
															"nativeSrc": "1022:42:7",
															"nodeType": "YulAssignment",
															"src": "1022:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1049:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1049:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1060:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1060:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1045:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1045:3:7"
																		},
																		"nativeSrc": "1045:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1045:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1032:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1032:12:7"
																},
																"nativeSrc": "1032:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1032:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1022:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1022:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "755:315:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "800:9:7",
														"nodeType": "YulTypedName",
														"src": "800:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "811:7:7",
														"nodeType": "YulTypedName",
														"src": "811:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "823:6:7",
														"nodeType": "YulTypedName",
														"src": "823:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "831:6:7",
														"nodeType": "YulTypedName",
														"src": "831:6:7",
														"type": ""
													}
												],
												"src": "755:315:7"
											},
											{
												"body": {
													"nativeSrc": "1170:92:7",
													"nodeType": "YulBlock",
													"src": "1170:92:7",
													"statements": [
														{
															"nativeSrc": "1180:26:7",
															"nodeType": "YulAssignment",
															"src": "1180:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1192:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1192:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1203:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1203:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1188:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1188:3:7"
																},
																"nativeSrc": "1188:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1188:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1180:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1180:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1222:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1222:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1247:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1247:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1240:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1240:6:7"
																				},
																				"nativeSrc": "1240:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1240:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1233:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1233:6:7"
																		},
																		"nativeSrc": "1233:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1233:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1215:6:7"
																},
																"nativeSrc": "1215:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1215:41:7"
															},
															"nativeSrc": "1215:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1215:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1075:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1139:9:7",
														"nodeType": "YulTypedName",
														"src": "1139:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1150:6:7",
														"nodeType": "YulTypedName",
														"src": "1150:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1161:4:7",
														"nodeType": "YulTypedName",
														"src": "1161:4:7",
														"type": ""
													}
												],
												"src": "1075:187:7"
											},
											{
												"body": {
													"nativeSrc": "1315:111:7",
													"nodeType": "YulBlock",
													"src": "1315:111:7",
													"statements": [
														{
															"nativeSrc": "1325:29:7",
															"nodeType": "YulAssignment",
															"src": "1325:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1347:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1347:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1334:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1334:12:7"
																},
																"nativeSrc": "1334:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1334:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1325:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1325:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1404:16:7",
																"nodeType": "YulBlock",
																"src": "1404:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1413:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1413:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1416:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1416:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1406:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1406:6:7"
																			},
																			"nativeSrc": "1406:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1406:12:7"
																		},
																		"nativeSrc": "1406:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1406:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1376:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1376:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1387:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1387:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1394:6:7",
																						"nodeType": "YulLiteral",
																						"src": "1394:6:7",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1383:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1383:3:7"
																				},
																				"nativeSrc": "1383:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1383:18:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1373:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1373:2:7"
																		},
																		"nativeSrc": "1373:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1373:29:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1366:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1366:6:7"
																},
																"nativeSrc": "1366:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1366:37:7"
															},
															"nativeSrc": "1363:57:7",
															"nodeType": "YulIf",
															"src": "1363:57:7"
														}
													]
												},
												"name": "abi_decode_uint16",
												"nativeSrc": "1267:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1294:6:7",
														"nodeType": "YulTypedName",
														"src": "1294:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1305:5:7",
														"nodeType": "YulTypedName",
														"src": "1305:5:7",
														"type": ""
													}
												],
												"src": "1267:159:7"
											},
											{
												"body": {
													"nativeSrc": "1548:284:7",
													"nodeType": "YulBlock",
													"src": "1548:284:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1595:16:7",
																"nodeType": "YulBlock",
																"src": "1595:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1604:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1604:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1607:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1607:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1597:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1597:6:7"
																			},
																			"nativeSrc": "1597:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1597:12:7"
																		},
																		"nativeSrc": "1597:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1597:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1569:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1569:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1578:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1578:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1565:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1565:3:7"
																		},
																		"nativeSrc": "1565:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1565:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1590:3:7",
																		"nodeType": "YulLiteral",
																		"src": "1590:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1561:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1561:3:7"
																},
																"nativeSrc": "1561:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1561:33:7"
															},
															"nativeSrc": "1558:53:7",
															"nodeType": "YulIf",
															"src": "1558:53:7"
														},
														{
															"nativeSrc": "1620:38:7",
															"nodeType": "YulAssignment",
															"src": "1620:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1648:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1648:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nativeSrc": "1630:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1630:17:7"
																},
																"nativeSrc": "1630:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1630:28:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1620:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1620:6:7"
																}
															]
														},
														{
															"nativeSrc": "1667:47:7",
															"nodeType": "YulAssignment",
															"src": "1667:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1699:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1699:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1710:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1710:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1695:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1695:3:7"
																		},
																		"nativeSrc": "1695:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1695:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nativeSrc": "1677:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1677:17:7"
																},
																"nativeSrc": "1677:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1677:37:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1667:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:7"
																}
															]
														},
														{
															"nativeSrc": "1723:47:7",
															"nodeType": "YulAssignment",
															"src": "1723:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1755:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1755:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1766:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1766:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1751:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1751:3:7"
																		},
																		"nativeSrc": "1751:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1751:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nativeSrc": "1733:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1733:17:7"
																},
																"nativeSrc": "1733:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1733:37:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1723:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:7"
																}
															]
														},
														{
															"nativeSrc": "1779:47:7",
															"nodeType": "YulAssignment",
															"src": "1779:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1811:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1811:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1822:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1822:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1807:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1807:3:7"
																		},
																		"nativeSrc": "1807:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1807:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nativeSrc": "1789:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1789:17:7"
																},
																"nativeSrc": "1789:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1789:37:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1779:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1779:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16t_uint16t_uint16t_uint16",
												"nativeSrc": "1431:401:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1490:9:7",
														"nodeType": "YulTypedName",
														"src": "1490:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1501:7:7",
														"nodeType": "YulTypedName",
														"src": "1501:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1513:6:7",
														"nodeType": "YulTypedName",
														"src": "1513:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1521:6:7",
														"nodeType": "YulTypedName",
														"src": "1521:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1529:6:7",
														"nodeType": "YulTypedName",
														"src": "1529:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1537:6:7",
														"nodeType": "YulTypedName",
														"src": "1537:6:7",
														"type": ""
													}
												],
												"src": "1431:401:7"
											},
											{
												"body": {
													"nativeSrc": "1941:352:7",
													"nodeType": "YulBlock",
													"src": "1941:352:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1987:16:7",
																"nodeType": "YulBlock",
																"src": "1987:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1996:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1996:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1999:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1999:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1989:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1989:6:7"
																			},
																			"nativeSrc": "1989:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1989:12:7"
																		},
																		"nativeSrc": "1989:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1989:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1962:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1962:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1971:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1971:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1958:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1958:3:7"
																		},
																		"nativeSrc": "1958:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1958:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1983:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1954:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1954:3:7"
																},
																"nativeSrc": "1954:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1954:32:7"
															},
															"nativeSrc": "1951:52:7",
															"nodeType": "YulIf",
															"src": "1951:52:7"
														},
														{
															"nativeSrc": "2012:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2012:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2038:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2038:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2025:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2025:12:7"
																},
																"nativeSrc": "2025:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2025:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2016:5:7",
																	"nodeType": "YulTypedName",
																	"src": "2016:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2082:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2082:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2057:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "2057:24:7"
																},
																"nativeSrc": "2057:31:7",
																"nodeType": "YulFunctionCall",
																"src": "2057:31:7"
															},
															"nativeSrc": "2057:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "2057:31:7"
														},
														{
															"nativeSrc": "2097:15:7",
															"nodeType": "YulAssignment",
															"src": "2097:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "2107:5:7",
																"nodeType": "YulIdentifier",
																"src": "2107:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2097:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2097:6:7"
																}
															]
														},
														{
															"nativeSrc": "2121:47:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2121:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2153:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2153:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2164:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2164:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2149:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2149:3:7"
																		},
																		"nativeSrc": "2149:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2149:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2136:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2136:12:7"
																},
																"nativeSrc": "2136:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2136:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2125:7:7",
																	"nodeType": "YulTypedName",
																	"src": "2125:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2202:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2202:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2177:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "2177:24:7"
																},
																"nativeSrc": "2177:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2177:33:7"
															},
															"nativeSrc": "2177:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2177:33:7"
														},
														{
															"nativeSrc": "2219:17:7",
															"nodeType": "YulAssignment",
															"src": "2219:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "2229:7:7",
																"nodeType": "YulIdentifier",
																"src": "2229:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2219:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2219:6:7"
																}
															]
														},
														{
															"nativeSrc": "2245:42:7",
															"nodeType": "YulAssignment",
															"src": "2245:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2272:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2272:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2283:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2283:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2268:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2268:3:7"
																		},
																		"nativeSrc": "2268:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2268:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2255:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2255:12:7"
																},
																"nativeSrc": "2255:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2255:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2245:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2245:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1837:456:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1891:9:7",
														"nodeType": "YulTypedName",
														"src": "1891:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1902:7:7",
														"nodeType": "YulTypedName",
														"src": "1902:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1914:6:7",
														"nodeType": "YulTypedName",
														"src": "1914:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1922:6:7",
														"nodeType": "YulTypedName",
														"src": "1922:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1930:6:7",
														"nodeType": "YulTypedName",
														"src": "1930:6:7",
														"type": ""
													}
												],
												"src": "1837:456:7"
											},
											{
												"body": {
													"nativeSrc": "2395:87:7",
													"nodeType": "YulBlock",
													"src": "2395:87:7",
													"statements": [
														{
															"nativeSrc": "2405:26:7",
															"nodeType": "YulAssignment",
															"src": "2405:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2417:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2417:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2428:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2428:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2413:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2413:3:7"
																},
																"nativeSrc": "2413:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2413:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2405:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2405:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2447:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2447:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2462:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2470:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2470:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2458:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2458:3:7"
																		},
																		"nativeSrc": "2458:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2458:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2440:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2440:6:7"
																},
																"nativeSrc": "2440:36:7",
																"nodeType": "YulFunctionCall",
																"src": "2440:36:7"
															},
															"nativeSrc": "2440:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "2440:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2298:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2364:9:7",
														"nodeType": "YulTypedName",
														"src": "2364:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2375:6:7",
														"nodeType": "YulTypedName",
														"src": "2375:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2386:4:7",
														"nodeType": "YulTypedName",
														"src": "2386:4:7",
														"type": ""
													}
												],
												"src": "2298:184:7"
											},
											{
												"body": {
													"nativeSrc": "2588:102:7",
													"nodeType": "YulBlock",
													"src": "2588:102:7",
													"statements": [
														{
															"nativeSrc": "2598:26:7",
															"nodeType": "YulAssignment",
															"src": "2598:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2610:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2610:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2621:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2621:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2606:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2606:3:7"
																},
																"nativeSrc": "2606:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2606:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2598:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2598:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2640:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2640:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2655:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2655:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2671:3:7",
																								"nodeType": "YulLiteral",
																								"src": "2671:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2676:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2676:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2667:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2667:3:7"
																						},
																						"nativeSrc": "2667:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2667:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2680:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2680:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2663:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2663:3:7"
																				},
																				"nativeSrc": "2663:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2663:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2651:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2651:3:7"
																		},
																		"nativeSrc": "2651:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2651:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2633:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:7"
																},
																"nativeSrc": "2633:51:7",
																"nodeType": "YulFunctionCall",
																"src": "2633:51:7"
															},
															"nativeSrc": "2633:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "2633:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2487:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2557:9:7",
														"nodeType": "YulTypedName",
														"src": "2557:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2568:6:7",
														"nodeType": "YulTypedName",
														"src": "2568:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2579:4:7",
														"nodeType": "YulTypedName",
														"src": "2579:4:7",
														"type": ""
													}
												],
												"src": "2487:203:7"
											},
											{
												"body": {
													"nativeSrc": "2872:267:7",
													"nodeType": "YulBlock",
													"src": "2872:267:7",
													"statements": [
														{
															"nativeSrc": "2882:27:7",
															"nodeType": "YulAssignment",
															"src": "2882:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2894:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2894:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2905:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2905:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2890:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2890:3:7"
																},
																"nativeSrc": "2890:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2890:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2882:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2882:4:7"
																}
															]
														},
														{
															"nativeSrc": "2918:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2918:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2928:6:7",
																"nodeType": "YulLiteral",
																"src": "2928:6:7",
																"type": "",
																"value": "0xffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2922:2:7",
																	"nodeType": "YulTypedName",
																	"src": "2922:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2950:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2950:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2965:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2965:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "2973:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "2973:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2961:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2961:3:7"
																		},
																		"nativeSrc": "2961:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2961:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2943:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2943:6:7"
																},
																"nativeSrc": "2943:34:7",
																"nodeType": "YulFunctionCall",
																"src": "2943:34:7"
															},
															"nativeSrc": "2943:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "2943:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2997:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2997:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3008:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3008:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2993:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2993:3:7"
																		},
																		"nativeSrc": "2993:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2993:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3017:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3017:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3025:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3025:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3013:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3013:3:7"
																		},
																		"nativeSrc": "3013:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2986:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2986:6:7"
																},
																"nativeSrc": "2986:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2986:43:7"
															},
															"nativeSrc": "2986:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "2986:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3049:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3049:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3060:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3060:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3045:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3045:3:7"
																		},
																		"nativeSrc": "3045:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3045:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "3069:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3069:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3077:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3077:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3065:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3065:3:7"
																		},
																		"nativeSrc": "3065:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3065:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3038:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3038:6:7"
																},
																"nativeSrc": "3038:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3038:43:7"
															},
															"nativeSrc": "3038:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "3038:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3101:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3101:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3112:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3112:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3097:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3097:3:7"
																		},
																		"nativeSrc": "3097:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3097:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "3121:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3121:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3129:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3129:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3117:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3117:3:7"
																		},
																		"nativeSrc": "3117:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3117:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3090:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:7"
																},
																"nativeSrc": "3090:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3090:43:7"
															},
															"nativeSrc": "3090:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "3090:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16_t_uint16_t_uint16_t_uint16__to_t_uint16_t_uint16_t_uint16_t_uint16__fromStack_reversed",
												"nativeSrc": "2695:444:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2817:9:7",
														"nodeType": "YulTypedName",
														"src": "2817:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2828:6:7",
														"nodeType": "YulTypedName",
														"src": "2828:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2836:6:7",
														"nodeType": "YulTypedName",
														"src": "2836:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2844:6:7",
														"nodeType": "YulTypedName",
														"src": "2844:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2852:6:7",
														"nodeType": "YulTypedName",
														"src": "2852:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2863:4:7",
														"nodeType": "YulTypedName",
														"src": "2863:4:7",
														"type": ""
													}
												],
												"src": "2695:444:7"
											},
											{
												"body": {
													"nativeSrc": "3214:177:7",
													"nodeType": "YulBlock",
													"src": "3214:177:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3260:16:7",
																"nodeType": "YulBlock",
																"src": "3260:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3269:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3269:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3272:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3272:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3262:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3262:6:7"
																			},
																			"nativeSrc": "3262:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3262:12:7"
																		},
																		"nativeSrc": "3262:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3262:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3235:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3235:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3244:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3244:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3231:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3231:3:7"
																		},
																		"nativeSrc": "3231:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3231:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3256:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3256:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3227:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3227:3:7"
																},
																"nativeSrc": "3227:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3227:32:7"
															},
															"nativeSrc": "3224:52:7",
															"nodeType": "YulIf",
															"src": "3224:52:7"
														},
														{
															"nativeSrc": "3285:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3285:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3311:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3311:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3298:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3298:12:7"
																},
																"nativeSrc": "3298:23:7",
																"nodeType": "YulFunctionCall",
																"src": "3298:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3289:5:7",
																	"nodeType": "YulTypedName",
																	"src": "3289:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3355:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3355:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3330:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:24:7"
																},
																"nativeSrc": "3330:31:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:31:7"
															},
															"nativeSrc": "3330:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "3330:31:7"
														},
														{
															"nativeSrc": "3370:15:7",
															"nodeType": "YulAssignment",
															"src": "3370:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "3380:5:7",
																"nodeType": "YulIdentifier",
																"src": "3380:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3370:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3370:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3144:247:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3180:9:7",
														"nodeType": "YulTypedName",
														"src": "3180:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3191:7:7",
														"nodeType": "YulTypedName",
														"src": "3191:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3203:6:7",
														"nodeType": "YulTypedName",
														"src": "3203:6:7",
														"type": ""
													}
												],
												"src": "3144:247:7"
											},
											{
												"body": {
													"nativeSrc": "3495:76:7",
													"nodeType": "YulBlock",
													"src": "3495:76:7",
													"statements": [
														{
															"nativeSrc": "3505:26:7",
															"nodeType": "YulAssignment",
															"src": "3505:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3517:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3528:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3528:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3513:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3513:3:7"
																},
																"nativeSrc": "3513:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3513:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3505:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3505:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3547:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3547:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3558:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3558:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3540:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3540:6:7"
																},
																"nativeSrc": "3540:25:7",
																"nodeType": "YulFunctionCall",
																"src": "3540:25:7"
															},
															"nativeSrc": "3540:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "3540:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "3396:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3464:9:7",
														"nodeType": "YulTypedName",
														"src": "3464:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3475:6:7",
														"nodeType": "YulTypedName",
														"src": "3475:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3486:4:7",
														"nodeType": "YulTypedName",
														"src": "3486:4:7",
														"type": ""
													}
												],
												"src": "3396:175:7"
											},
											{
												"body": {
													"nativeSrc": "3697:152:7",
													"nodeType": "YulBlock",
													"src": "3697:152:7",
													"statements": [
														{
															"nativeSrc": "3707:26:7",
															"nodeType": "YulAssignment",
															"src": "3707:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3719:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3719:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3730:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3730:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3715:3:7"
																},
																"nativeSrc": "3715:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3715:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3707:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3707:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3749:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3749:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "3774:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3774:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3767:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3767:6:7"
																				},
																				"nativeSrc": "3767:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3767:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3760:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3760:6:7"
																		},
																		"nativeSrc": "3760:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3760:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3742:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3742:6:7"
																},
																"nativeSrc": "3742:41:7",
																"nodeType": "YulFunctionCall",
																"src": "3742:41:7"
															},
															"nativeSrc": "3742:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "3742:41:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3803:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3803:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3814:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3814:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3799:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3799:3:7"
																		},
																		"nativeSrc": "3799:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3799:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3823:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3823:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3831:10:7",
																				"nodeType": "YulLiteral",
																				"src": "3831:10:7",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3819:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3819:3:7"
																		},
																		"nativeSrc": "3819:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3819:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3792:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3792:6:7"
																},
																"nativeSrc": "3792:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3792:51:7"
															},
															"nativeSrc": "3792:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3792:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint32__to_t_bool_t_uint32__fromStack_reversed",
												"nativeSrc": "3576:273:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3658:9:7",
														"nodeType": "YulTypedName",
														"src": "3658:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3669:6:7",
														"nodeType": "YulTypedName",
														"src": "3669:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3677:6:7",
														"nodeType": "YulTypedName",
														"src": "3677:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3688:4:7",
														"nodeType": "YulTypedName",
														"src": "3688:4:7",
														"type": ""
													}
												],
												"src": "3576:273:7"
											},
											{
												"body": {
													"nativeSrc": "3924:110:7",
													"nodeType": "YulBlock",
													"src": "3924:110:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3970:16:7",
																"nodeType": "YulBlock",
																"src": "3970:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3979:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3979:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3982:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3982:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3972:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3972:6:7"
																			},
																			"nativeSrc": "3972:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3972:12:7"
																		},
																		"nativeSrc": "3972:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3972:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3945:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3945:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3954:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3954:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3941:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3941:3:7"
																		},
																		"nativeSrc": "3941:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3941:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3966:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3966:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3937:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3937:3:7"
																},
																"nativeSrc": "3937:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3937:32:7"
															},
															"nativeSrc": "3934:52:7",
															"nodeType": "YulIf",
															"src": "3934:52:7"
														},
														{
															"nativeSrc": "3995:33:7",
															"nodeType": "YulAssignment",
															"src": "3995:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4018:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4018:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4005:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4005:12:7"
																},
																"nativeSrc": "4005:23:7",
																"nodeType": "YulFunctionCall",
																"src": "4005:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3995:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3995:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3854:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3890:9:7",
														"nodeType": "YulTypedName",
														"src": "3890:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3901:7:7",
														"nodeType": "YulTypedName",
														"src": "3901:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3913:6:7",
														"nodeType": "YulTypedName",
														"src": "3913:6:7",
														"type": ""
													}
												],
												"src": "3854:180:7"
											},
											{
												"body": {
													"nativeSrc": "4224:206:7",
													"nodeType": "YulBlock",
													"src": "4224:206:7",
													"statements": [
														{
															"nativeSrc": "4234:27:7",
															"nodeType": "YulAssignment",
															"src": "4234:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4246:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4246:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4257:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4257:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4242:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4242:3:7"
																},
																"nativeSrc": "4242:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4242:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4234:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4234:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4277:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4277:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4288:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4288:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4270:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4270:6:7"
																},
																"nativeSrc": "4270:25:7",
																"nodeType": "YulFunctionCall",
																"src": "4270:25:7"
															},
															"nativeSrc": "4270:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "4270:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4315:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4315:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4326:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4326:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4311:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4311:3:7"
																		},
																		"nativeSrc": "4311:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4311:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4331:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4331:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4304:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4304:6:7"
																},
																"nativeSrc": "4304:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4304:34:7"
															},
															"nativeSrc": "4304:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4304:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4358:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4358:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4369:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4369:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4354:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4354:3:7"
																		},
																		"nativeSrc": "4354:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4354:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4374:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4374:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4347:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4347:6:7"
																},
																"nativeSrc": "4347:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4347:34:7"
															},
															"nativeSrc": "4347:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4347:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4401:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4401:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4412:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4412:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4397:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4397:3:7"
																		},
																		"nativeSrc": "4397:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4397:18:7"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "4417:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4417:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4390:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4390:6:7"
																},
																"nativeSrc": "4390:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4390:34:7"
															},
															"nativeSrc": "4390:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4390:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4039:391:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4169:9:7",
														"nodeType": "YulTypedName",
														"src": "4169:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4180:6:7",
														"nodeType": "YulTypedName",
														"src": "4180:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4188:6:7",
														"nodeType": "YulTypedName",
														"src": "4188:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4196:6:7",
														"nodeType": "YulTypedName",
														"src": "4196:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4204:6:7",
														"nodeType": "YulTypedName",
														"src": "4204:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4215:4:7",
														"nodeType": "YulTypedName",
														"src": "4215:4:7",
														"type": ""
													}
												],
												"src": "4039:391:7"
											},
											{
												"body": {
													"nativeSrc": "4481:114:7",
													"nodeType": "YulBlock",
													"src": "4481:114:7",
													"statements": [
														{
															"nativeSrc": "4491:29:7",
															"nodeType": "YulAssignment",
															"src": "4491:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4513:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4513:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4500:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4500:12:7"
																},
																"nativeSrc": "4500:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4500:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4491:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4491:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4573:16:7",
																"nodeType": "YulBlock",
																"src": "4573:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4582:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4582:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4585:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4585:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4575:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4575:6:7"
																			},
																			"nativeSrc": "4575:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4575:12:7"
																		},
																		"nativeSrc": "4575:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4575:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4542:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4542:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4563:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "4563:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4556:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4556:6:7"
																						},
																						"nativeSrc": "4556:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4556:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4549:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4549:6:7"
																				},
																				"nativeSrc": "4549:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4549:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4539:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4539:2:7"
																		},
																		"nativeSrc": "4539:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4539:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4532:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4532:6:7"
																},
																"nativeSrc": "4532:40:7",
																"nodeType": "YulFunctionCall",
																"src": "4532:40:7"
															},
															"nativeSrc": "4529:60:7",
															"nodeType": "YulIf",
															"src": "4529:60:7"
														}
													]
												},
												"name": "abi_decode_bool",
												"nativeSrc": "4435:160:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4460:6:7",
														"nodeType": "YulTypedName",
														"src": "4460:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4471:5:7",
														"nodeType": "YulTypedName",
														"src": "4471:5:7",
														"type": ""
													}
												],
												"src": "4435:160:7"
											},
											{
												"body": {
													"nativeSrc": "4684:231:7",
													"nodeType": "YulBlock",
													"src": "4684:231:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4730:16:7",
																"nodeType": "YulBlock",
																"src": "4730:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4739:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4739:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4742:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4742:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4732:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4732:6:7"
																			},
																			"nativeSrc": "4732:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4732:12:7"
																		},
																		"nativeSrc": "4732:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4732:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4705:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4705:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4714:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4714:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4701:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4701:3:7"
																		},
																		"nativeSrc": "4701:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4701:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4726:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4697:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4697:3:7"
																},
																"nativeSrc": "4697:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4697:32:7"
															},
															"nativeSrc": "4694:52:7",
															"nodeType": "YulIf",
															"src": "4694:52:7"
														},
														{
															"nativeSrc": "4755:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4755:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4781:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4781:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4768:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4768:12:7"
																},
																"nativeSrc": "4768:23:7",
																"nodeType": "YulFunctionCall",
																"src": "4768:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4759:5:7",
																	"nodeType": "YulTypedName",
																	"src": "4759:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4825:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4825:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4800:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "4800:24:7"
																},
																"nativeSrc": "4800:31:7",
																"nodeType": "YulFunctionCall",
																"src": "4800:31:7"
															},
															"nativeSrc": "4800:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "4800:31:7"
														},
														{
															"nativeSrc": "4840:15:7",
															"nodeType": "YulAssignment",
															"src": "4840:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "4850:5:7",
																"nodeType": "YulIdentifier",
																"src": "4850:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4840:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4840:6:7"
																}
															]
														},
														{
															"nativeSrc": "4864:45:7",
															"nodeType": "YulAssignment",
															"src": "4864:45:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4894:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4894:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4905:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4905:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4890:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4890:3:7"
																		},
																		"nativeSrc": "4890:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4890:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "4874:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "4874:15:7"
																},
																"nativeSrc": "4874:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4874:35:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4864:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "4600:315:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4642:9:7",
														"nodeType": "YulTypedName",
														"src": "4642:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4653:7:7",
														"nodeType": "YulTypedName",
														"src": "4653:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4665:6:7",
														"nodeType": "YulTypedName",
														"src": "4665:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4673:6:7",
														"nodeType": "YulTypedName",
														"src": "4673:6:7",
														"type": ""
													}
												],
												"src": "4600:315:7"
											},
											{
												"body": {
													"nativeSrc": "5119:295:7",
													"nodeType": "YulBlock",
													"src": "5119:295:7",
													"statements": [
														{
															"nativeSrc": "5129:27:7",
															"nodeType": "YulAssignment",
															"src": "5129:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5141:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5141:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5152:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5152:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5137:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5137:3:7"
																},
																"nativeSrc": "5137:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5137:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5129:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5129:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5172:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5172:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "5197:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5197:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5190:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5190:6:7"
																				},
																				"nativeSrc": "5190:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5190:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5183:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5183:6:7"
																		},
																		"nativeSrc": "5183:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5165:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5165:6:7"
																},
																"nativeSrc": "5165:41:7",
																"nodeType": "YulFunctionCall",
																"src": "5165:41:7"
															},
															"nativeSrc": "5165:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "5165:41:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5226:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5226:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5237:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5237:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5222:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5222:3:7"
																		},
																		"nativeSrc": "5222:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5222:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5246:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5246:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5254:6:7",
																				"nodeType": "YulLiteral",
																				"src": "5254:6:7",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5242:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5242:3:7"
																		},
																		"nativeSrc": "5242:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5242:19:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5215:6:7"
																},
																"nativeSrc": "5215:47:7",
																"nodeType": "YulFunctionCall",
																"src": "5215:47:7"
															},
															"nativeSrc": "5215:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "5215:47:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5282:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5282:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5293:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5293:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5278:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5278:3:7"
																		},
																		"nativeSrc": "5278:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5278:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5298:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5298:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5271:6:7"
																},
																"nativeSrc": "5271:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5271:34:7"
															},
															"nativeSrc": "5271:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5271:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5325:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5325:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5336:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5336:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5321:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5321:3:7"
																		},
																		"nativeSrc": "5321:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5321:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nativeSrc": "5355:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5355:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5348:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5348:6:7"
																				},
																				"nativeSrc": "5348:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5348:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5341:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5341:6:7"
																		},
																		"nativeSrc": "5341:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5341:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5314:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5314:6:7"
																},
																"nativeSrc": "5314:50:7",
																"nodeType": "YulFunctionCall",
																"src": "5314:50:7"
															},
															"nativeSrc": "5314:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "5314:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5384:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5395:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5395:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5380:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5380:3:7"
																		},
																		"nativeSrc": "5380:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5380:19:7"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "5401:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5401:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5373:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5373:6:7"
																},
																"nativeSrc": "5373:35:7",
																"nodeType": "YulFunctionCall",
																"src": "5373:35:7"
															},
															"nativeSrc": "5373:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "5373:35:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint16_t_uint256_t_bool_t_uint256__to_t_bool_t_uint16_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "4920:494:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5056:9:7",
														"nodeType": "YulTypedName",
														"src": "5056:9:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5067:6:7",
														"nodeType": "YulTypedName",
														"src": "5067:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5075:6:7",
														"nodeType": "YulTypedName",
														"src": "5075:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5083:6:7",
														"nodeType": "YulTypedName",
														"src": "5083:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5091:6:7",
														"nodeType": "YulTypedName",
														"src": "5091:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5099:6:7",
														"nodeType": "YulTypedName",
														"src": "5099:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5110:4:7",
														"nodeType": "YulTypedName",
														"src": "5110:4:7",
														"type": ""
													}
												],
												"src": "4920:494:7"
											},
											{
												"body": {
													"nativeSrc": "5506:301:7",
													"nodeType": "YulBlock",
													"src": "5506:301:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5552:16:7",
																"nodeType": "YulBlock",
																"src": "5552:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5561:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5561:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5564:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5564:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5554:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5554:6:7"
																			},
																			"nativeSrc": "5554:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5554:12:7"
																		},
																		"nativeSrc": "5554:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5554:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5527:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5527:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5536:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5536:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5523:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5523:3:7"
																		},
																		"nativeSrc": "5523:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5523:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5519:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5519:3:7"
																},
																"nativeSrc": "5519:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5519:32:7"
															},
															"nativeSrc": "5516:52:7",
															"nodeType": "YulIf",
															"src": "5516:52:7"
														},
														{
															"nativeSrc": "5577:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5577:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5603:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5603:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5590:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5590:12:7"
																},
																"nativeSrc": "5590:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5590:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5581:5:7",
																	"nodeType": "YulTypedName",
																	"src": "5581:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5647:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5647:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5622:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "5622:24:7"
																},
																"nativeSrc": "5622:31:7",
																"nodeType": "YulFunctionCall",
																"src": "5622:31:7"
															},
															"nativeSrc": "5622:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "5622:31:7"
														},
														{
															"nativeSrc": "5662:15:7",
															"nodeType": "YulAssignment",
															"src": "5662:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "5672:5:7",
																"nodeType": "YulIdentifier",
																"src": "5672:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5662:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5662:6:7"
																}
															]
														},
														{
															"nativeSrc": "5686:47:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5686:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5718:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5718:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5729:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5729:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5714:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5714:3:7"
																		},
																		"nativeSrc": "5714:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5714:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5701:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5701:12:7"
																},
																"nativeSrc": "5701:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5701:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "5690:7:7",
																	"nodeType": "YulTypedName",
																	"src": "5690:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "5767:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "5767:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5742:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "5742:24:7"
																},
																"nativeSrc": "5742:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5742:33:7"
															},
															"nativeSrc": "5742:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "5742:33:7"
														},
														{
															"nativeSrc": "5784:17:7",
															"nodeType": "YulAssignment",
															"src": "5784:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "5794:7:7",
																"nodeType": "YulIdentifier",
																"src": "5794:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5784:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5784:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5419:388:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5464:9:7",
														"nodeType": "YulTypedName",
														"src": "5464:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5475:7:7",
														"nodeType": "YulTypedName",
														"src": "5475:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5487:6:7",
														"nodeType": "YulTypedName",
														"src": "5487:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5495:6:7",
														"nodeType": "YulTypedName",
														"src": "5495:6:7",
														"type": ""
													}
												],
												"src": "5419:388:7"
											},
											{
												"body": {
													"nativeSrc": "5895:169:7",
													"nodeType": "YulBlock",
													"src": "5895:169:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5941:16:7",
																"nodeType": "YulBlock",
																"src": "5941:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5950:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5950:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5953:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5953:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5943:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5943:6:7"
																			},
																			"nativeSrc": "5943:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5943:12:7"
																		},
																		"nativeSrc": "5943:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5943:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5916:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5916:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5925:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5925:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5912:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5912:3:7"
																		},
																		"nativeSrc": "5912:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5912:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5937:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5937:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5908:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5908:3:7"
																},
																"nativeSrc": "5908:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5908:32:7"
															},
															"nativeSrc": "5905:52:7",
															"nodeType": "YulIf",
															"src": "5905:52:7"
														},
														{
															"nativeSrc": "5966:36:7",
															"nodeType": "YulAssignment",
															"src": "5966:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5992:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5992:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "5976:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "5976:15:7"
																},
																"nativeSrc": "5976:26:7",
																"nodeType": "YulFunctionCall",
																"src": "5976:26:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5966:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5966:6:7"
																}
															]
														},
														{
															"nativeSrc": "6011:47:7",
															"nodeType": "YulAssignment",
															"src": "6011:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6043:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6043:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6054:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6054:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6039:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6039:3:7"
																		},
																		"nativeSrc": "6039:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6039:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nativeSrc": "6021:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6021:17:7"
																},
																"nativeSrc": "6021:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6021:37:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6011:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint16",
												"nativeSrc": "5812:252:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5853:9:7",
														"nodeType": "YulTypedName",
														"src": "5853:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5864:7:7",
														"nodeType": "YulTypedName",
														"src": "5864:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5876:6:7",
														"nodeType": "YulTypedName",
														"src": "5876:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5884:6:7",
														"nodeType": "YulTypedName",
														"src": "5884:6:7",
														"type": ""
													}
												],
												"src": "5812:252:7"
											},
											{
												"body": {
													"nativeSrc": "6113:77:7",
													"nodeType": "YulBlock",
													"src": "6113:77:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6168:16:7",
																"nodeType": "YulBlock",
																"src": "6168:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6177:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6177:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6180:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6180:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6170:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6170:6:7"
																			},
																			"nativeSrc": "6170:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:12:7"
																		},
																		"nativeSrc": "6170:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6136:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6136:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6147:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6147:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6154:10:7",
																						"nodeType": "YulLiteral",
																						"src": "6154:10:7",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "6143:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6143:3:7"
																				},
																				"nativeSrc": "6143:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6143:22:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6133:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6133:2:7"
																		},
																		"nativeSrc": "6133:33:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6133:33:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6126:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6126:6:7"
																},
																"nativeSrc": "6126:41:7",
																"nodeType": "YulFunctionCall",
																"src": "6126:41:7"
															},
															"nativeSrc": "6123:61:7",
															"nodeType": "YulIf",
															"src": "6123:61:7"
														}
													]
												},
												"name": "validator_revert_uint32",
												"nativeSrc": "6069:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6102:5:7",
														"nodeType": "YulTypedName",
														"src": "6102:5:7",
														"type": ""
													}
												],
												"src": "6069:121:7"
											},
											{
												"body": {
													"nativeSrc": "6278:230:7",
													"nodeType": "YulBlock",
													"src": "6278:230:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6324:16:7",
																"nodeType": "YulBlock",
																"src": "6324:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6333:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6333:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6336:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6336:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6326:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6326:6:7"
																			},
																			"nativeSrc": "6326:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6326:12:7"
																		},
																		"nativeSrc": "6326:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6326:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6299:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6299:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6308:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6308:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6295:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6295:3:7"
																		},
																		"nativeSrc": "6295:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6295:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6320:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6320:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6291:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6291:3:7"
																},
																"nativeSrc": "6291:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6291:32:7"
															},
															"nativeSrc": "6288:52:7",
															"nodeType": "YulIf",
															"src": "6288:52:7"
														},
														{
															"nativeSrc": "6349:36:7",
															"nodeType": "YulAssignment",
															"src": "6349:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6375:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6375:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "6359:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "6359:15:7"
																},
																"nativeSrc": "6359:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6359:26:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6349:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6349:6:7"
																}
															]
														},
														{
															"nativeSrc": "6394:45:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6394:45:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6424:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6424:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6435:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6435:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6420:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6420:3:7"
																		},
																		"nativeSrc": "6420:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6420:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6407:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "6407:12:7"
																},
																"nativeSrc": "6407:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6407:32:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6398:5:7",
																	"nodeType": "YulTypedName",
																	"src": "6398:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6472:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6472:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint32",
																	"nativeSrc": "6448:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "6448:23:7"
																},
																"nativeSrc": "6448:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6448:30:7"
															},
															"nativeSrc": "6448:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6448:30:7"
														},
														{
															"nativeSrc": "6487:15:7",
															"nodeType": "YulAssignment",
															"src": "6487:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "6497:5:7",
																"nodeType": "YulIdentifier",
																"src": "6497:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6487:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6487:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint32",
												"nativeSrc": "6195:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6236:9:7",
														"nodeType": "YulTypedName",
														"src": "6236:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6247:7:7",
														"nodeType": "YulTypedName",
														"src": "6247:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6259:6:7",
														"nodeType": "YulTypedName",
														"src": "6259:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6267:6:7",
														"nodeType": "YulTypedName",
														"src": "6267:6:7",
														"type": ""
													}
												],
												"src": "6195:313:7"
											},
											{
												"body": {
													"nativeSrc": "6568:325:7",
													"nodeType": "YulBlock",
													"src": "6568:325:7",
													"statements": [
														{
															"nativeSrc": "6578:22:7",
															"nodeType": "YulAssignment",
															"src": "6578:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6592:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6592:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "6595:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6595:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6588:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6588:3:7"
																},
																"nativeSrc": "6588:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6588:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6578:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6578:6:7"
																}
															]
														},
														{
															"nativeSrc": "6609:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6609:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6639:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6639:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6645:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6645:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6635:3:7"
																},
																"nativeSrc": "6635:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6635:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6613:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6613:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6686:31:7",
																"nodeType": "YulBlock",
																"src": "6686:31:7",
																"statements": [
																	{
																		"nativeSrc": "6688:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6688:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6702:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6702:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6710:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6710:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6698:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6698:3:7"
																			},
																			"nativeSrc": "6698:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6698:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6688:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6688:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6666:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6666:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6659:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6659:6:7"
																},
																"nativeSrc": "6659:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6659:26:7"
															},
															"nativeSrc": "6656:61:7",
															"nodeType": "YulIf",
															"src": "6656:61:7"
														},
														{
															"body": {
																"nativeSrc": "6776:111:7",
																"nodeType": "YulBlock",
																"src": "6776:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6797:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6797:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6804:3:7",
																							"nodeType": "YulLiteral",
																							"src": "6804:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6809:10:7",
																							"nodeType": "YulLiteral",
																							"src": "6809:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6800:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6800:3:7"
																					},
																					"nativeSrc": "6800:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6800:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6790:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6790:6:7"
																			},
																			"nativeSrc": "6790:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6790:31:7"
																		},
																		"nativeSrc": "6790:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6790:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6841:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6841:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6844:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6844:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6834:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6834:6:7"
																			},
																			"nativeSrc": "6834:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6834:15:7"
																		},
																		"nativeSrc": "6834:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6834:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6869:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6869:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6872:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6872:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6862:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6862:6:7"
																			},
																			"nativeSrc": "6862:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6862:15:7"
																		},
																		"nativeSrc": "6862:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6862:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6732:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6732:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6755:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6755:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6763:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6763:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6752:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6752:2:7"
																		},
																		"nativeSrc": "6752:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6752:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6729:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6729:2:7"
																},
																"nativeSrc": "6729:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6729:38:7"
															},
															"nativeSrc": "6726:161:7",
															"nodeType": "YulIf",
															"src": "6726:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6513:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6548:4:7",
														"nodeType": "YulTypedName",
														"src": "6548:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6557:6:7",
														"nodeType": "YulTypedName",
														"src": "6557:6:7",
														"type": ""
													}
												],
												"src": "6513:380:7"
											},
											{
												"body": {
													"nativeSrc": "6930:95:7",
													"nodeType": "YulBlock",
													"src": "6930:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6954:3:7",
																				"nodeType": "YulLiteral",
																				"src": "6954:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6959:10:7",
																				"nodeType": "YulLiteral",
																				"src": "6959:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6950:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6950:3:7"
																		},
																		"nativeSrc": "6950:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6950:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6940:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:7"
																},
																"nativeSrc": "6940:31:7",
																"nodeType": "YulFunctionCall",
																"src": "6940:31:7"
															},
															"nativeSrc": "6940:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "6940:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6987:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6987:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6990:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6990:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6980:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6980:6:7"
																},
																"nativeSrc": "6980:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6980:15:7"
															},
															"nativeSrc": "6980:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6980:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7011:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7011:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7014:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7014:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7004:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7004:6:7"
																},
																"nativeSrc": "7004:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7004:15:7"
															},
															"nativeSrc": "7004:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7004:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6898:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6898:127:7"
											},
											{
												"body": {
													"nativeSrc": "7077:121:7",
													"nodeType": "YulBlock",
													"src": "7077:121:7",
													"statements": [
														{
															"nativeSrc": "7087:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7087:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "7097:6:7",
																"nodeType": "YulLiteral",
																"src": "7097:6:7",
																"type": "",
																"value": "0xffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7091:2:7",
																	"nodeType": "YulTypedName",
																	"src": "7091:2:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7112:34:7",
															"nodeType": "YulAssignment",
															"src": "7112:34:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "7127:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "7127:1:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7130:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7130:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7123:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7123:3:7"
																		},
																		"nativeSrc": "7123:10:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7123:10:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "7139:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "7139:1:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7142:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7142:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7135:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7135:3:7"
																		},
																		"nativeSrc": "7135:10:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7135:10:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7119:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7119:3:7"
																},
																"nativeSrc": "7119:27:7",
																"nodeType": "YulFunctionCall",
																"src": "7119:27:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7112:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7112:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7170:22:7",
																"nodeType": "YulBlock",
																"src": "7170:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7172:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7172:16:7"
																			},
																			"nativeSrc": "7172:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7172:18:7"
																		},
																		"nativeSrc": "7172:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7172:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "7161:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7161:3:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "7166:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "7166:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7158:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7158:2:7"
																},
																"nativeSrc": "7158:11:7",
																"nodeType": "YulFunctionCall",
																"src": "7158:11:7"
															},
															"nativeSrc": "7155:37:7",
															"nodeType": "YulIf",
															"src": "7155:37:7"
														}
													]
												},
												"name": "checked_add_t_uint16",
												"nativeSrc": "7030:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7060:1:7",
														"nodeType": "YulTypedName",
														"src": "7060:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7063:1:7",
														"nodeType": "YulTypedName",
														"src": "7063:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7069:3:7",
														"nodeType": "YulTypedName",
														"src": "7069:3:7",
														"type": ""
													}
												],
												"src": "7030:168:7"
											},
											{
												"body": {
													"nativeSrc": "7377:165:7",
													"nodeType": "YulBlock",
													"src": "7377:165:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7394:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7394:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7405:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7405:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7387:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7387:6:7"
																},
																"nativeSrc": "7387:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7387:21:7"
															},
															"nativeSrc": "7387:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "7387:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7428:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7428:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7439:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7439:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7424:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7424:3:7"
																		},
																		"nativeSrc": "7424:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7444:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7444:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7417:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7417:6:7"
																},
																"nativeSrc": "7417:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7417:30:7"
															},
															"nativeSrc": "7417:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7417:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7467:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7467:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7478:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7478:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7463:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7463:3:7"
																		},
																		"nativeSrc": "7463:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7463:18:7"
																	},
																	{
																		"hexValue": "4d6178203235252062757920746178",
																		"kind": "string",
																		"nativeSrc": "7483:17:7",
																		"nodeType": "YulLiteral",
																		"src": "7483:17:7",
																		"type": "",
																		"value": "Max 25% buy tax"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7456:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7456:6:7"
																},
																"nativeSrc": "7456:45:7",
																"nodeType": "YulFunctionCall",
																"src": "7456:45:7"
															},
															"nativeSrc": "7456:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "7456:45:7"
														},
														{
															"nativeSrc": "7510:26:7",
															"nodeType": "YulAssignment",
															"src": "7510:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7522:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7522:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7533:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7533:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7518:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7518:3:7"
																},
																"nativeSrc": "7518:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7518:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7510:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7510:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f090d1c11271f3393ea5511251471fa61f5244fcb411caac2ee82afbeeb3c955__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7203:339:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7354:9:7",
														"nodeType": "YulTypedName",
														"src": "7354:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7368:4:7",
														"nodeType": "YulTypedName",
														"src": "7368:4:7",
														"type": ""
													}
												],
												"src": "7203:339:7"
											},
											{
												"body": {
													"nativeSrc": "7721:166:7",
													"nodeType": "YulBlock",
													"src": "7721:166:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7738:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7738:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7749:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7749:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7731:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7731:6:7"
																},
																"nativeSrc": "7731:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7731:21:7"
															},
															"nativeSrc": "7731:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "7731:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7772:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7772:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7783:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7783:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7768:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7768:3:7"
																		},
																		"nativeSrc": "7768:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7768:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7788:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7761:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7761:6:7"
																},
																"nativeSrc": "7761:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7761:30:7"
															},
															"nativeSrc": "7761:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7761:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7811:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7811:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7822:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7822:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7807:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7807:3:7"
																		},
																		"nativeSrc": "7807:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7807:18:7"
																	},
																	{
																		"hexValue": "4d6178203235252073656c6c20746178",
																		"kind": "string",
																		"nativeSrc": "7827:18:7",
																		"nodeType": "YulLiteral",
																		"src": "7827:18:7",
																		"type": "",
																		"value": "Max 25% sell tax"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7800:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7800:6:7"
																},
																"nativeSrc": "7800:46:7",
																"nodeType": "YulFunctionCall",
																"src": "7800:46:7"
															},
															"nativeSrc": "7800:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "7800:46:7"
														},
														{
															"nativeSrc": "7855:26:7",
															"nodeType": "YulAssignment",
															"src": "7855:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7867:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7867:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7878:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7878:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7863:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7863:3:7"
																},
																"nativeSrc": "7863:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7863:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7855:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7855:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a5b3d2ddd2421ad686f304be3d3015a2ee589ad9c652c040c54c8fbfedd016ba__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7547:340:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7698:9:7",
														"nodeType": "YulTypedName",
														"src": "7698:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7712:4:7",
														"nodeType": "YulTypedName",
														"src": "7712:4:7",
														"type": ""
													}
												],
												"src": "7547:340:7"
											},
											{
												"body": {
													"nativeSrc": "7940:77:7",
													"nodeType": "YulBlock",
													"src": "7940:77:7",
													"statements": [
														{
															"nativeSrc": "7950:16:7",
															"nodeType": "YulAssignment",
															"src": "7950:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7961:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7961:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7964:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7964:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7957:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7957:3:7"
																},
																"nativeSrc": "7957:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7957:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7950:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7950:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7989:22:7",
																"nodeType": "YulBlock",
																"src": "7989:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7991:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7991:16:7"
																			},
																			"nativeSrc": "7991:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7991:18:7"
																		},
																		"nativeSrc": "7991:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7991:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7981:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7981:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7984:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7984:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7978:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7978:2:7"
																},
																"nativeSrc": "7978:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7978:10:7"
															},
															"nativeSrc": "7975:36:7",
															"nodeType": "YulIf",
															"src": "7975:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7892:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7923:1:7",
														"nodeType": "YulTypedName",
														"src": "7923:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7926:1:7",
														"nodeType": "YulTypedName",
														"src": "7926:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7932:3:7",
														"nodeType": "YulTypedName",
														"src": "7932:3:7",
														"type": ""
													}
												],
												"src": "7892:125:7"
											},
											{
												"body": {
													"nativeSrc": "8065:93:7",
													"nodeType": "YulBlock",
													"src": "8065:93:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8101:22:7",
																"nodeType": "YulBlock",
																"src": "8101:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8103:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8103:16:7"
																			},
																			"nativeSrc": "8103:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8103:18:7"
																		},
																		"nativeSrc": "8103:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8103:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8081:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8081:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8092:3:7",
																				"nodeType": "YulLiteral",
																				"src": "8092:3:7",
																				"type": "",
																				"value": "255"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8097:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8097:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8088:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8088:3:7"
																		},
																		"nativeSrc": "8088:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8088:11:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8078:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8078:2:7"
																},
																"nativeSrc": "8078:22:7",
																"nodeType": "YulFunctionCall",
																"src": "8078:22:7"
															},
															"nativeSrc": "8075:48:7",
															"nodeType": "YulIf",
															"src": "8075:48:7"
														},
														{
															"nativeSrc": "8132:20:7",
															"nodeType": "YulAssignment",
															"src": "8132:20:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8143:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8143:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8146:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8146:5:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8139:3:7"
																},
																"nativeSrc": "8139:13:7",
																"nodeType": "YulFunctionCall",
																"src": "8139:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8132:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8132:3:7"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nativeSrc": "8022:136:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8047:5:7",
														"nodeType": "YulTypedName",
														"src": "8047:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8057:3:7",
														"nodeType": "YulTypedName",
														"src": "8057:3:7",
														"type": ""
													}
												],
												"src": "8022:136:7"
											},
											{
												"body": {
													"nativeSrc": "8337:169:7",
													"nodeType": "YulBlock",
													"src": "8337:169:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8354:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8354:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8365:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8365:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8347:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8347:6:7"
																},
																"nativeSrc": "8347:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8347:21:7"
															},
															"nativeSrc": "8347:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "8347:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8388:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8388:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8399:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8399:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8384:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8384:3:7"
																		},
																		"nativeSrc": "8384:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8384:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8404:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8404:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8377:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8377:6:7"
																},
																"nativeSrc": "8377:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8377:30:7"
															},
															"nativeSrc": "8377:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "8377:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8427:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8427:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8438:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8438:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8423:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8423:3:7"
																		},
																		"nativeSrc": "8423:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8423:18:7"
																	},
																	{
																		"hexValue": "4d61782031252077616c6c6574206c696d6974",
																		"kind": "string",
																		"nativeSrc": "8443:21:7",
																		"nodeType": "YulLiteral",
																		"src": "8443:21:7",
																		"type": "",
																		"value": "Max 1% wallet limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8416:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8416:6:7"
																},
																"nativeSrc": "8416:49:7",
																"nodeType": "YulFunctionCall",
																"src": "8416:49:7"
															},
															"nativeSrc": "8416:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "8416:49:7"
														},
														{
															"nativeSrc": "8474:26:7",
															"nodeType": "YulAssignment",
															"src": "8474:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8486:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8486:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8497:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8497:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8482:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8482:3:7"
																},
																"nativeSrc": "8482:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8482:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8474:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8474:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_16a37e5ef25bc279f87ddedf10d3060d884d4b4915de8aaf5d2288b066e1e24b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8163:343:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8314:9:7",
														"nodeType": "YulTypedName",
														"src": "8314:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8328:4:7",
														"nodeType": "YulTypedName",
														"src": "8328:4:7",
														"type": ""
													}
												],
												"src": "8163:343:7"
											},
											{
												"body": {
													"nativeSrc": "8571:128:7",
													"nodeType": "YulBlock",
													"src": "8571:128:7",
													"statements": [
														{
															"nativeSrc": "8581:22:7",
															"nodeType": "YulAssignment",
															"src": "8581:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8596:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8596:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8590:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8590:5:7"
																},
																"nativeSrc": "8590:13:7",
																"nodeType": "YulFunctionCall",
																"src": "8590:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8581:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8581:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8677:16:7",
																"nodeType": "YulBlock",
																"src": "8677:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8686:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8686:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8689:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8689:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8679:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8679:6:7"
																			},
																			"nativeSrc": "8679:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8679:12:7"
																		},
																		"nativeSrc": "8679:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8679:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8625:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8625:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8636:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8636:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8643:30:7",
																						"nodeType": "YulLiteral",
																						"src": "8643:30:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "8632:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8632:3:7"
																				},
																				"nativeSrc": "8632:42:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8632:42:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8622:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8622:2:7"
																		},
																		"nativeSrc": "8622:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8622:53:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8615:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8615:6:7"
																},
																"nativeSrc": "8615:61:7",
																"nodeType": "YulFunctionCall",
																"src": "8615:61:7"
															},
															"nativeSrc": "8612:81:7",
															"nodeType": "YulIf",
															"src": "8612:81:7"
														}
													]
												},
												"name": "abi_decode_uint112_fromMemory",
												"nativeSrc": "8511:188:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8550:6:7",
														"nodeType": "YulTypedName",
														"src": "8550:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8561:5:7",
														"nodeType": "YulTypedName",
														"src": "8561:5:7",
														"type": ""
													}
												],
												"src": "8511:188:7"
											},
											{
												"body": {
													"nativeSrc": "8818:305:7",
													"nodeType": "YulBlock",
													"src": "8818:305:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8864:16:7",
																"nodeType": "YulBlock",
																"src": "8864:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8873:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8873:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8876:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8876:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8866:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8866:6:7"
																			},
																			"nativeSrc": "8866:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8866:12:7"
																		},
																		"nativeSrc": "8866:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8866:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8839:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8839:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8848:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8848:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8835:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8835:3:7"
																		},
																		"nativeSrc": "8835:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8835:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8860:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8860:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8831:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8831:3:7"
																},
																"nativeSrc": "8831:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8831:32:7"
															},
															"nativeSrc": "8828:52:7",
															"nodeType": "YulIf",
															"src": "8828:52:7"
														},
														{
															"nativeSrc": "8889:50:7",
															"nodeType": "YulAssignment",
															"src": "8889:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8929:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8929:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint112_fromMemory",
																	"nativeSrc": "8899:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "8899:29:7"
																},
																"nativeSrc": "8899:40:7",
																"nodeType": "YulFunctionCall",
																"src": "8899:40:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8889:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8889:6:7"
																}
															]
														},
														{
															"nativeSrc": "8948:59:7",
															"nodeType": "YulAssignment",
															"src": "8948:59:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8992:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8992:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9003:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9003:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8988:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8988:3:7"
																		},
																		"nativeSrc": "8988:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8988:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint112_fromMemory",
																	"nativeSrc": "8958:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "8958:29:7"
																},
																"nativeSrc": "8958:49:7",
																"nodeType": "YulFunctionCall",
																"src": "8958:49:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8948:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8948:6:7"
																}
															]
														},
														{
															"nativeSrc": "9016:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9016:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9039:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9039:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9050:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9050:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9035:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9035:3:7"
																		},
																		"nativeSrc": "9035:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9035:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9029:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9029:5:7"
																},
																"nativeSrc": "9029:25:7",
																"nodeType": "YulFunctionCall",
																"src": "9029:25:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9020:5:7",
																	"nodeType": "YulTypedName",
																	"src": "9020:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9087:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9087:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint32",
																	"nativeSrc": "9063:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "9063:23:7"
																},
																"nativeSrc": "9063:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9063:30:7"
															},
															"nativeSrc": "9063:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9063:30:7"
														},
														{
															"nativeSrc": "9102:15:7",
															"nodeType": "YulAssignment",
															"src": "9102:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "9112:5:7",
																"nodeType": "YulIdentifier",
																"src": "9112:5:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "9102:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9102:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
												"nativeSrc": "8704:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8768:9:7",
														"nodeType": "YulTypedName",
														"src": "8768:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8779:7:7",
														"nodeType": "YulTypedName",
														"src": "8779:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8791:6:7",
														"nodeType": "YulTypedName",
														"src": "8791:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8799:6:7",
														"nodeType": "YulTypedName",
														"src": "8799:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8807:6:7",
														"nodeType": "YulTypedName",
														"src": "8807:6:7",
														"type": ""
													}
												],
												"src": "8704:419:7"
											},
											{
												"body": {
													"nativeSrc": "9209:170:7",
													"nodeType": "YulBlock",
													"src": "9209:170:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9255:16:7",
																"nodeType": "YulBlock",
																"src": "9255:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9264:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9264:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9267:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9267:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9257:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9257:6:7"
																			},
																			"nativeSrc": "9257:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9257:12:7"
																		},
																		"nativeSrc": "9257:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9257:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9230:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9230:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9239:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9239:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9226:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9226:3:7"
																		},
																		"nativeSrc": "9226:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9226:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9251:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9251:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9222:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9222:3:7"
																},
																"nativeSrc": "9222:32:7",
																"nodeType": "YulFunctionCall",
																"src": "9222:32:7"
															},
															"nativeSrc": "9219:52:7",
															"nodeType": "YulIf",
															"src": "9219:52:7"
														},
														{
															"nativeSrc": "9280:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9280:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9299:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9299:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9293:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9293:5:7"
																},
																"nativeSrc": "9293:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9293:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9284:5:7",
																	"nodeType": "YulTypedName",
																	"src": "9284:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9343:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9343:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "9318:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "9318:24:7"
																},
																"nativeSrc": "9318:31:7",
																"nodeType": "YulFunctionCall",
																"src": "9318:31:7"
															},
															"nativeSrc": "9318:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "9318:31:7"
														},
														{
															"nativeSrc": "9358:15:7",
															"nodeType": "YulAssignment",
															"src": "9358:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "9368:5:7",
																"nodeType": "YulIdentifier",
																"src": "9368:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9358:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9358:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "9128:251:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9175:9:7",
														"nodeType": "YulTypedName",
														"src": "9175:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9186:7:7",
														"nodeType": "YulTypedName",
														"src": "9186:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9198:6:7",
														"nodeType": "YulTypedName",
														"src": "9198:6:7",
														"type": ""
													}
												],
												"src": "9128:251:7"
											},
											{
												"body": {
													"nativeSrc": "9416:95:7",
													"nodeType": "YulBlock",
													"src": "9416:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9433:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9433:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9440:3:7",
																				"nodeType": "YulLiteral",
																				"src": "9440:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9445:10:7",
																				"nodeType": "YulLiteral",
																				"src": "9445:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9436:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9436:3:7"
																		},
																		"nativeSrc": "9436:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9436:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9426:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9426:6:7"
																},
																"nativeSrc": "9426:31:7",
																"nodeType": "YulFunctionCall",
																"src": "9426:31:7"
															},
															"nativeSrc": "9426:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "9426:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9473:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9473:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9476:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9476:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9466:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9466:6:7"
																},
																"nativeSrc": "9466:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9466:15:7"
															},
															"nativeSrc": "9466:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9466:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9497:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9497:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9500:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9500:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9490:6:7"
																},
																"nativeSrc": "9490:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9490:15:7"
															},
															"nativeSrc": "9490:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9490:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9384:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9384:127:7"
											},
											{
												"body": {
													"nativeSrc": "9554:74:7",
													"nodeType": "YulBlock",
													"src": "9554:74:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9577:22:7",
																"nodeType": "YulBlock",
																"src": "9577:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9579:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9579:16:7"
																			},
																			"nativeSrc": "9579:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9579:18:7"
																		},
																		"nativeSrc": "9579:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9579:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9574:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9574:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9567:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9567:6:7"
																},
																"nativeSrc": "9567:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9567:9:7"
															},
															"nativeSrc": "9564:35:7",
															"nodeType": "YulIf",
															"src": "9564:35:7"
														},
														{
															"nativeSrc": "9608:14:7",
															"nodeType": "YulAssignment",
															"src": "9608:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9617:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9617:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9620:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9620:1:7"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "9613:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9613:3:7"
																},
																"nativeSrc": "9613:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9613:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9608:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9608:1:7"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "9516:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9539:1:7",
														"nodeType": "YulTypedName",
														"src": "9539:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9542:1:7",
														"nodeType": "YulTypedName",
														"src": "9542:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9548:1:7",
														"nodeType": "YulTypedName",
														"src": "9548:1:7",
														"type": ""
													}
												],
												"src": "9516:112:7"
											},
											{
												"body": {
													"nativeSrc": "9807:227:7",
													"nodeType": "YulBlock",
													"src": "9807:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9824:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9824:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9835:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9835:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9817:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9817:6:7"
																},
																"nativeSrc": "9817:21:7",
																"nodeType": "YulFunctionCall",
																"src": "9817:21:7"
															},
															"nativeSrc": "9817:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "9817:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9858:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9858:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9869:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9869:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9854:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9854:3:7"
																		},
																		"nativeSrc": "9854:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9854:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9874:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9874:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9847:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9847:6:7"
																},
																"nativeSrc": "9847:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9847:30:7"
															},
															"nativeSrc": "9847:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9847:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9897:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9897:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9908:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9908:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9893:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9893:3:7"
																		},
																		"nativeSrc": "9893:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9893:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "9913:34:7",
																		"nodeType": "YulLiteral",
																		"src": "9913:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9886:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9886:6:7"
																},
																"nativeSrc": "9886:62:7",
																"nodeType": "YulFunctionCall",
																"src": "9886:62:7"
															},
															"nativeSrc": "9886:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "9886:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9968:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9968:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9979:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9979:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9964:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9964:3:7"
																		},
																		"nativeSrc": "9964:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9964:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "9984:7:7",
																		"nodeType": "YulLiteral",
																		"src": "9984:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9957:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9957:6:7"
																},
																"nativeSrc": "9957:35:7",
																"nodeType": "YulFunctionCall",
																"src": "9957:35:7"
															},
															"nativeSrc": "9957:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "9957:35:7"
														},
														{
															"nativeSrc": "10001:27:7",
															"nodeType": "YulAssignment",
															"src": "10001:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10013:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10013:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10024:3:7",
																		"nodeType": "YulLiteral",
																		"src": "10024:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10009:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10009:3:7"
																},
																"nativeSrc": "10009:19:7",
																"nodeType": "YulFunctionCall",
																"src": "10009:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10001:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10001:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9633:401:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9784:9:7",
														"nodeType": "YulTypedName",
														"src": "9784:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9798:4:7",
														"nodeType": "YulTypedName",
														"src": "9798:4:7",
														"type": ""
													}
												],
												"src": "9633:401:7"
											},
											{
												"body": {
													"nativeSrc": "10213:228:7",
													"nodeType": "YulBlock",
													"src": "10213:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10230:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10230:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10241:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10241:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10223:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10223:6:7"
																},
																"nativeSrc": "10223:21:7",
																"nodeType": "YulFunctionCall",
																"src": "10223:21:7"
															},
															"nativeSrc": "10223:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "10223:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10264:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10264:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10275:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10275:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10260:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10260:3:7"
																		},
																		"nativeSrc": "10260:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10260:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10280:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10280:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10253:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10253:6:7"
																},
																"nativeSrc": "10253:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10253:30:7"
															},
															"nativeSrc": "10253:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "10253:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10303:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10303:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10314:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10314:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10299:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10299:3:7"
																		},
																		"nativeSrc": "10299:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10299:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "10319:34:7",
																		"nodeType": "YulLiteral",
																		"src": "10319:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10292:6:7"
																},
																"nativeSrc": "10292:62:7",
																"nodeType": "YulFunctionCall",
																"src": "10292:62:7"
															},
															"nativeSrc": "10292:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "10292:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10374:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10374:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10385:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10385:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10370:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10370:3:7"
																		},
																		"nativeSrc": "10370:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10370:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "10390:8:7",
																		"nodeType": "YulLiteral",
																		"src": "10390:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10363:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10363:6:7"
																},
																"nativeSrc": "10363:36:7",
																"nodeType": "YulFunctionCall",
																"src": "10363:36:7"
															},
															"nativeSrc": "10363:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "10363:36:7"
														},
														{
															"nativeSrc": "10408:27:7",
															"nodeType": "YulAssignment",
															"src": "10408:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10420:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10420:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10431:3:7",
																		"nodeType": "YulLiteral",
																		"src": "10431:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10416:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10416:3:7"
																},
																"nativeSrc": "10416:19:7",
																"nodeType": "YulFunctionCall",
																"src": "10416:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10408:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10408:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10039:402:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10190:9:7",
														"nodeType": "YulTypedName",
														"src": "10190:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10204:4:7",
														"nodeType": "YulTypedName",
														"src": "10204:4:7",
														"type": ""
													}
												],
												"src": "10039:402:7"
											},
											{
												"body": {
													"nativeSrc": "10620:168:7",
													"nodeType": "YulBlock",
													"src": "10620:168:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10637:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10637:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10648:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10648:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10630:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:7"
																},
																"nativeSrc": "10630:21:7",
																"nodeType": "YulFunctionCall",
																"src": "10630:21:7"
															},
															"nativeSrc": "10630:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "10630:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10671:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10671:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10682:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10682:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10667:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10667:3:7"
																		},
																		"nativeSrc": "10667:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10667:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10687:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10687:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10660:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10660:6:7"
																},
																"nativeSrc": "10660:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10660:30:7"
															},
															"nativeSrc": "10660:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "10660:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10710:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10710:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10721:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10721:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10706:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10706:3:7"
																		},
																		"nativeSrc": "10706:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10706:18:7"
																	},
																	{
																		"hexValue": "496e76616c69642070657263656e74616765",
																		"kind": "string",
																		"nativeSrc": "10726:20:7",
																		"nodeType": "YulLiteral",
																		"src": "10726:20:7",
																		"type": "",
																		"value": "Invalid percentage"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10699:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10699:6:7"
																},
																"nativeSrc": "10699:48:7",
																"nodeType": "YulFunctionCall",
																"src": "10699:48:7"
															},
															"nativeSrc": "10699:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "10699:48:7"
														},
														{
															"nativeSrc": "10756:26:7",
															"nodeType": "YulAssignment",
															"src": "10756:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10768:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10768:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10779:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10779:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10764:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10764:3:7"
																},
																"nativeSrc": "10764:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10764:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10756:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10756:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10446:342:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10597:9:7",
														"nodeType": "YulTypedName",
														"src": "10597:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10611:4:7",
														"nodeType": "YulTypedName",
														"src": "10611:4:7",
														"type": ""
													}
												],
												"src": "10446:342:7"
											},
											{
												"body": {
													"nativeSrc": "10844:198:7",
													"nodeType": "YulBlock",
													"src": "10844:198:7",
													"statements": [
														{
															"nativeSrc": "10854:20:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10854:20:7",
															"value": {
																"kind": "number",
																"nativeSrc": "10864:10:7",
																"nodeType": "YulLiteral",
																"src": "10864:10:7",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10858:2:7",
																	"nodeType": "YulTypedName",
																	"src": "10858:2:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10883:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10883:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "10910:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "10910:1:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10913:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "10913:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10906:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10906:3:7"
																		},
																		"nativeSrc": "10906:10:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10906:10:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "10922:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "10922:1:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10925:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "10925:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10918:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10918:3:7"
																		},
																		"nativeSrc": "10918:10:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10918:10:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10902:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10902:3:7"
																},
																"nativeSrc": "10902:27:7",
																"nodeType": "YulFunctionCall",
																"src": "10902:27:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10887:11:7",
																	"nodeType": "YulTypedName",
																	"src": "10887:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10938:31:7",
															"nodeType": "YulAssignment",
															"src": "10938:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10953:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "10953:11:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "10966:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "10966:2:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10949:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10949:3:7"
																},
																"nativeSrc": "10949:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10949:20:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10938:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "10938:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11014:22:7",
																"nodeType": "YulBlock",
																"src": "11014:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11016:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11016:16:7"
																			},
																			"nativeSrc": "11016:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11016:18:7"
																		},
																		"nativeSrc": "11016:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11016:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nativeSrc": "10991:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10991:7:7"
																			},
																			{
																				"name": "product_raw",
																				"nativeSrc": "11000:11:7",
																				"nodeType": "YulIdentifier",
																				"src": "11000:11:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10988:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10988:2:7"
																		},
																		"nativeSrc": "10988:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10988:24:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10981:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10981:6:7"
																},
																"nativeSrc": "10981:32:7",
																"nodeType": "YulFunctionCall",
																"src": "10981:32:7"
															},
															"nativeSrc": "10978:58:7",
															"nodeType": "YulIf",
															"src": "10978:58:7"
														}
													]
												},
												"name": "checked_mul_t_uint32",
												"nativeSrc": "10793:249:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10823:1:7",
														"nodeType": "YulTypedName",
														"src": "10823:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10826:1:7",
														"nodeType": "YulTypedName",
														"src": "10826:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10832:7:7",
														"nodeType": "YulTypedName",
														"src": "10832:7:7",
														"type": ""
													}
												],
												"src": "10793:249:7"
											},
											{
												"body": {
													"nativeSrc": "11221:226:7",
													"nodeType": "YulBlock",
													"src": "11221:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11238:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11238:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11249:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11249:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11231:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11231:6:7"
																},
																"nativeSrc": "11231:21:7",
																"nodeType": "YulFunctionCall",
																"src": "11231:21:7"
															},
															"nativeSrc": "11231:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "11231:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11272:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11272:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11283:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11283:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11268:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11268:3:7"
																		},
																		"nativeSrc": "11268:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11268:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11288:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11288:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11261:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11261:6:7"
																},
																"nativeSrc": "11261:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11261:30:7"
															},
															"nativeSrc": "11261:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "11261:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11311:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11311:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11322:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11322:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11307:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11307:3:7"
																		},
																		"nativeSrc": "11307:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11307:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "11327:34:7",
																		"nodeType": "YulLiteral",
																		"src": "11327:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11300:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11300:6:7"
																},
																"nativeSrc": "11300:62:7",
																"nodeType": "YulFunctionCall",
																"src": "11300:62:7"
															},
															"nativeSrc": "11300:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "11300:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11382:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11382:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11393:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11393:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11378:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11378:3:7"
																		},
																		"nativeSrc": "11378:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11378:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "11398:6:7",
																		"nodeType": "YulLiteral",
																		"src": "11398:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11371:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11371:6:7"
																},
																"nativeSrc": "11371:34:7",
																"nodeType": "YulFunctionCall",
																"src": "11371:34:7"
															},
															"nativeSrc": "11371:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "11371:34:7"
														},
														{
															"nativeSrc": "11414:27:7",
															"nodeType": "YulAssignment",
															"src": "11414:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11426:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11426:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11437:3:7",
																		"nodeType": "YulLiteral",
																		"src": "11437:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11422:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11422:3:7"
																},
																"nativeSrc": "11422:19:7",
																"nodeType": "YulFunctionCall",
																"src": "11422:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11414:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11414:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11047:400:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11198:9:7",
														"nodeType": "YulTypedName",
														"src": "11198:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11212:4:7",
														"nodeType": "YulTypedName",
														"src": "11212:4:7",
														"type": ""
													}
												],
												"src": "11047:400:7"
											},
											{
												"body": {
													"nativeSrc": "11626:224:7",
													"nodeType": "YulBlock",
													"src": "11626:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11643:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11643:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11654:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11654:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11636:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11636:6:7"
																},
																"nativeSrc": "11636:21:7",
																"nodeType": "YulFunctionCall",
																"src": "11636:21:7"
															},
															"nativeSrc": "11636:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "11636:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11677:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11677:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11688:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11688:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11673:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11673:3:7"
																		},
																		"nativeSrc": "11673:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11673:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11693:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11693:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11666:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11666:6:7"
																},
																"nativeSrc": "11666:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11666:30:7"
															},
															"nativeSrc": "11666:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "11666:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11716:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11716:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11727:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11727:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11712:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11712:3:7"
																		},
																		"nativeSrc": "11712:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11712:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "11732:34:7",
																		"nodeType": "YulLiteral",
																		"src": "11732:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11705:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11705:6:7"
																},
																"nativeSrc": "11705:62:7",
																"nodeType": "YulFunctionCall",
																"src": "11705:62:7"
															},
															"nativeSrc": "11705:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "11705:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11787:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11787:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11798:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11798:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11783:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11783:3:7"
																		},
																		"nativeSrc": "11783:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11783:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "11803:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11803:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11776:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11776:6:7"
																},
																"nativeSrc": "11776:32:7",
																"nodeType": "YulFunctionCall",
																"src": "11776:32:7"
															},
															"nativeSrc": "11776:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "11776:32:7"
														},
														{
															"nativeSrc": "11817:27:7",
															"nodeType": "YulAssignment",
															"src": "11817:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11829:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11829:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11840:3:7",
																		"nodeType": "YulLiteral",
																		"src": "11840:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11825:3:7"
																},
																"nativeSrc": "11825:19:7",
																"nodeType": "YulFunctionCall",
																"src": "11825:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11817:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11817:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11452:398:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11603:9:7",
														"nodeType": "YulTypedName",
														"src": "11603:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11617:4:7",
														"nodeType": "YulTypedName",
														"src": "11617:4:7",
														"type": ""
													}
												],
												"src": "11452:398:7"
											},
											{
												"body": {
													"nativeSrc": "12029:182:7",
													"nodeType": "YulBlock",
													"src": "12029:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12046:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12046:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12057:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12057:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12039:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12039:6:7"
																},
																"nativeSrc": "12039:21:7",
																"nodeType": "YulFunctionCall",
																"src": "12039:21:7"
															},
															"nativeSrc": "12039:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "12039:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12080:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12080:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12091:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12091:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12076:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12076:3:7"
																		},
																		"nativeSrc": "12076:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12076:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12096:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12096:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12069:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12069:6:7"
																},
																"nativeSrc": "12069:30:7",
																"nodeType": "YulFunctionCall",
																"src": "12069:30:7"
															},
															"nativeSrc": "12069:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "12069:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12119:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12119:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12130:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12130:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12115:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12115:3:7"
																		},
																		"nativeSrc": "12115:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12115:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "12135:34:7",
																		"nodeType": "YulLiteral",
																		"src": "12135:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12108:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12108:6:7"
																},
																"nativeSrc": "12108:62:7",
																"nodeType": "YulFunctionCall",
																"src": "12108:62:7"
															},
															"nativeSrc": "12108:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "12108:62:7"
														},
														{
															"nativeSrc": "12179:26:7",
															"nodeType": "YulAssignment",
															"src": "12179:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12191:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12191:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12202:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12202:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12187:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12187:3:7"
																},
																"nativeSrc": "12187:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12187:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12179:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12179:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11855:356:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12006:9:7",
														"nodeType": "YulTypedName",
														"src": "12006:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12020:4:7",
														"nodeType": "YulTypedName",
														"src": "12020:4:7",
														"type": ""
													}
												],
												"src": "11855:356:7"
											},
											{
												"body": {
													"nativeSrc": "12390:179:7",
													"nodeType": "YulBlock",
													"src": "12390:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12407:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12407:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12418:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12418:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12400:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12400:6:7"
																},
																"nativeSrc": "12400:21:7",
																"nodeType": "YulFunctionCall",
																"src": "12400:21:7"
															},
															"nativeSrc": "12400:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "12400:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12441:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12441:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12452:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12452:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12437:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12437:3:7"
																		},
																		"nativeSrc": "12437:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12437:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12457:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12457:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12430:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12430:6:7"
																},
																"nativeSrc": "12430:30:7",
																"nodeType": "YulFunctionCall",
																"src": "12430:30:7"
															},
															"nativeSrc": "12430:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "12430:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12480:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12480:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12491:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12491:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12476:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12476:3:7"
																		},
																		"nativeSrc": "12476:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12476:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "12496:31:7",
																		"nodeType": "YulLiteral",
																		"src": "12496:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12469:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12469:6:7"
																},
																"nativeSrc": "12469:59:7",
																"nodeType": "YulFunctionCall",
																"src": "12469:59:7"
															},
															"nativeSrc": "12469:59:7",
															"nodeType": "YulExpressionStatement",
															"src": "12469:59:7"
														},
														{
															"nativeSrc": "12537:26:7",
															"nodeType": "YulAssignment",
															"src": "12537:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12549:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12549:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12560:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12560:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12545:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12545:3:7"
																},
																"nativeSrc": "12545:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12545:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12537:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12537:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12216:353:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12367:9:7",
														"nodeType": "YulTypedName",
														"src": "12367:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12381:4:7",
														"nodeType": "YulTypedName",
														"src": "12381:4:7",
														"type": ""
													}
												],
												"src": "12216:353:7"
											},
											{
												"body": {
													"nativeSrc": "12748:176:7",
													"nodeType": "YulBlock",
													"src": "12748:176:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12765:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12765:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12776:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12776:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12758:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12758:6:7"
																},
																"nativeSrc": "12758:21:7",
																"nodeType": "YulFunctionCall",
																"src": "12758:21:7"
															},
															"nativeSrc": "12758:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "12758:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12799:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12799:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12810:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12810:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12795:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12795:3:7"
																		},
																		"nativeSrc": "12795:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12795:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12815:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12815:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12788:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12788:6:7"
																},
																"nativeSrc": "12788:30:7",
																"nodeType": "YulFunctionCall",
																"src": "12788:30:7"
															},
															"nativeSrc": "12788:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "12788:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12838:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12838:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12849:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12849:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12834:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12834:3:7"
																		},
																		"nativeSrc": "12834:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12834:18:7"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206d757374206265203e30",
																		"kind": "string",
																		"nativeSrc": "12854:28:7",
																		"nodeType": "YulLiteral",
																		"src": "12854:28:7",
																		"type": "",
																		"value": "Transfer amount must be >0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12827:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12827:6:7"
																},
																"nativeSrc": "12827:56:7",
																"nodeType": "YulFunctionCall",
																"src": "12827:56:7"
															},
															"nativeSrc": "12827:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "12827:56:7"
														},
														{
															"nativeSrc": "12892:26:7",
															"nodeType": "YulAssignment",
															"src": "12892:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12904:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12904:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12915:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12915:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12900:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12900:3:7"
																},
																"nativeSrc": "12900:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12900:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12892:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12892:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf60dfdf0bc628580395fc38657d86ed24105efc4a69fdfae0dbdbb8a1ef6412__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12574:350:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12725:9:7",
														"nodeType": "YulTypedName",
														"src": "12725:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12739:4:7",
														"nodeType": "YulTypedName",
														"src": "12739:4:7",
														"type": ""
													}
												],
												"src": "12574:350:7"
											},
											{
												"body": {
													"nativeSrc": "13103:180:7",
													"nodeType": "YulBlock",
													"src": "13103:180:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13120:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13120:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13131:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13131:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13113:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13113:6:7"
																},
																"nativeSrc": "13113:21:7",
																"nodeType": "YulFunctionCall",
																"src": "13113:21:7"
															},
															"nativeSrc": "13113:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "13113:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13154:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13154:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13165:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13165:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13150:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13150:3:7"
																		},
																		"nativeSrc": "13150:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13150:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13170:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13170:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13143:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13143:6:7"
																},
																"nativeSrc": "13143:30:7",
																"nodeType": "YulFunctionCall",
																"src": "13143:30:7"
															},
															"nativeSrc": "13143:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "13143:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13193:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13193:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13204:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13204:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13189:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13189:3:7"
																		},
																		"nativeSrc": "13189:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13189:18:7"
																	},
																	{
																		"hexValue": "53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f72",
																		"kind": "string",
																		"nativeSrc": "13209:32:7",
																		"nodeType": "YulLiteral",
																		"src": "13209:32:7",
																		"type": "",
																		"value": "Sells stopped by Diamond Floor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13182:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13182:6:7"
																},
																"nativeSrc": "13182:60:7",
																"nodeType": "YulFunctionCall",
																"src": "13182:60:7"
															},
															"nativeSrc": "13182:60:7",
															"nodeType": "YulExpressionStatement",
															"src": "13182:60:7"
														},
														{
															"nativeSrc": "13251:26:7",
															"nodeType": "YulAssignment",
															"src": "13251:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13263:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13263:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13274:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13274:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13259:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13259:3:7"
																},
																"nativeSrc": "13259:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13259:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13251:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13251:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12929:354:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13080:9:7",
														"nodeType": "YulTypedName",
														"src": "13080:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13094:4:7",
														"nodeType": "YulTypedName",
														"src": "13094:4:7",
														"type": ""
													}
												],
												"src": "12929:354:7"
											},
											{
												"body": {
													"nativeSrc": "13462:165:7",
													"nodeType": "YulBlock",
													"src": "13462:165:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13479:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13479:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13490:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13490:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13472:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13472:6:7"
																},
																"nativeSrc": "13472:21:7",
																"nodeType": "YulFunctionCall",
																"src": "13472:21:7"
															},
															"nativeSrc": "13472:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "13472:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13513:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13513:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13524:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13509:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13509:3:7"
																		},
																		"nativeSrc": "13509:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13509:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13529:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13529:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13502:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13502:6:7"
																},
																"nativeSrc": "13502:30:7",
																"nodeType": "YulFunctionCall",
																"src": "13502:30:7"
															},
															"nativeSrc": "13502:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "13502:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13552:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13552:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13563:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13563:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13548:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13548:3:7"
																		},
																		"nativeSrc": "13548:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13548:18:7"
																	},
																	{
																		"hexValue": "436f6f6c646f776e20616374697665",
																		"kind": "string",
																		"nativeSrc": "13568:17:7",
																		"nodeType": "YulLiteral",
																		"src": "13568:17:7",
																		"type": "",
																		"value": "Cooldown active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13541:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13541:6:7"
																},
																"nativeSrc": "13541:45:7",
																"nodeType": "YulFunctionCall",
																"src": "13541:45:7"
															},
															"nativeSrc": "13541:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "13541:45:7"
														},
														{
															"nativeSrc": "13595:26:7",
															"nodeType": "YulAssignment",
															"src": "13595:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13607:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13607:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13618:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13618:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13603:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13603:3:7"
																},
																"nativeSrc": "13603:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13603:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13595:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13595:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13288:339:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13439:9:7",
														"nodeType": "YulTypedName",
														"src": "13439:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13453:4:7",
														"nodeType": "YulTypedName",
														"src": "13453:4:7",
														"type": ""
													}
												],
												"src": "13288:339:7"
											},
											{
												"body": {
													"nativeSrc": "13806:169:7",
													"nodeType": "YulBlock",
													"src": "13806:169:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13823:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13823:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13834:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13834:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13816:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13816:6:7"
																},
																"nativeSrc": "13816:21:7",
																"nodeType": "YulFunctionCall",
																"src": "13816:21:7"
															},
															"nativeSrc": "13816:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "13816:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13857:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13857:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13868:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13868:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13853:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13853:3:7"
																		},
																		"nativeSrc": "13853:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13853:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13873:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13873:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13846:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13846:6:7"
																},
																"nativeSrc": "13846:30:7",
																"nodeType": "YulFunctionCall",
																"src": "13846:30:7"
															},
															"nativeSrc": "13846:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "13846:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13896:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13896:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13907:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13907:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13892:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13892:3:7"
																		},
																		"nativeSrc": "13892:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13892:18:7"
																	},
																	{
																		"hexValue": "4d61782077616c6c6574206578636565646564",
																		"kind": "string",
																		"nativeSrc": "13912:21:7",
																		"nodeType": "YulLiteral",
																		"src": "13912:21:7",
																		"type": "",
																		"value": "Max wallet exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13885:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13885:6:7"
																},
																"nativeSrc": "13885:49:7",
																"nodeType": "YulFunctionCall",
																"src": "13885:49:7"
															},
															"nativeSrc": "13885:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "13885:49:7"
														},
														{
															"nativeSrc": "13943:26:7",
															"nodeType": "YulAssignment",
															"src": "13943:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13955:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13955:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13966:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13966:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13951:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13951:3:7"
																},
																"nativeSrc": "13951:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13951:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13943:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13943:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d02ce7a72410a6351efcb149b27b582bc4ff73b7af05eaebe8fe75a22e828801__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13632:343:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13783:9:7",
														"nodeType": "YulTypedName",
														"src": "13783:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13797:4:7",
														"nodeType": "YulTypedName",
														"src": "13797:4:7",
														"type": ""
													}
												],
												"src": "13632:343:7"
											},
											{
												"body": {
													"nativeSrc": "14029:79:7",
													"nodeType": "YulBlock",
													"src": "14029:79:7",
													"statements": [
														{
															"nativeSrc": "14039:17:7",
															"nodeType": "YulAssignment",
															"src": "14039:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14051:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14051:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14054:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14054:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14047:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14047:3:7"
																},
																"nativeSrc": "14047:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14047:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14039:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14039:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14080:22:7",
																"nodeType": "YulBlock",
																"src": "14080:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14082:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14082:16:7"
																			},
																			"nativeSrc": "14082:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14082:18:7"
																		},
																		"nativeSrc": "14082:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14082:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14071:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14071:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14077:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14077:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14068:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14068:2:7"
																},
																"nativeSrc": "14068:11:7",
																"nodeType": "YulFunctionCall",
																"src": "14068:11:7"
															},
															"nativeSrc": "14065:37:7",
															"nodeType": "YulIf",
															"src": "14065:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13980:128:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14011:1:7",
														"nodeType": "YulTypedName",
														"src": "14011:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14014:1:7",
														"nodeType": "YulTypedName",
														"src": "14014:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14020:4:7",
														"nodeType": "YulTypedName",
														"src": "14020:4:7",
														"type": ""
													}
												],
												"src": "13980:128:7"
											},
											{
												"body": {
													"nativeSrc": "14165:116:7",
													"nodeType": "YulBlock",
													"src": "14165:116:7",
													"statements": [
														{
															"nativeSrc": "14175:20:7",
															"nodeType": "YulAssignment",
															"src": "14175:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14190:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14190:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14193:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14193:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14186:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14186:3:7"
																},
																"nativeSrc": "14186:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14186:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14175:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "14175:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14253:22:7",
																"nodeType": "YulBlock",
																"src": "14253:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14255:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14255:16:7"
																			},
																			"nativeSrc": "14255:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14255:18:7"
																		},
																		"nativeSrc": "14255:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14255:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14224:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "14224:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14217:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "14217:6:7"
																				},
																				"nativeSrc": "14217:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14217:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14231:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "14231:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14238:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "14238:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14247:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "14247:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14234:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "14234:3:7"
																						},
																						"nativeSrc": "14234:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "14234:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14228:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "14228:2:7"
																				},
																				"nativeSrc": "14228:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14228:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14214:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "14214:2:7"
																		},
																		"nativeSrc": "14214:37:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14214:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14207:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14207:6:7"
																},
																"nativeSrc": "14207:45:7",
																"nodeType": "YulFunctionCall",
																"src": "14207:45:7"
															},
															"nativeSrc": "14204:71:7",
															"nodeType": "YulIf",
															"src": "14204:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14113:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14144:1:7",
														"nodeType": "YulTypedName",
														"src": "14144:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14147:1:7",
														"nodeType": "YulTypedName",
														"src": "14147:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14153:7:7",
														"nodeType": "YulTypedName",
														"src": "14153:7:7",
														"type": ""
													}
												],
												"src": "14113:168:7"
											},
											{
												"body": {
													"nativeSrc": "14332:74:7",
													"nodeType": "YulBlock",
													"src": "14332:74:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "14355:22:7",
																"nodeType": "YulBlock",
																"src": "14355:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14357:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14357:16:7"
																			},
																			"nativeSrc": "14357:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14357:18:7"
																		},
																		"nativeSrc": "14357:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14357:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14352:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14352:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14345:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14345:6:7"
																},
																"nativeSrc": "14345:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14345:9:7"
															},
															"nativeSrc": "14342:35:7",
															"nodeType": "YulIf",
															"src": "14342:35:7"
														},
														{
															"nativeSrc": "14386:14:7",
															"nodeType": "YulAssignment",
															"src": "14386:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14395:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14395:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14398:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14398:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14391:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14391:3:7"
																},
																"nativeSrc": "14391:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14391:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14386:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14386:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14286:120:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14317:1:7",
														"nodeType": "YulTypedName",
														"src": "14317:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14320:1:7",
														"nodeType": "YulTypedName",
														"src": "14320:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14326:1:7",
														"nodeType": "YulTypedName",
														"src": "14326:1:7",
														"type": ""
													}
												],
												"src": "14286:120:7"
											},
											{
												"body": {
													"nativeSrc": "14540:175:7",
													"nodeType": "YulBlock",
													"src": "14540:175:7",
													"statements": [
														{
															"nativeSrc": "14550:26:7",
															"nodeType": "YulAssignment",
															"src": "14550:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14562:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14562:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14573:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14573:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14558:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14558:3:7"
																},
																"nativeSrc": "14558:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14558:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14550:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14550:4:7"
																}
															]
														},
														{
															"nativeSrc": "14585:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14585:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14603:3:7",
																				"nodeType": "YulLiteral",
																				"src": "14603:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14608:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14608:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "14599:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14599:3:7"
																		},
																		"nativeSrc": "14599:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14599:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14595:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14595:3:7"
																},
																"nativeSrc": "14595:19:7",
																"nodeType": "YulFunctionCall",
																"src": "14595:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "14589:2:7",
																	"nodeType": "YulTypedName",
																	"src": "14589:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14630:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14630:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14645:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14645:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "14653:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "14653:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14641:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14641:3:7"
																		},
																		"nativeSrc": "14641:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14641:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14623:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14623:6:7"
																},
																"nativeSrc": "14623:34:7",
																"nodeType": "YulFunctionCall",
																"src": "14623:34:7"
															},
															"nativeSrc": "14623:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "14623:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14677:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14677:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14688:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14688:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14673:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14673:3:7"
																		},
																		"nativeSrc": "14673:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14673:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "14697:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14697:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "14705:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "14705:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14693:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14693:3:7"
																		},
																		"nativeSrc": "14693:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14693:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14666:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14666:6:7"
																},
																"nativeSrc": "14666:43:7",
																"nodeType": "YulFunctionCall",
																"src": "14666:43:7"
															},
															"nativeSrc": "14666:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "14666:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "14411:304:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14501:9:7",
														"nodeType": "YulTypedName",
														"src": "14501:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14512:6:7",
														"nodeType": "YulTypedName",
														"src": "14512:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14520:6:7",
														"nodeType": "YulTypedName",
														"src": "14520:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14531:4:7",
														"nodeType": "YulTypedName",
														"src": "14531:4:7",
														"type": ""
													}
												],
												"src": "14411:304:7"
											},
											{
												"body": {
													"nativeSrc": "14894:227:7",
													"nodeType": "YulBlock",
													"src": "14894:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14911:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14911:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14922:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14922:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14904:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14904:6:7"
																},
																"nativeSrc": "14904:21:7",
																"nodeType": "YulFunctionCall",
																"src": "14904:21:7"
															},
															"nativeSrc": "14904:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "14904:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14945:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14945:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14956:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14956:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14941:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14941:3:7"
																		},
																		"nativeSrc": "14941:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14941:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14961:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14961:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14934:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14934:6:7"
																},
																"nativeSrc": "14934:30:7",
																"nodeType": "YulFunctionCall",
																"src": "14934:30:7"
															},
															"nativeSrc": "14934:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "14934:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14984:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14984:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14995:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14995:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14980:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14980:3:7"
																		},
																		"nativeSrc": "14980:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14980:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "15000:34:7",
																		"nodeType": "YulLiteral",
																		"src": "15000:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14973:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14973:6:7"
																},
																"nativeSrc": "14973:62:7",
																"nodeType": "YulFunctionCall",
																"src": "14973:62:7"
															},
															"nativeSrc": "14973:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "14973:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15055:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15055:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15066:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15066:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15051:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15051:3:7"
																		},
																		"nativeSrc": "15051:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15051:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "15071:7:7",
																		"nodeType": "YulLiteral",
																		"src": "15071:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15044:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15044:6:7"
																},
																"nativeSrc": "15044:35:7",
																"nodeType": "YulFunctionCall",
																"src": "15044:35:7"
															},
															"nativeSrc": "15044:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "15044:35:7"
														},
														{
															"nativeSrc": "15088:27:7",
															"nodeType": "YulAssignment",
															"src": "15088:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15100:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15100:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15111:3:7",
																		"nodeType": "YulLiteral",
																		"src": "15111:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15096:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15096:3:7"
																},
																"nativeSrc": "15096:19:7",
																"nodeType": "YulFunctionCall",
																"src": "15096:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15088:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15088:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14720:401:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14871:9:7",
														"nodeType": "YulTypedName",
														"src": "14871:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14885:4:7",
														"nodeType": "YulTypedName",
														"src": "14885:4:7",
														"type": ""
													}
												],
												"src": "14720:401:7"
											},
											{
												"body": {
													"nativeSrc": "15300:225:7",
													"nodeType": "YulBlock",
													"src": "15300:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15317:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15317:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15328:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15328:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15310:6:7"
																},
																"nativeSrc": "15310:21:7",
																"nodeType": "YulFunctionCall",
																"src": "15310:21:7"
															},
															"nativeSrc": "15310:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "15310:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15351:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15351:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15362:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15362:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15347:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15347:3:7"
																		},
																		"nativeSrc": "15347:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15347:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15367:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15367:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15340:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15340:6:7"
																},
																"nativeSrc": "15340:30:7",
																"nodeType": "YulFunctionCall",
																"src": "15340:30:7"
															},
															"nativeSrc": "15340:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "15340:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15390:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15390:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15401:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15401:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15386:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15386:3:7"
																		},
																		"nativeSrc": "15386:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15386:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "15406:34:7",
																		"nodeType": "YulLiteral",
																		"src": "15406:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15379:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15379:6:7"
																},
																"nativeSrc": "15379:62:7",
																"nodeType": "YulFunctionCall",
																"src": "15379:62:7"
															},
															"nativeSrc": "15379:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "15379:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15461:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15461:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15472:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15472:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15457:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15457:3:7"
																		},
																		"nativeSrc": "15457:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15457:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "15477:5:7",
																		"nodeType": "YulLiteral",
																		"src": "15477:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15450:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15450:6:7"
																},
																"nativeSrc": "15450:33:7",
																"nodeType": "YulFunctionCall",
																"src": "15450:33:7"
															},
															"nativeSrc": "15450:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "15450:33:7"
														},
														{
															"nativeSrc": "15492:27:7",
															"nodeType": "YulAssignment",
															"src": "15492:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15504:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15504:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15515:3:7",
																		"nodeType": "YulLiteral",
																		"src": "15515:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15500:3:7"
																},
																"nativeSrc": "15500:19:7",
																"nodeType": "YulFunctionCall",
																"src": "15500:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15492:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15492:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15126:399:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15277:9:7",
														"nodeType": "YulTypedName",
														"src": "15277:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15291:4:7",
														"nodeType": "YulTypedName",
														"src": "15291:4:7",
														"type": ""
													}
												],
												"src": "15126:399:7"
											},
											{
												"body": {
													"nativeSrc": "15704:228:7",
													"nodeType": "YulBlock",
													"src": "15704:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15721:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15721:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15732:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15732:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15714:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15714:6:7"
																},
																"nativeSrc": "15714:21:7",
																"nodeType": "YulFunctionCall",
																"src": "15714:21:7"
															},
															"nativeSrc": "15714:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "15714:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15755:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15755:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15766:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15766:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15751:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15751:3:7"
																		},
																		"nativeSrc": "15751:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15751:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15771:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15771:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15744:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15744:6:7"
																},
																"nativeSrc": "15744:30:7",
																"nodeType": "YulFunctionCall",
																"src": "15744:30:7"
															},
															"nativeSrc": "15744:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "15744:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15794:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15794:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15805:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15805:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15790:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15790:3:7"
																		},
																		"nativeSrc": "15790:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15790:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "15810:34:7",
																		"nodeType": "YulLiteral",
																		"src": "15810:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15783:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15783:6:7"
																},
																"nativeSrc": "15783:62:7",
																"nodeType": "YulFunctionCall",
																"src": "15783:62:7"
															},
															"nativeSrc": "15783:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "15783:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15865:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15865:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15876:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15876:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15861:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15861:3:7"
																		},
																		"nativeSrc": "15861:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15861:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "15881:8:7",
																		"nodeType": "YulLiteral",
																		"src": "15881:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15854:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15854:6:7"
																},
																"nativeSrc": "15854:36:7",
																"nodeType": "YulFunctionCall",
																"src": "15854:36:7"
															},
															"nativeSrc": "15854:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "15854:36:7"
														},
														{
															"nativeSrc": "15899:27:7",
															"nodeType": "YulAssignment",
															"src": "15899:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15911:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15911:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15922:3:7",
																		"nodeType": "YulLiteral",
																		"src": "15922:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15907:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15907:3:7"
																},
																"nativeSrc": "15907:19:7",
																"nodeType": "YulFunctionCall",
																"src": "15907:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15899:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15899:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15530:402:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15681:9:7",
														"nodeType": "YulTypedName",
														"src": "15681:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15695:4:7",
														"nodeType": "YulTypedName",
														"src": "15695:4:7",
														"type": ""
													}
												],
												"src": "15530:402:7"
											},
											{
												"body": {
													"nativeSrc": "16111:165:7",
													"nodeType": "YulBlock",
													"src": "16111:165:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16128:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16128:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16139:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16139:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16121:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16121:6:7"
																},
																"nativeSrc": "16121:21:7",
																"nodeType": "YulFunctionCall",
																"src": "16121:21:7"
															},
															"nativeSrc": "16121:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "16121:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16162:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16162:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16173:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16173:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16158:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16158:3:7"
																		},
																		"nativeSrc": "16158:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16158:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16178:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16178:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16151:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16151:6:7"
																},
																"nativeSrc": "16151:30:7",
																"nodeType": "YulFunctionCall",
																"src": "16151:30:7"
															},
															"nativeSrc": "16151:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "16151:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16201:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16201:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16212:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16212:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16197:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16197:3:7"
																		},
																		"nativeSrc": "16197:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16197:18:7"
																	},
																	{
																		"hexValue": "42757920746178206e6f7420736574",
																		"kind": "string",
																		"nativeSrc": "16217:17:7",
																		"nodeType": "YulLiteral",
																		"src": "16217:17:7",
																		"type": "",
																		"value": "Buy tax not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16190:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16190:6:7"
																},
																"nativeSrc": "16190:45:7",
																"nodeType": "YulFunctionCall",
																"src": "16190:45:7"
															},
															"nativeSrc": "16190:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "16190:45:7"
														},
														{
															"nativeSrc": "16244:26:7",
															"nodeType": "YulAssignment",
															"src": "16244:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16256:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16256:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16267:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16267:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16252:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16252:3:7"
																},
																"nativeSrc": "16252:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16252:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16244:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16244:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_39f82e10faa0e3af80c3e100dfc7f5c499afc72a38d5e97ab509072a50a7371c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15937:339:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16088:9:7",
														"nodeType": "YulTypedName",
														"src": "16088:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16102:4:7",
														"nodeType": "YulTypedName",
														"src": "16102:4:7",
														"type": ""
													}
												],
												"src": "15937:339:7"
											},
											{
												"body": {
													"nativeSrc": "16455:166:7",
													"nodeType": "YulBlock",
													"src": "16455:166:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16472:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16472:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16483:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16483:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16465:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16465:6:7"
																},
																"nativeSrc": "16465:21:7",
																"nodeType": "YulFunctionCall",
																"src": "16465:21:7"
															},
															"nativeSrc": "16465:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "16465:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16506:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16506:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16517:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16517:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16502:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16502:3:7"
																		},
																		"nativeSrc": "16502:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16502:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16522:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16522:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16495:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16495:6:7"
																},
																"nativeSrc": "16495:30:7",
																"nodeType": "YulFunctionCall",
																"src": "16495:30:7"
															},
															"nativeSrc": "16495:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "16495:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16545:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16556:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16556:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16541:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16541:3:7"
																		},
																		"nativeSrc": "16541:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16541:18:7"
																	},
																	{
																		"hexValue": "53656c6c20746178206e6f7420736574",
																		"kind": "string",
																		"nativeSrc": "16561:18:7",
																		"nodeType": "YulLiteral",
																		"src": "16561:18:7",
																		"type": "",
																		"value": "Sell tax not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16534:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16534:6:7"
																},
																"nativeSrc": "16534:46:7",
																"nodeType": "YulFunctionCall",
																"src": "16534:46:7"
															},
															"nativeSrc": "16534:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "16534:46:7"
														},
														{
															"nativeSrc": "16589:26:7",
															"nodeType": "YulAssignment",
															"src": "16589:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16601:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16601:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16612:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16612:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16597:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16597:3:7"
																},
																"nativeSrc": "16597:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16597:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16589:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16589:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b52f1cc5da7f7d352b528f141ea27097a592e54e4895628bd9cba7463eea14a3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16281:340:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16432:9:7",
														"nodeType": "YulTypedName",
														"src": "16432:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16446:4:7",
														"nodeType": "YulTypedName",
														"src": "16446:4:7",
														"type": ""
													}
												],
												"src": "16281:340:7"
											},
											{
												"body": {
													"nativeSrc": "16800:170:7",
													"nodeType": "YulBlock",
													"src": "16800:170:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16817:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16817:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16828:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16828:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16810:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16810:6:7"
																},
																"nativeSrc": "16810:21:7",
																"nodeType": "YulFunctionCall",
																"src": "16810:21:7"
															},
															"nativeSrc": "16810:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "16810:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16851:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16851:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16862:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16862:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16847:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16847:3:7"
																		},
																		"nativeSrc": "16847:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16847:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16867:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16867:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16840:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16840:6:7"
																},
																"nativeSrc": "16840:30:7",
																"nodeType": "YulFunctionCall",
																"src": "16840:30:7"
															},
															"nativeSrc": "16840:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "16840:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16890:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16890:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16901:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16901:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16886:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16886:3:7"
																		},
																		"nativeSrc": "16886:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16886:18:7"
																	},
																	{
																		"hexValue": "5472616e7366657220746178206e6f7420736574",
																		"kind": "string",
																		"nativeSrc": "16906:22:7",
																		"nodeType": "YulLiteral",
																		"src": "16906:22:7",
																		"type": "",
																		"value": "Transfer tax not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16879:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16879:6:7"
																},
																"nativeSrc": "16879:50:7",
																"nodeType": "YulFunctionCall",
																"src": "16879:50:7"
															},
															"nativeSrc": "16879:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "16879:50:7"
														},
														{
															"nativeSrc": "16938:26:7",
															"nodeType": "YulAssignment",
															"src": "16938:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16950:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16950:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16961:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16961:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16946:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16946:3:7"
																},
																"nativeSrc": "16946:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16946:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16938:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16938:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ff623882c30ff94ec292e83d2b5f0879ae4949c8c6608b2e3c6e348352f857d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16626:344:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16777:9:7",
														"nodeType": "YulTypedName",
														"src": "16777:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16791:4:7",
														"nodeType": "YulTypedName",
														"src": "16791:4:7",
														"type": ""
													}
												],
												"src": "16626:344:7"
											},
											{
												"body": {
													"nativeSrc": "17104:119:7",
													"nodeType": "YulBlock",
													"src": "17104:119:7",
													"statements": [
														{
															"nativeSrc": "17114:26:7",
															"nodeType": "YulAssignment",
															"src": "17114:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17126:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17126:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17137:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17137:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17122:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17122:3:7"
																},
																"nativeSrc": "17122:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17122:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17114:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17114:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17156:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17156:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "17167:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17167:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17149:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17149:6:7"
																},
																"nativeSrc": "17149:25:7",
																"nodeType": "YulFunctionCall",
																"src": "17149:25:7"
															},
															"nativeSrc": "17149:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "17149:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17194:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17194:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17205:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17205:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17190:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17190:3:7"
																		},
																		"nativeSrc": "17190:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17190:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "17210:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17210:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17183:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17183:6:7"
																},
																"nativeSrc": "17183:34:7",
																"nodeType": "YulFunctionCall",
																"src": "17183:34:7"
															},
															"nativeSrc": "17183:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "17183:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16975:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17065:9:7",
														"nodeType": "YulTypedName",
														"src": "17065:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17076:6:7",
														"nodeType": "YulTypedName",
														"src": "17076:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17084:6:7",
														"nodeType": "YulTypedName",
														"src": "17084:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17095:4:7",
														"nodeType": "YulTypedName",
														"src": "17095:4:7",
														"type": ""
													}
												],
												"src": "16975:248:7"
											},
											{
												"body": {
													"nativeSrc": "17260:95:7",
													"nodeType": "YulBlock",
													"src": "17260:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17277:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17277:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17284:3:7",
																				"nodeType": "YulLiteral",
																				"src": "17284:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17289:10:7",
																				"nodeType": "YulLiteral",
																				"src": "17289:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "17280:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17280:3:7"
																		},
																		"nativeSrc": "17280:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17280:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17270:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17270:6:7"
																},
																"nativeSrc": "17270:31:7",
																"nodeType": "YulFunctionCall",
																"src": "17270:31:7"
															},
															"nativeSrc": "17270:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "17270:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17317:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17320:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17320:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17310:6:7"
																},
																"nativeSrc": "17310:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17310:15:7"
															},
															"nativeSrc": "17310:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17310:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17341:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17341:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17344:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17344:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17334:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17334:6:7"
																},
																"nativeSrc": "17334:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17334:15:7"
															},
															"nativeSrc": "17334:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17334:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "17228:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "17228:127:7"
											},
											{
												"body": {
													"nativeSrc": "17392:95:7",
													"nodeType": "YulBlock",
													"src": "17392:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17409:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17409:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17416:3:7",
																				"nodeType": "YulLiteral",
																				"src": "17416:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17421:10:7",
																				"nodeType": "YulLiteral",
																				"src": "17421:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "17412:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17412:3:7"
																		},
																		"nativeSrc": "17412:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17412:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17402:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17402:6:7"
																},
																"nativeSrc": "17402:31:7",
																"nodeType": "YulFunctionCall",
																"src": "17402:31:7"
															},
															"nativeSrc": "17402:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "17402:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17449:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17449:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17452:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17452:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17442:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17442:6:7"
																},
																"nativeSrc": "17442:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17442:15:7"
															},
															"nativeSrc": "17442:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17442:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17473:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17473:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17476:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17476:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17466:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17466:6:7"
																},
																"nativeSrc": "17466:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17466:15:7"
															},
															"nativeSrc": "17466:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17466:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "17360:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "17360:127:7"
											},
											{
												"body": {
													"nativeSrc": "17763:709:7",
													"nodeType": "YulBlock",
													"src": "17763:709:7",
													"statements": [
														{
															"nativeSrc": "17773:33:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17773:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17791:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17791:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17802:3:7",
																		"nodeType": "YulLiteral",
																		"src": "17802:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17787:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17787:3:7"
																},
																"nativeSrc": "17787:19:7",
																"nodeType": "YulFunctionCall",
																"src": "17787:19:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "17777:6:7",
																	"nodeType": "YulTypedName",
																	"src": "17777:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17822:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17822:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "17833:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17833:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17815:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17815:6:7"
																},
																"nativeSrc": "17815:25:7",
																"nodeType": "YulFunctionCall",
																"src": "17815:25:7"
															},
															"nativeSrc": "17815:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "17815:25:7"
														},
														{
															"nativeSrc": "17849:12:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17849:12:7",
															"value": {
																"kind": "number",
																"nativeSrc": "17859:2:7",
																"nodeType": "YulLiteral",
																"src": "17859:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "17853:2:7",
																	"nodeType": "YulTypedName",
																	"src": "17853:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17881:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17881:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17892:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17892:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17877:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17877:3:7"
																		},
																		"nativeSrc": "17877:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17877:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "17897:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17897:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17870:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17870:6:7"
																},
																"nativeSrc": "17870:34:7",
																"nodeType": "YulFunctionCall",
																"src": "17870:34:7"
															},
															"nativeSrc": "17870:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "17870:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17924:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17924:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17935:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17935:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17920:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17920:3:7"
																		},
																		"nativeSrc": "17920:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17920:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17940:3:7",
																		"nodeType": "YulLiteral",
																		"src": "17940:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17913:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17913:6:7"
																},
																"nativeSrc": "17913:31:7",
																"nodeType": "YulFunctionCall",
																"src": "17913:31:7"
															},
															"nativeSrc": "17913:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "17913:31:7"
														},
														{
															"nativeSrc": "17953:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17953:17:7",
															"value": {
																"name": "tail_1",
																"nativeSrc": "17964:6:7",
																"nodeType": "YulIdentifier",
																"src": "17964:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "17957:3:7",
																	"nodeType": "YulTypedName",
																	"src": "17957:3:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17979:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17979:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17999:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17999:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "17993:5:7"
																},
																"nativeSrc": "17993:13:7",
																"nodeType": "YulFunctionCall",
																"src": "17993:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "17983:6:7",
																	"nodeType": "YulTypedName",
																	"src": "17983:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "18022:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18022:6:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18030:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18030:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18015:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18015:6:7"
																},
																"nativeSrc": "18015:22:7",
																"nodeType": "YulFunctionCall",
																"src": "18015:22:7"
															},
															"nativeSrc": "18015:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "18015:22:7"
														},
														{
															"nativeSrc": "18046:26:7",
															"nodeType": "YulAssignment",
															"src": "18046:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18057:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18057:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18068:3:7",
																		"nodeType": "YulLiteral",
																		"src": "18068:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18053:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18053:3:7"
																},
																"nativeSrc": "18053:19:7",
																"nodeType": "YulFunctionCall",
																"src": "18053:19:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18046:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18046:3:7"
																}
															]
														},
														{
															"nativeSrc": "18081:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "18081:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18099:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18099:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18107:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18107:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18095:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18095:3:7"
																},
																"nativeSrc": "18095:15:7",
																"nodeType": "YulFunctionCall",
																"src": "18095:15:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "18085:6:7",
																	"nodeType": "YulTypedName",
																	"src": "18085:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18119:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "18119:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "18128:1:7",
																"nodeType": "YulLiteral",
																"src": "18128:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "18123:1:7",
																	"nodeType": "YulTypedName",
																	"src": "18123:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18187:146:7",
																"nodeType": "YulBlock",
																"src": "18187:146:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "18208:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "18208:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "18223:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "18223:6:7"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "18217:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "18217:5:7"
																							},
																							"nativeSrc": "18217:13:7",
																							"nodeType": "YulFunctionCall",
																							"src": "18217:13:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "18240:3:7",
																											"nodeType": "YulLiteral",
																											"src": "18240:3:7",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "18245:1:7",
																											"nodeType": "YulLiteral",
																											"src": "18245:1:7",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "18236:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "18236:3:7"
																									},
																									"nativeSrc": "18236:11:7",
																									"nodeType": "YulFunctionCall",
																									"src": "18236:11:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "18249:1:7",
																									"nodeType": "YulLiteral",
																									"src": "18249:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "18232:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "18232:3:7"
																							},
																							"nativeSrc": "18232:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "18232:19:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "18213:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "18213:3:7"
																					},
																					"nativeSrc": "18213:39:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18213:39:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "18201:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18201:6:7"
																			},
																			"nativeSrc": "18201:52:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18201:52:7"
																		},
																		"nativeSrc": "18201:52:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18201:52:7"
																	},
																	{
																		"nativeSrc": "18266:19:7",
																		"nodeType": "YulAssignment",
																		"src": "18266:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "18277:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "18277:3:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "18282:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "18282:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18273:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18273:3:7"
																			},
																			"nativeSrc": "18273:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18273:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "18266:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18266:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "18298:25:7",
																		"nodeType": "YulAssignment",
																		"src": "18298:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "18312:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "18312:6:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "18320:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "18320:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18308:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18308:3:7"
																			},
																			"nativeSrc": "18308:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18308:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "18298:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18298:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "18149:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18149:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18152:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18152:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "18146:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18146:2:7"
																},
																"nativeSrc": "18146:13:7",
																"nodeType": "YulFunctionCall",
																"src": "18146:13:7"
															},
															"nativeSrc": "18138:195:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "18160:18:7",
																"nodeType": "YulBlock",
																"src": "18160:18:7",
																"statements": [
																	{
																		"nativeSrc": "18162:14:7",
																		"nodeType": "YulAssignment",
																		"src": "18162:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "18171:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "18171:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18174:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18174:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18167:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18167:3:7"
																			},
																			"nativeSrc": "18167:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18167:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "18162:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "18162:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "18142:3:7",
																"nodeType": "YulBlock",
																"src": "18142:3:7",
																"statements": []
															},
															"src": "18138:195:7"
														},
														{
															"nativeSrc": "18342:11:7",
															"nodeType": "YulAssignment",
															"src": "18342:11:7",
															"value": {
																"name": "pos",
																"nativeSrc": "18350:3:7",
																"nodeType": "YulIdentifier",
																"src": "18350:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18342:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18342:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18373:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18373:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18384:2:7",
																				"nodeType": "YulLiteral",
																				"src": "18384:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18369:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18369:3:7"
																		},
																		"nativeSrc": "18369:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18369:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "18393:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18393:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "18409:3:7",
																								"nodeType": "YulLiteral",
																								"src": "18409:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "18414:1:7",
																								"nodeType": "YulLiteral",
																								"src": "18414:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "18405:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "18405:3:7"
																						},
																						"nativeSrc": "18405:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "18405:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18418:1:7",
																						"nodeType": "YulLiteral",
																						"src": "18418:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "18401:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "18401:3:7"
																				},
																				"nativeSrc": "18401:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "18401:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18389:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18389:3:7"
																		},
																		"nativeSrc": "18389:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18389:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18362:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18362:6:7"
																},
																"nativeSrc": "18362:60:7",
																"nodeType": "YulFunctionCall",
																"src": "18362:60:7"
															},
															"nativeSrc": "18362:60:7",
															"nodeType": "YulExpressionStatement",
															"src": "18362:60:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18442:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18442:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18453:3:7",
																				"nodeType": "YulLiteral",
																				"src": "18453:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18438:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18438:3:7"
																		},
																		"nativeSrc": "18438:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18438:19:7"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "18459:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18459:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18431:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18431:6:7"
																},
																"nativeSrc": "18431:35:7",
																"nodeType": "YulFunctionCall",
																"src": "18431:35:7"
															},
															"nativeSrc": "18431:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "18431:35:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17492:980:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17700:9:7",
														"nodeType": "YulTypedName",
														"src": "17700:9:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "17711:6:7",
														"nodeType": "YulTypedName",
														"src": "17711:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17719:6:7",
														"nodeType": "YulTypedName",
														"src": "17719:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17727:6:7",
														"nodeType": "YulTypedName",
														"src": "17727:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17735:6:7",
														"nodeType": "YulTypedName",
														"src": "17735:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17743:6:7",
														"nodeType": "YulTypedName",
														"src": "17743:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17754:4:7",
														"nodeType": "YulTypedName",
														"src": "17754:4:7",
														"type": ""
													}
												],
												"src": "17492:980:7"
											},
											{
												"body": {
													"nativeSrc": "18583:999:7",
													"nodeType": "YulBlock",
													"src": "18583:999:7",
													"statements": [
														{
															"nativeSrc": "18593:12:7",
															"nodeType": "YulVariableDeclaration",
															"src": "18593:12:7",
															"value": {
																"kind": "number",
																"nativeSrc": "18603:2:7",
																"nodeType": "YulLiteral",
																"src": "18603:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "18597:2:7",
																	"nodeType": "YulTypedName",
																	"src": "18597:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18650:16:7",
																"nodeType": "YulBlock",
																"src": "18650:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18659:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18659:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18662:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18662:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18652:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18652:6:7"
																			},
																			"nativeSrc": "18652:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18652:12:7"
																		},
																		"nativeSrc": "18652:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18652:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18625:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "18625:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18634:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18634:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18621:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18621:3:7"
																		},
																		"nativeSrc": "18621:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18621:23:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "18646:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "18646:2:7"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18617:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18617:3:7"
																},
																"nativeSrc": "18617:32:7",
																"nodeType": "YulFunctionCall",
																"src": "18617:32:7"
															},
															"nativeSrc": "18614:52:7",
															"nodeType": "YulIf",
															"src": "18614:52:7"
														},
														{
															"nativeSrc": "18675:30:7",
															"nodeType": "YulVariableDeclaration",
															"src": "18675:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18695:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18695:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18689:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "18689:5:7"
																},
																"nativeSrc": "18689:16:7",
																"nodeType": "YulFunctionCall",
																"src": "18689:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "18679:6:7",
																	"nodeType": "YulTypedName",
																	"src": "18679:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18714:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "18714:28:7",
															"value": {
																"kind": "number",
																"nativeSrc": "18724:18:7",
																"nodeType": "YulLiteral",
																"src": "18724:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "18718:2:7",
																	"nodeType": "YulTypedName",
																	"src": "18718:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18769:16:7",
																"nodeType": "YulBlock",
																"src": "18769:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18778:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18778:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18781:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18781:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18771:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18771:6:7"
																			},
																			"nativeSrc": "18771:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18771:12:7"
																		},
																		"nativeSrc": "18771:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18771:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18757:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18757:6:7"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "18765:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "18765:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18754:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18754:2:7"
																},
																"nativeSrc": "18754:14:7",
																"nodeType": "YulFunctionCall",
																"src": "18754:14:7"
															},
															"nativeSrc": "18751:34:7",
															"nodeType": "YulIf",
															"src": "18751:34:7"
														},
														{
															"nativeSrc": "18794:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "18794:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18808:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18808:9:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "18819:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18819:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18804:3:7"
																},
																"nativeSrc": "18804:22:7",
																"nodeType": "YulFunctionCall",
																"src": "18804:22:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "18798:2:7",
																	"nodeType": "YulTypedName",
																	"src": "18798:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18874:16:7",
																"nodeType": "YulBlock",
																"src": "18874:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18883:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18883:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18886:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18886:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18876:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18876:6:7"
																			},
																			"nativeSrc": "18876:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18876:12:7"
																		},
																		"nativeSrc": "18876:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18876:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "18853:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "18853:2:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18857:4:7",
																						"nodeType": "YulLiteral",
																						"src": "18857:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18849:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "18849:3:7"
																				},
																				"nativeSrc": "18849:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "18849:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18864:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "18864:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "18845:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18845:3:7"
																		},
																		"nativeSrc": "18845:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18845:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18838:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18838:6:7"
																},
																"nativeSrc": "18838:35:7",
																"nodeType": "YulFunctionCall",
																"src": "18838:35:7"
															},
															"nativeSrc": "18835:55:7",
															"nodeType": "YulIf",
															"src": "18835:55:7"
														},
														{
															"nativeSrc": "18899:19:7",
															"nodeType": "YulVariableDeclaration",
															"src": "18899:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "18915:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "18915:2:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18909:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "18909:5:7"
																},
																"nativeSrc": "18909:9:7",
																"nodeType": "YulFunctionCall",
																"src": "18909:9:7"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "18903:2:7",
																	"nodeType": "YulTypedName",
																	"src": "18903:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18941:22:7",
																"nodeType": "YulBlock",
																"src": "18941:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "18943:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "18943:16:7"
																			},
																			"nativeSrc": "18943:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18943:18:7"
																		},
																		"nativeSrc": "18943:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18943:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nativeSrc": "18933:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "18933:2:7"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "18937:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "18937:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18930:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18930:2:7"
																},
																"nativeSrc": "18930:10:7",
																"nodeType": "YulFunctionCall",
																"src": "18930:10:7"
															},
															"nativeSrc": "18927:36:7",
															"nodeType": "YulIf",
															"src": "18927:36:7"
														},
														{
															"nativeSrc": "18972:20:7",
															"nodeType": "YulVariableDeclaration",
															"src": "18972:20:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18986:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18986:1:7",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "18989:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "18989:2:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "18982:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18982:3:7"
																},
																"nativeSrc": "18982:10:7",
																"nodeType": "YulFunctionCall",
																"src": "18982:10:7"
															},
															"variables": [
																{
																	"name": "_5",
																	"nativeSrc": "18976:2:7",
																	"nodeType": "YulTypedName",
																	"src": "18976:2:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19001:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19001:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19021:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19021:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19015:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "19015:5:7"
																},
																"nativeSrc": "19015:9:7",
																"nodeType": "YulFunctionCall",
																"src": "19015:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "19005:6:7",
																	"nodeType": "YulTypedName",
																	"src": "19005:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19033:56:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19033:56:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "19055:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19055:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nativeSrc": "19071:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "19071:2:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19075:2:7",
																						"nodeType": "YulLiteral",
																						"src": "19075:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19067:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "19067:3:7"
																				},
																				"nativeSrc": "19067:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "19067:11:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "19084:2:7",
																						"nodeType": "YulLiteral",
																						"src": "19084:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "19080:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "19080:3:7"
																				},
																				"nativeSrc": "19080:7:7",
																				"nodeType": "YulFunctionCall",
																				"src": "19080:7:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19063:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19063:3:7"
																		},
																		"nativeSrc": "19063:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19063:25:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19051:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19051:3:7"
																},
																"nativeSrc": "19051:38:7",
																"nodeType": "YulFunctionCall",
																"src": "19051:38:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "19037:10:7",
																	"nodeType": "YulTypedName",
																	"src": "19037:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19148:22:7",
																"nodeType": "YulBlock",
																"src": "19148:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "19150:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "19150:16:7"
																			},
																			"nativeSrc": "19150:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19150:18:7"
																		},
																		"nativeSrc": "19150:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "19150:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "19107:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "19107:10:7"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "19119:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "19119:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "19104:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "19104:2:7"
																		},
																		"nativeSrc": "19104:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19104:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "19127:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "19127:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "19139:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "19139:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "19124:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "19124:2:7"
																		},
																		"nativeSrc": "19124:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19124:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19101:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "19101:2:7"
																},
																"nativeSrc": "19101:46:7",
																"nodeType": "YulFunctionCall",
																"src": "19101:46:7"
															},
															"nativeSrc": "19098:72:7",
															"nodeType": "YulIf",
															"src": "19098:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19186:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19186:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "19190:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "19190:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19179:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19179:6:7"
																},
																"nativeSrc": "19179:22:7",
																"nodeType": "YulFunctionCall",
																"src": "19179:22:7"
															},
															"nativeSrc": "19179:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "19179:22:7"
														},
														{
															"nativeSrc": "19210:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19210:17:7",
															"value": {
																"name": "memPtr",
																"nativeSrc": "19221:6:7",
																"nodeType": "YulIdentifier",
																"src": "19221:6:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "19214:3:7",
																	"nodeType": "YulTypedName",
																	"src": "19214:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "19243:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19243:6:7"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "19251:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "19251:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19236:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19236:6:7"
																},
																"nativeSrc": "19236:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19236:18:7"
															},
															"nativeSrc": "19236:18:7",
															"nodeType": "YulExpressionStatement",
															"src": "19236:18:7"
														},
														{
															"nativeSrc": "19263:22:7",
															"nodeType": "YulAssignment",
															"src": "19263:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "19274:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19274:6:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "19282:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "19282:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19270:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19270:3:7"
																},
																"nativeSrc": "19270:15:7",
																"nodeType": "YulFunctionCall",
																"src": "19270:15:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "19263:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19263:3:7"
																}
															]
														},
														{
															"nativeSrc": "19294:34:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19294:34:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "19316:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "19316:2:7"
																			},
																			{
																				"name": "_5",
																				"nativeSrc": "19320:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "19320:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19312:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19312:3:7"
																		},
																		"nativeSrc": "19312:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19312:11:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "19325:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "19325:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19308:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19308:3:7"
																},
																"nativeSrc": "19308:20:7",
																"nodeType": "YulFunctionCall",
																"src": "19308:20:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "19298:6:7",
																	"nodeType": "YulTypedName",
																	"src": "19298:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19360:16:7",
																"nodeType": "YulBlock",
																"src": "19360:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "19369:1:7",
																					"nodeType": "YulLiteral",
																					"src": "19369:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19372:1:7",
																					"nodeType": "YulLiteral",
																					"src": "19372:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "19362:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "19362:6:7"
																			},
																			"nativeSrc": "19362:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19362:12:7"
																		},
																		"nativeSrc": "19362:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "19362:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "19343:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19343:6:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "19351:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "19351:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19340:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "19340:2:7"
																},
																"nativeSrc": "19340:19:7",
																"nodeType": "YulFunctionCall",
																"src": "19340:19:7"
															},
															"nativeSrc": "19337:39:7",
															"nodeType": "YulIf",
															"src": "19337:39:7"
														},
														{
															"nativeSrc": "19385:22:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19385:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "19400:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "19400:2:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "19404:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "19404:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19396:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19396:3:7"
																},
																"nativeSrc": "19396:11:7",
																"nodeType": "YulFunctionCall",
																"src": "19396:11:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "19389:3:7",
																	"nodeType": "YulTypedName",
																	"src": "19389:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19472:79:7",
																"nodeType": "YulBlock",
																"src": "19472:79:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "19493:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "19493:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "19504:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "19504:3:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "19498:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "19498:5:7"
																					},
																					"nativeSrc": "19498:10:7",
																					"nodeType": "YulFunctionCall",
																					"src": "19498:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "19486:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "19486:6:7"
																			},
																			"nativeSrc": "19486:23:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19486:23:7"
																		},
																		"nativeSrc": "19486:23:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "19486:23:7"
																	},
																	{
																		"nativeSrc": "19522:19:7",
																		"nodeType": "YulAssignment",
																		"src": "19522:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "19533:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "19533:3:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "19538:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "19538:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "19529:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "19529:3:7"
																			},
																			"nativeSrc": "19529:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19529:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "19522:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "19522:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "19427:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19427:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "19432:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19432:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "19424:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "19424:2:7"
																},
																"nativeSrc": "19424:15:7",
																"nodeType": "YulFunctionCall",
																"src": "19424:15:7"
															},
															"nativeSrc": "19416:135:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "19440:23:7",
																"nodeType": "YulBlock",
																"src": "19440:23:7",
																"statements": [
																	{
																		"nativeSrc": "19442:19:7",
																		"nodeType": "YulAssignment",
																		"src": "19442:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "19453:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "19453:3:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "19458:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "19458:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "19449:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "19449:3:7"
																			},
																			"nativeSrc": "19449:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19449:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "19442:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "19442:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "19420:3:7",
																"nodeType": "YulBlock",
																"src": "19420:3:7",
																"statements": []
															},
															"src": "19416:135:7"
														},
														{
															"nativeSrc": "19560:16:7",
															"nodeType": "YulAssignment",
															"src": "19560:16:7",
															"value": {
																"name": "memPtr",
																"nativeSrc": "19570:6:7",
																"nodeType": "YulIdentifier",
																"src": "19570:6:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "19560:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19560:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "18477:1105:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18549:9:7",
														"nodeType": "YulTypedName",
														"src": "18549:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18560:7:7",
														"nodeType": "YulTypedName",
														"src": "18560:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18572:6:7",
														"nodeType": "YulTypedName",
														"src": "18572:6:7",
														"type": ""
													}
												],
												"src": "18477:1105:7"
											},
											{
												"body": {
													"nativeSrc": "19844:350:7",
													"nodeType": "YulBlock",
													"src": "19844:350:7",
													"statements": [
														{
															"nativeSrc": "19854:27:7",
															"nodeType": "YulAssignment",
															"src": "19854:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19866:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19866:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19877:3:7",
																		"nodeType": "YulLiteral",
																		"src": "19877:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19862:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19862:3:7"
																},
																"nativeSrc": "19862:19:7",
																"nodeType": "YulFunctionCall",
																"src": "19862:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19854:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19854:4:7"
																}
															]
														},
														{
															"nativeSrc": "19890:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19890:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19908:3:7",
																				"nodeType": "YulLiteral",
																				"src": "19908:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19913:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19913:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "19904:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19904:3:7"
																		},
																		"nativeSrc": "19904:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19904:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19917:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19917:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "19900:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19900:3:7"
																},
																"nativeSrc": "19900:19:7",
																"nodeType": "YulFunctionCall",
																"src": "19900:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "19894:2:7",
																	"nodeType": "YulTypedName",
																	"src": "19894:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19935:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19935:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "19950:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "19950:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "19958:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "19958:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19946:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19946:3:7"
																		},
																		"nativeSrc": "19946:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19946:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19928:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19928:6:7"
																},
																"nativeSrc": "19928:34:7",
																"nodeType": "YulFunctionCall",
																"src": "19928:34:7"
															},
															"nativeSrc": "19928:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "19928:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19982:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19982:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19993:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19993:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19978:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19978:3:7"
																		},
																		"nativeSrc": "19978:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19978:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "19998:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19998:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19971:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19971:6:7"
																},
																"nativeSrc": "19971:34:7",
																"nodeType": "YulFunctionCall",
																"src": "19971:34:7"
															},
															"nativeSrc": "19971:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "19971:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20025:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20025:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20036:2:7",
																				"nodeType": "YulLiteral",
																				"src": "20036:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20021:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20021:3:7"
																		},
																		"nativeSrc": "20021:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20021:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "20041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20041:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20014:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20014:6:7"
																},
																"nativeSrc": "20014:34:7",
																"nodeType": "YulFunctionCall",
																"src": "20014:34:7"
															},
															"nativeSrc": "20014:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "20014:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20068:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20068:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20079:2:7",
																				"nodeType": "YulLiteral",
																				"src": "20079:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20064:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20064:3:7"
																		},
																		"nativeSrc": "20064:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20064:18:7"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "20084:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20084:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20057:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20057:6:7"
																},
																"nativeSrc": "20057:34:7",
																"nodeType": "YulFunctionCall",
																"src": "20057:34:7"
															},
															"nativeSrc": "20057:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "20057:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20111:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20111:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20122:3:7",
																				"nodeType": "YulLiteral",
																				"src": "20122:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20107:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20107:3:7"
																		},
																		"nativeSrc": "20107:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20107:19:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "20132:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "20132:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "20140:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "20140:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "20128:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20128:3:7"
																		},
																		"nativeSrc": "20128:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20128:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20100:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20100:6:7"
																},
																"nativeSrc": "20100:44:7",
																"nodeType": "YulFunctionCall",
																"src": "20100:44:7"
															},
															"nativeSrc": "20100:44:7",
															"nodeType": "YulExpressionStatement",
															"src": "20100:44:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20164:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20164:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20175:3:7",
																				"nodeType": "YulLiteral",
																				"src": "20175:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20160:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20160:3:7"
																		},
																		"nativeSrc": "20160:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20160:19:7"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "20181:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20181:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20153:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20153:6:7"
																},
																"nativeSrc": "20153:35:7",
																"nodeType": "YulFunctionCall",
																"src": "20153:35:7"
															},
															"nativeSrc": "20153:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "20153:35:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "19587:607:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19773:9:7",
														"nodeType": "YulTypedName",
														"src": "19773:9:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "19784:6:7",
														"nodeType": "YulTypedName",
														"src": "19784:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "19792:6:7",
														"nodeType": "YulTypedName",
														"src": "19792:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19800:6:7",
														"nodeType": "YulTypedName",
														"src": "19800:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19808:6:7",
														"nodeType": "YulTypedName",
														"src": "19808:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19816:6:7",
														"nodeType": "YulTypedName",
														"src": "19816:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19824:6:7",
														"nodeType": "YulTypedName",
														"src": "19824:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19835:4:7",
														"nodeType": "YulTypedName",
														"src": "19835:4:7",
														"type": ""
													}
												],
												"src": "19587:607:7"
											},
											{
												"body": {
													"nativeSrc": "20314:191:7",
													"nodeType": "YulBlock",
													"src": "20314:191:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "20360:16:7",
																"nodeType": "YulBlock",
																"src": "20360:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20369:1:7",
																					"nodeType": "YulLiteral",
																					"src": "20369:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20372:1:7",
																					"nodeType": "YulLiteral",
																					"src": "20372:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20362:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "20362:6:7"
																			},
																			"nativeSrc": "20362:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "20362:12:7"
																		},
																		"nativeSrc": "20362:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "20362:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20335:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "20335:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20344:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20344:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20331:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20331:3:7"
																		},
																		"nativeSrc": "20331:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20331:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20356:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20356:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20327:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20327:3:7"
																},
																"nativeSrc": "20327:32:7",
																"nodeType": "YulFunctionCall",
																"src": "20327:32:7"
															},
															"nativeSrc": "20324:52:7",
															"nodeType": "YulIf",
															"src": "20324:52:7"
														},
														{
															"nativeSrc": "20385:26:7",
															"nodeType": "YulAssignment",
															"src": "20385:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20401:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "20401:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20395:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "20395:5:7"
																},
																"nativeSrc": "20395:16:7",
																"nodeType": "YulFunctionCall",
																"src": "20395:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "20385:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20385:6:7"
																}
															]
														},
														{
															"nativeSrc": "20420:35:7",
															"nodeType": "YulAssignment",
															"src": "20420:35:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20440:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20440:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20451:2:7",
																				"nodeType": "YulLiteral",
																				"src": "20451:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20436:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20436:3:7"
																		},
																		"nativeSrc": "20436:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20436:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20430:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "20430:5:7"
																},
																"nativeSrc": "20430:25:7",
																"nodeType": "YulFunctionCall",
																"src": "20430:25:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "20420:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20420:6:7"
																}
															]
														},
														{
															"nativeSrc": "20464:35:7",
															"nodeType": "YulAssignment",
															"src": "20464:35:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20484:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20484:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20495:2:7",
																				"nodeType": "YulLiteral",
																				"src": "20495:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20480:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20480:3:7"
																		},
																		"nativeSrc": "20480:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20480:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20474:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "20474:5:7"
																},
																"nativeSrc": "20474:25:7",
																"nodeType": "YulFunctionCall",
																"src": "20474:25:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "20464:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20464:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "20199:306:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20264:9:7",
														"nodeType": "YulTypedName",
														"src": "20264:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20275:7:7",
														"nodeType": "YulTypedName",
														"src": "20275:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20287:6:7",
														"nodeType": "YulTypedName",
														"src": "20287:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20295:6:7",
														"nodeType": "YulTypedName",
														"src": "20295:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20303:6:7",
														"nodeType": "YulTypedName",
														"src": "20303:6:7",
														"type": ""
													}
												],
												"src": "20199:306:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_uint16t_uint16(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        value2 := abi_decode_uint16(add(headStart, 64))\n        value3 := abi_decode_uint16(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint16_t_uint16__to_t_uint16_t_uint16_t_uint16_t_uint16__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool_t_uint32__to_t_bool_t_uint32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool_t_uint16_t_uint256_t_bool_t_uint256__to_t_bool_t_uint16_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, 0xffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_boolt_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n    }\n    function validator_revert_uint32(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_boolt_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_uint32(value)\n        value1 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint16(x, y) -> sum\n    {\n        let _1 := 0xffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f090d1c11271f3393ea5511251471fa61f5244fcb411caac2ee82afbeeb3c955__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Max 25% buy tax\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a5b3d2ddd2421ad686f304be3d3015a2ee589ad9c652c040c54c8fbfedd016ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Max 25% sell tax\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function negate_t_int256(value) -> ret\n    {\n        if eq(value, shl(255, 1)) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n    function abi_encode_tuple_t_stringliteral_16a37e5ef25bc279f87ddedf10d3060d884d4b4915de8aaf5d2288b066e1e24b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Max 1% wallet limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_uint112_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint112_fromMemory(headStart)\n        value1 := abi_decode_uint112_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        validator_revert_uint32(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid percentage\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint32(x, y) -> product\n    {\n        let _1 := 0xffffffff\n        let product_raw := mul(and(x, _1), and(y, _1))\n        product := and(product_raw, _1)\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bf60dfdf0bc628580395fc38657d86ed24105efc4a69fdfae0dbdbb8a1ef6412__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Transfer amount must be >0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Sells stopped by Diamond Floor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Cooldown active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d02ce7a72410a6351efcb149b27b582bc4ff73b7af05eaebe8fe75a22e828801__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Max wallet exceeded\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_39f82e10faa0e3af80c3e100dfc7f5c499afc72a38d5e97ab509072a50a7371c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Buy tax not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b52f1cc5da7f7d352b528f141ea27097a592e54e4895628bd9cba7463eea14a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Sell tax not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ff623882c30ff94ec292e83d2b5f0879ae4949c8c6608b2e3c6e348352f857d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Transfer tax not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value2, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101ff575f3560e01c80638f9a55c011610113578063ad5dff731161009d578063d8d61c401161006d578063d8d61c4014610678578063dd62ed3e1461068d578063f2fde38b146106ac578063fe0bb982146106cb578063fe6b751e146106ea575f80fd5b8063ad5dff73146105b2578063c0d78655146105e0578063c531b108146105ff578063c95457ff14610614575f80fd5b80639d82190f116100e35780639d82190f146104f75780639fde54f514610536578063a457c2d714610555578063a8b0898214610574578063a9059cbb14610593575f80fd5b80638f9a55c01461049c5780639491f94d146104b057806395d89b41146104c4578063960bfe04146104d8575f80fd5b8063333f4b3d11610194578063715018a611610164578063715018a6146103f65780637773168f1461040a578063787a08a61461041e5780637a845ece146104605780638da5cb5b1461047f575f80fd5b8063333f4b3d14610328578063395093511461038e578063599ca397146103ad57806370a08231146103c2575f80fd5b806318160ddd116101cf57806318160ddd146102a357806323b872dd146102b7578063313ce567146102d65780633268cc56146102f1575f80fd5b80630445b6671461020a57806306fdde0314610232578063095ea7b3146102535780631569d18114610282575f80fd5b3661020657005b5f80fd5b348015610215575f80fd5b5061021f60085481565b6040519081526020015b60405180910390f35b34801561023d575f80fd5b50610246610709565b6040516102299190611f2d565b34801561025e575f80fd5b5061027261026d366004611f76565b610799565b6040519015158152602001610229565b34801561028d575f80fd5b506102a161029c366004611fb6565b6107b2565b005b3480156102ae575f80fd5b5060025461021f565b3480156102c2575f80fd5b506102726102d1366004612007565b6108df565b3480156102e1575f80fd5b5060405160128152602001610229565b3480156102fc575f80fd5b50601254610310906001600160a01b031681565b6040516001600160a01b039091168152602001610229565b348015610333575f80fd5b506007546103609061ffff80821691620100008104821691600160201b8204811691600160301b90041684565b6040805161ffff95861681529385166020850152918416918301919091529091166060820152608001610229565b348015610399575f80fd5b506102726103a8366004611f76565b610904565b3480156103b8575f80fd5b5061021f60065481565b3480156103cd575f80fd5b5061021f6103dc366004612045565b6001600160a01b03165f9081526020819052604090205490565b348015610401575f80fd5b506102a1610925565b348015610415575f80fd5b5061021f610938565b348015610429575f80fd5b50600c546104449060ff811690610100900463ffffffff1682565b60408051921515835263ffffffff909116602083015201610229565b34801561046b575f80fd5b506102a161047a366004612060565b6109b7565b34801561048a575f80fd5b506005546001600160a01b0316610310565b3480156104a7575f80fd5b5061021f610a42565b3480156104bb575f80fd5b5061021f610a6f565b3480156104cf575f80fd5b50610246610be1565b3480156104e3575f80fd5b506102a16104f2366004612060565b610bf0565b348015610502575f80fd5b50610516610511366004612045565b610bfd565b604080519485526020850193909352918301526060820152608001610229565b348015610541575f80fd5b506102a1610550366004612086565b610ca9565b348015610560575f80fd5b5061027261056f366004611f76565b610cdb565b34801561057f575f80fd5b50601354610310906001600160a01b031681565b34801561059e575f80fd5b506102726105ad366004611f76565b610d60565b3480156105bd575f80fd5b506102726105cc366004612045565b60146020525f908152604090205460ff1681565b3480156105eb575f80fd5b506102a16105fa366004612045565b610d6d565b34801561060a575f80fd5b5061021f600a5481565b34801561061f575f80fd5b50600e54600f546010546011546106499360ff8082169461010090920461ffff1693919291169085565b60408051951515865261ffff90941660208601529284019190915215156060830152608082015260a001610229565b348015610683575f80fd5b5061021f60095481565b348015610698575f80fd5b5061021f6106a73660046120b9565b610dd1565b3480156106b7575f80fd5b506102a16106c6366004612045565b610dfb565b3480156106d6575f80fd5b506102a16106e53660046120f0565b610e74565b3480156106f5575f80fd5b506102a1610704366004612129565b610ef1565b60606003805461071890612153565b80601f016020809104026020016040519081016040528092919081815260200182805461074490612153565b801561078f5780601f106107665761010080835404028352916020019161078f565b820191905f5260205f20905b81548152906001019060200180831161077257829003601f168201915b5050505050905090565b5f336107a6818585610f37565b60019150505b92915050565b6107ba61105a565b6109c46107c7848661219f565b61ffff1611156108105760405162461bcd60e51b815260206004820152600f60248201526e09ac2f040646a4a40c4eaf240e8c2f608b1b60448201526064015b60405180910390fd5b6109c461081d828461219f565b61ffff1611156108625760405162461bcd60e51b815260206004820152601060248201526f09ac2f040646a4a40e6cad8d840e8c2f60831b6044820152606401610807565b6040805160808101825261ffff958616808252948616602082018190529386169181018290529190941660609091018190526007805463ffffffff1916909317620100009092029190911767ffffffff000000001916600160201b90930267ffff000000000000191692909217600160301b909202919091179055565b5f336108ec8582856110b4565b6108f785858561112c565b60019150505b9392505050565b5f336107a68185856109168383610dd1565b61092091906121c1565b610f37565b61092d61105a565b6109365f6113fc565b565b600f545f90810361094857505f90565b5f610951610a6f565b600f54909150811161099457600f5461098690610980670de0b6b3a764000061097a838661144d565b90611458565b90611463565b61098f906121d4565b6109b1565b600f546109b190610980670de0b6b3a764000061097a858461144d565b91505090565b6109bf61105a565b6064811015610a065760405162461bcd60e51b815260206004820152601360248201527213585e080c49481dd85b1b195d081b1a5b5a5d606a1b6044820152606401610807565b60068190556040518181527f12528a3c61e0f3b2d6fc707a9fc58b1af86e252cad0d7f4c154ebeabb162dace906020015b60405180910390a150565b5f610a6a6127106109806006546b033b2e3c9fd0803ce800000061145890919063ffffffff16565b905090565b5f805f60135f9054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610ac2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ae69190612204565b5091509150816001600160701b03165f1480610b0957506001600160701b038116155b15610b16575f9250505090565b60135460408051630dfe168160e01b8152905130926001600160a01b031691630dfe16819160048083019260209291908290030181865afa158015610b5d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b819190612248565b6001600160a01b031614610bb757610bb26001600160701b0380831690610980908516670de0b6b3a7640000611458565b610bda565b610bda6001600160701b0380841690610980908416670de0b6b3a7640000611458565b9250505090565b60606004805461071890612153565b610bf861105a565b600855565b6001600160a01b0381165f908152600d602052604081205481908190819081904210610c29575f610c4b565b6001600160a01b0386165f908152600d6020526040902054610c4b904261144d565b9050610c5a8162015180611463565b9450610c696201518082612277565b9050610c7781610e10611463565b9350610c85610e1082612277565b9050610c9281603c611463565b9250610c9f603c82612277565b9150509193509193565b610cb161105a565b6001600160a01b03919091165f908152601460205260409020805460ff1916911515919091179055565b5f3381610ce88286610dd1565b905083811015610d485760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610807565b610d558286868403610f37565b506001949350505050565b5f336107a681858561112c565b610d7561105a565b601280546001600160a01b0319166001600160a01b038316179055610d9861146e565b6040516001600160a01b03821681527f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc8090602001610a37565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b610e0361105a565b6001600160a01b038116610e685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610807565b610e71816113fc565b50565b610e7c61105a565b6127108161ffff161115610ec75760405162461bcd60e51b8152602060048201526012602482015271496e76616c69642070657263656e7461676560701b6044820152606401610807565b600e805462ffffff191692151562ffff0019169290921761010061ffff9290921691909102179055565b610ef961105a565b600c805460ff1916831515179055610f1281603c61228a565b600c805463ffffffff929092166101000264ffffffff00199092169190911790555050565b6001600160a01b038316610f995760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610807565b6001600160a01b038216610ffa5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610807565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b031633146109365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610807565b5f6110bf8484610dd1565b90505f19811461112657818110156111195760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610807565b6111268484848403610f37565b50505050565b5f811161117b5760405162461bcd60e51b815260206004820152601a60248201527f5472616e7366657220616d6f756e74206d757374206265203e300000000000006044820152606401610807565b6013545f906001600160a01b0385811691161480156111b257506001600160a01b0383165f9081526014602052604090205460ff16155b6013549091505f906001600160a01b0385811691161480156111ec57506001600160a01b0385165f9081526014602052604090205460ff16155b600e5490915060ff1680156111fe5750805b1561125e5760105460ff16156112565760405162461bcd60e51b815260206004820152601e60248201527f53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f7200006044820152606401610807565b61125e6115f5565b600c5460ff16801561126d5750805b156112fc576001600160a01b0385165f908152600d60205260409020544210156112cb5760405162461bcd60e51b815260206004820152600f60248201526e436f6f6c646f776e2061637469766560881b6044820152606401610807565b600c546112e390610100900463ffffffff16426121c1565b6001600160a01b0386165f908152600d60205260409020555b5f6113088686866116a7565b90505f611315858361144d565b6001600160a01b0387165f9081526014602052604090205490915060ff1615801561133e575082155b156113b75761134b610a42565b6113738261136d896001600160a01b03165f9081526020819052604090205490565b906117ca565b11156113b75760405162461bcd60e51b815260206004820152601360248201527213585e081dd85b1b195d08195e18d959591959606a1b6044820152606401610807565b81156113d3576113c88730846117d5565b6113d3828585611977565b6113de8787836117d5565b6113e6611b91565b156113f3576113f3611bd0565b50505050505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6108fd82846122b2565b5f6108fd82846122c5565b5f6108fd82846122dc565b60125f9054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114be573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114e29190612248565b6001600160a01b031663c9c653963060125f9054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611541573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115659190612248565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303815f875af11580156115af573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115d39190612248565b601380546001600160a01b0319166001600160a01b0392909216919091179055565b5f6115fe610a6f565b9050805f0361160a5750565b600f5481111561162357600f556010805460ff19169055565b600e545f90611651906127109061098090611648908390610100900461ffff1661144d565b600f5490611458565b90508082101561166f576010805460ff19166001179055600f546011555b60105460ff16801561168e575060115461168a906002611458565b8210155b156116a3576010805460ff19169055600f8290555b5050565b6001600160a01b0383165f9081526014602052604081205460ff16806116e457506001600160a01b0383165f9081526014602052604090205460ff165b156116f057505f6108fd565b6013546001600160a01b0390811685821681149185161481156117435760075461173a9061271090610980906117339061ffff80821691620100009004166117ca565b8790611458565b925050506108fd565b80156117765760075461173a9061271090610980906117339061ffff600160201b8204811691600160301b9004166117ca565b6007545f906117999061ffff600160201b8204811691600160301b9004166117ca565b90505f6117ac600a610980846023611458565b90506117be6127106109808884611458565b98975050505050505050565b5f6108fd82846121c1565b6001600160a01b0383166118395760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610807565b6001600160a01b03821661189b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610807565b6001600160a01b0383165f90815260208190526040902054818110156119125760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610807565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611126565b5f8083156119fe576007545f9061199b9061ffff80821691620100009004166117ca565b90505f81116119de5760405162461bcd60e51b815260206004820152600f60248201526e109d5e481d185e081b9bdd081cd95d608a1b6044820152606401610807565b6007546119f690829061098090899061ffff16611458565b925050611b24565b8215611a8a576007545f90611a279061ffff600160201b8204811691600160301b9004166117ca565b90505f8111611a6b5760405162461bcd60e51b815260206004820152601060248201526f14d95b1b081d185e081b9bdd081cd95d60821b6044820152606401610807565b6007546119f6908290610980908990600160201b900461ffff16611458565b6007545f90611aad9061ffff600160201b8204811691600160301b9004166117ca565b90505f8111611af55760405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c881d185e081b9bdd081cd95d60621b6044820152606401610807565b600754611b2090600a906109809060239061097a90869084908d90600160201b900461ffff16611458565b9250505b611b2e858361144d565b600954909150611b3e90836117ca565b600955600a54611b4e90826117ca565b600a5560408051838152602081018390527ff2d9f3f00fc700757eb74f9aa3dba0e2eb1280e0c6e0cf65962cc055528d7a90910160405180910390a15050505050565b600b545f9060ff16158015611bb65750600854600a54600954611bb3916117ca565b10155b8015610a6a5750506013546001600160a01b031633141590565b5f611be8600a546009546117ca90919063ffffffff16565b9050600854811015611bf75750565b600b805460ff19166001179055600a544790611c1290611cc1565b5f611c1d478361144d565b9050611c316005546001600160a01b031690565b6001600160a01b03166108fc8290811502906040515f60405180830381858888f19350505050158015611c66573d5f803e3d5ffd5b506009545f611c76826002611463565b9050611c8181611cc1565b5f611c8c478561144d565b9050611ca1611c9b848461144d565b82611e22565b50505f6009819055600a555050600b805460ff191690555050565b505050565b6040805160028082526060820183525f9260208301908036833701905050905030815f81518110611cf457611cf4612303565b6001600160a01b03928316602091820292909201810191909152601254604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611d4b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d6f9190612248565b81600181518110611d8257611d82612303565b6001600160a01b039283166020918202929092010152601254611da89130911684610f37565b6012546040516318cbafe560e01b81526001600160a01b03909116906318cbafe590611de09085905f90869030904290600401612317565b5f604051808303815f875af1158015611dfb573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611cbc9190810190612388565b601254611e3a9030906001600160a01b031684610f37565b6012546001600160a01b031663f305d7198230855f80611e626005546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015611ec8573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190611eed9190612435565b505060408051848152602081018490527f38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b92500160405180910390a15050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114610e71575f80fd5b5f8060408385031215611f87575f80fd5b8235611f9281611f62565b946020939093013593505050565b803561ffff81168114611fb1575f80fd5b919050565b5f805f8060808587031215611fc9575f80fd5b611fd285611fa0565b9350611fe060208601611fa0565b9250611fee60408601611fa0565b9150611ffc60608601611fa0565b905092959194509250565b5f805f60608486031215612019575f80fd5b833561202481611f62565b9250602084013561203481611f62565b929592945050506040919091013590565b5f60208284031215612055575f80fd5b81356108fd81611f62565b5f60208284031215612070575f80fd5b5035919050565b80358015158114611fb1575f80fd5b5f8060408385031215612097575f80fd5b82356120a281611f62565b91506120b060208401612077565b90509250929050565b5f80604083850312156120ca575f80fd5b82356120d581611f62565b915060208301356120e581611f62565b809150509250929050565b5f8060408385031215612101575f80fd5b61210a83612077565b91506120b060208401611fa0565b63ffffffff81168114610e71575f80fd5b5f806040838503121561213a575f80fd5b61214383612077565b915060208301356120e581612118565b600181811c9082168061216757607f821691505b60208210810361218557634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b61ffff8181168382160190808211156121ba576121ba61218b565b5092915050565b808201808211156107ac576107ac61218b565b5f600160ff1b82016121e8576121e861218b565b505f0390565b80516001600160701b0381168114611fb1575f80fd5b5f805f60608486031215612216575f80fd5b61221f846121ee565b925061222d602085016121ee565b9150604084015161223d81612118565b809150509250925092565b5f60208284031215612258575f80fd5b81516108fd81611f62565b634e487b7160e01b5f52601260045260245ffd5b5f8261228557612285612263565b500690565b63ffffffff8181168382160280821691908281146122aa576122aa61218b565b505092915050565b818103818111156107ac576107ac61218b565b80820281158282048414176107ac576107ac61218b565b5f826122ea576122ea612263565b500490565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f60a08201878352602087602085015260a0604085015281875180845260c0860191506020890193505f5b818110156123675784516001600160a01b031683529383019391830191600101612342565b50506001600160a01b03969096166060850152505050608001529392505050565b5f6020808385031215612399575f80fd5b825167ffffffffffffffff808211156123b0575f80fd5b818501915085601f8301126123c3575f80fd5b8151818111156123d5576123d56122ef565b8060051b604051601f19603f830116810181811085821117156123fa576123fa6122ef565b604052918252848201925083810185019188831115612417575f80fd5b938501935b828510156117be5784518452938501939285019261241c565b5f805f60608486031215612447575f80fd5b835192506020840151915060408401519050925092509256fea26469706673582212209064509e96eb5ad31add3e9439730d8e3bca74dffe7f1b1ff9ec2c52023a7d4264736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FF JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F9A55C0 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0xAD5DFF73 GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xD8D61C40 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xD8D61C40 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xFE0BB982 EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0xFE6B751E EQ PUSH2 0x6EA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD5DFF73 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0xC531B108 EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xC95457FF EQ PUSH2 0x614 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D82190F GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x9D82190F EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0x9FDE54F5 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0xA8B08982 EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x593 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F9A55C0 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x9491F94D EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x960BFE04 EQ PUSH2 0x4D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x333F4B3D GT PUSH2 0x194 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x7773168F EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x7A845ECE EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x47F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x333F4B3D EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x599CA397 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x3268CC56 EQ PUSH2 0x2F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x445B667 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x1569D181 EQ PUSH2 0x282 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x206 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x1FB6 JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x310 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x360 SWAP1 PUSH2 0xFFFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP6 DUP7 AND DUP2 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x3DC CALLDATASIZE PUSH1 0x4 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x925 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x938 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x444 SWAP1 PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x47A CALLDATASIZE PUSH1 0x4 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x9B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x310 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0xA42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0xA6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH2 0xBE1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x502 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x516 PUSH2 0x511 CALLDATASIZE PUSH1 0x4 PUSH2 0x2045 JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x541 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x550 CALLDATASIZE PUSH1 0x4 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0xCA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x310 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x5AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x5CC CALLDATASIZE PUSH1 0x4 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x5FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2045 JUMP JUMPDEST PUSH2 0xD6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH2 0x649 SWAP4 PUSH1 0xFF DUP1 DUP3 AND SWAP5 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP4 SWAP2 SWAP3 SWAP2 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH2 0xFFFF SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x683 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x698 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x6A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0xDD1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x6C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2045 JUMP JUMPDEST PUSH2 0xDFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x6E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x20F0 JUMP JUMPDEST PUSH2 0xE74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x704 CALLDATASIZE PUSH1 0x4 PUSH2 0x2129 JUMP JUMPDEST PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x718 SWAP1 PUSH2 0x2153 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x744 SWAP1 PUSH2 0x2153 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x78F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x766 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x78F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x772 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7A6 DUP2 DUP6 DUP6 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7BA PUSH2 0x105A JUMP JUMPDEST PUSH2 0x9C4 PUSH2 0x7C7 DUP5 DUP7 PUSH2 0x219F JUMP JUMPDEST PUSH2 0xFFFF AND GT ISZERO PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x9AC2F040646A4A40C4EAF240E8C2F PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C4 PUSH2 0x81D DUP3 DUP5 PUSH2 0x219F JUMP JUMPDEST PUSH2 0xFFFF AND GT ISZERO PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x9AC2F040646A4A40E6CAD8D840E8C2F PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH2 0xFFFF SWAP6 DUP7 AND DUP1 DUP3 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP4 DUP7 AND SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 SWAP1 SWAP5 AND PUSH1 0x60 SWAP1 SWAP2 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND SWAP1 SWAP4 OR PUSH3 0x10000 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH8 0xFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP4 MUL PUSH8 0xFFFF000000000000 NOT AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x30 SHL SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8EC DUP6 DUP3 DUP6 PUSH2 0x10B4 JUMP JUMPDEST PUSH2 0x8F7 DUP6 DUP6 DUP6 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7A6 DUP2 DUP6 DUP6 PUSH2 0x916 DUP4 DUP4 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0x920 SWAP2 SWAP1 PUSH2 0x21C1 JUMP JUMPDEST PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x92D PUSH2 0x105A JUMP JUMPDEST PUSH2 0x936 PUSH0 PUSH2 0x13FC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xF SLOAD PUSH0 SWAP1 DUP2 SUB PUSH2 0x948 JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x951 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 SWAP2 POP DUP2 GT PUSH2 0x994 JUMPI PUSH1 0xF SLOAD PUSH2 0x986 SWAP1 PUSH2 0x980 PUSH8 0xDE0B6B3A7640000 PUSH2 0x97A DUP4 DUP7 PUSH2 0x144D JUMP JUMPDEST SWAP1 PUSH2 0x1458 JUMP JUMPDEST SWAP1 PUSH2 0x1463 JUMP JUMPDEST PUSH2 0x98F SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x9B1 SWAP1 PUSH2 0x980 PUSH8 0xDE0B6B3A7640000 PUSH2 0x97A DUP6 DUP5 PUSH2 0x144D JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x9BF PUSH2 0x105A JUMP JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0xA06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585E080C49481DD85B1B195D081B1A5B5A5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x12528A3C61E0F3B2D6FC707A9FC58B1AF86E252CAD0D7F4C154EBEABB162DACE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA6A PUSH2 0x2710 PUSH2 0x980 PUSH1 0x6 SLOAD PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x1458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x13 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x2204 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH0 EQ DUP1 PUSH2 0xB09 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0xB16 JUMPI PUSH0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD ADDRESS SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB81 SWAP2 SWAP1 PUSH2 0x2248 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBB7 JUMPI PUSH2 0xBB2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP4 AND SWAP1 PUSH2 0x980 SWAP1 DUP6 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST PUSH2 0xBDA PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP5 AND SWAP1 PUSH2 0x980 SWAP1 DUP5 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x1458 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x718 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH2 0xBF8 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 TIMESTAMP LT PUSH2 0xC29 JUMPI PUSH0 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC4B SWAP1 TIMESTAMP PUSH2 0x144D JUMP JUMPDEST SWAP1 POP PUSH2 0xC5A DUP2 PUSH3 0x15180 PUSH2 0x1463 JUMP JUMPDEST SWAP5 POP PUSH2 0xC69 PUSH3 0x15180 DUP3 PUSH2 0x2277 JUMP JUMPDEST SWAP1 POP PUSH2 0xC77 DUP2 PUSH2 0xE10 PUSH2 0x1463 JUMP JUMPDEST SWAP4 POP PUSH2 0xC85 PUSH2 0xE10 DUP3 PUSH2 0x2277 JUMP JUMPDEST SWAP1 POP PUSH2 0xC92 DUP2 PUSH1 0x3C PUSH2 0x1463 JUMP JUMPDEST SWAP3 POP PUSH2 0xC9F PUSH1 0x3C DUP3 PUSH2 0x2277 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH2 0xCB1 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0xCE8 DUP3 DUP7 PUSH2 0xDD1 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH2 0xD55 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xF37 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7A6 DUP2 DUP6 DUP6 PUSH2 0x112C JUMP JUMPDEST PUSH2 0xD75 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH2 0xD98 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0x7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80 SWAP1 PUSH1 0x20 ADD PUSH2 0xA37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE03 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH2 0xE71 DUP2 PUSH2 0x13FC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE7C PUSH2 0x105A JUMP JUMPDEST PUSH2 0x2710 DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0xEC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642070657263656E74616765 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH3 0xFFFFFF NOT AND SWAP3 ISZERO ISZERO PUSH3 0xFFFF00 NOT AND SWAP3 SWAP1 SWAP3 OR PUSH2 0x100 PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xEF9 PUSH2 0x105A JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH2 0xF12 DUP2 PUSH1 0x3C PUSH2 0x228A JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH5 0xFFFFFFFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x936 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH0 PUSH2 0x10BF DUP5 DUP5 PUSH2 0xDD1 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x1126 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1119 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH2 0x1126 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xF37 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x117B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265203E30000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x11B2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH1 0x13 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x11EC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH1 0xE SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x11FE JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x125E JUMPI PUSH1 0x10 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C732073746F70706564206279204469616D6F6E6420466C6F6F720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH2 0x125E PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x126D JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x12FC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x12CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x436F6F6C646F776E20616374697665 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x12E3 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH0 PUSH2 0x1308 DUP7 DUP7 DUP7 PUSH2 0x16A7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1315 DUP6 DUP4 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x133E JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x13B7 JUMPI PUSH2 0x134B PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x1373 DUP3 PUSH2 0x136D DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x17CA JUMP JUMPDEST GT ISZERO PUSH2 0x13B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585E081DD85B1B195D08195E18D959591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x13D3 JUMPI PUSH2 0x13C8 DUP8 ADDRESS DUP5 PUSH2 0x17D5 JUMP JUMPDEST PUSH2 0x13D3 DUP3 DUP6 DUP6 PUSH2 0x1977 JUMP JUMPDEST PUSH2 0x13DE DUP8 DUP8 DUP4 PUSH2 0x17D5 JUMP JUMPDEST PUSH2 0x13E6 PUSH2 0x1B91 JUMP JUMPDEST ISZERO PUSH2 0x13F3 JUMPI PUSH2 0x13F3 PUSH2 0x1BD0 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8FD DUP3 DUP5 PUSH2 0x22B2 JUMP JUMPDEST PUSH0 PUSH2 0x8FD DUP3 DUP5 PUSH2 0x22C5 JUMP JUMPDEST PUSH0 PUSH2 0x8FD DUP3 DUP5 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x12 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14BE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E2 SWAP2 SWAP1 PUSH2 0x2248 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS PUSH1 0x12 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1541 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1565 SWAP2 SWAP1 PUSH2 0x2248 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15AF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15D3 SWAP2 SWAP1 PUSH2 0x2248 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x15FE PUSH2 0xA6F JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x160A JUMPI POP JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 GT ISZERO PUSH2 0x1623 JUMPI PUSH1 0xF SSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xE SLOAD PUSH0 SWAP1 PUSH2 0x1651 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x980 SWAP1 PUSH2 0x1648 SWAP1 DUP4 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x144D JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 PUSH2 0x1458 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x166F JUMPI PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xF SLOAD PUSH1 0x11 SSTORE JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x168E JUMPI POP PUSH1 0x11 SLOAD PUSH2 0x168A SWAP1 PUSH1 0x2 PUSH2 0x1458 JUMP JUMPDEST DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x16A3 JUMPI PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0xF DUP3 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x16E4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x16F0 JUMPI POP PUSH0 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 DUP3 AND DUP2 EQ SWAP2 DUP6 AND EQ DUP2 ISZERO PUSH2 0x1743 JUMPI PUSH1 0x7 SLOAD PUSH2 0x173A SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x980 SWAP1 PUSH2 0x1733 SWAP1 PUSH2 0xFFFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 SWAP1 DIV AND PUSH2 0x17CA JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x1458 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x8FD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1776 JUMPI PUSH1 0x7 SLOAD PUSH2 0x173A SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x980 SWAP1 PUSH2 0x1733 SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH2 0x1799 SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x17AC PUSH1 0xA PUSH2 0x980 DUP5 PUSH1 0x23 PUSH2 0x1458 JUMP JUMPDEST SWAP1 POP PUSH2 0x17BE PUSH2 0x2710 PUSH2 0x980 DUP9 DUP5 PUSH2 0x1458 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8FD DUP3 DUP5 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1839 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x189B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1912 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1126 JUMP JUMPDEST PUSH0 DUP1 DUP4 ISZERO PUSH2 0x19FE JUMPI PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH2 0x199B SWAP1 PUSH2 0xFFFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 SWAP1 DIV AND PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x19DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x109D5E481D185E081B9BDD081CD95D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x19F6 SWAP1 DUP3 SWAP1 PUSH2 0x980 SWAP1 DUP10 SWAP1 PUSH2 0xFFFF AND PUSH2 0x1458 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1B24 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x1A8A JUMPI PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH2 0x1A27 SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1A6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14D95B1B081D185E081B9BDD081CD95D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x19F6 SWAP1 DUP3 SWAP1 PUSH2 0x980 SWAP1 DUP10 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x1458 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH2 0x1AAD SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1AF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C881D185E081B9BDD081CD95D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1B20 SWAP1 PUSH1 0xA SWAP1 PUSH2 0x980 SWAP1 PUSH1 0x23 SWAP1 PUSH2 0x97A SWAP1 DUP7 SWAP1 DUP5 SWAP1 DUP14 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x1458 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH2 0x1B2E DUP6 DUP4 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x1B3E SWAP1 DUP4 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0xA SLOAD PUSH2 0x1B4E SWAP1 DUP3 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xF2D9F3F00FC700757EB74F9AA3DBA0E2EB1280E0C6E0CF65962CC055528D7A90 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH0 SWAP1 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1BB6 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0xA SLOAD PUSH1 0x9 SLOAD PUSH2 0x1BB3 SWAP2 PUSH2 0x17CA JUMP JUMPDEST LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xA6A JUMPI POP POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1BE8 PUSH1 0xA SLOAD PUSH1 0x9 SLOAD PUSH2 0x17CA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1BF7 JUMPI POP JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xA SLOAD SELFBALANCE SWAP1 PUSH2 0x1C12 SWAP1 PUSH2 0x1CC1 JUMP JUMPDEST PUSH0 PUSH2 0x1C1D SELFBALANCE DUP4 PUSH2 0x144D JUMP JUMPDEST SWAP1 POP PUSH2 0x1C31 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1C66 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH0 PUSH2 0x1C76 DUP3 PUSH1 0x2 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C81 DUP2 PUSH2 0x1CC1 JUMP JUMPDEST PUSH0 PUSH2 0x1C8C SELFBALANCE DUP6 PUSH2 0x144D JUMP JUMPDEST SWAP1 POP PUSH2 0x1CA1 PUSH2 0x1C9B DUP5 DUP5 PUSH2 0x144D JUMP JUMPDEST DUP3 PUSH2 0x1E22 JUMP JUMPDEST POP POP PUSH0 PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0xA SSTORE POP POP PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1CF4 JUMPI PUSH2 0x1CF4 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D4B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D6F SWAP2 SWAP1 PUSH2 0x2248 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1D82 JUMPI PUSH2 0x1D82 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x12 SLOAD PUSH2 0x1DA8 SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x18CBAFE5 SWAP1 PUSH2 0x1DE0 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x2317 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DFB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1CBC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2388 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x1E3A SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF305D719 DUP3 ADDRESS DUP6 PUSH0 DUP1 PUSH2 0x1E62 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP9 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x44 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x84 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EC8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EED SWAP2 SWAP1 PUSH2 0x2435 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE71 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F87 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F92 DUP2 PUSH2 0x1F62 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1FB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1FC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1FD2 DUP6 PUSH2 0x1FA0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FE0 PUSH1 0x20 DUP7 ADD PUSH2 0x1FA0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FEE PUSH1 0x40 DUP7 ADD PUSH2 0x1FA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFC PUSH1 0x60 DUP7 ADD PUSH2 0x1FA0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2019 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2024 DUP2 PUSH2 0x1F62 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2034 DUP2 PUSH2 0x1F62 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2055 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8FD DUP2 PUSH2 0x1F62 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2070 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1FB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2097 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x20A2 DUP2 PUSH2 0x1F62 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B0 PUSH1 0x20 DUP5 ADD PUSH2 0x2077 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20CA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x20D5 DUP2 PUSH2 0x1F62 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x20E5 DUP2 PUSH2 0x1F62 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2101 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x210A DUP4 PUSH2 0x2077 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B0 PUSH1 0x20 DUP5 ADD PUSH2 0x1FA0 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xE71 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x213A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2143 DUP4 PUSH2 0x2077 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x20E5 DUP2 PUSH2 0x2118 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2167 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2185 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x21BA JUMPI PUSH2 0x21BA PUSH2 0x218B JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x218B JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 ADD PUSH2 0x21E8 JUMPI PUSH2 0x21E8 PUSH2 0x218B JUMP JUMPDEST POP PUSH0 SUB SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1FB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2216 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x221F DUP5 PUSH2 0x21EE JUMP JUMPDEST SWAP3 POP PUSH2 0x222D PUSH1 0x20 DUP6 ADD PUSH2 0x21EE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x223D DUP2 PUSH2 0x2118 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2258 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8FD DUP2 PUSH2 0x1F62 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x2285 JUMPI PUSH2 0x2285 PUSH2 0x2263 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND MUL DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP2 EQ PUSH2 0x22AA JUMPI PUSH2 0x22AA PUSH2 0x218B JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x218B JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x218B JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x22EA JUMPI PUSH2 0x22EA PUSH2 0x2263 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP PUSH1 0x20 DUP10 ADD SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2367 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2342 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2399 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x23B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x23D5 JUMPI PUSH2 0x23D5 PUSH2 0x22EF JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x23FA JUMPI PUSH2 0x23FA PUSH2 0x22EF JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x2417 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x17BE JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x241C JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2447 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 PUSH5 0x509E96EB5A 0xD3 BYTE 0xDD RETURNDATACOPY SWAP5 CODECOPY PUSH20 0xD8E3BCA74DFFE7F1B1FF9EC2C52023A7D426473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1203:10831:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1666:50;;;;;;;;;;;;;;;;;;;160:25:7;;;148:2;133:18;1666:50:6;;;;;;;;2158:98:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4444:197::-;;;;;;;;;;-1:-1:-1;4444:197:2;;;;;:::i;:::-;;:::i;:::-;;;1240:14:7;;1233:22;1215:41;;1203:2;1188:18;4444:197:2;1075:187:7;9406:291:6;;;;;;;;;;-1:-1:-1;9406:291:6;;;;;:::i;:::-;;:::i;:::-;;3255:106:2;;;;;;;;;;-1:-1:-1;3342:12:2;;3255:106;;5203:256;;;;;;;;;;-1:-1:-1;5203:256:2;;;;;:::i;:::-;;:::i;3104:91::-;;;;;;;;;;-1:-1:-1;3104:91:2;;3186:2;2440:36:7;;2428:2;2413:18;3104:91:2;2298:184:7;2191:28:6;;;;;;;;;;-1:-1:-1;2191:28:6;;;;-1:-1:-1;;;;;2191:28:6;;;;;;-1:-1:-1;;;;;2651:32:7;;;2633:51;;2621:2;2606:18;2191:28:6;2487:203:7;1563:24:6;;;;;;;;;;-1:-1:-1;1563:24:6;;;;;;;;;;;;;;;-1:-1:-1;;;1563:24:6;;;;;-1:-1:-1;;;1563:24:6;;;;;;;;;2928:6:7;2961:15;;;2943:34;;3013:15;;;3008:2;2993:18;;2986:43;3065:15;;;3045:18;;;3038:43;;;;3117:15;;;3112:2;3097:18;;3090:43;2905:3;2890:19;1563:24:6;2695:444:7;5854:234:2;;;;;;;;;;-1:-1:-1;5854:234:2;;;;;:::i;:::-;;:::i;1346:40:6:-;;;;;;;;;;;;;;;;3419:125:2;;;;;;;;;;-1:-1:-1;3419:125:2;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;1824:101:1;;;;;;;;;;;;;:::i;8826:408:6:-;;;;;;;;;;;;;:::i;1947:30::-;;;;;;;;;;-1:-1:-1;1947:30:6;;;;;;;;;;;;;;;;;;;3767:14:7;;3760:22;3742:41;;3831:10;3819:23;;;3814:2;3799:18;;3792:51;3715:18;1947:30:6;3576:273:7;11775:222:6;;;;;;;;;;-1:-1:-1;11775:222:6;;;;;:::i;:::-;;:::i;1201:85:1:-;;;;;;;;;;-1:-1:-1;1273:6:1;;-1:-1:-1;;;;;1273:6:1;1201:85;;11435:133:6;;;;;;;;;;;;;:::i;7866:412::-;;;;;;;;;;;;;:::i;2369:102:2:-;;;;;;;;;;;;;:::i;9703::6:-;;;;;;;;;;-1:-1:-1;9703:102:6;;;;;:::i;:::-;;:::i;8284:536::-;;;;;;;;;;-1:-1:-1;8284:536:6;;;;;:::i;:::-;;:::i;:::-;;;;4270:25:7;;;4326:2;4311:18;;4304:34;;;;4354:18;;;4347:34;4412:2;4397:18;;4390:34;4257:3;4242:19;8284:536:6;4039:391:7;10253:111:6;;;;;;;;;;-1:-1:-1;10253:111:6;;;;;:::i;:::-;;:::i;6575:427:2:-;;;;;;;;;;-1:-1:-1;6575:427:2;;;;;:::i;:::-;;:::i;2225:26:6:-;;;;;;;;;;-1:-1:-1;2225:26:6;;;;-1:-1:-1;;;;;2225:26:6;;;3740:189:2;;;;;;;;;;-1:-1:-1;3740:189:2;;;;;:::i;:::-;;:::i;2348:40:6:-;;;;;;;;;;-1:-1:-1;2348:40:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;9240:160;;;;;;;;;;-1:-1:-1;9240:160:6;;;;;:::i;:::-;;:::i;1756:29::-;;;;;;;;;;;;;;;;2152:32;;;;;;;;;;-1:-1:-1;2152:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5190:14:7;;5183:22;5165:41;;5254:6;5242:19;;;5237:2;5222:18;;5215:47;5278:18;;;5271:34;;;;5348:14;5341:22;5336:2;5321:18;;5314:50;5395:3;5380:19;;5373:35;5152:3;5137:19;2152:32:6;4920:494:7;1722:28:6;;;;;;;;;;;;;;;;3987:149:2;;;;;;;;;;-1:-1:-1;3987:149:2;;;;;:::i;:::-;;:::i;2074:198:1:-;;;;;;;;;;-1:-1:-1;2074:198:1;;;;;:::i;:::-;;:::i;9987:260:6:-;;;;;;;;;;-1:-1:-1;9987:260:6;;;;;:::i;:::-;;:::i;9811:170::-;;;;;;;;;;-1:-1:-1;9811:170:6;;;;;:::i;:::-;;:::i;2158:98:2:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:5;4581:32:2;719:10:5;4597:7:2;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;9406:291:6:-;1094:13:1;:11;:13::i;:::-;9542:4:6::1;9524:14;9532:6:::0;9524:5;:14:::1;:::i;:::-;:22;;;;9516:50;;;::::0;-1:-1:-1;;;9516:50:6;;7405:2:7;9516:50:6::1;::::0;::::1;7387:21:7::0;7444:2;7424:18;;;7417:30;-1:-1:-1;;;7463:18:7;;;7456:45;7518:18;;9516:50:6::1;;;;;;;;;9604:4;9584:16;9593:7:::0;9584:6;:16:::1;:::i;:::-;:24;;;;9576:53;;;::::0;-1:-1:-1;;;9576:53:6;;7749:2:7;9576:53:6::1;::::0;::::1;7731:21:7::0;7788:2;7768:18;;;7761:30;-1:-1:-1;;;7807:18:7;;;7800:46;7863:18;;9576:53:6::1;7547:340:7::0;9576:53:6::1;9650:40;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;::::1;;::::0;::::1;::::0;;;;;::::1;::::0;;;;;;;;;::::1;::::0;;;;;;;9639:8:::1;:51:::0;;-1:-1:-1;;9639:51:6;;;;;;;::::1;::::0;;;::::1;-1:-1:-1::0;;9639:51:6;-1:-1:-1;;;9639:51:6;;::::1;-1:-1:-1::0;;9639:51:6;;;;;-1:-1:-1;;;9639:51:6;;::::1;::::0;;;::::1;::::0;;9406:291::o;5203:256:2:-;5300:4;719:10:5;5356:38:2;5372:4;719:10:5;5387:6:2;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;;:::o;5854:234::-;5942:4;719:10:5;5996:64:2;719:10:5;6012:7:2;6049:10;6021:25;719:10:5;6012:7:2;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;1824:101:1:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;8826:408:6:-;8895:21;;8873:6;;8895:26;;8891:40;;-1:-1:-1;8930:1:6;;8826:408::o;8891:40::-;8941:20;8964:11;:9;:11::i;:::-;9007:21;;8941:34;;-1:-1:-1;8992:36:6;;:235;;9204:21;;9150:76;;:49;9194:4;9150:39;9204:21;9176:12;9150:25;:39::i;:::-;:43;;:49::i;:::-;:53;;:76::i;:::-;9142:85;;;:::i;:::-;8992:235;;;9104:21;;9050:76;;:49;9094:4;9050:39;:12;9104:21;9050:16;:39::i;:76::-;8985:242;;;8826:408;:::o;11775:222::-;1094:13:1;:11;:13::i;:::-;11878:3:6::1;11864:10;:17;;11856:49;;;::::0;-1:-1:-1;;;11856:49:6;;8365:2:7;11856:49:6::1;::::0;::::1;8347:21:7::0;8404:2;8384:18;;;8377:30;-1:-1:-1;;;8423:18:7;;;8416:49;8482:18;;11856:49:6::1;8163:343:7::0;11856:49:6::1;11915:19;:32:::0;;;11962:28:::1;::::0;160:25:7;;;11962:28:6::1;::::0;148:2:7;133:18;11962:28:6::1;;;;;;;;11775:222:::0;:::o;11435:133::-;11482:7;11508:53;1430:6;11508:37;11525:19;;1318:22;11508:16;;:37;;;;:::i;:53::-;11501:60;;11435:133;:::o;7866:412::-;7908:7;7928:16;7946;7982:11;;;;;;;;;-1:-1:-1;;;;;7982:11:6;-1:-1:-1;;;;;7967:39:6;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7927:81;;;;;8022:8;-1:-1:-1;;;;;8022:13:6;8034:1;8022:13;:30;;;-1:-1:-1;;;;;;8039:13:6;;;8022:30;8018:44;;;8061:1;8054:8;;;;7866:412;:::o;8018:44::-;8103:11;;8088:36;;;-1:-1:-1;;;8088:36:6;;;;8136:4;;-1:-1:-1;;;;;8103:11:6;;8088:34;;:36;;;;;;;;;;;;;;8103:11;8088:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8088:53:6;;:183;;8221:50;-1:-1:-1;;;;;8253:17:6;;;;8221:27;;:17;;8243:4;8221:21;:27::i;:50::-;8088:183;;;8156:50;-1:-1:-1;;;;;8188:17:6;;;;8156:27;;:17;;8178:4;8156:21;:27::i;:50::-;8081:190;;;;7866:412;:::o;2369:102:2:-;2425:13;2457:7;2450:14;;;;;:::i;9703:102:6:-;1094:13:1;:11;:13::i;:::-;9773::6::1;:25:::0;9703:102::o;8284:536::-;-1:-1:-1;;;;;8487:27:6;;8358:13;8487:27;;;:18;:27;;;;;;8358:13;;;;;;;;8517:15;-1:-1:-1;8487:113:6;;8599:1;8487:113;;;-1:-1:-1;;;;;8548:27:6;;;;;;:18;:27;;;;;;:48;;8580:15;8548:31;:48::i;:::-;8467:133;-1:-1:-1;8627:20:6;8467:133;8641:5;8627:13;:20::i;:::-;8619:28;-1:-1:-1;8657:18:6;8670:5;8657:18;;:::i;:::-;;-1:-1:-1;8694:19:6;8657:18;8708:4;8694:13;:19::i;:::-;8685:28;-1:-1:-1;8723:17:6;8736:4;8723:17;;:::i;:::-;;-1:-1:-1;8761:17:6;8723;8775:2;8761:13;:17::i;:::-;8750:28;-1:-1:-1;8799:14:6;8811:2;8799:9;:14;:::i;:::-;8788:25;;8457:363;8284:536;;;;;:::o;10253:111::-;1094:13:1;:11;:13::i;:::-;-1:-1:-1;;;;;10331:17:6;;;::::1;;::::0;;;:8:::1;:17;::::0;;;;:26;;-1:-1:-1;;10331:26:6::1;::::0;::::1;;::::0;;;::::1;::::0;;10253:111::o;6575:427:2:-;6668:4;719:10:5;6668:4:2;6749:25;719:10:5;6766:7:2;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:2;;9835:2:7;6784:85:2;;;9817:21:7;9874:2;9854:18;;;9847:30;9913:34;9893:18;;;9886:62;-1:-1:-1;;;9964:18:7;;;9957:35;10009:19;;6784:85:2;9633:401:7;6784:85:2;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;-1:-1:-1;6991:4:2;;6575:427;-1:-1:-1;;;;6575:427:2:o;3740:189::-;3819:4;719:10:5;3873:28:2;719:10:5;3890:2:2;3894:6;3873:9;:28::i;9240:160:6:-;1094:13:1;:11;:13::i;:::-;9307::6::1;:25:::0;;-1:-1:-1;;;;;;9307:25:6::1;-1:-1:-1::0;;;;;9307:25:6;::::1;;::::0;;9342:12:::1;:10;:12::i;:::-;9369:24;::::0;-1:-1:-1;;;;;2651:32:7;;2633:51;;9369:24:6::1;::::0;2621:2:7;2606:18;9369:24:6::1;2487:203:7::0;3987:149:2;-1:-1:-1;;;;;4102:18:2;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2074:198:1:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:1;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:1;;10241:2:7;2154:73:1::1;::::0;::::1;10223:21:7::0;10280:2;10260:18;;;10253:30;10319:34;10299:18;;;10292:62;-1:-1:-1;;;10370:18:7;;;10363:36;10416:19;;2154:73:1::1;10039:402:7::0;2154:73:1::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;9987:260:6:-;1094:13:1;:11;:13::i;:::-;1430:6:6::1;10092:14;:28;;;;10084:59;;;::::0;-1:-1:-1;;;10084:59:6;;10648:2:7;10084:59:6::1;::::0;::::1;10630:21:7::0;10687:2;10667:18;;;10660:30;-1:-1:-1;;;10706:18:7;;;10699:48;10764:18;;10084:59:6::1;10446:342:7::0;10084:59:6::1;10153:12;:30:::0;;-1:-1:-1;;10193:47:6;10153:30;::::1;;-1:-1:-1::0;;10193:47:6;;;;;10153:30:::1;10193:47;::::0;;;::::1;::::0;;;::::1;;::::0;;9987:260::o;9811:170::-;1094:13:1;:11;:13::i;:::-;9898:8:6::1;:26:::0;;-1:-1:-1;;9898:26:6::1;::::0;::::1;;;::::0;;9954:20:::1;:8:::0;9965:9:::1;9954:20;:::i;:::-;9934:8;:40:::0;;::::1;::::0;;;::::1;;;-1:-1:-1::0;;9934:40:6;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;9811:170:6:o;10457:340:2:-;-1:-1:-1;;;;;10558:19:2;;10550:68;;;;-1:-1:-1;;;10550:68:2;;11249:2:7;10550:68:2;;;11231:21:7;11288:2;11268:18;;;11261:30;11327:34;11307:18;;;11300:62;-1:-1:-1;;;11378:18:7;;;11371:34;11422:19;;10550:68:2;11047:400:7;10550:68:2;-1:-1:-1;;;;;10636:21:2;;10628:68;;;;-1:-1:-1;;;10628:68:2;;11654:2:7;10628:68:2;;;11636:21:7;11693:2;11673:18;;;11666:30;11732:34;11712:18;;;11705:62;-1:-1:-1;;;11783:18:7;;;11776:32;11825:19;;10628:68:2;11452:398:7;10628:68:2;-1:-1:-1;;;;;10707:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;160:25:7;;;10758:32:2;;133:18:7;10758:32:2;;;;;;;10457:340;;;:::o;1359:130:1:-;1273:6;;-1:-1:-1;;;;;1273:6:1;719:10:5;1422:23:1;1414:68;;;;-1:-1:-1;;;1414:68:1;;12057:2:7;1414:68:1;;;12039:21:7;;;12076:18;;;12069:30;12135:34;12115:18;;;12108:62;12187:18;;1414:68:1;11855:356:7;11078:411:2;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:2;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:2;;12418:2:7;11297:68:2;;;12400:21:7;12457:2;12437:18;;;12430:30;12496:31;12476:18;;;12469:59;12545:18;;11297:68:2;12216:353:7;11297:68:2;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;2953:1505:6:-;3106:1;3097:6;:10;3089:49;;;;-1:-1:-1;;;3089:49:6;;12776:2:7;3089:49:6;;;12758:21:7;12815:2;12795:18;;;12788:30;12854:28;12834:18;;;12827:56;12900:18;;3089:49:6;12574:350:7;3089:49:6;3172:11;;3149:10;;-1:-1:-1;;;;;3162:21:6;;;3172:11;;3162:21;:45;;;;-1:-1:-1;;;;;;3188:19:6;;;;;;:8;:19;;;;;;;;3187:20;3162:45;3244:11;;3149:58;;-1:-1:-1;3217:11:6;;-1:-1:-1;;;;;3231:24:6;;;3244:11;;3231:24;:45;;;;-1:-1:-1;;;;;;3260:16:6;;;;;;:8;:16;;;;;;;;3259:17;3231:45;3322:12;:20;3217:59;;-1:-1:-1;3322:20:6;;:30;;;;;3346:6;3322:30;3318:166;;;3377:24;;;;3376:25;3368:68;;;;-1:-1:-1;;;3368:68:6;;13131:2:7;3368:68:6;;;13113:21:7;13170:2;13150:18;;;13143:30;13209:32;13189:18;;;13182:60;13259:18;;3368:68:6;12929:354:7;3368:68:6;3450:23;:21;:23::i;:::-;3524:8;:16;;;:26;;;;;3544:6;3524:26;3520:208;;;-1:-1:-1;;;;;3593:26:6;;;;;;:18;:26;;;;;;3574:15;:45;;3566:73;;;;-1:-1:-1;;;3566:73:6;;13490:2:7;3566:73:6;;;13472:21:7;13529:2;13509:18;;;13502:30;-1:-1:-1;;;13548:18:7;;;13541:45;13603:18;;3566:73:6;13288:339:7;3566:73:6;3700:8;:17;3682:35;;3700:17;;;;;3682:15;:35;:::i;:::-;-1:-1:-1;;;;;3653:26:6;;;;;;:18;:26;;;;;:64;3520:208;3738:17;3758:40;3772:6;3780:9;3791:6;3758:13;:40::i;:::-;3738:60;-1:-1:-1;3808:17:6;3828:21;:6;3738:60;3828:10;:21::i;:::-;-1:-1:-1;;;;;3893:19:6;;;;;;:8;:19;;;;;;3808:41;;-1:-1:-1;3893:19:6;;3892:20;:31;;;;;3917:6;3916:7;3892:31;3888:195;;;4003:16;:14;:16::i;:::-;3964:35;3989:9;3964:20;3974:9;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;3964:20:6;:24;;:35::i;:::-;:55;;3939:133;;;;-1:-1:-1;;;3939:133:6;;13834:2:7;3939:133:6;;;13816:21:7;13873:2;13853:18;;;13846:30;-1:-1:-1;;;13892:18:7;;;13885:49;13951:18;;3939:133:6;13632:343:7;3939:133:6;4122:13;;4118:147;;4151:49;4167:6;4183:4;4190:9;4151:15;:49::i;:::-;4214:40;4229:9;4240:5;4247:6;4214:14;:40::i;:::-;4303:45;4319:6;4327:9;4338;4303:15;:45::i;:::-;4391:17;:15;:17::i;:::-;4387:65;;;4424:17;:15;:17::i;:::-;3079:1379;;;;2953:1505;;;:::o;2426:187:1:-;2518:6;;;-1:-1:-1;;;;;2534:17:1;;;-1:-1:-1;;;;;;2534:17:1;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;3122:96:0:-;3180:7;3206:5;3210:1;3206;:5;:::i;3465:96::-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;10370:200:6:-;10459:13;;;;;;;;;-1:-1:-1;;;;;10459:13:6;-1:-1:-1;;;;;10442:39:6;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10424:84:6;;10517:4;10541:13;;;;;;;;;-1:-1:-1;;;;;10541:13:6;-1:-1:-1;;;;;10524:36:6;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10424:139;;-1:-1:-1;;;;;;10424:139:6;;;;;;;-1:-1:-1;;;;;14641:15:7;;;10424:139:6;;;14623:34:7;14693:15;;14673:18;;;14666:43;14558:18;;10424:139:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10410:11;:153;;-1:-1:-1;;;;;;10410:153:6;-1:-1:-1;;;;;10410:153:6;;;;;;;;;;10370:200::o;6266:820::-;6317:20;6340:11;:9;:11::i;:::-;6317:34;;6365:12;6381:1;6365:17;6361:30;;6384:7;6266:820::o;6361:30::-;6420:21;;6405:36;;6401:169;;;6457:21;:36;6507:24;:32;;-1:-1:-1;;6507:32:6;;;6266:820::o;6401:169::-;6659:12;:30;6580:22;;6605:115;;1430:6;;6605:86;;6644:46;;1430:6;;6659:30;;;;;6644:14;:46::i;:::-;6605:21;;;:38;:86::i;:115::-;6580:140;;6750:14;6735:12;:29;6731:152;;;6780:24;:31;;-1:-1:-1;;6780:31:6;6807:4;6780:31;;;6851:21;;6825:23;:47;6731:152;6897:24;;;;:74;;;;-1:-1:-1;6941:23:6;;:30;;6969:1;6941:27;:30::i;:::-;6925:12;:46;;6897:74;6893:187;;;6987:24;:32;;-1:-1:-1;;6987:32:6;;;7033:21;:36;;;6893:187;6307:779;;6266:820::o;4464:766::-;-1:-1:-1;;;;;4613:16:6;;4590:7;4613:16;;;:8;:16;;;;;;;;;:39;;-1:-1:-1;;;;;;4633:19:6;;;;;;:8;:19;;;;;;;;4613:39;4609:53;;;-1:-1:-1;4661:1:6;4654:8;;4609:53;4696:11;;-1:-1:-1;;;;;4696:11:6;;;4686:21;;;;;;4731:24;;;4766:115;;;;4837:8;:15;4798:72;;1430:6;;4798:56;;4809:44;;4837:15;4817:14;;;;4837:15;;;;4809:27;:44::i;:::-;4798:6;;:10;:56::i;:72::-;4791:79;;;;;;4766:115;4895:6;4891:118;;;4964:8;:16;4924:74;;1430:6;;4924:58;;4935:46;;4964:16;-1:-1:-1;;;4943:15:6;;;;;-1:-1:-1;;;4964:16:6;;;4935:28;:46::i;4891:118::-;5076:8;:16;5027:17;;5047:46;;5076:16;-1:-1:-1;;;5055:15:6;;;;;-1:-1:-1;;;5076:16:6;;;5047:28;:46::i;:::-;5027:66;-1:-1:-1;5103:19:6;5125:42;5164:2;5125:34;5027:66;1640:2;5125:13;:34::i;:42::-;5103:64;-1:-1:-1;5184:39:6;1430:6;5184:23;:6;5103:64;5184:10;:23::i;:39::-;5177:46;4464:766;-1:-1:-1;;;;;;;;4464:766:6:o;2755:96:0:-;2813:7;2839:5;2843:1;2839;:5;:::i;7456:788:2:-;-1:-1:-1;;;;;7552:18:2;;7544:68;;;;-1:-1:-1;;;7544:68:2;;14922:2:7;7544:68:2;;;14904:21:7;14961:2;14941:18;;;14934:30;15000:34;14980:18;;;14973:62;-1:-1:-1;;;15051:18:7;;;15044:35;15096:19;;7544:68:2;14720:401:7;7544:68:2;-1:-1:-1;;;;;7630:16:2;;7622:64;;;;-1:-1:-1;;;7622:64:2;;15328:2:7;7622:64:2;;;15310:21:7;15367:2;15347:18;;;15340:30;15406:34;15386:18;;;15379:62;-1:-1:-1;;;15457:18:7;;;15450:33;15500:19;;7622:64:2;15126:399:7;7622:64:2;-1:-1:-1;;;;;7768:15:2;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:2;;15732:2:7;7793:72:2;;;15714:21:7;15771:2;15751:18;;;15744:30;15810:34;15790:18;;;15783:62;-1:-1:-1;;;15861:18:7;;;15854:36;15907:19;;7793:72:2;15530:402:7;7793:72:2;-1:-1:-1;;;;;7899:15:2;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;160:25:7;;;8114:13:2;;8163:26;;133:18:7;8163:26:2;;;;;;;8200:37;12073:91;5236:1024:6;5322:15;5347:16;5378:5;5374:680;;;5443:8;:15;5399:13;;5415:44;;5443:15;5423:14;;;;5443:15;;;;5415:27;:44::i;:::-;5399:60;;5489:1;5481:5;:9;5473:37;;;;-1:-1:-1;;;5473:37:6;;16139:2:7;5473:37:6;;;16121:21:7;16178:2;16158:18;;;16151:30;-1:-1:-1;;;16197:18:7;;;16190:45;16252:18;;5473:37:6;15937:339:7;5473:37:6;5548:8;:14;5534:40;;5568:5;;5534:29;;:9;;5548:14;;5534:13;:29::i;:40::-;5524:50;;5385:200;5374:680;;;5595:6;5591:463;;;5662:8;:16;5617:13;;5633:46;;5662:16;-1:-1:-1;;;5641:15:6;;;;;-1:-1:-1;;;5662:16:6;;;5633:28;:46::i;:::-;5617:62;;5709:1;5701:5;:9;5693:38;;;;-1:-1:-1;;;5693:38:6;;16483:2:7;5693:38:6;;;16465:21:7;16522:2;16502:18;;;16495:30;-1:-1:-1;;;16541:18:7;;;16534:46;16597:18;;5693:38:6;16281:340:7;5693:38:6;5769:8;:15;5755:41;;5790:5;;5755:30;;:9;;-1:-1:-1;;;5769:15:6;;;;5755:13;:30::i;5591:463::-;5872:8;:16;5827:13;;5843:46;;5872:16;-1:-1:-1;;;5851:15:6;;;;;-1:-1:-1;;;5872:16:6;;;5843:28;:46::i;:::-;5827:62;;5919:1;5911:5;:9;5903:42;;;;-1:-1:-1;;;5903:42:6;;16828:2:7;5903:42:6;;;16810:21:7;16867:2;16847:18;;;16840:30;-1:-1:-1;;;16886:18:7;;;16879:50;16946:18;;5903:42:6;16626:344:7;5903:42:6;5983:8;:15;5969:74;;6040:2;;5969:66;;1640:2;;5969:41;;6004:5;;5969:66;;:9;;-1:-1:-1;;;5983:15:6;;;;5969:13;:30::i;:74::-;5959:84;;5813:241;5591:463;6075:22;:9;6089:7;6075:13;:22::i;:::-;6123:13;;6064:33;;-1:-1:-1;6123:26:6;;6141:7;6123:17;:26::i;:::-;6107:13;:42;6176:14;;:28;;6195:8;6176:18;:28::i;:::-;6159:14;:45;6220:33;;;17149:25:7;;;17205:2;17190:18;;17183:34;;;6220:33:6;;17122:18:7;6220:33:6;;;;;;;5312:948;;5236:1024;;;:::o;11574:195::-;11647:8;;11623:4;;11647:8;;11646:9;:75;;;;-1:-1:-1;11708:13:6;;11689:14;;11671:13;;:33;;:17;:33::i;:::-;:50;;11646:75;:116;;;;-1:-1:-1;;11751:11:6;;-1:-1:-1;;;;;11751:11:6;11737:10;:25;;;11574:195::o;7092:768::-;7137:19;7159:33;7177:14;;7159:13;;:17;;:33;;;;:::i;:::-;7137:55;;7220:13;;7206:11;:27;7202:40;;;7235:7;7092:768::o;7202:40::-;7252:8;:15;;-1:-1:-1;;7252:15:6;7263:4;7252:15;;;7385:14;;7302:21;;7367:33;;:17;:33::i;:::-;7410:14;7427:41;:21;7453:14;7427:25;:41::i;:::-;7410:58;;7486:7;1273:6:1;;-1:-1:-1;;;;;1273:6:1;;1201:85;7486:7:6;-1:-1:-1;;;;;7478:25:6;:33;7504:6;7478:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7567:13:6;;7548:16;7605:15;7567:13;7618:1;7605:12;:15::i;:::-;7590:30;;7630:23;7648:4;7630:17;:23::i;:::-;7672:13;7688:33;:21;7714:6;7688:25;:33::i;:::-;7672:49;-1:-1:-1;7731:40:6;7745:18;:8;7758:4;7745:12;:18::i;:::-;7765:5;7731:13;:40::i;:::-;-1:-1:-1;;7798:1:6;7782:13;:17;;;7809:14;:18;-1:-1:-1;;7837:8:6;:16;;-1:-1:-1;;7837:16:6;;;-1:-1:-1;;7092:768:6:o;12073:91:2:-;;;;:::o;10576:438:6:-;10661:16;;;10675:1;10661:16;;;;;;;;10637:21;;10661:16;;;;;;;;;;-1:-1:-1;10661:16:6;10637:40;;10705:4;10687;10692:1;10687:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10687:23:6;;;:7;;;;;;;;;;:23;;;;10747:13;;10730:38;;;-1:-1:-1;;;10730:38:6;;;;10747:13;;;;;10730:36;;:38;;;;;10687:7;;10730:38;;;;;10747:13;10730:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10720:4;10725:1;10720:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10720:48:6;;;:7;;;;;;;;;:48;10803:13;;10779:46;;10796:4;;10803:13;10818:6;10779:8;:46::i;:::-;10852:13;;10835:172;;-1:-1:-1;;;10835:172:6;;-1:-1:-1;;;;;10852:13:6;;;;10835:53;;:172;;10902:6;;10852:13;;10937:4;;10963;;10982:15;;10835:172;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10835:172:6;;;;;;;;;;;;:::i;11020:409::-;11125:13;;11101:51;;11118:4;;-1:-1:-1;;;;;11125:13:6;11140:11;11101:8;:51::i;:::-;11179:13;;-1:-1:-1;;;;;11179:13:6;11162:47;11217:9;11249:4;11268:11;11179:13;;11323:7;1273:6:1;;-1:-1:-1;;;;;1273:6:1;;1201:85;11323:7:6;11162:207;;;;;;-1:-1:-1;;;;;;11162:207:6;;;-1:-1:-1;;;;;19946:15:7;;;11162:207:6;;;19928:34:7;19978:18;;;19971:34;;;;20021:18;;;20014:34;;;;20064:18;;;20057:34;20128:15;;;20107:19;;;20100:44;11344:15:6;20160:19:7;;;20153:35;19862:19;;11162:207:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;11384:38:6;;;17149:25:7;;;17205:2;17190:18;;17183:34;;;11384:38:6;;-1:-1:-1;17122:18:7;11384:38:6;;;;;;;11020:409;;:::o;196:418:7:-;345:2;334:9;327:21;308:4;377:6;371:13;420:6;415:2;404:9;400:18;393:34;479:6;474:2;466:6;462:15;457:2;446:9;442:18;436:50;535:1;530:2;521:6;510:9;506:22;502:31;495:42;605:2;598;594:7;589:2;581:6;577:15;573:29;562:9;558:45;554:54;546:62;;;196:418;;;;:::o;619:131::-;-1:-1:-1;;;;;694:31:7;;684:42;;674:70;;740:1;737;730:12;755:315;823:6;831;884:2;872:9;863:7;859:23;855:32;852:52;;;900:1;897;890:12;852:52;939:9;926:23;958:31;983:5;958:31;:::i;:::-;1008:5;1060:2;1045:18;;;;1032:32;;-1:-1:-1;;;755:315:7:o;1267:159::-;1334:20;;1394:6;1383:18;;1373:29;;1363:57;;1416:1;1413;1406:12;1363:57;1267:159;;;:::o;1431:401::-;1513:6;1521;1529;1537;1590:3;1578:9;1569:7;1565:23;1561:33;1558:53;;;1607:1;1604;1597:12;1558:53;1630:28;1648:9;1630:28;:::i;:::-;1620:38;;1677:37;1710:2;1699:9;1695:18;1677:37;:::i;:::-;1667:47;;1733:37;1766:2;1755:9;1751:18;1733:37;:::i;:::-;1723:47;;1789:37;1822:2;1811:9;1807:18;1789:37;:::i;:::-;1779:47;;1431:401;;;;;;;:::o;1837:456::-;1914:6;1922;1930;1983:2;1971:9;1962:7;1958:23;1954:32;1951:52;;;1999:1;1996;1989:12;1951:52;2038:9;2025:23;2057:31;2082:5;2057:31;:::i;:::-;2107:5;-1:-1:-1;2164:2:7;2149:18;;2136:32;2177:33;2136:32;2177:33;:::i;:::-;1837:456;;2229:7;;-1:-1:-1;;;2283:2:7;2268:18;;;;2255:32;;1837:456::o;3144:247::-;3203:6;3256:2;3244:9;3235:7;3231:23;3227:32;3224:52;;;3272:1;3269;3262:12;3224:52;3311:9;3298:23;3330:31;3355:5;3330:31;:::i;3854:180::-;3913:6;3966:2;3954:9;3945:7;3941:23;3937:32;3934:52;;;3982:1;3979;3972:12;3934:52;-1:-1:-1;4005:23:7;;3854:180;-1:-1:-1;3854:180:7:o;4435:160::-;4500:20;;4556:13;;4549:21;4539:32;;4529:60;;4585:1;4582;4575:12;4600:315;4665:6;4673;4726:2;4714:9;4705:7;4701:23;4697:32;4694:52;;;4742:1;4739;4732:12;4694:52;4781:9;4768:23;4800:31;4825:5;4800:31;:::i;:::-;4850:5;-1:-1:-1;4874:35:7;4905:2;4890:18;;4874:35;:::i;:::-;4864:45;;4600:315;;;;;:::o;5419:388::-;5487:6;5495;5548:2;5536:9;5527:7;5523:23;5519:32;5516:52;;;5564:1;5561;5554:12;5516:52;5603:9;5590:23;5622:31;5647:5;5622:31;:::i;:::-;5672:5;-1:-1:-1;5729:2:7;5714:18;;5701:32;5742:33;5701:32;5742:33;:::i;:::-;5794:7;5784:17;;;5419:388;;;;;:::o;5812:252::-;5876:6;5884;5937:2;5925:9;5916:7;5912:23;5908:32;5905:52;;;5953:1;5950;5943:12;5905:52;5976:26;5992:9;5976:26;:::i;:::-;5966:36;;6021:37;6054:2;6043:9;6039:18;6021:37;:::i;6069:121::-;6154:10;6147:5;6143:22;6136:5;6133:33;6123:61;;6180:1;6177;6170:12;6195:313;6259:6;6267;6320:2;6308:9;6299:7;6295:23;6291:32;6288:52;;;6336:1;6333;6326:12;6288:52;6359:26;6375:9;6359:26;:::i;:::-;6349:36;;6435:2;6424:9;6420:18;6407:32;6448:30;6472:5;6448:30;:::i;6513:380::-;6592:1;6588:12;;;;6635;;;6656:61;;6710:4;6702:6;6698:17;6688:27;;6656:61;6763:2;6755:6;6752:14;6732:18;6729:38;6726:161;;6809:10;6804:3;6800:20;6797:1;6790:31;6844:4;6841:1;6834:15;6872:4;6869:1;6862:15;6726:161;;6513:380;;;:::o;6898:127::-;6959:10;6954:3;6950:20;6947:1;6940:31;6990:4;6987:1;6980:15;7014:4;7011:1;7004:15;7030:168;7097:6;7123:10;;;7135;;;7119:27;;7158:11;;;7155:37;;;7172:18;;:::i;:::-;7155:37;7030:168;;;;:::o;7892:125::-;7957:9;;;7978:10;;;7975:36;;;7991:18;;:::i;8022:136::-;8057:3;-1:-1:-1;;;8078:22:7;;8075:48;;8103:18;;:::i;:::-;-1:-1:-1;8143:1:7;8139:13;;8022:136::o;8511:188::-;8590:13;;-1:-1:-1;;;;;8632:42:7;;8622:53;;8612:81;;8689:1;8686;8679:12;8704:419;8791:6;8799;8807;8860:2;8848:9;8839:7;8835:23;8831:32;8828:52;;;8876:1;8873;8866:12;8828:52;8899:40;8929:9;8899:40;:::i;:::-;8889:50;;8958:49;9003:2;8992:9;8988:18;8958:49;:::i;:::-;8948:59;;9050:2;9039:9;9035:18;9029:25;9063:30;9087:5;9063:30;:::i;:::-;9112:5;9102:15;;;8704:419;;;;;:::o;9128:251::-;9198:6;9251:2;9239:9;9230:7;9226:23;9222:32;9219:52;;;9267:1;9264;9257:12;9219:52;9299:9;9293:16;9318:31;9343:5;9318:31;:::i;9384:127::-;9445:10;9440:3;9436:20;9433:1;9426:31;9476:4;9473:1;9466:15;9500:4;9497:1;9490:15;9516:112;9548:1;9574;9564:35;;9579:18;;:::i;:::-;-1:-1:-1;9613:9:7;;9516:112::o;10793:249::-;10864:10;10906;;;10918;;;10902:27;10949:20;;;;10864:10;10988:24;;;10978:58;;11016:18;;:::i;:::-;10978:58;;10793:249;;;;:::o;13980:128::-;14047:9;;;14068:11;;;14065:37;;;14082:18;;:::i;14113:168::-;14186:9;;;14217;;14234:15;;;14228:22;;14214:37;14204:71;;14255:18;;:::i;14286:120::-;14326:1;14352;14342:35;;14357:18;;:::i;:::-;-1:-1:-1;14391:9:7;;14286:120::o;17228:127::-;17289:10;17284:3;17280:20;17277:1;17270:31;17320:4;17317:1;17310:15;17344:4;17341:1;17334:15;17360:127;17421:10;17416:3;17412:20;17409:1;17402:31;17452:4;17449:1;17442:15;17476:4;17473:1;17466:15;17492:980;17754:4;17802:3;17791:9;17787:19;17833:6;17822:9;17815:25;17859:2;17897:6;17892:2;17881:9;17877:18;17870:34;17940:3;17935:2;17924:9;17920:18;17913:31;17964:6;17999;17993:13;18030:6;18022;18015:22;18068:3;18057:9;18053:19;18046:26;;18107:2;18099:6;18095:15;18081:29;;18128:1;18138:195;18152:6;18149:1;18146:13;18138:195;;;18217:13;;-1:-1:-1;;;;;18213:39:7;18201:52;;18308:15;;;;18273:12;;;;18249:1;18167:9;18138:195;;;-1:-1:-1;;;;;;;18389:32:7;;;;18384:2;18369:18;;18362:60;-1:-1:-1;;;18453:3:7;18438:19;18431:35;18350:3;17492:980;-1:-1:-1;;;17492:980:7:o;18477:1105::-;18572:6;18603:2;18646;18634:9;18625:7;18621:23;18617:32;18614:52;;;18662:1;18659;18652:12;18614:52;18695:9;18689:16;18724:18;18765:2;18757:6;18754:14;18751:34;;;18781:1;18778;18771:12;18751:34;18819:6;18808:9;18804:22;18794:32;;18864:7;18857:4;18853:2;18849:13;18845:27;18835:55;;18886:1;18883;18876:12;18835:55;18915:2;18909:9;18937:2;18933;18930:10;18927:36;;;18943:18;;:::i;:::-;18989:2;18986:1;18982:10;19021:2;19015:9;19084:2;19080:7;19075:2;19071;19067:11;19063:25;19055:6;19051:38;19139:6;19127:10;19124:22;19119:2;19107:10;19104:18;19101:46;19098:72;;;19150:18;;:::i;:::-;19186:2;19179:22;19236:18;;;19270:15;;;;-1:-1:-1;19312:11:7;;;19308:20;;;19340:19;;;19337:39;;;19372:1;19369;19362:12;19337:39;19396:11;;;;19416:135;19432:6;19427:3;19424:15;19416:135;;;19498:10;;19486:23;;19449:12;;;;19529;;;;19416:135;;20199:306;20287:6;20295;20303;20356:2;20344:9;20335:7;20331:23;20327:32;20324:52;;;20372:1;20369;20362:12;20324:52;20401:9;20395:16;20385:26;;20451:2;20440:9;20436:18;20430:25;20420:35;;20495:2;20484:9;20480:18;20474:25;20464:35;;20199:306;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1873200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_maxWalletSize()": "infinite",
								"accumulatedEco()": "2372",
								"accumulatedLp()": "2327",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24686",
								"balanceOf(address)": "2632",
								"configureCooldown(bool,uint32)": "51274",
								"configureDiamondFloor(bool,uint16)": "infinite",
								"cooldown()": "2448",
								"cooldownRemaining(address)": "infinite",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27028",
								"diamondFloor()": "8866",
								"increaseAllowance(address,uint256)": "infinite",
								"isExempt(address)": "2567",
								"maxWalletPercentage()": "2373",
								"name()": "infinite",
								"owner()": "2463",
								"pairAddress()": "2447",
								"pairPrice()": "infinite",
								"priceDeviation()": "infinite",
								"renounceOwnership()": "infinite",
								"routerAddress()": "2448",
								"setExempt(address,bool)": "26946",
								"setMaxWalletPercentage(uint256)": "25689",
								"setRouter(address)": "infinite",
								"setTaxRates(uint16,uint16,uint16,uint16)": "infinite",
								"setThreshold(uint256)": "24598",
								"swapThreshold()": "2330",
								"symbol()": "infinite",
								"taxRates()": "2517",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_addLiquidity(uint256,uint256)": "infinite",
								"_calculateTax(address,address,uint256)": "infinite",
								"_checkPriceConditions()": "infinite",
								"_distributeTax(uint256,bool,bool)": "infinite",
								"_setupPair()": "infinite",
								"_shouldSwapBack()": "10734",
								"_swapAndLiquify()": "infinite",
								"_swapTokensForETH(uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1203,
									"end": 12034,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1203,
									"end": 12034,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1203,
									"end": 12034,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1383,
									"end": 1386,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1346,
									"end": 1386,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1346,
									"end": 1386,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1697,
									"end": 1716,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1712,
									"end": 1716,
									"name": "PUSH",
									"source": 6,
									"value": "3E8"
								},
								{
									"begin": 1318,
									"end": 1340,
									"name": "PUSH",
									"source": 6,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 1697,
									"end": 1716,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1697,
									"end": 1716,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1697,
									"end": 1716,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1697,
									"end": 1716,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1716,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1666,
									"end": 1716,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2620,
									"end": 2947,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 2620,
									"end": 2947,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2620,
									"end": 2947,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2620,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2620,
									"end": 2947,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2620,
									"end": 2947,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2620,
									"end": 2947,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2620,
									"end": 2947,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2620,
									"end": 2947,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2620,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2620,
									"end": 2947,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26B2B6B29021B7B4B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D454D45"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2671,
									"end": 2701,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2690,
									"end": 2700,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 2671,
									"end": 2689,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2671,
									"end": 2701,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2671,
									"end": 2701,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2671,
									"end": 2701,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2711,
									"end": 2742,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2717,
									"end": 2727,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1340,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 2711,
									"end": 2716,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2711,
									"end": 2742,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2711,
									"end": 2742,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2711,
									"end": 2742,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2752,
									"end": 2765,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 2752,
									"end": 2782,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2752,
									"end": 2782,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2752,
									"end": 2782,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2299,
									"end": 2341,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "10ED43C718714EB63D5AA57B78B54704E256024E"
								},
								{
									"begin": 2752,
									"end": 2782,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2752,
									"end": 2782,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2752,
									"end": 2782,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 2804,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2792,
									"end": 2802,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2792,
									"end": 2804,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 2804,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2792,
									"end": 2804,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2854,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2823,
									"end": 2831,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2823,
									"end": 2854,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2823,
									"end": 2854,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2823,
									"end": 2854,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2823,
									"end": 2854,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2823,
									"end": 2854,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2882,
									"end": 2892,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2893,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2893,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2881,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2873,
									"end": 2893,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2893,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2893,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2893,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2893,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2893,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2900,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2900,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2873,
									"end": 2900,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2900,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2900,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2823,
									"end": 2854,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2873,
									"end": 2900,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2900,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2900,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2900,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2900,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2900,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2927,
									"end": 2931,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2933,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2933,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2933,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2933,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2933,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2933,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2940,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2940,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2940,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2940,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2940,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2940,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2940,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2940,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1203,
									"end": 12034,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1203,
									"end": 12034,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3125,
									"end": 3127,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3107,
									"end": 3128,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3164,
									"end": 3166,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3144,
									"end": 3162,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3144,
									"end": 3162,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3144,
									"end": 3162,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3137,
									"end": 3167,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3203,
									"end": 3236,
									"name": "PUSH",
									"source": 7,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 3183,
									"end": 3201,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3183,
									"end": 3201,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3183,
									"end": 3201,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3176,
									"end": 3237,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8747,
									"end": 8753,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 8731,
									"end": 8753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8908,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3656,
									"end": 3681,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3656,
									"end": 3681,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3656,
									"end": 3681,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8520,
									"end": 9055,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10370,
									"end": 10570,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 10370,
									"end": 10570,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10459,
									"end": 10472,
									"name": "PUSH",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 10459,
									"end": 10472,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10459,
									"end": 10472,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10459,
									"end": 10472,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 10459,
									"end": 10472,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10459,
									"end": 10472,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 10459,
									"end": 10472,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 10459,
									"end": 10472,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10459,
									"end": 10472,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10459,
									"end": 10472,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10442,
									"end": 10481,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10481,
									"name": "PUSH",
									"source": 6,
									"value": "C45A0155"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFF"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "STATICCALL",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 10442,
									"end": 10483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10442,
									"end": 10483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10424,
									"end": 10508,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10508,
									"name": "PUSH",
									"source": 6,
									"value": "C9C65396"
								},
								{
									"begin": 10517,
									"end": 10521,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 10541,
									"end": 10554,
									"name": "PUSH",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 10541,
									"end": 10554,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10541,
									"end": 10554,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10541,
									"end": 10554,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 10541,
									"end": 10554,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10541,
									"end": 10554,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 10541,
									"end": 10554,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 10541,
									"end": 10554,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10541,
									"end": 10554,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10541,
									"end": 10554,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10524,
									"end": 10560,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10560,
									"name": "PUSH",
									"source": 6,
									"value": "AD5C4648"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFF"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "STATICCALL",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 10524,
									"end": 10562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 10524,
									"end": 10562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4217,
									"end": 4232,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4217,
									"end": 4232,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4217,
									"end": 4232,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4199,
									"end": 4233,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4269,
									"end": 4284,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4269,
									"end": 4284,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4267,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4249,
									"end": 4267,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4267,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4242,
									"end": 4285,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4134,
									"end": 4152,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4134,
									"end": 4152,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "CALL",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 10424,
									"end": 10563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 10424,
									"end": 10563,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10410,
									"end": 10421,
									"name": "PUSH",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 10410,
									"end": 10563,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10410,
									"end": 10563,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10410,
									"end": 10563,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10410,
									"end": 10563,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10410,
									"end": 10563,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10410,
									"end": 10563,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10410,
									"end": 10563,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 10410,
									"end": 10563,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10410,
									"end": 10563,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10410,
									"end": 10563,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10410,
									"end": 10563,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 10410,
									"end": 10563,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10410,
									"end": 10563,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 10370,
									"end": 10570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 231,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 14,
									"end": 231,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 54,
									"end": 55,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 70,
									"end": 202,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 70,
									"end": 202,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 124,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 119,
									"end": 122,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 115,
									"end": 135,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 112,
									"end": 113,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 105,
									"end": 136,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 159,
									"end": 163,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 156,
									"end": 157,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 149,
									"end": 164,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 187,
									"end": 191,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 185,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 192,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 70,
									"end": 202,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 70,
									"end": 202,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 216,
									"end": 225,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 216,
									"end": 225,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14,
									"end": 231,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 236,
									"end": 363,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 236,
									"end": 363,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 297,
									"end": 307,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 292,
									"end": 295,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 309,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 318,
									"end": 333,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 352,
									"end": 356,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 357,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 368,
									"end": 748,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 368,
									"end": 748,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 447,
									"end": 448,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 443,
									"end": 455,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 443,
									"end": 455,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 443,
									"end": 455,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 490,
									"end": 502,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 490,
									"end": 502,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 490,
									"end": 502,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 511,
									"end": 572,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 511,
									"end": 572,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 565,
									"end": 569,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 557,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 553,
									"end": 570,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 543,
									"end": 570,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 543,
									"end": 570,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 511,
									"end": 572,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 511,
									"end": 572,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 618,
									"end": 620,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 610,
									"end": 616,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 607,
									"end": 621,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 587,
									"end": 605,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 584,
									"end": 622,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 581,
									"end": 742,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 581,
									"end": 742,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 664,
									"end": 674,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 659,
									"end": 662,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 655,
									"end": 675,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 652,
									"end": 653,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 676,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 699,
									"end": 703,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 697,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 689,
									"end": 704,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 727,
									"end": 731,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 724,
									"end": 725,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 717,
									"end": 732,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 581,
									"end": 742,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 581,
									"end": 742,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 581,
									"end": 742,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 368,
									"end": 748,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 368,
									"end": 748,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 368,
									"end": 748,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 368,
									"end": 748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 879,
									"end": 1397,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 879,
									"end": 1397,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 976,
									"end": 979,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 973,
									"end": 984,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1391,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 970,
									"end": 1391,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1022,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1014,
									"end": 1015,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1007,
									"end": 1023,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1065,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1058,
									"end": 1059,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1048,
									"end": 1066,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1133,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1119,
									"end": 1129,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1134,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1113,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1108,
									"end": 1135,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1102,
									"end": 1106,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1098,
									"end": 1136,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1171,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1155,
									"end": 1165,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1152,
									"end": 1172,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1196,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1149,
									"end": 1196,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1190,
									"end": 1194,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1149,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1240,
									"end": 1243,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1248,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1233,
									"end": 1234,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1229,
									"end": 1249,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1223,
									"end": 1227,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1219,
									"end": 1250,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1209,
									"end": 1250,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1209,
									"end": 1250,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1316,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1308,
									"end": 1321,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 1378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1363,
									"end": 1379,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1379,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1345,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1333,
									"end": 1346,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1307,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1307,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 879,
									"end": 1397,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 879,
									"end": 1397,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 879,
									"end": 1397,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 879,
									"end": 1397,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 2918,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1573,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1703,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1703,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1715,
									"end": 1745,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1745,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1712,
									"end": 1768,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1712,
									"end": 1768,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1712,
									"end": 1768,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1748,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1748,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1748,
									"end": 1766,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1748,
									"end": 1766,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1748,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1874,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1867,
									"end": 1873,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1859,
									"end": 1863,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1864,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1827,
									"end": 1865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1865,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1827,
									"end": 1865,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1825,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1874,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1777,
									"end": 1874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1874,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1777,
									"end": 1874,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1929,
									"end": 1933,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1929,
									"end": 1933,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1986,
									"end": 1988,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1975,
									"end": 1989,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1975,
									"end": 1989,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2003,
									"end": 2004,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1998,
									"end": 2661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2661,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2661,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 1998,
									"end": 2661,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2705,
									"end": 2706,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2722,
									"end": 2728,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2719,
									"end": 2808,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2719,
									"end": 2808,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2719,
									"end": 2808,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2774,
									"end": 2793,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2774,
									"end": 2793,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2774,
									"end": 2793,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2768,
									"end": 2794,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2719,
									"end": 2808,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2719,
									"end": 2808,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1530,
									"end": 1531,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1526,
									"end": 1537,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1537,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1537,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1522,
									"end": 1546,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1518,
									"end": 1547,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1548,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1555,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1550,
									"end": 1561,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1561,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1561,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1505,
									"end": 1562,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2821,
									"end": 2902,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2821,
									"end": 2902,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2661,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 1998,
									"end": 2661,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 826,
									"end": 827,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 819,
									"end": 833,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 819,
									"end": 833,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 819,
									"end": 833,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 863,
									"end": 867,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 850,
									"end": 868,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 850,
									"end": 868,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2034,
									"end": 2054,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2034,
									"end": 2054,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2034,
									"end": 2054,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2164,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2174,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2276,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2276,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2374,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2374,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2374,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2374,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2315,
									"end": 2316,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2303,
									"end": 2317,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2303,
									"end": 2317,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2303,
									"end": 2317,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2303,
									"end": 2317,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2156,
									"end": 2159,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2416,
									"end": 2422,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2414,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2404,
									"end": 2423,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2602,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 2401,
									"end": 2602,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2477,
									"end": 2496,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2477,
									"end": 2496,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2477,
									"end": 2496,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2471,
									"end": 2497,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2556,
									"end": 2570,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2556,
									"end": 2570,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2556,
									"end": 2570,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 2552,
									"end": 2576,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2548,
									"end": 2585,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2544,
									"end": 2586,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2529,
									"end": 2587,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2514,
									"end": 2588,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2514,
									"end": 2588,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2602,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 2401,
									"end": 2602,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2602,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2602,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2648,
									"end": 2649,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2639,
									"end": 2645,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2636,
									"end": 2637,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2632,
									"end": 2646,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2628,
									"end": 2650,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2622,
									"end": 2626,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2615,
									"end": 2651,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 2918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 2918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 2918,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3505,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 3283,
									"end": 3505,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3348,
									"end": 3357,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3348,
									"end": 3357,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3348,
									"end": 3357,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3379,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3379,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3379,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3366,
									"end": 3499,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3366,
									"end": 3499,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3366,
									"end": 3499,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3421,
									"end": 3431,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 3416,
									"end": 3419,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 3412,
									"end": 3432,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3409,
									"end": 3410,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3402,
									"end": 3433,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3460,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 3453,
									"end": 3454,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3446,
									"end": 3461,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3484,
									"end": 3488,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3481,
									"end": 3482,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3474,
									"end": 3489,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3366,
									"end": 3499,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3366,
									"end": 3499,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3505,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3505,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3505,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3692,
									"end": 3982,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3692,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3762,
									"end": 3768,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3815,
									"end": 3817,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3803,
									"end": 3812,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3794,
									"end": 3801,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3790,
									"end": 3813,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3786,
									"end": 3818,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3835,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3783,
									"end": 3835,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3831,
									"end": 3832,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3828,
									"end": 3829,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3833,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3835,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3783,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3857,
									"end": 3873,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3857,
									"end": 3873,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3902,
									"end": 3933,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3902,
									"end": 3933,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3892,
									"end": 3934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3892,
									"end": 3934,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3882,
									"end": 3952,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3948,
									"end": 3949,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3945,
									"end": 3946,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3938,
									"end": 3950,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 3952,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3882,
									"end": 3952,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3971,
									"end": 3976,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3692,
									"end": 3982,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3692,
									"end": 3982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3987,
									"end": 4291,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3987,
									"end": 4291,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1203,
									"end": 12034,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1203,
									"end": 12034,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1203,
									"end": 12034,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1203,
									"end": 12034,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1203,
									"end": 12034,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1203,
									"end": 12034,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1203,
									"end": 12034,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209064509e96eb5ad31add3e9439730d8e3bca74dffe7f1b1ff9ec2c52023a7d4264736f6c63430008190033",
									".code": [
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "8F9A55C0"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "AD5DFF73"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "D8D61C40"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "D8D61C40"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "FE0BB982"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "FE6B751E"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "AD5DFF73"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "C0D78655"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "C531B108"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "C95457FF"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "9D82190F"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "9D82190F"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "9FDE54F5"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "A457C2D7"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "A8B08982"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "8F9A55C0"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "9491F94D"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "960BFE04"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "333F4B3D"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "7773168F"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "787A08A6"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "7A845ECE"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "333F4B3D"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "39509351"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "599CA397"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "3268CC56"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "445B667"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "1569D181"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 12034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1254,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1233,
											"end": 1255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1256,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1256,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1205,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1075,
											"end": 1262,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 9406,
											"end": 9697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 9406,
											"end": 9697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2430,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2413,
											"end": 2431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2298,
											"end": 2482,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2684,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2487,
											"end": 2690,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "10000"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2934,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2977,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2977,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3010,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2993,
											"end": 3011,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2993,
											"end": 3011,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3029,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3080,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3080,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3080,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3038,
											"end": 3081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3038,
											"end": 3081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3038,
											"end": 3081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3038,
											"end": 3081,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3132,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3132,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3132,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3114,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3090,
											"end": 3133,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2908,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2890,
											"end": 2909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2695,
											"end": 3139,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 8826,
											"end": 9234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3781,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3781,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3760,
											"end": 3782,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3742,
											"end": 3783,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3742,
											"end": 3783,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 3841,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3819,
											"end": 3842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3842,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3816,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3792,
											"end": 3843,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3715,
											"end": 3733,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1947,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3576,
											"end": 3849,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 11775,
											"end": 11997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 11775,
											"end": 11997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 11435,
											"end": 11568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7866,
											"end": 8278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 9703,
											"end": 9805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 9703,
											"end": 9805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 8284,
											"end": 8820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 8284,
											"end": 8820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4295,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4295,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4295,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4328,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4329,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4311,
											"end": 4329,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4381,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4412,
											"end": 4414,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4397,
											"end": 4415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4397,
											"end": 4415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4390,
											"end": 4424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4242,
											"end": 4261,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4039,
											"end": 4430,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 10253,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 10253,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2251,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2348,
											"end": 2388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2388,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 9240,
											"end": 9400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 9240,
											"end": 9400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1785,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5204,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5204,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5183,
											"end": 5205,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5206,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5206,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5254,
											"end": 5260,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 5242,
											"end": 5261,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5242,
											"end": 5261,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5242,
											"end": 5261,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5239,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5222,
											"end": 5240,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5240,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5215,
											"end": 5262,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5278,
											"end": 5296,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5278,
											"end": 5296,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5278,
											"end": 5296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5305,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5305,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5305,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5348,
											"end": 5362,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5363,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5364,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5395,
											"end": 5398,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5380,
											"end": 5399,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 5399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5408,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5152,
											"end": 5155,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5137,
											"end": 5156,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4920,
											"end": 5414,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1750,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 9987,
											"end": 10247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 9987,
											"end": 10247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 9811,
											"end": 9981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 9811,
											"end": 9981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 9406,
											"end": 9697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9C4"
										},
										{
											"begin": 9524,
											"end": 9538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 9532,
											"end": 9538,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9529,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 9524,
											"end": 9538,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9538,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 9524,
											"end": 9538,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9516,
											"end": 9566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9516,
											"end": 9566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7405,
											"end": 7407,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9516,
											"end": 9566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7387,
											"end": 7408,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7446,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7417,
											"end": 7447,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9AC2F040646A4A40C4EAF240E8C2F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7463,
											"end": 7481,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7463,
											"end": 7481,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7463,
											"end": 7481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7456,
											"end": 7501,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7536,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7518,
											"end": 7536,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 9516,
											"end": 9566,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9604,
											"end": 9608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9C4"
										},
										{
											"begin": 9584,
											"end": 9600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 9593,
											"end": 9600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9584,
											"end": 9590,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9584,
											"end": 9600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 9584,
											"end": 9600,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9584,
											"end": 9600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 9584,
											"end": 9600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9584,
											"end": 9608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 9584,
											"end": 9608,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9584,
											"end": 9608,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9584,
											"end": 9608,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9576,
											"end": 9629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 9576,
											"end": 9629,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9576,
											"end": 9629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9576,
											"end": 9629,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9576,
											"end": 9629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9576,
											"end": 9629,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7749,
											"end": 7751,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9576,
											"end": 9629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9576,
											"end": 9629,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9576,
											"end": 9629,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 7752,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 7790,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7761,
											"end": 7791,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9AC2F040646A4A40E6CAD8D840E8C2F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7800,
											"end": 7846,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7863,
											"end": 7881,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7863,
											"end": 7881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9576,
											"end": 9629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 7547,
											"end": 7887,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9576,
											"end": 9629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 9576,
											"end": 9629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "PUSH",
											"source": 6,
											"value": "10000"
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "OR",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9690,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9406,
											"end": 9697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5441,
											"end": 5452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8916,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 8895,
											"end": 8916,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8873,
											"end": 8879,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8873,
											"end": 8879,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8921,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 8891,
											"end": 8931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8930,
											"end": 8931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8930,
											"end": 8931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 9234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8931,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 8891,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8941,
											"end": 8961,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8964,
											"end": 8973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 8964,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 8975,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8964,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9028,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 9007,
											"end": 9028,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8941,
											"end": 8975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8941,
											"end": 8975,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8992,
											"end": 9028,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8992,
											"end": 9028,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8992,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 8992,
											"end": 9227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9204,
											"end": 9225,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 9204,
											"end": 9225,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 9150,
											"end": 9226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 9194,
											"end": 9198,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9150,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 9204,
											"end": 9225,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9176,
											"end": 9188,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 9150,
											"end": 9189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9189,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 9150,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 9150,
											"end": 9199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9199,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 9150,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 9150,
											"end": 9226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9226,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 9150,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 9142,
											"end": 9227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 9142,
											"end": 9227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9227,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 9142,
											"end": 9227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8992,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 8992,
											"end": 9227,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8992,
											"end": 9227,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 8992,
											"end": 9227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9104,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 9104,
											"end": 9125,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 9050,
											"end": 9126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 9094,
											"end": 9098,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9050,
											"end": 9089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 9050,
											"end": 9062,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9104,
											"end": 9125,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 9050,
											"end": 9089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9126,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 9050,
											"end": 9126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8985,
											"end": 9227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8985,
											"end": 9227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8985,
											"end": 9227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 9234,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 9234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 11881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 11864,
											"end": 11874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11864,
											"end": 11881,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11864,
											"end": 11881,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11856,
											"end": 11905,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 11856,
											"end": 11905,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11856,
											"end": 11905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11856,
											"end": 11905,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11856,
											"end": 11905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11856,
											"end": 11905,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11856,
											"end": 11905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11856,
											"end": 11905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11856,
											"end": 11905,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8347,
											"end": 8368,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8404,
											"end": 8406,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 8384,
											"end": 8402,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8384,
											"end": 8402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8402,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8377,
											"end": 8407,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585E080C49481DD85B1B195D081B1A5B5A5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8423,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8423,
											"end": 8441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8441,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8416,
											"end": 8465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8500,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8482,
											"end": 8500,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11856,
											"end": 11905,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 8163,
											"end": 8506,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11856,
											"end": 11905,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 11856,
											"end": 11905,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11915,
											"end": 11934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 11915,
											"end": 11947,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11915,
											"end": 11947,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11915,
											"end": 11947,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 11962,
											"end": 11990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11962,
											"end": 11990,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "12528A3C61E0F3B2D6FC707A9FC58B1AF86E252CAD0D7F4C154EBEABB162DACE"
										},
										{
											"begin": 11962,
											"end": 11990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11990,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 11962,
											"end": 11990,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11962,
											"end": 11990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11962,
											"end": 11990,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11962,
											"end": 11990,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11962,
											"end": 11990,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11962,
											"end": 11990,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11962,
											"end": 11990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11962,
											"end": 11990,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 11775,
											"end": 11997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11775,
											"end": 11997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11482,
											"end": 11489,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11508,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 11508,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 11525,
											"end": 11544,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 11525,
											"end": 11544,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1340,
											"name": "PUSH",
											"source": 6,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 11508,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 11508,
											"end": 11524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11545,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11508,
											"end": 11545,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11508,
											"end": 11561,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 11508,
											"end": 11561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11501,
											"end": 11561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11501,
											"end": 11561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7908,
											"end": 7915,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7928,
											"end": 7944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 7993,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 7982,
											"end": 7993,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 7993,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 7993,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 7993,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 7993,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7982,
											"end": 7993,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 7993,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 7993,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7982,
											"end": 7993,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7967,
											"end": 8006,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8006,
											"name": "PUSH",
											"source": 6,
											"value": "902F1AC"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 7967,
											"end": 8008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 7967,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7927,
											"end": 8008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7927,
											"end": 8008,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7927,
											"end": 8008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7927,
											"end": 8008,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7927,
											"end": 8008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8022,
											"end": 8030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8022,
											"end": 8035,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8022,
											"end": 8035,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8022,
											"end": 8052,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8022,
											"end": 8052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 8022,
											"end": 8052,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8039,
											"end": 8052,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8052,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8052,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8022,
											"end": 8052,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 8022,
											"end": 8052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8018,
											"end": 8062,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8018,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 8018,
											"end": 8062,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8061,
											"end": 8062,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8062,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8054,
											"end": 8062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8054,
											"end": 8062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8054,
											"end": 8062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8018,
											"end": 8062,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 8018,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8103,
											"end": 8114,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 8103,
											"end": 8114,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DFE1681"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8136,
											"end": 8140,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8136,
											"end": 8140,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8103,
											"end": 8114,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8103,
											"end": 8114,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8122,
											"name": "PUSH",
											"source": 6,
											"value": "DFE1681"
										},
										{
											"begin": 8088,
											"end": 8122,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8103,
											"end": 8114,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 8088,
											"end": 8124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8088,
											"end": 8124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8088,
											"end": 8141,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8141,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 8088,
											"end": 8271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8221,
											"end": 8248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8238,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8238,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8243,
											"end": 8247,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8221,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8221,
											"end": 8248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8271,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 8221,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 8088,
											"end": 8271,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8271,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 8088,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8156,
											"end": 8206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8188,
											"end": 8205,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8205,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8205,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8156,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8156,
											"end": 8183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8156,
											"end": 8173,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8156,
											"end": 8173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8178,
											"end": 8182,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8156,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8156,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8156,
											"end": 8206,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 8156,
											"end": 8206,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8271,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 9703,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9773,
											"end": 9786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 9773,
											"end": 9798,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9703,
											"end": 9805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8487,
											"end": 8514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8487,
											"end": 8514,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8487,
											"end": 8514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8487,
											"end": 8514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8487,
											"end": 8514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8487,
											"end": 8505,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 8487,
											"end": 8514,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8487,
											"end": 8514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8487,
											"end": 8514,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8487,
											"end": 8514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8487,
											"end": 8514,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8487,
											"end": 8514,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8517,
											"end": 8532,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8487,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 8487,
											"end": 8600,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8599,
											"end": 8600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8487,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 8487,
											"end": 8600,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8487,
											"end": 8600,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 8487,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8548,
											"end": 8575,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8575,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8575,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8548,
											"end": 8575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8575,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8566,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 8548,
											"end": 8575,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8548,
											"end": 8575,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8575,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8548,
											"end": 8575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8575,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8575,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 8548,
											"end": 8596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8595,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 8548,
											"end": 8596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8596,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 8548,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8467,
											"end": 8600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8627,
											"end": 8647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 8467,
											"end": 8600,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8641,
											"end": 8646,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 8627,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 8627,
											"end": 8647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8627,
											"end": 8647,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 8627,
											"end": 8647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8619,
											"end": 8647,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 8670,
											"end": 8675,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 8657,
											"end": 8675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8694,
											"end": 8713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8708,
											"end": 8712,
											"name": "PUSH",
											"source": 6,
											"value": "E10"
										},
										{
											"begin": 8694,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 8694,
											"end": 8713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8694,
											"end": 8713,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 8694,
											"end": 8713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8713,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8723,
											"end": 8740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 8736,
											"end": 8740,
											"name": "PUSH",
											"source": 6,
											"value": "E10"
										},
										{
											"begin": 8723,
											"end": 8740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8723,
											"end": 8740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 8723,
											"end": 8740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8723,
											"end": 8740,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 8723,
											"end": 8740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8723,
											"end": 8740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 8723,
											"end": 8740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8775,
											"end": 8777,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 8761,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 8761,
											"end": 8778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8750,
											"end": 8778,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8799,
											"end": 8813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 8811,
											"end": 8813,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 8799,
											"end": 8808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8799,
											"end": 8813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 8799,
											"end": 8813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8799,
											"end": 8813,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 8799,
											"end": 8813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8788,
											"end": 8813,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8788,
											"end": 8813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8457,
											"end": 8820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 10253,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10331,
											"end": 10348,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10348,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10348,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10331,
											"end": 10348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10348,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10348,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 10331,
											"end": 10348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10331,
											"end": 10348,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10348,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10331,
											"end": 10348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10348,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10357,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10357,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10331,
											"end": 10357,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10357,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10357,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10357,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10357,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10357,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10357,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10357,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9835,
											"end": 9837,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9817,
											"end": 9838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9874,
											"end": 9876,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9854,
											"end": 9872,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9847,
											"end": 9877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9913,
											"end": 9947,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 9893,
											"end": 9911,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9893,
											"end": 9911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9893,
											"end": 9911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9886,
											"end": 9948,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9964,
											"end": 9982,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9964,
											"end": 9982,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9964,
											"end": 9982,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9957,
											"end": 9992,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10009,
											"end": 10028,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 10009,
											"end": 10028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 9633,
											"end": 10034,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6991,
											"end": 6995,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6991,
											"end": 6995,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 9240,
											"end": 9400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9307,
											"end": 9320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 9307,
											"end": 9332,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9307,
											"end": 9332,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9307,
											"end": 9332,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9307,
											"end": 9332,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9307,
											"end": 9332,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9307,
											"end": 9332,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9307,
											"end": 9332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9307,
											"end": 9332,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9354,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 9342,
											"end": 9352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 9342,
											"end": 9354,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9354,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 9342,
											"end": 9354,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9369,
											"end": 9393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2684,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9369,
											"end": 9393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9369,
											"end": 9393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 2487,
											"end": 2690,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10243,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10244,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10280,
											"end": 10282,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 10260,
											"end": 10278,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10260,
											"end": 10278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10260,
											"end": 10278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10253,
											"end": 10283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10319,
											"end": 10353,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10292,
											"end": 10354,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10370,
											"end": 10388,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10370,
											"end": 10388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10370,
											"end": 10388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10363,
											"end": 10399,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10416,
											"end": 10435,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 10416,
											"end": 10435,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10039,
											"end": 10441,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 9987,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 10092,
											"end": 10106,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10092,
											"end": 10120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 10092,
											"end": 10120,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10092,
											"end": 10120,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10092,
											"end": 10120,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10084,
											"end": 10143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 10084,
											"end": 10143,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10084,
											"end": 10143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10084,
											"end": 10143,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10084,
											"end": 10143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10084,
											"end": 10143,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10648,
											"end": 10650,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10084,
											"end": 10143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10084,
											"end": 10143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10084,
											"end": 10143,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10630,
											"end": 10651,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10689,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 10667,
											"end": 10685,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10667,
											"end": 10685,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10685,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10660,
											"end": 10690,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642070657263656E74616765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10706,
											"end": 10724,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10706,
											"end": 10724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10706,
											"end": 10724,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10699,
											"end": 10747,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10084,
											"end": 10143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 10446,
											"end": 10788,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10084,
											"end": 10143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 10084,
											"end": 10143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 10153,
											"end": 10183,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10183,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10193,
											"end": 10240,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10183,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10183,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10183,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10193,
											"end": 10240,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10193,
											"end": 10240,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10193,
											"end": 10240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10193,
											"end": 10240,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10193,
											"end": 10240,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10193,
											"end": 10240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 10193,
											"end": 10240,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10193,
											"end": 10240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10193,
											"end": 10240,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10193,
											"end": 10240,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10193,
											"end": 10240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10193,
											"end": 10240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10193,
											"end": 10240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10193,
											"end": 10240,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10193,
											"end": 10240,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10193,
											"end": 10240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10193,
											"end": 10240,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9987,
											"end": 10247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 9811,
											"end": 9981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9898,
											"end": 9906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 9898,
											"end": 9924,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 9924,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9898,
											"end": 9924,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 9924,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 9924,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 9924,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 9924,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 9924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 9924,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9954,
											"end": 9974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 9954,
											"end": 9962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9965,
											"end": 9974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 9954,
											"end": 9974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 9954,
											"end": 9974,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9954,
											"end": 9974,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 9954,
											"end": 9974,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 9934,
											"end": 9974,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9974,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9934,
											"end": 9974,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9974,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9974,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9934,
											"end": 9974,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9934,
											"end": 9974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9974,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9974,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9974,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9974,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9974,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9974,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9811,
											"end": 9981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11249,
											"end": 11251,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11231,
											"end": 11252,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11288,
											"end": 11290,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11268,
											"end": 11286,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11268,
											"end": 11286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11268,
											"end": 11286,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11261,
											"end": 11291,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11327,
											"end": 11361,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 11307,
											"end": 11325,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11307,
											"end": 11325,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11307,
											"end": 11325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11300,
											"end": 11362,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11405,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11422,
											"end": 11441,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 11422,
											"end": 11441,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 11047,
											"end": 11447,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11654,
											"end": 11656,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11636,
											"end": 11657,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11693,
											"end": 11695,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 11673,
											"end": 11691,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11673,
											"end": 11691,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11673,
											"end": 11691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11666,
											"end": 11696,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11732,
											"end": 11766,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 11712,
											"end": 11730,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11712,
											"end": 11730,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11712,
											"end": 11730,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11705,
											"end": 11767,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11783,
											"end": 11801,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11783,
											"end": 11801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11783,
											"end": 11801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11776,
											"end": 11808,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11825,
											"end": 11844,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 11825,
											"end": 11844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 11452,
											"end": 11850,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12057,
											"end": 12059,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12039,
											"end": 12060,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12039,
											"end": 12060,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12039,
											"end": 12060,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12076,
											"end": 12094,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12076,
											"end": 12094,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12076,
											"end": 12094,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12069,
											"end": 12099,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12169,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12115,
											"end": 12133,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 12115,
											"end": 12133,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12115,
											"end": 12133,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12108,
											"end": 12170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12187,
											"end": 12205,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12187,
											"end": 12205,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 11855,
											"end": 12211,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12418,
											"end": 12420,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12400,
											"end": 12421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12457,
											"end": 12459,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 12437,
											"end": 12455,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12437,
											"end": 12455,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12437,
											"end": 12455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12460,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12496,
											"end": 12527,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12469,
											"end": 12528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12545,
											"end": 12563,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12545,
											"end": 12563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 12216,
											"end": 12569,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 4458,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2953,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3103,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3107,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 3089,
											"end": 3138,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3138,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3138,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3089,
											"end": 3138,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3138,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12776,
											"end": 12778,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3138,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3089,
											"end": 3138,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12758,
											"end": 12779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 12817,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 12795,
											"end": 12813,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12795,
											"end": 12813,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12795,
											"end": 12813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12788,
											"end": 12818,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12854,
											"end": 12882,
											"name": "PUSH",
											"source": 7,
											"value": "5472616E7366657220616D6F756E74206D757374206265203E30000000000000"
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 12883,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12900,
											"end": 12918,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12900,
											"end": 12918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 12574,
											"end": 12924,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3138,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 3089,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3183,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3172,
											"end": 3183,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3159,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3149,
											"end": 3159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3162,
											"end": 3183,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 3183,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 3183,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3183,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3183,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 3183,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 3207,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 3207,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 3162,
											"end": 3207,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3188,
											"end": 3207,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3207,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3207,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3196,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3188,
											"end": 3207,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3207,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3207,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3188,
											"end": 3207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3207,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3207,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3207,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3188,
											"end": 3207,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3207,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 3207,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 3162,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3207,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3231,
											"end": 3255,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3260,
											"end": 3268,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3260,
											"end": 3276,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3276,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 3322,
											"end": 3342,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3276,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3322,
											"end": 3342,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3322,
											"end": 3342,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3352,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3318,
											"end": 3484,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3318,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 3318,
											"end": 3484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3377,
											"end": 3401,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3377,
											"end": 3401,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3401,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 3368,
											"end": 3436,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3436,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3436,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3436,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13131,
											"end": 13133,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3368,
											"end": 3436,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3368,
											"end": 3436,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13113,
											"end": 13134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13170,
											"end": 13172,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 13150,
											"end": 13168,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13150,
											"end": 13168,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13150,
											"end": 13168,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13143,
											"end": 13173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13209,
											"end": 13241,
											"name": "PUSH",
											"source": 7,
											"value": "53656C6C732073746F70706564206279204469616D6F6E6420466C6F6F720000"
										},
										{
											"begin": 13189,
											"end": 13207,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13189,
											"end": 13207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13189,
											"end": 13207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13182,
											"end": 13242,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13259,
											"end": 13277,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 13259,
											"end": 13277,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 12929,
											"end": 13283,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 3368,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 3450,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 3450,
											"end": 3473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3532,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3524,
											"end": 3540,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3540,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3524,
											"end": 3540,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3550,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 3524,
											"end": 3550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3550,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 3524,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3728,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 3520,
											"end": 3728,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3619,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3619,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3593,
											"end": 3619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3619,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3611,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 3593,
											"end": 3619,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3593,
											"end": 3619,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3619,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3593,
											"end": 3619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3619,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3619,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3589,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3619,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3619,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 3566,
											"end": 3639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3639,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3566,
											"end": 3639,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3566,
											"end": 3639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3639,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13490,
											"end": 13492,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3566,
											"end": 3639,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3566,
											"end": 3639,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3639,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13472,
											"end": 13493,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13529,
											"end": 13531,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 13509,
											"end": 13527,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13509,
											"end": 13527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13509,
											"end": 13527,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13502,
											"end": 13532,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "436F6F6C646F776E20616374697665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13548,
											"end": 13566,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13548,
											"end": 13566,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13548,
											"end": 13566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13541,
											"end": 13586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13603,
											"end": 13621,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 13603,
											"end": 13621,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3566,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 13288,
											"end": 13627,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3566,
											"end": 3639,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 3566,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3708,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 3682,
											"end": 3717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 3682,
											"end": 3717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3717,
											"name": "tag",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 3682,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3653,
											"end": 3679,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3679,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3679,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3671,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 3653,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3679,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3653,
											"end": 3679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3679,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3717,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3728,
											"name": "tag",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 3520,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 3772,
											"end": 3778,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 3758,
											"end": 3798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3798,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 3758,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3808,
											"end": 3825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 3828,
											"end": 3834,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3828,
											"end": 3849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3828,
											"end": 3849,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 3828,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3893,
											"end": 3912,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3912,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3893,
											"end": 3912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3901,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3893,
											"end": 3912,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3893,
											"end": 3912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3912,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3893,
											"end": 3912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3912,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3912,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3893,
											"end": 3912,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3893,
											"end": 3912,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3912,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3923,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 3892,
											"end": 3923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3917,
											"end": 3923,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 3923,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3923,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 3892,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 4083,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 3888,
											"end": 4083,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 4003,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4003,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4019,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 4003,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 3989,
											"end": 3998,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 3974,
											"end": 3983,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 3988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 3964,
											"end": 3999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 3999,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 3964,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4019,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4019,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 3939,
											"end": 4072,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 4072,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3939,
											"end": 4072,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3939,
											"end": 4072,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 4072,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13834,
											"end": 13836,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3939,
											"end": 4072,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3939,
											"end": 4072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 4072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13816,
											"end": 13837,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13873,
											"end": 13875,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 13853,
											"end": 13871,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13853,
											"end": 13871,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13853,
											"end": 13871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13846,
											"end": 13876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585E081DD85B1B195D08195E18D959591959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13892,
											"end": 13910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13885,
											"end": 13934,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13951,
											"end": 13969,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 13951,
											"end": 13969,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3939,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 13632,
											"end": 13975,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3939,
											"end": 4072,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 3939,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4135,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 4118,
											"end": 4265,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4151,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 4167,
											"end": 4173,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4183,
											"end": 4187,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4190,
											"end": 4199,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4151,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 4151,
											"end": 4200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4151,
											"end": 4200,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 4151,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 4229,
											"end": 4238,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4245,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4253,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 4214,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4254,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 4214,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4303,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4327,
											"end": 4336,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4347,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4303,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 4303,
											"end": 4348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4303,
											"end": 4348,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 4303,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4391,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 4391,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 4391,
											"end": 4408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4391,
											"end": 4408,
											"name": "tag",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 4391,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4452,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 4387,
											"end": 4452,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4424,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 4424,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 4424,
											"end": 4441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4424,
											"end": 4441,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 4424,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 4458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 4458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 4458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 4458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2953,
											"end": 4458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2953,
											"end": 4458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2953,
											"end": 4458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2953,
											"end": 4458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10370,
											"end": 10570,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 10370,
											"end": 10570,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10472,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 10459,
											"end": 10472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10459,
											"end": 10472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10472,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10472,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10459,
											"end": 10472,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10472,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10459,
											"end": 10472,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10442,
											"end": 10481,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10481,
											"name": "PUSH",
											"source": 6,
											"value": "C45A0155"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "tag",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 10442,
											"end": 10483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "tag",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 10442,
											"end": 10483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10424,
											"end": 10508,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10508,
											"name": "PUSH",
											"source": 6,
											"value": "C9C65396"
										},
										{
											"begin": 10517,
											"end": 10521,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 10541,
											"end": 10554,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 10541,
											"end": 10554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10541,
											"end": 10554,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10541,
											"end": 10554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10541,
											"end": 10554,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10541,
											"end": 10554,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10541,
											"end": 10554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10541,
											"end": 10554,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10541,
											"end": 10554,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10524,
											"end": 10560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10560,
											"name": "PUSH",
											"source": 6,
											"value": "AD5C4648"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "tag",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 10524,
											"end": 10562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "tag",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 10524,
											"end": 10562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14641,
											"end": 14656,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14641,
											"end": 14656,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14641,
											"end": 14656,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14623,
											"end": 14657,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14693,
											"end": 14708,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14693,
											"end": 14708,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14673,
											"end": 14691,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14673,
											"end": 14691,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14673,
											"end": 14691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14666,
											"end": 14709,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 14558,
											"end": 14576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 10424,
											"end": 10563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "tag",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 10424,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10421,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 10410,
											"end": 10563,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10563,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10410,
											"end": 10563,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10410,
											"end": 10563,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10563,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10563,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10563,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10563,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10563,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10410,
											"end": 10563,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10370,
											"end": 10570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6266,
											"end": 7086,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 6266,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6317,
											"end": 6337,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 6340,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6340,
											"end": 6351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "tag",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6365,
											"end": 6382,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6361,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 6361,
											"end": 6391,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6391,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6266,
											"end": 7086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6361,
											"end": 6391,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 6361,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6441,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 6420,
											"end": 6441,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6405,
											"end": 6441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6405,
											"end": 6441,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6570,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 6401,
											"end": 6570,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6457,
											"end": 6478,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 6457,
											"end": 6493,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6531,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6507,
											"end": 6539,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6539,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6507,
											"end": 6539,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6539,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6266,
											"end": 7086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6570,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 6401,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6659,
											"end": 6671,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 6659,
											"end": 6689,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6602,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6602,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6605,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 6605,
											"end": 6720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6605,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 6605,
											"end": 6691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6644,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 6644,
											"end": 6690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6659,
											"end": 6689,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6659,
											"end": 6689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6659,
											"end": 6689,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6659,
											"end": 6689,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 6659,
											"end": 6689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6644,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 6644,
											"end": 6690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6644,
											"end": 6690,
											"name": "tag",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 6644,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6605,
											"end": 6626,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 6605,
											"end": 6626,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6605,
											"end": 6626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6605,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 6605,
											"end": 6691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6605,
											"end": 6720,
											"name": "tag",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 6605,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6720,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6764,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6735,
											"end": 6747,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6735,
											"end": 6764,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6883,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 6731,
											"end": 6883,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 6804,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6780,
											"end": 6811,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 6811,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6780,
											"end": 6811,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6807,
											"end": 6811,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6780,
											"end": 6811,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 6811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 6811,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 6872,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 6851,
											"end": 6872,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6825,
											"end": 6848,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6825,
											"end": 6872,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6883,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 6731,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 6921,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6897,
											"end": 6921,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 6921,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6897,
											"end": 6921,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 6971,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 6971,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 6897,
											"end": 6971,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6941,
											"end": 6964,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6941,
											"end": 6964,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6941,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 6941,
											"end": 6971,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 6970,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6941,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 6941,
											"end": 6971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6941,
											"end": 6971,
											"name": "tag",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 6941,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6937,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6971,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6971,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 6971,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 6897,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6893,
											"end": 7080,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6893,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 6893,
											"end": 7080,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7011,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6987,
											"end": 7019,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7019,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6987,
											"end": 7019,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7019,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7054,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 7033,
											"end": 7069,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7069,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7069,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6893,
											"end": 7080,
											"name": "tag",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 6893,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 7086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 7086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6266,
											"end": 7086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 5230,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 4464,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4597,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 4613,
											"end": 4652,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4641,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4652,
											"name": "tag",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 4613,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4609,
											"end": 4662,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4609,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 4609,
											"end": 4662,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4654,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4654,
											"end": 4662,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4609,
											"end": 4662,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 4609,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4707,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4696,
											"end": 4707,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4696,
											"end": 4707,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4707,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4755,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4766,
											"end": 4881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4766,
											"end": 4881,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4766,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 4766,
											"end": 4881,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4845,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4837,
											"end": 4852,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 4798,
											"end": 4870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4798,
											"end": 4854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 4809,
											"end": 4853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4852,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 4817,
											"end": 4831,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4817,
											"end": 4831,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4817,
											"end": 4831,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4817,
											"end": 4831,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4852,
											"name": "PUSH",
											"source": 6,
											"value": "10000"
										},
										{
											"begin": 4837,
											"end": 4852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4852,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4852,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 4809,
											"end": 4853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4853,
											"name": "tag",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 4809,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 4798,
											"end": 4854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4870,
											"name": "tag",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 4798,
											"end": 4870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4870,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4791,
											"end": 4870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4791,
											"end": 4870,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4766,
											"end": 4881,
											"name": "tag",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 4766,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 4901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4891,
											"end": 5009,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4891,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 4891,
											"end": 5009,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4964,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4964,
											"end": 4980,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4924,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 4924,
											"end": 4998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4924,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4924,
											"end": 4982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 4935,
											"end": 4981,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4964,
											"end": 4980,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4943,
											"end": 4958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4958,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4958,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4958,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4964,
											"end": 4980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4964,
											"end": 4980,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4964,
											"end": 4980,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 4935,
											"end": 4981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4891,
											"end": 5009,
											"name": "tag",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 4891,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5084,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5027,
											"end": 5044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5027,
											"end": 5044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5047,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 5047,
											"end": 5093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5055,
											"end": 5070,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5055,
											"end": 5070,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5055,
											"end": 5070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5055,
											"end": 5070,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5055,
											"end": 5070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5047,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 5047,
											"end": 5093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5047,
											"end": 5093,
											"name": "tag",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 5047,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5027,
											"end": 5093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5103,
											"end": 5122,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 5164,
											"end": 5166,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5125,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5027,
											"end": 5093,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 5125,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5125,
											"end": 5159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5125,
											"end": 5167,
											"name": "tag",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 5125,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5184,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 5184,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5184,
											"end": 5190,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5167,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5184,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5184,
											"end": 5207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5184,
											"end": 5223,
											"name": "tag",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 5184,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5223,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 5230,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 5230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "477"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14922,
											"end": 14924,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14904,
											"end": 14925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14961,
											"end": 14963,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 14941,
											"end": 14959,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14941,
											"end": 14959,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14941,
											"end": 14959,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14934,
											"end": 14964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15000,
											"end": 15034,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 14980,
											"end": 14998,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 14980,
											"end": 14998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14980,
											"end": 14998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14973,
											"end": 15035,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15051,
											"end": 15069,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 15051,
											"end": 15069,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15051,
											"end": 15069,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15044,
											"end": 15079,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15096,
											"end": 15115,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 15096,
											"end": 15115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 14720,
											"end": 15121,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 2,
											"value": "477"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "480"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15328,
											"end": 15330,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15310,
											"end": 15331,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15367,
											"end": 15369,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 15347,
											"end": 15365,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15347,
											"end": 15365,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15347,
											"end": 15365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15340,
											"end": 15370,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15406,
											"end": 15440,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 15386,
											"end": 15404,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 15386,
											"end": 15404,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15386,
											"end": 15404,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15379,
											"end": 15441,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15457,
											"end": 15475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 15457,
											"end": 15475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15457,
											"end": 15475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15450,
											"end": 15483,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15500,
											"end": 15519,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 15500,
											"end": 15519,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 15126,
											"end": 15525,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "480"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "485"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15732,
											"end": 15734,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15714,
											"end": 15735,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15771,
											"end": 15773,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 15751,
											"end": 15769,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15751,
											"end": 15769,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15751,
											"end": 15769,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15744,
											"end": 15774,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15810,
											"end": 15844,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 15790,
											"end": 15808,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 15790,
											"end": 15808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15790,
											"end": 15808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15783,
											"end": 15845,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15861,
											"end": 15879,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 15861,
											"end": 15879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15861,
											"end": 15879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15854,
											"end": 15890,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15907,
											"end": 15926,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 15907,
											"end": 15926,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 15530,
											"end": 15932,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 2,
											"value": "485"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 6260,
											"name": "tag",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 5236,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5322,
											"end": 5337,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5363,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5378,
											"end": 5383,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 6054,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 5374,
											"end": 6054,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5443,
											"end": 5451,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5443,
											"end": 5458,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5399,
											"end": 5412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 5415,
											"end": 5459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5443,
											"end": 5458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 5423,
											"end": 5437,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5423,
											"end": 5437,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5423,
											"end": 5437,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5423,
											"end": 5437,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5443,
											"end": 5458,
											"name": "PUSH",
											"source": 6,
											"value": "10000"
										},
										{
											"begin": 5443,
											"end": 5458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5443,
											"end": 5458,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5443,
											"end": 5458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 5415,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5459,
											"name": "tag",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 5415,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5481,
											"end": 5490,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "494"
										},
										{
											"begin": 5473,
											"end": 5510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5510,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5473,
											"end": 5510,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5473,
											"end": 5510,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5510,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16139,
											"end": 16141,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5473,
											"end": 5510,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5473,
											"end": 5510,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5510,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16121,
											"end": 16142,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16178,
											"end": 16180,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 16158,
											"end": 16176,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 16158,
											"end": 16176,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16158,
											"end": 16176,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16151,
											"end": 16181,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "109D5E481D185E081B9BDD081CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16197,
											"end": 16215,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 16197,
											"end": 16215,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16197,
											"end": 16215,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16190,
											"end": 16235,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16252,
											"end": 16270,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 16252,
											"end": 16270,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 15937,
											"end": 16276,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5510,
											"name": "tag",
											"source": 6,
											"value": "494"
										},
										{
											"begin": 5473,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5548,
											"end": 5556,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5548,
											"end": 5562,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5534,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "497"
										},
										{
											"begin": 5534,
											"end": 5574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5568,
											"end": 5573,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5568,
											"end": 5573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5534,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5534,
											"end": 5563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5534,
											"end": 5543,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5534,
											"end": 5543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5548,
											"end": 5562,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 5548,
											"end": 5562,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5534,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5534,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5534,
											"end": 5574,
											"name": "tag",
											"source": 6,
											"value": "497"
										},
										{
											"begin": 5534,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5524,
											"end": 5574,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5524,
											"end": 5574,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "507"
										},
										{
											"begin": 5374,
											"end": 6054,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 6054,
											"name": "tag",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 5374,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5601,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 6054,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 5591,
											"end": 6054,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5670,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5662,
											"end": 5678,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5617,
											"end": 5630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "501"
										},
										{
											"begin": 5633,
											"end": 5679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5678,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5641,
											"end": 5656,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5656,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5656,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5656,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 5678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5678,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5678,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 5633,
											"end": 5679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5679,
											"name": "tag",
											"source": 6,
											"value": "501"
										},
										{
											"begin": 5633,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5709,
											"end": 5710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 5710,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5693,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 5693,
											"end": 5731,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5693,
											"end": 5731,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5693,
											"end": 5731,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5693,
											"end": 5731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5693,
											"end": 5731,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16483,
											"end": 16485,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5693,
											"end": 5731,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5693,
											"end": 5731,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5693,
											"end": 5731,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16465,
											"end": 16486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16522,
											"end": 16524,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 16502,
											"end": 16520,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 16502,
											"end": 16520,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16502,
											"end": 16520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16495,
											"end": 16525,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D95B1B081D185E081B9BDD081CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16541,
											"end": 16559,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 16541,
											"end": 16559,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16541,
											"end": 16559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16534,
											"end": 16580,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16597,
											"end": 16615,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 16597,
											"end": 16615,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5693,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 16281,
											"end": 16621,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5693,
											"end": 5731,
											"name": "tag",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 5693,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5777,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5769,
											"end": 5784,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "497"
										},
										{
											"begin": 5755,
											"end": 5796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5790,
											"end": 5795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5790,
											"end": 5795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5755,
											"end": 5785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5784,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5784,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 5769,
											"end": 5784,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5755,
											"end": 5785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 6054,
											"name": "tag",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 5591,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5872,
											"end": 5880,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5840,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5843,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 5843,
											"end": 5889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5851,
											"end": 5866,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5866,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5866,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5866,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5866,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5843,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 5843,
											"end": 5889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5843,
											"end": 5889,
											"name": "tag",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 5843,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5919,
											"end": 5920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5911,
											"end": 5916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5911,
											"end": 5920,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5903,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 5903,
											"end": 5945,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5903,
											"end": 5945,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5903,
											"end": 5945,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5903,
											"end": 5945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5903,
											"end": 5945,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16828,
											"end": 16830,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5903,
											"end": 5945,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5903,
											"end": 5945,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5903,
											"end": 5945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16810,
											"end": 16831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16867,
											"end": 16869,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 16847,
											"end": 16865,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 16847,
											"end": 16865,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16847,
											"end": 16865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16840,
											"end": 16870,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C881D185E081B9BDD081CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16886,
											"end": 16904,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 16886,
											"end": 16904,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16886,
											"end": 16904,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16879,
											"end": 16929,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16946,
											"end": 16964,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 16946,
											"end": 16964,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5903,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 16626,
											"end": 16970,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5903,
											"end": 5945,
											"name": "tag",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 5903,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 5991,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5983,
											"end": 5998,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 5969,
											"end": 6043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6042,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 6040,
											"end": 6042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5969,
											"end": 6035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 5969,
											"end": 6010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6004,
											"end": 6009,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6004,
											"end": 6009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 6035,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 6035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5983,
											"end": 5998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 5998,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 5998,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 5983,
											"end": 5998,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5969,
											"end": 5999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 6043,
											"name": "tag",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 5969,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6043,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 6054,
											"name": "tag",
											"source": 6,
											"value": "507"
										},
										{
											"begin": 5591,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 6075,
											"end": 6084,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 6075,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "tag",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6097,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6097,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6123,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 6123,
											"end": 6149,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6148,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 6123,
											"end": 6149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6149,
											"name": "tag",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 6123,
											"end": 6149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6107,
											"end": 6120,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6107,
											"end": 6149,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6176,
											"end": 6190,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 6176,
											"end": 6190,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6176,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 6176,
											"end": 6204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 6176,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6176,
											"end": 6204,
											"name": "tag",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 6176,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6159,
											"end": 6173,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 6159,
											"end": 6204,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6220,
											"end": 6253,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6220,
											"end": 6253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6220,
											"end": 6253,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17149,
											"end": 17174,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17149,
											"end": 17174,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17149,
											"end": 17174,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17205,
											"end": 17207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17190,
											"end": 17208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17190,
											"end": 17208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17183,
											"end": 17217,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17183,
											"end": 17217,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17183,
											"end": 17217,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6220,
											"end": 6253,
											"name": "PUSH",
											"source": 6,
											"value": "F2D9F3F00FC700757EB74F9AA3DBA0E2EB1280E0C6E0CF65962CC055528D7A90"
										},
										{
											"begin": 6220,
											"end": 6253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17122,
											"end": 17140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6220,
											"end": 6253,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6220,
											"end": 6253,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6220,
											"end": 6253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6220,
											"end": 6253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6220,
											"end": 6253,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6220,
											"end": 6253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6220,
											"end": 6253,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 6260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 6260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 6260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 6260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 6260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 6260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11574,
											"end": 11769,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 11574,
											"end": 11769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11647,
											"end": 11655,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 11647,
											"end": 11655,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11623,
											"end": 11627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11623,
											"end": 11627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11647,
											"end": 11655,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11647,
											"end": 11655,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11646,
											"end": 11655,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11646,
											"end": 11721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11646,
											"end": 11721,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11646,
											"end": 11721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 11646,
											"end": 11721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11708,
											"end": 11721,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 11708,
											"end": 11721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11689,
											"end": 11703,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 11689,
											"end": 11703,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11671,
											"end": 11684,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 11671,
											"end": 11684,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11671,
											"end": 11704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 11671,
											"end": 11704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11671,
											"end": 11688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 11671,
											"end": 11704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11671,
											"end": 11704,
											"name": "tag",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 11671,
											"end": 11704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11671,
											"end": 11721,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11671,
											"end": 11721,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11646,
											"end": 11721,
											"name": "tag",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 11646,
											"end": 11721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11646,
											"end": 11762,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11646,
											"end": 11762,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11646,
											"end": 11762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 11646,
											"end": 11762,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11751,
											"end": 11762,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 11751,
											"end": 11762,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11751,
											"end": 11762,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11737,
											"end": 11747,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11737,
											"end": 11762,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11737,
											"end": 11762,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11737,
											"end": 11762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11574,
											"end": 11769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7092,
											"end": 7860,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 7092,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7159,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 7177,
											"end": 7191,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 7177,
											"end": 7191,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7172,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 7159,
											"end": 7172,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 7159,
											"end": 7176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7192,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7159,
											"end": 7192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7192,
											"name": "tag",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 7159,
											"end": 7192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7137,
											"end": 7192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7137,
											"end": 7192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7233,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 7220,
											"end": 7233,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7206,
											"end": 7217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7206,
											"end": 7233,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7202,
											"end": 7242,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7202,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 7202,
											"end": 7242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7235,
											"end": 7242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7092,
											"end": 7860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7202,
											"end": 7242,
											"name": "tag",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 7202,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7260,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 7252,
											"end": 7267,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7267,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7252,
											"end": 7267,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7263,
											"end": 7267,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7252,
											"end": 7267,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7267,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7267,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7385,
											"end": 7399,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 7385,
											"end": 7399,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7302,
											"end": 7323,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 7302,
											"end": 7323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7367,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 7367,
											"end": 7400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 7367,
											"end": 7400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7367,
											"end": 7400,
											"name": "tag",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 7367,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7427,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 7427,
											"end": 7448,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7467,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7427,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 7427,
											"end": 7468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7427,
											"end": 7468,
											"name": "tag",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 7427,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7468,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7486,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7493,
											"name": "tag",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 7486,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7478,
											"end": 7503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "PUSH",
											"source": 6,
											"value": "8FC"
										},
										{
											"begin": 7504,
											"end": 7510,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "tag",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 7478,
											"end": 7511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7567,
											"end": 7580,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 7567,
											"end": 7580,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7548,
											"end": 7564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7605,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "534"
										},
										{
											"begin": 7567,
											"end": 7580,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7619,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7605,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 7605,
											"end": 7620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7605,
											"end": 7620,
											"name": "tag",
											"source": 6,
											"value": "534"
										},
										{
											"begin": 7605,
											"end": 7620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7620,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 7648,
											"end": 7652,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 7630,
											"end": 7653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7653,
											"name": "tag",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 7630,
											"end": 7653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7688,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "536"
										},
										{
											"begin": 7688,
											"end": 7709,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 7714,
											"end": 7720,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7688,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 7688,
											"end": 7721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7688,
											"end": 7721,
											"name": "tag",
											"source": 6,
											"value": "536"
										},
										{
											"begin": 7688,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7731,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "537"
										},
										{
											"begin": 7745,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "538"
										},
										{
											"begin": 7745,
											"end": 7753,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7762,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7745,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 7745,
											"end": 7763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7745,
											"end": 7763,
											"name": "tag",
											"source": 6,
											"value": "538"
										},
										{
											"begin": 7745,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7770,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 7731,
											"end": 7771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 7771,
											"name": "tag",
											"source": 6,
											"value": "537"
										},
										{
											"begin": 7731,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7798,
											"end": 7799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7782,
											"end": 7795,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 7782,
											"end": 7799,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7782,
											"end": 7799,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7782,
											"end": 7799,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7809,
											"end": 7823,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 7809,
											"end": 7827,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7837,
											"end": 7845,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 7837,
											"end": 7853,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7837,
											"end": 7853,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7837,
											"end": 7853,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7837,
											"end": 7853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7837,
											"end": 7853,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7092,
											"end": 7860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "tag",
											"source": 2,
											"value": "484"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12073,
											"end": 12164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 11014,
											"name": "tag",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 10576,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10675,
											"end": 10676,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10637,
											"end": 10658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10637,
											"end": 10658,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10637,
											"end": 10677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10637,
											"end": 10677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10705,
											"end": 10709,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10692,
											"end": 10693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "548"
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "548"
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "549"
										},
										{
											"begin": 10687,
											"end": 10694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "tag",
											"source": 6,
											"value": "548"
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10687,
											"end": 10710,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10710,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10710,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10747,
											"end": 10760,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 10747,
											"end": 10760,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15AB88C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10747,
											"end": 10760,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10747,
											"end": 10760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10747,
											"end": 10760,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10747,
											"end": 10760,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10747,
											"end": 10760,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10766,
											"name": "PUSH",
											"source": 6,
											"value": "AD5C4648"
										},
										{
											"begin": 10730,
											"end": 10766,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10694,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10747,
											"end": 10760,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "551"
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "tag",
											"source": 6,
											"value": "551"
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "552"
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 10730,
											"end": 10768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "tag",
											"source": 6,
											"value": "552"
										},
										{
											"begin": 10730,
											"end": 10768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10725,
											"end": 10726,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "554"
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "554"
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "549"
										},
										{
											"begin": 10720,
											"end": 10727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "tag",
											"source": 6,
											"value": "554"
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10720,
											"end": 10768,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10768,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10768,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10768,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10803,
											"end": 10816,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 10803,
											"end": 10816,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10779,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "555"
										},
										{
											"begin": 10779,
											"end": 10825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10800,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10800,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10803,
											"end": 10816,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10818,
											"end": 10824,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10779,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 10779,
											"end": 10825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10779,
											"end": 10825,
											"name": "tag",
											"source": 6,
											"value": "555"
										},
										{
											"begin": 10779,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10852,
											"end": 10865,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 10852,
											"end": 10865,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18CBAFE5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10852,
											"end": 10865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10852,
											"end": 10865,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10852,
											"end": 10865,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10852,
											"end": 10865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 10888,
											"name": "PUSH",
											"source": 6,
											"value": "18CBAFE5"
										},
										{
											"begin": 10835,
											"end": 10888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10902,
											"end": 10908,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10902,
											"end": 10908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10852,
											"end": 10865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10852,
											"end": 10865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10937,
											"end": 10941,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10937,
											"end": 10941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10963,
											"end": 10967,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 10963,
											"end": 10967,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10982,
											"end": 10997,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10982,
											"end": 10997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "557"
										},
										{
											"begin": 10835,
											"end": 11007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "tag",
											"source": 6,
											"value": "556"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "559"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "tag",
											"source": 6,
											"value": "559"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "484"
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "561"
										},
										{
											"begin": 10835,
											"end": 11007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11429,
											"name": "tag",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 11020,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11125,
											"end": 11138,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 11125,
											"end": 11138,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11101,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "563"
										},
										{
											"begin": 11101,
											"end": 11152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11118,
											"end": 11122,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 11118,
											"end": 11122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11125,
											"end": 11138,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11140,
											"end": 11151,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11101,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 11101,
											"end": 11152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11101,
											"end": 11152,
											"name": "tag",
											"source": 6,
											"value": "563"
										},
										{
											"begin": 11101,
											"end": 11152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11179,
											"end": 11192,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 11179,
											"end": 11192,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11179,
											"end": 11192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11209,
											"name": "PUSH",
											"source": 6,
											"value": "F305D719"
										},
										{
											"begin": 11217,
											"end": 11226,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11249,
											"end": 11253,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 11268,
											"end": 11279,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11179,
											"end": 11192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11179,
											"end": 11192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11323,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "564"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11330,
											"name": "tag",
											"source": 6,
											"value": "564"
										},
										{
											"begin": 11323,
											"end": 11330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19946,
											"end": 19961,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 19946,
											"end": 19961,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19946,
											"end": 19961,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19928,
											"end": 19962,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19978,
											"end": 19996,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 19978,
											"end": 19996,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19978,
											"end": 19996,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19971,
											"end": 20005,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 19971,
											"end": 20005,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19971,
											"end": 20005,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 19971,
											"end": 20005,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20021,
											"end": 20039,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 20021,
											"end": 20039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20021,
											"end": 20039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20014,
											"end": 20048,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20014,
											"end": 20048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20014,
											"end": 20048,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20014,
											"end": 20048,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20064,
											"end": 20082,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 20064,
											"end": 20082,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20064,
											"end": 20082,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20057,
											"end": 20091,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20128,
											"end": 20143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20128,
											"end": 20143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20128,
											"end": 20143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 20107,
											"end": 20126,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 20107,
											"end": 20126,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20107,
											"end": 20126,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20100,
											"end": 20144,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11344,
											"end": 11359,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 20160,
											"end": 20179,
											"name": "PUSH",
											"source": 7,
											"value": "A4"
										},
										{
											"begin": 20160,
											"end": 20179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20160,
											"end": 20179,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20153,
											"end": 20188,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19862,
											"end": 19881,
											"name": "PUSH",
											"source": 7,
											"value": "C4"
										},
										{
											"begin": 19862,
											"end": 19881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "568"
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "tag",
											"source": 6,
											"value": "568"
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "569"
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "570"
										},
										{
											"begin": 11162,
											"end": 11369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "tag",
											"source": 6,
											"value": "569"
										},
										{
											"begin": 11162,
											"end": 11369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11384,
											"end": 11422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11384,
											"end": 11422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11384,
											"end": 11422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17149,
											"end": 17174,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17149,
											"end": 17174,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17149,
											"end": 17174,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17205,
											"end": 17207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17190,
											"end": 17208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17190,
											"end": 17208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17183,
											"end": 17217,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17183,
											"end": 17217,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17183,
											"end": 17217,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11422,
											"name": "PUSH",
											"source": 6,
											"value": "38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B"
										},
										{
											"begin": 11384,
											"end": 11422,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17122,
											"end": 17140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11384,
											"end": 11422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11384,
											"end": 11422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11384,
											"end": 11422,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11384,
											"end": 11422,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11384,
											"end": 11422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11384,
											"end": 11422,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 196,
											"end": 614,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 196,
											"end": 614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 327,
											"end": 348,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 308,
											"end": 312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 383,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 384,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 420,
											"end": 426,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 404,
											"end": 413,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 400,
											"end": 418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 427,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 479,
											"end": 485,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 474,
											"end": 476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 472,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 462,
											"end": 477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 455,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 442,
											"end": 460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 436,
											"end": 486,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 535,
											"end": 536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 532,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 506,
											"end": 528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 495,
											"end": 537,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 605,
											"end": 607,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 594,
											"end": 601,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 589,
											"end": 591,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 577,
											"end": 592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 573,
											"end": 602,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 562,
											"end": 571,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 558,
											"end": 603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 554,
											"end": 608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 546,
											"end": 608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 546,
											"end": 608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 546,
											"end": 608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 619,
											"end": 750,
											"name": "tag",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 619,
											"end": 750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 694,
											"end": 725,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 694,
											"end": 725,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 684,
											"end": 726,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 684,
											"end": 726,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 674,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 674,
											"end": 744,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 740,
											"end": 741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 738,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 730,
											"end": 742,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 755,
											"end": 1070,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 755,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 823,
											"end": 829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 837,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 884,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 863,
											"end": 870,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 859,
											"end": 882,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 855,
											"end": 887,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 852,
											"end": 904,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 852,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 852,
											"end": 904,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 900,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 890,
											"end": 902,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 852,
											"end": 904,
											"name": "tag",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 852,
											"end": 904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 939,
											"end": 948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 926,
											"end": 949,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 958,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 983,
											"end": 988,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 958,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 958,
											"end": 989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 958,
											"end": 989,
											"name": "tag",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 958,
											"end": 989,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1008,
											"end": 1013,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1064,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1064,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 755,
											"end": 1070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1426,
											"name": "tag",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 1267,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1354,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1354,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1400,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1373,
											"end": 1402,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1373,
											"end": 1402,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 1363,
											"end": 1420,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1416,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1406,
											"end": 1418,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1420,
											"name": "tag",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 1363,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1426,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1527,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1543,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1590,
											"end": 1593,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1578,
											"end": 1587,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1576,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1565,
											"end": 1588,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1594,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1611,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 1558,
											"end": 1611,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1608,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1609,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1611,
											"name": "tag",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 1558,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 1630,
											"end": 1658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1658,
											"name": "tag",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 1630,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1658,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 1710,
											"end": 1712,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1699,
											"end": 1708,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1713,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 1677,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1714,
											"name": "tag",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 1677,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1714,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1714,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "594"
										},
										{
											"begin": 1766,
											"end": 1768,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1755,
											"end": 1764,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1751,
											"end": 1769,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 1733,
											"end": 1770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1770,
											"name": "tag",
											"source": 7,
											"value": "594"
										},
										{
											"begin": 1733,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1770,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 1822,
											"end": 1824,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1811,
											"end": 1820,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 1789,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1826,
											"name": "tag",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 1789,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 2293,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1837,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1920,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 1936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1971,
											"end": 1980,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1969,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1981,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1954,
											"end": 1986,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1951,
											"end": 2003,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1951,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "597"
										},
										{
											"begin": 1951,
											"end": 2003,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2000,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 1997,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1989,
											"end": 2001,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1951,
											"end": 2003,
											"name": "tag",
											"source": 7,
											"value": "597"
										},
										{
											"begin": 1951,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 2082,
											"end": 2087,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 2057,
											"end": 2088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "tag",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2112,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2164,
											"end": 2166,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2167,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2167,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2168,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 2136,
											"end": 2168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 2177,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2210,
											"name": "tag",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 2177,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 2293,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 2293,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2286,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 2293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3391,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3144,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3258,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3244,
											"end": 3253,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3242,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3254,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3276,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "604"
										},
										{
											"begin": 3224,
											"end": 3276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3270,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3262,
											"end": 3274,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3276,
											"name": "tag",
											"source": 7,
											"value": "604"
										},
										{
											"begin": 3224,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3298,
											"end": 3321,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3355,
											"end": 3360,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 3330,
											"end": 3361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 4034,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 3854,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3954,
											"end": 3963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3952,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3964,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3969,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3986,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 3934,
											"end": 3986,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 3983,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 3980,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3972,
											"end": 3984,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3986,
											"name": "tag",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 3934,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4005,
											"end": 4028,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4028,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 4034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3854,
											"end": 4034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4435,
											"end": 4595,
											"name": "tag",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 4435,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4569,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4569,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 4571,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 4571,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4529,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 4529,
											"end": 4589,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4583,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4587,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4915,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4600,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4671,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4679,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4728,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4714,
											"end": 4723,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4705,
											"end": 4712,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4701,
											"end": 4724,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4729,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4694,
											"end": 4746,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4694,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "614"
										},
										{
											"begin": 4694,
											"end": 4746,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4732,
											"end": 4744,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4694,
											"end": 4746,
											"name": "tag",
											"source": 7,
											"value": "614"
										},
										{
											"begin": 4694,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4781,
											"end": 4790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4768,
											"end": 4791,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "615"
										},
										{
											"begin": 4825,
											"end": 4830,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 4800,
											"end": 4831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4831,
											"name": "tag",
											"source": 7,
											"value": "615"
										},
										{
											"begin": 4800,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4855,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4874,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "616"
										},
										{
											"begin": 4905,
											"end": 4907,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4890,
											"end": 4908,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 4908,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4874,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 4874,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4874,
											"end": 4909,
											"name": "tag",
											"source": 7,
											"value": "616"
										},
										{
											"begin": 4874,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 4909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4915,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4915,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5807,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5419,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 5501,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5548,
											"end": 5550,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5536,
											"end": 5545,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5534,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5546,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 5551,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5568,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 5516,
											"end": 5568,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5565,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5554,
											"end": 5566,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5568,
											"name": "tag",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 5516,
											"end": 5568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5612,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5613,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "620"
										},
										{
											"begin": 5647,
											"end": 5652,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 5622,
											"end": 5653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "tag",
											"source": 7,
											"value": "620"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5672,
											"end": 5677,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5729,
											"end": 5731,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5732,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5714,
											"end": 5732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5733,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "621"
										},
										{
											"begin": 5701,
											"end": 5733,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 5742,
											"end": 5775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5775,
											"name": "tag",
											"source": 7,
											"value": "621"
										},
										{
											"begin": 5742,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5801,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5784,
											"end": 5801,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5784,
											"end": 5801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5784,
											"end": 5801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5807,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5807,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5807,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5807,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5812,
											"end": 6064,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 5812,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5876,
											"end": 5882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5884,
											"end": 5890,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5937,
											"end": 5939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5925,
											"end": 5934,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5923,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 5935,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5908,
											"end": 5940,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5957,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "623"
										},
										{
											"begin": 5905,
											"end": 5957,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5953,
											"end": 5954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5950,
											"end": 5951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 5955,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5957,
											"name": "tag",
											"source": 7,
											"value": "623"
										},
										{
											"begin": 5905,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "624"
										},
										{
											"begin": 5992,
											"end": 6001,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 5976,
											"end": 6002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6002,
											"name": "tag",
											"source": 7,
											"value": "624"
										},
										{
											"begin": 5976,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5966,
											"end": 6002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5966,
											"end": 6002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6021,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "616"
										},
										{
											"begin": 6054,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6043,
											"end": 6052,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6039,
											"end": 6057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6021,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 6021,
											"end": 6058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6190,
											"name": "tag",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 6069,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6164,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6147,
											"end": 6152,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6165,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6141,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6133,
											"end": 6166,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6123,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 6123,
											"end": 6184,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6178,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6508,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 6195,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6259,
											"end": 6265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6267,
											"end": 6273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6322,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6308,
											"end": 6317,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6299,
											"end": 6306,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6295,
											"end": 6318,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6291,
											"end": 6323,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6288,
											"end": 6340,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6288,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "629"
										},
										{
											"begin": 6288,
											"end": 6340,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6337,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6326,
											"end": 6338,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6288,
											"end": 6340,
											"name": "tag",
											"source": 7,
											"value": "629"
										},
										{
											"begin": 6288,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "630"
										},
										{
											"begin": 6375,
											"end": 6384,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 6359,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6385,
											"name": "tag",
											"source": 7,
											"value": "630"
										},
										{
											"begin": 6359,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6349,
											"end": 6385,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6349,
											"end": 6385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6435,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6438,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6439,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "621"
										},
										{
											"begin": 6472,
											"end": 6477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 6448,
											"end": 6478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6893,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 6513,
											"end": 6893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6592,
											"end": 6593,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6588,
											"end": 6600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6588,
											"end": 6600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6588,
											"end": 6600,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 6588,
											"end": 6600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6647,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6656,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "633"
										},
										{
											"begin": 6656,
											"end": 6717,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6710,
											"end": 6714,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6702,
											"end": 6708,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6698,
											"end": 6715,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6715,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6656,
											"end": 6717,
											"name": "tag",
											"source": 7,
											"value": "633"
										},
										{
											"begin": 6656,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6763,
											"end": 6765,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6755,
											"end": 6761,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6766,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6732,
											"end": 6750,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6729,
											"end": 6767,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "634"
										},
										{
											"begin": 6726,
											"end": 6887,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6809,
											"end": 6819,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 6804,
											"end": 6807,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6800,
											"end": 6820,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6797,
											"end": 6798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6790,
											"end": 6821,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6841,
											"end": 6842,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6872,
											"end": 6876,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6869,
											"end": 6870,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6877,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6887,
											"name": "tag",
											"source": 7,
											"value": "634"
										},
										{
											"begin": 6726,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6893,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6893,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6893,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6898,
											"end": 7025,
											"name": "tag",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 6898,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6959,
											"end": 6969,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 6954,
											"end": 6957,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6950,
											"end": 6970,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6947,
											"end": 6948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6940,
											"end": 6971,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6990,
											"end": 6994,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6980,
											"end": 6995,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7014,
											"end": 7018,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7011,
											"end": 7012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7004,
											"end": 7019,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7198,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 7030,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7097,
											"end": 7103,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 7123,
											"end": 7133,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7123,
											"end": 7133,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7123,
											"end": 7133,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7145,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7145,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7146,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7158,
											"end": 7169,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7158,
											"end": 7169,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7158,
											"end": 7169,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7192,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "638"
										},
										{
											"begin": 7155,
											"end": 7192,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7172,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "638"
										},
										{
											"begin": 7172,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 7172,
											"end": 7190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7172,
											"end": 7190,
											"name": "tag",
											"source": 7,
											"value": "638"
										},
										{
											"begin": 7172,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7198,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7892,
											"end": 8017,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 7892,
											"end": 8017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7978,
											"end": 7988,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7978,
											"end": 7988,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7978,
											"end": 7988,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7975,
											"end": 8011,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7975,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 7975,
											"end": 8011,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7991,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 7991,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 7991,
											"end": 8009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8158,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 8022,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8057,
											"end": 8060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8078,
											"end": 8100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8078,
											"end": 8100,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "646"
										},
										{
											"begin": 8075,
											"end": 8123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "646"
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 8103,
											"end": 8121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "tag",
											"source": 7,
											"value": "646"
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8143,
											"end": 8144,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8152,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8139,
											"end": 8152,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8511,
											"end": 8699,
											"name": "tag",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 8511,
											"end": 8699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8590,
											"end": 8603,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8590,
											"end": 8603,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8632,
											"end": 8674,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8632,
											"end": 8674,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8622,
											"end": 8675,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8622,
											"end": 8675,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8612,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 8612,
											"end": 8693,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 8690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 8687,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8679,
											"end": 8691,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 9123,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 8704,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8791,
											"end": 8797,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8799,
											"end": 8805,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8807,
											"end": 8813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8860,
											"end": 8862,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8848,
											"end": 8857,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8846,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8835,
											"end": 8858,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8831,
											"end": 8863,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8828,
											"end": 8880,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8828,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 8828,
											"end": 8880,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8876,
											"end": 8877,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8873,
											"end": 8874,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8866,
											"end": 8878,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8828,
											"end": 8880,
											"name": "tag",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 8828,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8899,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "652"
										},
										{
											"begin": 8929,
											"end": 8938,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8899,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 8899,
											"end": 8939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8899,
											"end": 8939,
											"name": "tag",
											"source": 7,
											"value": "652"
										},
										{
											"begin": 8899,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8889,
											"end": 8939,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8889,
											"end": 8939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8958,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 9003,
											"end": 9005,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8992,
											"end": 9001,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8988,
											"end": 9006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8958,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 8958,
											"end": 9007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8958,
											"end": 9007,
											"name": "tag",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 8958,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8948,
											"end": 9007,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8948,
											"end": 9007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9050,
											"end": 9052,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9039,
											"end": 9048,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9029,
											"end": 9054,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "654"
										},
										{
											"begin": 9087,
											"end": 9092,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 9063,
											"end": 9093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "tag",
											"source": 7,
											"value": "654"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9112,
											"end": 9117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9117,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 9123,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 9123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 9123,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 9123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 9123,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 9123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9128,
											"end": 9379,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 9128,
											"end": 9379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9198,
											"end": 9204,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9251,
											"end": 9253,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9239,
											"end": 9248,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9230,
											"end": 9237,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9226,
											"end": 9249,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9222,
											"end": 9254,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9219,
											"end": 9271,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9219,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "656"
										},
										{
											"begin": 9219,
											"end": 9271,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9267,
											"end": 9268,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9264,
											"end": 9265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9257,
											"end": 9269,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9219,
											"end": 9271,
											"name": "tag",
											"source": 7,
											"value": "656"
										},
										{
											"begin": 9219,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9299,
											"end": 9308,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9293,
											"end": 9309,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9318,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 9343,
											"end": 9348,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9318,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 9318,
											"end": 9349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9384,
											"end": 9511,
											"name": "tag",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 9384,
											"end": 9511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9445,
											"end": 9455,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 9440,
											"end": 9443,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 9436,
											"end": 9456,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 9433,
											"end": 9434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9426,
											"end": 9457,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9476,
											"end": 9480,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 9473,
											"end": 9474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9466,
											"end": 9481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9500,
											"end": 9504,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9497,
											"end": 9498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9490,
											"end": 9505,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9516,
											"end": 9628,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 9516,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9549,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9574,
											"end": 9575,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9564,
											"end": 9599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "661"
										},
										{
											"begin": 9564,
											"end": 9599,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9579,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "661"
										},
										{
											"begin": 9579,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 9579,
											"end": 9597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9579,
											"end": 9597,
											"name": "tag",
											"source": 7,
											"value": "661"
										},
										{
											"begin": 9579,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9613,
											"end": 9622,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 9613,
											"end": 9622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9516,
											"end": 9628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10793,
											"end": 11042,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 10793,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10864,
											"end": 10874,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10906,
											"end": 10916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10906,
											"end": 10916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10906,
											"end": 10916,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10918,
											"end": 10928,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10918,
											"end": 10928,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10918,
											"end": 10928,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10902,
											"end": 10929,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 10949,
											"end": 10969,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10949,
											"end": 10969,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10949,
											"end": 10969,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10949,
											"end": 10969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10864,
											"end": 10874,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10988,
											"end": 11012,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10988,
											"end": 11012,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10988,
											"end": 11012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10978,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "667"
										},
										{
											"begin": 10978,
											"end": 11036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11016,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "667"
										},
										{
											"begin": 11016,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 11016,
											"end": 11034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11016,
											"end": 11034,
											"name": "tag",
											"source": 7,
											"value": "667"
										},
										{
											"begin": 11016,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10978,
											"end": 11036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10978,
											"end": 11036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10793,
											"end": 11042,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10793,
											"end": 11042,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10793,
											"end": 11042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10793,
											"end": 11042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10793,
											"end": 11042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 14108,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 13980,
											"end": 14108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14047,
											"end": 14056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14047,
											"end": 14056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14047,
											"end": 14056,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14068,
											"end": 14079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14068,
											"end": 14079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14068,
											"end": 14079,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14065,
											"end": 14102,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14065,
											"end": 14102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 14065,
											"end": 14102,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14082,
											"end": 14100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 14082,
											"end": 14100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 14082,
											"end": 14100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14113,
											"end": 14281,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 14113,
											"end": 14281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14186,
											"end": 14195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14186,
											"end": 14195,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14186,
											"end": 14195,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 14217,
											"end": 14226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14217,
											"end": 14226,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14234,
											"end": 14249,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14234,
											"end": 14249,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14234,
											"end": 14249,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14228,
											"end": 14250,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14228,
											"end": 14250,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 14214,
											"end": 14251,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 14204,
											"end": 14275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 14204,
											"end": 14275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14255,
											"end": 14273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 14255,
											"end": 14273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 14255,
											"end": 14273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14286,
											"end": 14406,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 14286,
											"end": 14406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14326,
											"end": 14327,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14352,
											"end": 14353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14342,
											"end": 14377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "684"
										},
										{
											"begin": 14342,
											"end": 14377,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14357,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "684"
										},
										{
											"begin": 14357,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 14357,
											"end": 14375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14357,
											"end": 14375,
											"name": "tag",
											"source": 7,
											"value": "684"
										},
										{
											"begin": 14357,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14391,
											"end": 14400,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14391,
											"end": 14400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14286,
											"end": 14406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17228,
											"end": 17355,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 17228,
											"end": 17355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17289,
											"end": 17299,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 17284,
											"end": 17287,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 17280,
											"end": 17300,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 17277,
											"end": 17278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17270,
											"end": 17301,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17320,
											"end": 17324,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 17317,
											"end": 17318,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17310,
											"end": 17325,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17344,
											"end": 17348,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 17341,
											"end": 17342,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17334,
											"end": 17349,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17360,
											"end": 17487,
											"name": "tag",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 17360,
											"end": 17487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17421,
											"end": 17431,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 17416,
											"end": 17419,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 17412,
											"end": 17432,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 17409,
											"end": 17410,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 17433,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17452,
											"end": 17456,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 17449,
											"end": 17450,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17442,
											"end": 17457,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17476,
											"end": 17480,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 17473,
											"end": 17474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17466,
											"end": 17481,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17492,
											"end": 18472,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 17492,
											"end": 18472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17754,
											"end": 17758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17802,
											"end": 17805,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 17791,
											"end": 17800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17787,
											"end": 17806,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17833,
											"end": 17839,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 17822,
											"end": 17831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17815,
											"end": 17840,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17859,
											"end": 17861,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17897,
											"end": 17903,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 17892,
											"end": 17894,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17881,
											"end": 17890,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17877,
											"end": 17895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17870,
											"end": 17904,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17940,
											"end": 17943,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 17935,
											"end": 17937,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17924,
											"end": 17933,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17920,
											"end": 17938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17913,
											"end": 17944,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17964,
											"end": 17970,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17999,
											"end": 18005,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 17993,
											"end": 18006,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 18030,
											"end": 18036,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18022,
											"end": 18028,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18015,
											"end": 18037,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18068,
											"end": 18071,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 18057,
											"end": 18066,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18053,
											"end": 18072,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18046,
											"end": 18072,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18046,
											"end": 18072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18107,
											"end": 18109,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18099,
											"end": 18105,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 18095,
											"end": 18110,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18081,
											"end": 18110,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18081,
											"end": 18110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18128,
											"end": 18129,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18138,
											"end": 18333,
											"name": "tag",
											"source": 7,
											"value": "696"
										},
										{
											"begin": 18138,
											"end": 18333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18152,
											"end": 18158,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18149,
											"end": 18150,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18146,
											"end": 18159,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 18138,
											"end": 18333,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18138,
											"end": 18333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "698"
										},
										{
											"begin": 18138,
											"end": 18333,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18217,
											"end": 18230,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18217,
											"end": 18230,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18213,
											"end": 18252,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 18201,
											"end": 18253,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18201,
											"end": 18253,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18308,
											"end": 18323,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18308,
											"end": 18323,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18308,
											"end": 18323,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18308,
											"end": 18323,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18273,
											"end": 18285,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18273,
											"end": 18285,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18273,
											"end": 18285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18273,
											"end": 18285,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18249,
											"end": 18250,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 18167,
											"end": 18176,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18138,
											"end": 18333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "696"
										},
										{
											"begin": 18138,
											"end": 18333,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18138,
											"end": 18333,
											"name": "tag",
											"source": 7,
											"value": "698"
										},
										{
											"begin": 18138,
											"end": 18333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18389,
											"end": 18421,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 18389,
											"end": 18421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18389,
											"end": 18421,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 18389,
											"end": 18421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 18384,
											"end": 18386,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 18369,
											"end": 18387,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18369,
											"end": 18387,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18362,
											"end": 18422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18453,
											"end": 18456,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 18438,
											"end": 18457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18431,
											"end": 18466,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18350,
											"end": 18353,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17492,
											"end": 18472,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17492,
											"end": 18472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18477,
											"end": 19582,
											"name": "tag",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 18477,
											"end": 19582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18572,
											"end": 18578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18603,
											"end": 18605,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18646,
											"end": 18648,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18634,
											"end": 18643,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18625,
											"end": 18632,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18621,
											"end": 18644,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18617,
											"end": 18649,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 18614,
											"end": 18666,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18614,
											"end": 18666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "700"
										},
										{
											"begin": 18614,
											"end": 18666,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18662,
											"end": 18663,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18659,
											"end": 18660,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18652,
											"end": 18664,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 18614,
											"end": 18666,
											"name": "tag",
											"source": 7,
											"value": "700"
										},
										{
											"begin": 18614,
											"end": 18666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18695,
											"end": 18704,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18689,
											"end": 18705,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 18724,
											"end": 18742,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18765,
											"end": 18767,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18757,
											"end": 18763,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18754,
											"end": 18768,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 18751,
											"end": 18785,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18751,
											"end": 18785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "701"
										},
										{
											"begin": 18751,
											"end": 18785,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18781,
											"end": 18782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18778,
											"end": 18779,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18771,
											"end": 18783,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 18751,
											"end": 18785,
											"name": "tag",
											"source": 7,
											"value": "701"
										},
										{
											"begin": 18751,
											"end": 18785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18819,
											"end": 18825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18808,
											"end": 18817,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18804,
											"end": 18826,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18794,
											"end": 18826,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18794,
											"end": 18826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18864,
											"end": 18871,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18857,
											"end": 18861,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 18853,
											"end": 18855,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18849,
											"end": 18862,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18845,
											"end": 18872,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 18835,
											"end": 18890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "702"
										},
										{
											"begin": 18835,
											"end": 18890,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18886,
											"end": 18887,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18883,
											"end": 18884,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18876,
											"end": 18888,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 18835,
											"end": 18890,
											"name": "tag",
											"source": 7,
											"value": "702"
										},
										{
											"begin": 18835,
											"end": 18890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18915,
											"end": 18917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18909,
											"end": 18918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 18937,
											"end": 18939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18933,
											"end": 18935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18930,
											"end": 18940,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 18927,
											"end": 18963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18927,
											"end": 18963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "704"
										},
										{
											"begin": 18927,
											"end": 18963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18943,
											"end": 18961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "704"
										},
										{
											"begin": 18943,
											"end": 18961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 18943,
											"end": 18961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18943,
											"end": 18961,
											"name": "tag",
											"source": 7,
											"value": "704"
										},
										{
											"begin": 18943,
											"end": 18961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18989,
											"end": 18991,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18986,
											"end": 18987,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 18982,
											"end": 18992,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 19021,
											"end": 19023,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19015,
											"end": 19024,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 19084,
											"end": 19086,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 19080,
											"end": 19087,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 19075,
											"end": 19077,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 19071,
											"end": 19073,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19067,
											"end": 19078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19063,
											"end": 19088,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19055,
											"end": 19061,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19051,
											"end": 19089,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19139,
											"end": 19145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19127,
											"end": 19137,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19124,
											"end": 19146,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 19119,
											"end": 19121,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19107,
											"end": 19117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19104,
											"end": 19122,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 19101,
											"end": 19147,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 19098,
											"end": 19170,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19098,
											"end": 19170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "706"
										},
										{
											"begin": 19098,
											"end": 19170,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19150,
											"end": 19168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "706"
										},
										{
											"begin": 19150,
											"end": 19168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 19150,
											"end": 19168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19150,
											"end": 19168,
											"name": "tag",
											"source": 7,
											"value": "706"
										},
										{
											"begin": 19150,
											"end": 19168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19186,
											"end": 19188,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19179,
											"end": 19201,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19236,
											"end": 19254,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19236,
											"end": 19254,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19236,
											"end": 19254,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19270,
											"end": 19285,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19270,
											"end": 19285,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19270,
											"end": 19285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19270,
											"end": 19285,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19312,
											"end": 19323,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19312,
											"end": 19323,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19312,
											"end": 19323,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19308,
											"end": 19328,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19308,
											"end": 19328,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19308,
											"end": 19328,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19340,
											"end": 19359,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 19340,
											"end": 19359,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19340,
											"end": 19359,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 19337,
											"end": 19376,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19337,
											"end": 19376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "707"
										},
										{
											"begin": 19337,
											"end": 19376,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19372,
											"end": 19373,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19369,
											"end": 19370,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 19362,
											"end": 19374,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 19337,
											"end": 19376,
											"name": "tag",
											"source": 7,
											"value": "707"
										},
										{
											"begin": 19337,
											"end": 19376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19396,
											"end": 19407,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19396,
											"end": 19407,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19396,
											"end": 19407,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19396,
											"end": 19407,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19416,
											"end": 19551,
											"name": "tag",
											"source": 7,
											"value": "708"
										},
										{
											"begin": 19416,
											"end": 19551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19432,
											"end": 19438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19427,
											"end": 19430,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19424,
											"end": 19439,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 19416,
											"end": 19551,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19416,
											"end": 19551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 19416,
											"end": 19551,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19498,
											"end": 19508,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19498,
											"end": 19508,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 19486,
											"end": 19509,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19486,
											"end": 19509,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19449,
											"end": 19461,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19449,
											"end": 19461,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19449,
											"end": 19461,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19449,
											"end": 19461,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19529,
											"end": 19541,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19529,
											"end": 19541,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19529,
											"end": 19541,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19529,
											"end": 19541,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19416,
											"end": 19551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "708"
										},
										{
											"begin": 19416,
											"end": 19551,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20199,
											"end": 20505,
											"name": "tag",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 20199,
											"end": 20505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20287,
											"end": 20293,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20295,
											"end": 20301,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20303,
											"end": 20309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20356,
											"end": 20358,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 20344,
											"end": 20353,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20335,
											"end": 20342,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 20331,
											"end": 20354,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20327,
											"end": 20359,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 20324,
											"end": 20376,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20324,
											"end": 20376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "713"
										},
										{
											"begin": 20324,
											"end": 20376,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20372,
											"end": 20373,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20369,
											"end": 20370,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20362,
											"end": 20374,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 20324,
											"end": 20376,
											"name": "tag",
											"source": 7,
											"value": "713"
										},
										{
											"begin": 20324,
											"end": 20376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20401,
											"end": 20410,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20395,
											"end": 20411,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20385,
											"end": 20411,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20385,
											"end": 20411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20451,
											"end": 20453,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20440,
											"end": 20449,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20436,
											"end": 20454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20430,
											"end": 20455,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20420,
											"end": 20455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20420,
											"end": 20455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20495,
											"end": 20497,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20484,
											"end": 20493,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20480,
											"end": 20498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20474,
											"end": 20499,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20464,
											"end": 20499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20464,
											"end": 20499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20199,
											"end": 20505,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20199,
											"end": 20505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20199,
											"end": 20505,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20199,
											"end": 20505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20199,
											"end": 20505,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20199,
											"end": 20505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts@4.9.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@4.9.3/utils/Context.sol",
								"contracts/gainzilla.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_maxWalletSize()": "8f9a55c0",
							"accumulatedEco()": "c531b108",
							"accumulatedLp()": "d8d61c40",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"configureCooldown(bool,uint32)": "fe6b751e",
							"configureDiamondFloor(bool,uint16)": "fe0bb982",
							"cooldown()": "787a08a6",
							"cooldownRemaining(address)": "9d82190f",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"diamondFloor()": "c95457ff",
							"increaseAllowance(address,uint256)": "39509351",
							"isExempt(address)": "ad5dff73",
							"maxWalletPercentage()": "599ca397",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pairAddress()": "a8b08982",
							"pairPrice()": "9491f94d",
							"priceDeviation()": "7773168f",
							"renounceOwnership()": "715018a6",
							"routerAddress()": "3268cc56",
							"setExempt(address,bool)": "9fde54f5",
							"setMaxWalletPercentage(uint256)": "7a845ece",
							"setRouter(address)": "c0d78655",
							"setTaxRates(uint16,uint16,uint16,uint16)": "1569d181",
							"setThreshold(uint256)": "960bfe04",
							"swapThreshold()": "0445b667",
							"symbol()": "95d89b41",
							"taxRates()": "333f4b3d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPercentage\",\"type\":\"uint256\"}],\"name\":\"MaxWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRouter\",\"type\":\"address\"}],\"name\":\"RouterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ecoAmount\",\"type\":\"uint256\"}],\"name\":\"TaxesCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accumulatedEco\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accumulatedLp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"name\":\"configureCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"triggerPercent\",\"type\":\"uint16\"}],\"name\":\"configureDiamondFloor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"cooldownRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"days_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hours_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minutes_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seconds_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"diamondFloor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"triggerPercentage\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"athPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellStopped\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"blockedAth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWalletPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceDeviation\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"routerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"setExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"setMaxWalletPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRouter\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"buyLp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"buyEco\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"sellLp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"sellEco\",\"type\":\"uint16\"}],\"name\":\"setTaxRates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"setThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRates\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"buyLp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"buyEco\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"sellLp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"sellEco\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"MemeCoin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/gainzilla.sol\":{\"keccak256\":\"0x1f5fe749bdbccea1babd51e6cf600c090ac0bddf2fe5bc5d072516f34ebd0bec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12add13c868c489ca04075c9d83a6f648ffc218181a929d7617b1f48f7698fea\",\"dweb:/ipfs/QmPE8hhAQDXwFTGxfrnvnXCFaojEupH6Cf3tKwHpAJDs5Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 440,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 446,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 448,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 450,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 452,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1237,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "maxWalletPercentage",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1252,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "taxRates",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(TaxRates)1249_storage"
							},
							{
								"astId": 1260,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "swapThreshold",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1262,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "accumulatedLp",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1264,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "accumulatedEco",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1266,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "swapping",
								"offset": 0,
								"slot": "11",
								"type": "t_bool"
							},
							{
								"astId": 1278,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "cooldown",
								"offset": 0,
								"slot": "12",
								"type": "t_struct(CooldownConfig)1275_storage"
							},
							{
								"astId": 1292,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "diamondFloor",
								"offset": 0,
								"slot": "14",
								"type": "t_struct(DiamondFloor)1289_storage"
							},
							{
								"astId": 1294,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "routerAddress",
								"offset": 0,
								"slot": "18",
								"type": "t_address"
							},
							{
								"astId": 1296,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "pairAddress",
								"offset": 0,
								"slot": "19",
								"type": "t_address"
							},
							{
								"astId": 1303,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "isExempt",
								"offset": 0,
								"slot": "20",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(CooldownConfig)1275_storage": {
								"encoding": "inplace",
								"label": "struct MemeCoin.CooldownConfig",
								"members": [
									{
										"astId": 1268,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "enabled",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1270,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "duration",
										"offset": 1,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 1274,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "cooldowns",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(DiamondFloor)1289_storage": {
								"encoding": "inplace",
								"label": "struct MemeCoin.DiamondFloor",
								"members": [
									{
										"astId": 1280,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "enabled",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1282,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "triggerPercentage",
										"offset": 1,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 1284,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "athPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1286,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "sellStopped",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1288,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "blockedAth",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(TaxRates)1249_storage": {
								"encoding": "inplace",
								"label": "struct MemeCoin.TaxRates",
								"members": [
									{
										"astId": 1242,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "buyLp",
										"offset": 0,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 1244,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "buyEco",
										"offset": 2,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 1246,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "sellLp",
										"offset": 4,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 1248,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "sellEco",
										"offset": 6,
										"slot": "0",
										"type": "t_uint16"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5054:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5096:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5101:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5104:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5138:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5142:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5131:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4972:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4994:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5045:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:0"
									},
									"scope": 311,
									"src": "4959:201:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5739:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5781:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5788:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5822:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5826:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5815:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5679:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5730:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:0"
									},
									"scope": 311,
									"src": "5644:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6585:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6627:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6634:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6668:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6672:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6661:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6503:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6514:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6525:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6576:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:0"
									},
									"scope": 311,
									"src": "6490:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6210:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.9.3/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1136
						],
						"Ownable": [
							424
						]
					},
					"id": 425,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 425,
							"sourceUnit": 1137,
							"src": "127:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 316,
										"name": "Context",
										"nameLocations": [
											"683:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1136,
										"src": "683:7:1"
									},
									"id": 317,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 315,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 424,
							"linearizedBaseContracts": [
								424,
								1136
							],
							"name": "Ownable",
							"nameLocation": "672:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 424,
									"src": "697:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 318,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 325,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "753:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "784:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:1"
									},
									"src": "726:84:1"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "926:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 330,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "955:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 329,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "936:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "936:32:1"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 335,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:1"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:1"
									},
									"scope": 424,
									"src": "912:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "1084:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 338,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "1094:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:1"
											},
											{
												"id": 341,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:1"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 343,
									"name": "onlyOwner",
									"nameLocation": "1072:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:1"
									},
									"src": "1063:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "1256:30:1",
										"statements": [
											{
												"expression": {
													"id": 349,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "1273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 348,
												"id": 350,
												"nodeType": "Return",
												"src": "1266:13:1"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "1247:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:1"
									},
									"scope": 424,
									"src": "1201:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "1404:85:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 357,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "1422:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 359,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "1433:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:1"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:1"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:1"
									},
									"scope": 424,
									"src": "1359:130:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "1878:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 373,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 372,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "1888:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:1"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 370,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 369,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "1868:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:1"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:1"
									},
									"scope": 424,
									"src": "1824:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "2144:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "2162:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 399,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "2256:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 398,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2237:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:1"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 386,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 385,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "2134:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2101:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:1"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:1"
									},
									"scope": 424,
									"src": "2074:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "2489:124:1",
										"statements": [
											{
												"assignments": [
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "2499:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 409,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"id": 411,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2518:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:1"
											},
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 413,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "2534:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 414,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "2543:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 418,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "2587:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "2597:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 417,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "2566:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "EmitStatement",
												"src": "2561:45:1"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2454:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:1"
									},
									"scope": 424,
									"src": "2426:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 425,
							"src": "654:1961:1",
							"usedErrors": [],
							"usedEvents": [
								325
							]
						}
					],
					"src": "102:2514:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1136
						],
						"ERC20": [
							1011
						],
						"IERC20": [
							1089
						],
						"IERC20Metadata": [
							1114
						]
					},
					"id": 1012,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 426,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 427,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 1090,
							"src": "130:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 428,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 1115,
							"src": "153:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 429,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 1137,
							"src": "195:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 431,
										"name": "Context",
										"nameLocations": [
											"1550:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1136,
										"src": "1550:7:2"
									},
									"id": 432,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:2"
								},
								{
									"baseName": {
										"id": 433,
										"name": "IERC20",
										"nameLocations": [
											"1559:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1089,
										"src": "1559:6:2"
									},
									"id": 434,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:2"
								},
								{
									"baseName": {
										"id": 435,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1567:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1114,
										"src": "1567:14:2"
									},
									"id": 436,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 430,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1011,
							"linearizedBaseContracts": [
								1011,
								1114,
								1089,
								1136
							],
							"name": "ERC20",
							"nameLocation": "1541:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 440,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1624:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1588:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 439,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 437,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 438,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 446,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1696:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1640:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 445,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 441,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 444,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 442,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 443,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 448,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1730:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1714:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 447,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 450,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1764:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1749:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 449,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 452,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1790:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1775:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 451,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "2036:57:2",
										"statements": [
											{
												"expression": {
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 460,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "2046:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 461,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "2054:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:2"
											},
											{
												"expression": {
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 464,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "2069:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 465,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "2079:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:2"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 469,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2006:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1992:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 454,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2027:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2013:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:2"
									},
									"scope": 1011,
									"src": "1980:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1101
									],
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "2227:29:2",
										"statements": [
											{
												"expression": {
													"id": 476,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 450,
													"src": "2244:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 475,
												"id": 477,
												"nodeType": "Return",
												"src": "2237:12:2"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2167:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 472,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:2"
									},
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:2"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2212:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 473,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:2"
									},
									"scope": 1011,
									"src": "2158:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1107
									],
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "2440:31:2",
										"statements": [
											{
												"expression": {
													"id": 486,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 452,
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 485,
												"id": 487,
												"nodeType": "Return",
												"src": "2450:14:2"
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 482,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:2"
									},
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "2425:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:2"
									},
									"scope": 1011,
									"src": "2369:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1113
									],
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "3169:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 495,
												"id": 497,
												"nodeType": "Return",
												"src": "3179:9:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3113:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 492,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:2"
									},
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:2"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3162:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 493,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:2"
									},
									"scope": 1011,
									"src": "3104:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1038
									],
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "3325:36:2",
										"statements": [
											{
												"expression": {
													"id": 506,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "3342:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 505,
												"id": 507,
												"nodeType": "Return",
												"src": "3335:19:2"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3264:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 502,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:2"
									},
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:2"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "3316:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:2"
									},
									"scope": 1011,
									"src": "3255:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1046
									],
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3502:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 518,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3519:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 520,
													"indexExpression": {
														"id": 519,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "3529:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 517,
												"id": 521,
												"nodeType": "Return",
												"src": "3512:25:2"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3428:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 514,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:2"
									},
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:2"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:2"
									},
									"scope": 1011,
									"src": "3419:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1056
									],
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "3825:104:2",
										"statements": [
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3843:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "3835:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 534,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 536,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "3851:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "3883:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3890:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 542,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3894:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "3873:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 533,
												"id": 546,
												"nodeType": "Return",
												"src": "3911:11:2"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3749:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 530,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:2"
									},
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3758:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3778:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3770:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:2"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3819:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:2"
									},
									"scope": 1011,
									"src": "3740:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1066
									],
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "4085:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 559,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4102:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 561,
														"indexExpression": {
															"id": 560,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "4114:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 563,
													"indexExpression": {
														"id": 562,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "4121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 558,
												"id": 564,
												"nodeType": "Return",
												"src": "4095:34:2"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3996:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 555,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:2"
									},
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4006:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4029:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4021:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:2"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4076:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:2"
									},
									"scope": 1011,
									"src": "3987:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1076
									],
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "4533:108:2",
										"statements": [
											{
												"assignments": [
													578
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4551:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "4543:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 577,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 579,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "4559:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 583,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "4590:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "4597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 585,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "4606:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 582,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "4581:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 576,
												"id": 589,
												"nodeType": "Return",
												"src": "4623:11:2"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4453:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 573,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:2"
									},
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4469:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "4461:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4486:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "4478:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:2"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "4527:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 574,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:2"
									},
									"scope": 1011,
									"src": "4444:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1088
									],
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "5306:153:2",
										"statements": [
											{
												"assignments": [
													605
												],
												"declarations": [
													{
														"constant": false,
														"id": 605,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5324:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 623,
														"src": "5316:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 604,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 608,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 606,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "5334:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 610,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "5372:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 612,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "5387:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 609,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "5356:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "5414:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "5420:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "5424:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "5404:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 603,
												"id": 622,
												"nodeType": "Return",
												"src": "5441:11:2"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5212:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 600,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:2"
									},
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5233:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "5225:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5247:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "5239:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5259:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "5251:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:2"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "5300:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:2"
									},
									"scope": 1011,
									"src": "5203:256:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "5948:140:2",
										"statements": [
											{
												"assignments": [
													635
												],
												"declarations": [
													{
														"constant": false,
														"id": 635,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5966:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 652,
														"src": "5958:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 634,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 638,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 636,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "5974:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 640,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "6005:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "6012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 643,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "6031:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 644,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 627,
																		"src": "6038:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 642,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "6021:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 646,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "6049:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 639,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "5996:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 633,
												"id": 651,
												"nodeType": "Return",
												"src": "6070:11:2"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5863:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5889:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "5881:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5906:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "5898:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:2"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "5942:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 631,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:2"
									},
									"scope": 1011,
									"src": "5854:234:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "6674:328:2",
										"statements": [
											{
												"assignments": [
													664
												],
												"declarations": [
													{
														"constant": false,
														"id": 664,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 693,
														"src": "6684:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 663,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 665,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "6700:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:2"
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 693,
														"src": "6722:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 674,
												"initialValue": {
													"arguments": [
														{
															"id": 671,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "6759:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "6766:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 670,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "6749:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 676,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "6792:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 677,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "6812:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 675,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:2"
											},
											{
												"id": 690,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 683,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "6912:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 684,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "6919:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 685,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "6928:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 686,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "6947:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 682,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "6903:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 689,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 662,
												"id": 692,
												"nodeType": "Return",
												"src": "6984:11:2"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "6602:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "6619:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:2"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "6668:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:2"
									},
									"scope": 1011,
									"src": "6575:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "7534:710:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 705,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "7552:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 706,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 704,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 715,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "7630:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 714,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 725,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "7718:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "7724:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "7728:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "7697:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:2"
											},
											{
												"assignments": [
													731
												],
												"declarations": [
													{
														"constant": false,
														"id": 731,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7754:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 770,
														"src": "7746:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 730,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"baseExpression": {
														"id": 732,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "7768:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 734,
													"indexExpression": {
														"id": 733,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "7778:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 737,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "7801:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 738,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "7816:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:2"
											},
											{
												"id": 757,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:2",
												"statements": [
													{
														"expression": {
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 743,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "7899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 745,
																"indexExpression": {
																	"id": 744,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "7909:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "7917:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 747,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "7931:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 750,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:2"
													},
													{
														"expression": {
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 751,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "8114:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 753,
																"indexExpression": {
																	"id": 752,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "8124:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 754,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "8131:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 756,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 759,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "8172:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "8178:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "8182:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 758,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "8163:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "EmitStatement",
												"src": "8158:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 765,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "8220:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "8226:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "8230:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 764,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "8200:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:2"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:2",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7465:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7483:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "7475:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7497:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "7489:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7509:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "7501:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:2"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:2"
									},
									"scope": 1011,
									"src": "7456:788:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "8585:470:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 780,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "8603:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 779,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 790,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8704:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 795,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "8713:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 789,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "8671:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:2"
											},
											{
												"expression": {
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 798,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "8731:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 799,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "8747:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:2"
											},
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:2",
												"statements": [
													{
														"expression": {
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 802,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "8899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 804,
																"indexExpression": {
																	"id": 803,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "8909:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 805,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "8921:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 807,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 810,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8973:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "8982:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 809,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "8952:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "EmitStatement",
												"src": "8947:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 819,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "9032:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 824,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "9041:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "9000:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:2"
											}
										]
									},
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8529:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8543:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "8535:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "8552:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:2"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:2"
									},
									"scope": 1011,
									"src": "8520:535:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "9440:594:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 837,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "9458:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 838,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 847,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "9549:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 848,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 852,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "9570:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 846,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "9528:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:2"
											},
											{
												"assignments": [
													856
												],
												"declarations": [
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9596:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "9588:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 855,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 860,
												"initialValue": {
													"baseExpression": {
														"id": 857,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "9613:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 859,
													"indexExpression": {
														"id": 858,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "9623:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 862,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "9649:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 863,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "9667:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 861,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:2"
											},
											{
												"id": 880,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:2",
												"statements": [
													{
														"expression": {
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 868,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "9746:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 870,
																"indexExpression": {
																	"id": 869,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "9756:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 871,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "9767:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 872,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "9784:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 875,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:2"
													},
													{
														"expression": {
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 876,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "9883:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 877,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "9899:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 879,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 882,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "9940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 883,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "9961:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "9931:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "EmitStatement",
												"src": "9926:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "9999:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 892,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "10020:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "9979:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:2"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9384:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9398:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9390:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9415:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9407:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:2"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:2"
									},
									"scope": 1011,
									"src": "9375:659:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "10540:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 911,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "10558:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 912,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 921,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "10636:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 922,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 920,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:2"
											},
											{
												"expression": {
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 930,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "10707:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 933,
															"indexExpression": {
																"id": 931,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "10719:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 934,
														"indexExpression": {
															"id": 932,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "10726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 935,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "10737:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 939,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "10767:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "10774:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "10783:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 938,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "10758:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "EmitStatement",
												"src": "10753:37:2"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10466:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10483:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "10475:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10498:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "10490:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10515:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "10507:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:2"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:2"
									},
									"scope": 1011,
									"src": "10457:340:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "11168:321:2",
										"statements": [
											{
												"assignments": [
													956
												],
												"declarations": [
													{
														"constant": false,
														"id": 956,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11186:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 987,
														"src": "11178:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 955,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 961,
												"initialValue": {
													"arguments": [
														{
															"id": 958,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "11215:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11222:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 957,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "11205:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 962,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "11244:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 964,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 963,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11278:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 986,
												"nodeType": "IfStatement",
												"src": "11240:243:2",
												"trueBody": {
													"id": 985,
													"nodeType": "Block",
													"src": "11283:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 970,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 956,
																			"src": "11305:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 971,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 952,
																			"src": "11325:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 969,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 975,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:2"
														},
														{
															"id": 984,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 977,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 948,
																				"src": "11416:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 978,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 950,
																				"src": "11423:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 979,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "11432:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 980,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 952,
																					"src": "11451:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 976,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 945,
																			"src": "11407:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 983,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11087:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11111:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "11103:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "11118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "11135:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:2"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:2"
									},
									"scope": 1011,
									"src": "11078:411:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "12162:2:2",
										"statements": []
									},
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12082:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12111:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "12103:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12125:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "12117:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12137:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "12129:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:2"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:2"
									},
									"scope": 1011,
									"src": "12073:91:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "12840:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12761:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12789:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "12781:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12803:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "12795:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12815:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "12807:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:2"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:2"
									},
									"scope": 1011,
									"src": "12752:90:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1012,
							"src": "1532:11312:2",
							"usedErrors": [],
							"usedEvents": [
								1023,
								1032
							]
						}
					],
					"src": "105:12740:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1089
						]
					},
					"id": 1090,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1013,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1014,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1089,
							"linearizedBaseContracts": [
								1089
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1023,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1032,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1038,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 1089,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 1089,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1053,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 1089,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1066,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 1089,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1073,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 1089,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1088,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2668:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2682:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:3"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1085,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:3"
									},
									"scope": 1089,
									"src": "2646:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1090,
							"src": "202:2534:3",
							"usedErrors": [],
							"usedEvents": [
								1023,
								1032
							]
						}
					],
					"src": "106:2631:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1089
						],
						"IERC20Metadata": [
							1114
						]
					},
					"id": 1115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1091,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1092,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1115,
							"sourceUnit": 1090,
							"src": "135:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1094,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1089,
										"src": "305:6:4"
									},
									"id": 1095,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1093,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1114,
							"linearizedBaseContracts": [
								1114,
								1089
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1098,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 1114,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1104,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 1114,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1110,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 1114,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1115,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								1023,
								1032
							]
						}
					],
					"src": "110:573:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@4.9.3/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1136
						]
					},
					"id": 1137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1116,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1117,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1136,
							"linearizedBaseContracts": [
								1136
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1122,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1124,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1136,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1131,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1130,
												"id": 1133,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1136,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1137,
							"src": "608:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"contracts/gainzilla.sol": {
				"ast": {
					"absolutePath": "contracts/gainzilla.sol",
					"exportedSymbols": {
						"Context": [
							1136
						],
						"ERC20": [
							1011
						],
						"IERC20": [
							1089
						],
						"IERC20Metadata": [
							1114
						],
						"IUniswapV2Factory": [
							1200
						],
						"IUniswapV2Pair": [
							1220
						],
						"IUniswapV2Router": [
							1190
						],
						"MemeCoin": [
							2486
						],
						"Ownable": [
							424
						],
						"SafeMath": [
							311
						]
					},
					"id": 2487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
							"id": 1139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2487,
							"sourceUnit": 1012,
							"src": "58:61:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/access/Ownable.sol",
							"file": "@openzeppelin/contracts@4.9.3/access/Ownable.sol",
							"id": 1140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2487,
							"sourceUnit": 425,
							"src": "120:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1141,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2487,
							"sourceUnit": 312,
							"src": "179:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1190,
							"linearizedBaseContracts": [
								1190
							],
							"name": "IUniswapV2Router",
							"nameLocation": "248:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "280:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:2:6"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "313:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "313:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "312:9:6"
									},
									"scope": 1190,
									"src": "271:51:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "336:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "340:2:6"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "366:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "365:9:6"
									},
									"scope": 1190,
									"src": "327:48:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "389:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "422:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "414:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "442:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "437:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "437:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "475:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "470:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "470:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "504:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "499:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "499:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "534:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "526:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "551:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "546:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "546:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:161:6"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "592:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "592:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "598:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "598:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "604:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "604:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:18:6"
									},
									"scope": 1190,
									"src": "380:230:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "624:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "660:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "655:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "655:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "684:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "679:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "679:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "726:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "707:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1177,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "707:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1178,
													"nodeType": "ArrayTypeName",
													"src": "707:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "749:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "741:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "741:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "767:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "762:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "762:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:136:6"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "814:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "800:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1185,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "800:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1186,
													"nodeType": "ArrayTypeName",
													"src": "800:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "799:23:6"
									},
									"scope": 1190,
									"src": "615:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2487,
							"src": "238:587:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1200,
							"linearizedBaseContracts": [
								1200
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "837:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c9c65396",
									"id": 1199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "870:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "889:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "881:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "905:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "897:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:32:6"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "939:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "931:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:14:6"
									},
									"scope": 1200,
									"src": "861:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2487,
							"src": "827:120:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Pair",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1220,
							"linearizedBaseContracts": [
								1220
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "959:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0902f1ac",
									"id": 1209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "989:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1000:2:6"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1034:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "1026:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1202,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1052:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "1044:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1204,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "1069:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "1062:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1206,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1062:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:63:6"
									},
									"scope": 1220,
									"src": "980:109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 1214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "1103:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1109:2:6"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "1135:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1134:9:6"
									},
									"scope": 1220,
									"src": "1094:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "1158:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:2:6"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1190:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:9:6"
									},
									"scope": 1220,
									"src": "1149:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2487,
							"src": "949:252:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1221,
										"name": "ERC20",
										"nameLocations": [
											"1224:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1011,
										"src": "1224:5:6"
									},
									"id": 1222,
									"nodeType": "InheritanceSpecifier",
									"src": "1224:5:6"
								},
								{
									"baseName": {
										"id": 1223,
										"name": "Ownable",
										"nameLocations": [
											"1231:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 424,
										"src": "1231:7:6"
									},
									"id": 1224,
									"nodeType": "InheritanceSpecifier",
									"src": "1231:7:6"
								}
							],
							"canonicalName": "MemeCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2486,
							"linearizedBaseContracts": [
								2486,
								424,
								1011,
								1114,
								1089,
								1136
							],
							"name": "MemeCoin",
							"nameLocation": "1212:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1227,
									"libraryName": {
										"id": 1225,
										"name": "SafeMath",
										"nameLocations": [
											"1251:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "1251:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "1245:27:6",
									"typeName": {
										"id": 1226,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1264:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1234,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "1303:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "1278:62:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1228,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1278:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 1233,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f3030305f303030",
											"id": 1229,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1318:13:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1232,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1230,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1334:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1231,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1338:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1334:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1318:22:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "599ca397",
									"id": 1237,
									"mutability": "mutable",
									"name": "maxWalletPercentage",
									"nameLocation": "1361:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "1346:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1235,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1346:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 1236,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1383:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1240,
									"mutability": "constant",
									"name": "BP_DIVISOR",
									"nameLocation": "1417:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "1392:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1238,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1392:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31305f303030",
										"id": 1239,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1430:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10_000"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "MemeCoin.TaxRates",
									"id": 1249,
									"members": [
										{
											"constant": false,
											"id": 1242,
											"mutability": "mutable",
											"name": "buyLp",
											"nameLocation": "1476:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 1249,
											"src": "1469:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1241,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1469:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1244,
											"mutability": "mutable",
											"name": "buyEco",
											"nameLocation": "1498:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1249,
											"src": "1491:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1243,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1491:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1246,
											"mutability": "mutable",
											"name": "sellLp",
											"nameLocation": "1521:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1249,
											"src": "1514:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1245,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1514:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1248,
											"mutability": "mutable",
											"name": "sellEco",
											"nameLocation": "1544:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 1249,
											"src": "1537:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1247,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1537:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TaxRates",
									"nameLocation": "1450:8:6",
									"nodeType": "StructDefinition",
									"scope": 2486,
									"src": "1443:115:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "333f4b3d",
									"id": 1252,
									"mutability": "mutable",
									"name": "taxRates",
									"nameLocation": "1579:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "1563:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
										"typeString": "struct MemeCoin.TaxRates"
									},
									"typeName": {
										"id": 1251,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1250,
											"name": "TaxRates",
											"nameLocations": [
												"1563:8:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1249,
											"src": "1563:8:6"
										},
										"referencedDeclaration": 1249,
										"src": "1563:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_TaxRates_$1249_storage_ptr",
											"typeString": "struct MemeCoin.TaxRates"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1255,
									"mutability": "constant",
									"name": "TRANSFER_MULTIPLIER",
									"nameLocation": "1618:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "1593:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1253,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3335",
										"id": 1254,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1640:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_35_by_1",
											"typeString": "int_const 35"
										},
										"value": "35"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "0445b667",
									"id": 1260,
									"mutability": "mutable",
									"name": "swapThreshold",
									"nameLocation": "1681:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "1666:50:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1256,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1666:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1259,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 1257,
											"name": "TOTAL_SUPPLY",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1234,
											"src": "1697:12:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "31303030",
											"id": 1258,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1712:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000_by_1",
												"typeString": "int_const 1000"
											},
											"value": "1000"
										},
										"src": "1697:19:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d8d61c40",
									"id": 1262,
									"mutability": "mutable",
									"name": "accumulatedLp",
									"nameLocation": "1737:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "1722:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1261,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1722:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c531b108",
									"id": 1264,
									"mutability": "mutable",
									"name": "accumulatedEco",
									"nameLocation": "1771:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "1756:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1263,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1756:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1266,
									"mutability": "mutable",
									"name": "swapping",
									"nameLocation": "1804:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "1791:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1265,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1791:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "MemeCoin.CooldownConfig",
									"id": 1275,
									"members": [
										{
											"constant": false,
											"id": 1268,
											"mutability": "mutable",
											"name": "enabled",
											"nameLocation": "1856:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 1275,
											"src": "1851:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1267,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1851:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1270,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "1880:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 1275,
											"src": "1873:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1269,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1873:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1274,
											"mutability": "mutable",
											"name": "cooldowns",
											"nameLocation": "1926:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1275,
											"src": "1898:37:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1273,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1906:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1898:27:6",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1917:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CooldownConfig",
									"nameLocation": "1826:14:6",
									"nodeType": "StructDefinition",
									"scope": 2486,
									"src": "1819:123:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "787a08a6",
									"id": 1278,
									"mutability": "mutable",
									"name": "cooldown",
									"nameLocation": "1969:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "1947:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
										"typeString": "struct MemeCoin.CooldownConfig"
									},
									"typeName": {
										"id": 1277,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1276,
											"name": "CooldownConfig",
											"nameLocations": [
												"1947:14:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1275,
											"src": "1947:14:6"
										},
										"referencedDeclaration": 1275,
										"src": "1947:14:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage_ptr",
											"typeString": "struct MemeCoin.CooldownConfig"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "MemeCoin.DiamondFloor",
									"id": 1289,
									"members": [
										{
											"constant": false,
											"id": 1280,
											"mutability": "mutable",
											"name": "enabled",
											"nameLocation": "2019:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "2014:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1279,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2014:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1282,
											"mutability": "mutable",
											"name": "triggerPercentage",
											"nameLocation": "2043:17:6",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "2036:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1281,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2036:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1284,
											"mutability": "mutable",
											"name": "athPrice",
											"nameLocation": "2078:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "2070:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1283,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2070:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1286,
											"mutability": "mutable",
											"name": "sellStopped",
											"nameLocation": "2101:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "2096:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1285,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2096:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1288,
											"mutability": "mutable",
											"name": "blockedAth",
											"nameLocation": "2130:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "2122:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1287,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2122:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DiamondFloor",
									"nameLocation": "1991:12:6",
									"nodeType": "StructDefinition",
									"scope": 2486,
									"src": "1984:163:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c95457ff",
									"id": 1292,
									"mutability": "mutable",
									"name": "diamondFloor",
									"nameLocation": "2172:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "2152:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
										"typeString": "struct MemeCoin.DiamondFloor"
									},
									"typeName": {
										"id": 1291,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1290,
											"name": "DiamondFloor",
											"nameLocations": [
												"2152:12:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1289,
											"src": "2152:12:6"
										},
										"referencedDeclaration": 1289,
										"src": "2152:12:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage_ptr",
											"typeString": "struct MemeCoin.DiamondFloor"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3268cc56",
									"id": 1294,
									"mutability": "mutable",
									"name": "routerAddress",
									"nameLocation": "2206:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "2191:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1293,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2191:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a8b08982",
									"id": 1296,
									"mutability": "mutable",
									"name": "pairAddress",
									"nameLocation": "2240:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "2225:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1295,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2225:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1299,
									"mutability": "constant",
									"name": "DEFAULT_ROUTER",
									"nameLocation": "2282:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "2257:84:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1297,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2257:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
										"id": 1298,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2299:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ad5dff73",
									"id": 1303,
									"mutability": "mutable",
									"name": "isExempt",
									"nameLocation": "2380:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2486,
									"src": "2348:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1302,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1300,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2356:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2348:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1301,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2367:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc80",
									"id": 1307,
									"name": "RouterUpdated",
									"nameLocation": "2401:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRouter",
												"nameLocation": "2423:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "2415:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2414:19:6"
									},
									"src": "2395:39:6"
								},
								{
									"anonymous": false,
									"eventSelector": "f2d9f3f00fc700757eb74f9aa3dba0e2eb1280e0c6e0cf65962cc055528d7a90",
									"id": 1313,
									"name": "TaxesCollected",
									"nameLocation": "2445:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"indexed": false,
												"mutability": "mutable",
												"name": "lpAmount",
												"nameLocation": "2468:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2460:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"indexed": false,
												"mutability": "mutable",
												"name": "ecoAmount",
												"nameLocation": "2486:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2478:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2478:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2459:37:6"
									},
									"src": "2439:58:6"
								},
								{
									"anonymous": false,
									"eventSelector": "38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b",
									"id": 1319,
									"name": "LiquidityAdded",
									"nameLocation": "2508:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "2531:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "2523:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2523:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "2552:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "2544:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2522:40:6"
									},
									"src": "2502:61:6"
								},
								{
									"anonymous": false,
									"eventSelector": "12528a3c61e0f3b2d6fc707a9fc58b1af86e252cad0d7f4c154ebeabb162dace",
									"id": 1323,
									"name": "MaxWalletUpdated",
									"nameLocation": "2574:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPercentage",
												"nameLocation": "2599:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "2591:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2591:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2590:23:6"
									},
									"src": "2568:46:6"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "2661:286:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1331,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2690:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2694:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2690:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1330,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2671:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2671:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "2671:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1336,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2717:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2721:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2717:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1338,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "2729:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1335,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "2711:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2711:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "2711:31:6"
											},
											{
												"expression": {
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1341,
														"name": "routerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "2752:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1342,
														"name": "DEFAULT_ROUTER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "2768:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2752:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "2752:30:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1345,
														"name": "_setupPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "2792:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2792:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "2792:12:6"
											},
											{
												"expression": {
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1348,
														"name": "taxRates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "2823:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
															"typeString": "struct MemeCoin.TaxRates storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2843:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2846:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2849:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2852:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1349,
															"name": "TaxRates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "2834:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TaxRates_$1249_storage_ptr_$",
																"typeString": "type(struct MemeCoin.TaxRates storage pointer)"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2834:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TaxRates_$1249_memory_ptr",
															"typeString": "struct MemeCoin.TaxRates memory"
														}
													},
													"src": "2823:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
														"typeString": "struct MemeCoin.TaxRates storage ref"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "2823:31:6"
											},
											{
												"expression": {
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1357,
															"name": "isExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "2873:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1360,
														"indexExpression": {
															"expression": {
																"id": 1358,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2882:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2886:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2882:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2873:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2896:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2873:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "2873:27:6"
											},
											{
												"expression": {
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1364,
															"name": "isExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "2910:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1369,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1367,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2927:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemeCoin_$2486",
																		"typeString": "contract MemeCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemeCoin_$2486",
																		"typeString": "contract MemeCoin"
																	}
																],
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2919:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2919:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2919:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2910:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2936:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2910:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "2910:30:6"
											}
										]
									},
									"id": 1374,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d656d6520436f696e",
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2640:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_eb091f380366c2534fd57a30e7241a348334a10359f9acfefd73588527795662",
														"typeString": "literal_string \"Meme Coin\""
													},
													"value": "Meme Coin"
												},
												{
													"hexValue": "4d454d45",
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2653:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_aa45935facc8cbd8c55ef59eb2083d70572611d9daaaa3b31e42daad65f7f5c8",
														"typeString": "literal_string \"MEME\""
													},
													"value": "MEME"
												}
											],
											"id": 1328,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1325,
												"name": "ERC20",
												"nameLocations": [
													"2634:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1011,
												"src": "2634:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2634:26:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2631:2:6"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2661:0:6"
									},
									"scope": 2486,
									"src": "2620:327:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										771
									],
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "3079:1379:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1385,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1380,
																"src": "3097:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3106:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3097:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d757374206265203e30",
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3109:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf60dfdf0bc628580395fc38657d86ed24105efc4a69fdfae0dbdbb8a1ef6412",
																"typeString": "literal_string \"Transfer amount must be >0\""
															},
															"value": "Transfer amount must be >0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf60dfdf0bc628580395fc38657d86ed24105efc4a69fdfae0dbdbb8a1ef6412",
																"typeString": "literal_string \"Transfer amount must be >0\""
															}
														],
														"id": 1384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3089:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3089:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "3089:49:6"
											},
											{
												"assignments": [
													1392
												],
												"declarations": [
													{
														"constant": false,
														"id": 1392,
														"mutability": "mutable",
														"name": "isBuy",
														"nameLocation": "3154:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1532,
														"src": "3149:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1391,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3149:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1401,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1393,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "3162:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1394,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "3172:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3162:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3187:20:6",
														"subExpression": {
															"baseExpression": {
																"id": 1396,
																"name": "isExempt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "3188:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1398,
															"indexExpression": {
																"id": 1397,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "3197:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3188:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3162:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3149:58:6"
											},
											{
												"assignments": [
													1403
												],
												"declarations": [
													{
														"constant": false,
														"id": 1403,
														"mutability": "mutable",
														"name": "isSell",
														"nameLocation": "3222:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1532,
														"src": "3217:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1402,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3217:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1412,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1404,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "3231:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1405,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "3244:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3231:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3259:17:6",
														"subExpression": {
															"baseExpression": {
																"id": 1407,
																"name": "isExempt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "3260:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1409,
															"indexExpression": {
																"id": 1408,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "3269:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3260:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3231:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3217:59:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1413,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "3322:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																"typeString": "struct MemeCoin.DiamondFloor storage ref"
															}
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3335:7:6",
														"memberName": "enabled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1280,
														"src": "3322:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1415,
														"name": "isSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "3346:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3322:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1428,
												"nodeType": "IfStatement",
												"src": "3318:166:6",
												"trueBody": {
													"id": 1427,
													"nodeType": "Block",
													"src": "3354:130:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "3376:25:6",
																		"subExpression": {
																			"expression": {
																				"id": 1418,
																				"name": "diamondFloor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1292,
																				"src": "3377:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																					"typeString": "struct MemeCoin.DiamondFloor storage ref"
																				}
																			},
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3390:11:6",
																			"memberName": "sellStopped",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1286,
																			"src": "3377:24:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f72",
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3403:32:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550",
																			"typeString": "literal_string \"Sells stopped by Diamond Floor\""
																		},
																		"value": "Sells stopped by Diamond Floor"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550",
																			"typeString": "literal_string \"Sells stopped by Diamond Floor\""
																		}
																	],
																	"id": 1417,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3368:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3368:68:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1423,
															"nodeType": "ExpressionStatement",
															"src": "3368:68:6"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1424,
																	"name": "_checkPriceConditions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "3450:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3450:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1426,
															"nodeType": "ExpressionStatement",
															"src": "3450:23:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1429,
															"name": "cooldown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "3524:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																"typeString": "struct MemeCoin.CooldownConfig storage ref"
															}
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3533:7:6",
														"memberName": "enabled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1268,
														"src": "3524:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1431,
														"name": "isSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "3544:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3524:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1457,
												"nodeType": "IfStatement",
												"src": "3520:208:6",
												"trueBody": {
													"id": 1456,
													"nodeType": "Block",
													"src": "3552:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1434,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3574:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3580:9:6",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "3574:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1436,
																					"name": "cooldown",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1278,
																					"src": "3593:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																						"typeString": "struct MemeCoin.CooldownConfig storage ref"
																					}
																				},
																				"id": 1437,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3602:9:6",
																				"memberName": "cooldowns",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1274,
																				"src": "3593:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1439,
																			"indexExpression": {
																				"id": 1438,
																				"name": "sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1376,
																				"src": "3612:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3593:26:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3574:45:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "436f6f6c646f776e20616374697665",
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3621:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5",
																			"typeString": "literal_string \"Cooldown active\""
																		},
																		"value": "Cooldown active"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5",
																			"typeString": "literal_string \"Cooldown active\""
																		}
																	],
																	"id": 1433,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3566:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3566:73:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1443,
															"nodeType": "ExpressionStatement",
															"src": "3566:73:6"
														},
														{
															"expression": {
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1444,
																			"name": "cooldown",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1278,
																			"src": "3653:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																				"typeString": "struct MemeCoin.CooldownConfig storage ref"
																			}
																		},
																		"id": 1447,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3662:9:6",
																		"memberName": "cooldowns",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1274,
																		"src": "3653:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1448,
																	"indexExpression": {
																		"id": 1446,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1376,
																		"src": "3672:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3653:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1449,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3682:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3688:9:6",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3682:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 1451,
																			"name": "cooldown",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1278,
																			"src": "3700:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																				"typeString": "struct MemeCoin.CooldownConfig storage ref"
																			}
																		},
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3709:8:6",
																		"memberName": "duration",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1270,
																		"src": "3700:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3682:35:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3653:64:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1455,
															"nodeType": "ExpressionStatement",
															"src": "3653:64:6"
														}
													]
												}
											},
											{
												"assignments": [
													1459
												],
												"declarations": [
													{
														"constant": false,
														"id": 1459,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "3746:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1532,
														"src": "3738:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1458,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3738:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1465,
												"initialValue": {
													"arguments": [
														{
															"id": 1461,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "3772:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1462,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "3780:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1463,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "3791:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1460,
														"name": "_calculateTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "3758:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) view returns (uint256)"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3758:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3738:60:6"
											},
											{
												"assignments": [
													1467
												],
												"declarations": [
													{
														"constant": false,
														"id": 1467,
														"mutability": "mutable",
														"name": "netAmount",
														"nameLocation": "3816:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1532,
														"src": "3808:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1466,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3808:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1472,
												"initialValue": {
													"arguments": [
														{
															"id": 1470,
															"name": "taxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "3839:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1468,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "3828:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3835:3:6",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "3828:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3828:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3808:41:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3892:20:6",
														"subExpression": {
															"baseExpression": {
																"id": 1473,
																"name": "isExempt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "3893:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1475,
															"indexExpression": {
																"id": 1474,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "3902:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3893:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3916:7:6",
														"subExpression": {
															"id": 1477,
															"name": "isSell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "3917:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3892:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1494,
												"nodeType": "IfStatement",
												"src": "3888:195:6",
												"trueBody": {
													"id": 1493,
													"nodeType": "Block",
													"src": "3925:158:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1485,
																					"name": "netAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1467,
																					"src": "3989:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1482,
																							"name": "recipient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1378,
																							"src": "3974:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1481,
																						"name": "balanceOf",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 523,
																						"src": "3964:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (address) view returns (uint256)"
																						}
																					},
																					"id": 1483,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3964:20:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3985:3:6",
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 175,
																				"src": "3964:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3964:35:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1487,
																				"name": "_maxWalletSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2437,
																				"src": "4003:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 1488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4003:16:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3964:55:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d61782077616c6c6574206578636565646564",
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4037:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d02ce7a72410a6351efcb149b27b582bc4ff73b7af05eaebe8fe75a22e828801",
																			"typeString": "literal_string \"Max wallet exceeded\""
																		},
																		"value": "Max wallet exceeded"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d02ce7a72410a6351efcb149b27b582bc4ff73b7af05eaebe8fe75a22e828801",
																			"typeString": "literal_string \"Max wallet exceeded\""
																		}
																	],
																	"id": 1480,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3939:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3939:133:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1492,
															"nodeType": "ExpressionStatement",
															"src": "3939:133:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1495,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "4122:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4134:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4122:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1516,
												"nodeType": "IfStatement",
												"src": "4118:147:6",
												"trueBody": {
													"id": 1515,
													"nodeType": "Block",
													"src": "4137:128:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1501,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1376,
																		"src": "4167:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1504,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4183:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MemeCoin_$2486",
																					"typeString": "contract MemeCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MemeCoin_$2486",
																					"typeString": "contract MemeCoin"
																				}
																			],
																			"id": 1503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4175:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1502,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4175:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4175:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1506,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1459,
																		"src": "4190:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1498,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "4151:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemeCoin_$2486_$",
																			"typeString": "type(contract super MemeCoin)"
																		}
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4157:9:6",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 771,
																	"src": "4151:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4151:49:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1508,
															"nodeType": "ExpressionStatement",
															"src": "4151:49:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1510,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1459,
																		"src": "4229:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1511,
																		"name": "isBuy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1392,
																		"src": "4240:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"id": 1512,
																		"name": "isSell",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "4247:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1509,
																	"name": "_distributeTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "4214:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$_t_bool_$returns$__$",
																		"typeString": "function (uint256,bool,bool)"
																	}
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4214:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1514,
															"nodeType": "ExpressionStatement",
															"src": "4214:40:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1520,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "4319:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1521,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "4327:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1522,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "4338:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1517,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4303:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MemeCoin_$2486_$",
																"typeString": "type(contract super MemeCoin)"
															}
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4309:9:6",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 771,
														"src": "4303:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4303:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "4303:45:6"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1525,
														"name": "_shouldSwapBack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2458,
														"src": "4391:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4391:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1531,
												"nodeType": "IfStatement",
												"src": "4387:65:6",
												"trueBody": {
													"id": 1530,
													"nodeType": "Block",
													"src": "4410:42:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1527,
																	"name": "_swapAndLiquify",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1968,
																	"src": "4424:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4424:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1529,
															"nodeType": "ExpressionStatement",
															"src": "4424:17:6"
														}
													]
												}
											}
										]
									},
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "2962:9:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1382,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3070:8:6"
									},
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2989:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "2981:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2981:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3013:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "3005:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3005:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3040:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "3032:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3032:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2971:81:6"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3079:0:6"
									},
									"scope": 2486,
									"src": "2953:1505:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "4599:631:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1544,
															"name": "isExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "4613:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1546,
														"indexExpression": {
															"id": 1545,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "4622:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4613:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 1547,
															"name": "isExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "4633:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1549,
														"indexExpression": {
															"id": 1548,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "4642:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4633:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4613:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1553,
												"nodeType": "IfStatement",
												"src": "4609:53:6",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4661:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1543,
													"id": 1552,
													"nodeType": "Return",
													"src": "4654:8:6"
												}
											},
											{
												"assignments": [
													1555
												],
												"declarations": [
													{
														"constant": false,
														"id": 1555,
														"mutability": "mutable",
														"name": "isBuy",
														"nameLocation": "4678:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "4673:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1554,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4673:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1559,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1556,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "4686:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1557,
														"name": "pairAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "4696:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4686:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4673:34:6"
											},
											{
												"assignments": [
													1561
												],
												"declarations": [
													{
														"constant": false,
														"id": 1561,
														"mutability": "mutable",
														"name": "isSell",
														"nameLocation": "4722:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "4717:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1560,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4717:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1565,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1562,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1537,
														"src": "4731:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1563,
														"name": "pairAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "4744:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4731:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4717:38:6"
											},
											{
												"condition": {
													"id": 1566,
													"name": "isBuy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1555,
													"src": "4770:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1584,
												"nodeType": "IfStatement",
												"src": "4766:115:6",
												"trueBody": {
													"id": 1583,
													"nodeType": "Block",
													"src": "4777:104:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1580,
																		"name": "BP_DIVISOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "4859:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"id": 1575,
																							"name": "taxRates",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1252,
																							"src": "4837:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																								"typeString": "struct MemeCoin.TaxRates storage ref"
																							}
																						},
																						"id": 1576,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4846:6:6",
																						"memberName": "buyEco",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1244,
																						"src": "4837:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1571,
																									"name": "taxRates",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1252,
																									"src": "4817:8:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																										"typeString": "struct MemeCoin.TaxRates storage ref"
																									}
																								},
																								"id": 1572,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "4826:5:6",
																								"memberName": "buyLp",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1242,
																								"src": "4817:14:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint16",
																									"typeString": "uint16"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint16",
																									"typeString": "uint16"
																								}
																							],
																							"id": 1570,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4809:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1569,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "4809:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1573,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4809:23:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1574,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4833:3:6",
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 175,
																					"src": "4809:27:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4809:44:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1567,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1539,
																				"src": "4798:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4805:3:6",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 205,
																			"src": "4798:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4798:56:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4855:3:6",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 220,
																	"src": "4798:60:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4798:72:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1543,
															"id": 1582,
															"nodeType": "Return",
															"src": "4791:79:6"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1585,
													"name": "isSell",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1561,
													"src": "4895:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1603,
												"nodeType": "IfStatement",
												"src": "4891:118:6",
												"trueBody": {
													"id": 1602,
													"nodeType": "Block",
													"src": "4903:106:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1599,
																		"name": "BP_DIVISOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "4987:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"id": 1594,
																							"name": "taxRates",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1252,
																							"src": "4964:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																								"typeString": "struct MemeCoin.TaxRates storage ref"
																							}
																						},
																						"id": 1595,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4973:7:6",
																						"memberName": "sellEco",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1248,
																						"src": "4964:16:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1590,
																									"name": "taxRates",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1252,
																									"src": "4943:8:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																										"typeString": "struct MemeCoin.TaxRates storage ref"
																									}
																								},
																								"id": 1591,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "4952:6:6",
																								"memberName": "sellLp",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1246,
																								"src": "4943:15:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint16",
																									"typeString": "uint16"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint16",
																									"typeString": "uint16"
																								}
																							],
																							"id": 1589,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4935:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1588,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "4935:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1592,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4935:24:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1593,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4960:3:6",
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 175,
																					"src": "4935:28:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4935:46:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1586,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1539,
																				"src": "4924:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4931:3:6",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 205,
																			"src": "4924:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4924:58:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4983:3:6",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 220,
																	"src": "4924:62:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4924:74:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1543,
															"id": 1601,
															"nodeType": "Return",
															"src": "4917:81:6"
														}
													]
												}
											},
											{
												"assignments": [
													1605
												],
												"declarations": [
													{
														"constant": false,
														"id": 1605,
														"mutability": "mutable",
														"name": "sellTotal",
														"nameLocation": "5035:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "5027:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1604,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5027:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1615,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1612,
																"name": "taxRates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "5076:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																	"typeString": "struct MemeCoin.TaxRates storage ref"
																}
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5085:7:6",
															"memberName": "sellEco",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1248,
															"src": "5076:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1608,
																		"name": "taxRates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1252,
																		"src": "5055:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																			"typeString": "struct MemeCoin.TaxRates storage ref"
																		}
																	},
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5064:6:6",
																	"memberName": "sellLp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1246,
																	"src": "5055:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5047:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1606,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5047:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5047:24:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5072:3:6",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 175,
														"src": "5047:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5047:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5027:66:6"
											},
											{
												"assignments": [
													1617
												],
												"declarations": [
													{
														"constant": false,
														"id": 1617,
														"mutability": "mutable",
														"name": "transferTax",
														"nameLocation": "5111:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "5103:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1616,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5103:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1625,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130",
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5164:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1620,
																	"name": "TRANSFER_MULTIPLIER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "5139:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1618,
																	"name": "sellTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "5125:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5135:3:6",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "5125:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5125:34:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5160:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "5125:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5125:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5103:64:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1631,
															"name": "BP_DIVISOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "5212:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1628,
																	"name": "transferTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "5195:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1626,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1539,
																	"src": "5184:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5191:3:6",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "5184:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5184:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5208:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "5184:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5184:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1543,
												"id": 1633,
												"nodeType": "Return",
												"src": "5177:46:6"
											}
										]
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateTax",
									"nameLocation": "4473:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4504:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "4496:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4496:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4528:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "4520:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4520:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4555:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "4547:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4547:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4486:81:6"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "4590:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4590:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4589:9:6"
									},
									"scope": 2486,
									"src": "4464:766:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "5312:948:6",
										"statements": [
											{
												"assignments": [
													1645
												],
												"declarations": [
													{
														"constant": false,
														"id": 1645,
														"mutability": "mutable",
														"name": "lpShare",
														"nameLocation": "5330:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1779,
														"src": "5322:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1644,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5322:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1646,
												"nodeType": "VariableDeclarationStatement",
												"src": "5322:15:6"
											},
											{
												"assignments": [
													1648
												],
												"declarations": [
													{
														"constant": false,
														"id": 1648,
														"mutability": "mutable",
														"name": "ecoShare",
														"nameLocation": "5355:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1779,
														"src": "5347:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1647,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5347:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1649,
												"nodeType": "VariableDeclarationStatement",
												"src": "5347:16:6"
											},
											{
												"condition": {
													"id": 1650,
													"name": "isBuy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1639,
													"src": "5378:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1682,
														"name": "isSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "5595:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1750,
														"nodeType": "Block",
														"src": "5813:241:6",
														"statements": [
															{
																"assignments": [
																	1715
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1715,
																		"mutability": "mutable",
																		"name": "total",
																		"nameLocation": "5835:5:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1750,
																		"src": "5827:13:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1714,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5827:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1725,
																"initialValue": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1722,
																				"name": "taxRates",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1252,
																				"src": "5872:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																					"typeString": "struct MemeCoin.TaxRates storage ref"
																				}
																			},
																			"id": 1723,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5881:7:6",
																			"memberName": "sellEco",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1248,
																			"src": "5872:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1718,
																						"name": "taxRates",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "5851:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																							"typeString": "struct MemeCoin.TaxRates storage ref"
																						}
																					},
																					"id": 1719,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5860:6:6",
																					"memberName": "sellLp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1246,
																					"src": "5851:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				],
																				"id": 1717,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5843:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1716,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5843:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5843:24:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5868:3:6",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "5843:28:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5843:46:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5827:62:6"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1727,
																				"name": "total",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1715,
																				"src": "5911:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1728,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5919:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "5911:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "5472616e7366657220746178206e6f7420736574",
																			"id": 1730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5922:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_ff623882c30ff94ec292e83d2b5f0879ae4949c8c6608b2e3c6e348352f857d3",
																				"typeString": "literal_string \"Transfer tax not set\""
																			},
																			"value": "Transfer tax not set"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_ff623882c30ff94ec292e83d2b5f0879ae4949c8c6608b2e3c6e348352f857d3",
																				"typeString": "literal_string \"Transfer tax not set\""
																			}
																		],
																		"id": 1726,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "5903:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5903:42:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1732,
																"nodeType": "ExpressionStatement",
																"src": "5903:42:6"
															},
															{
																"expression": {
																	"id": 1748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1733,
																		"name": "lpShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1645,
																		"src": "5959:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"hexValue": "3130",
																				"id": 1746,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6040:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1743,
																						"name": "TRANSFER_MULTIPLIER",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1255,
																						"src": "6015:19:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 1740,
																								"name": "total",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1715,
																								"src": "6004:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1736,
																											"name": "taxRates",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1252,
																											"src": "5983:8:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																												"typeString": "struct MemeCoin.TaxRates storage ref"
																											}
																										},
																										"id": 1737,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "5992:6:6",
																										"memberName": "sellLp",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1246,
																										"src": "5983:15:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint16",
																											"typeString": "uint16"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint16",
																											"typeString": "uint16"
																										}
																									],
																									"expression": {
																										"id": 1734,
																										"name": "taxAmount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1637,
																										"src": "5969:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1735,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "5979:3:6",
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 205,
																									"src": "5969:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1738,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5969:30:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1739,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6000:3:6",
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 220,
																							"src": "5969:34:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1741,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5969:41:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1742,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6011:3:6",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 205,
																					"src": "5969:45:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5969:66:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6036:3:6",
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 220,
																			"src": "5969:70:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5969:74:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5959:84:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1749,
																"nodeType": "ExpressionStatement",
																"src": "5959:84:6"
															}
														]
													},
													"id": 1751,
													"nodeType": "IfStatement",
													"src": "5591:463:6",
													"trueBody": {
														"id": 1713,
														"nodeType": "Block",
														"src": "5603:204:6",
														"statements": [
															{
																"assignments": [
																	1684
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1684,
																		"mutability": "mutable",
																		"name": "total",
																		"nameLocation": "5625:5:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1713,
																		"src": "5617:13:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1683,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5617:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1694,
																"initialValue": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1691,
																				"name": "taxRates",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1252,
																				"src": "5662:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																					"typeString": "struct MemeCoin.TaxRates storage ref"
																				}
																			},
																			"id": 1692,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5671:7:6",
																			"memberName": "sellEco",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1248,
																			"src": "5662:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1687,
																						"name": "taxRates",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "5641:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																							"typeString": "struct MemeCoin.TaxRates storage ref"
																						}
																					},
																					"id": 1688,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5650:6:6",
																					"memberName": "sellLp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1246,
																					"src": "5641:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				],
																				"id": 1686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5633:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1685,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5633:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5633:24:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5658:3:6",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "5633:28:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5633:46:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5617:62:6"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1696,
																				"name": "total",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1684,
																				"src": "5701:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5709:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "5701:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "53656c6c20746178206e6f7420736574",
																			"id": 1699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5712:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_b52f1cc5da7f7d352b528f141ea27097a592e54e4895628bd9cba7463eea14a3",
																				"typeString": "literal_string \"Sell tax not set\""
																			},
																			"value": "Sell tax not set"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_b52f1cc5da7f7d352b528f141ea27097a592e54e4895628bd9cba7463eea14a3",
																				"typeString": "literal_string \"Sell tax not set\""
																			}
																		],
																		"id": 1695,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "5693:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5693:38:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1701,
																"nodeType": "ExpressionStatement",
																"src": "5693:38:6"
															},
															{
																"expression": {
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1702,
																		"name": "lpShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1645,
																		"src": "5745:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1709,
																				"name": "total",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1684,
																				"src": "5790:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1705,
																							"name": "taxRates",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1252,
																							"src": "5769:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																								"typeString": "struct MemeCoin.TaxRates storage ref"
																							}
																						},
																						"id": 1706,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5778:6:6",
																						"memberName": "sellLp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1246,
																						"src": "5769:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					],
																					"expression": {
																						"id": 1703,
																						"name": "taxAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1637,
																						"src": "5755:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1704,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5765:3:6",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 205,
																					"src": "5755:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5755:30:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5786:3:6",
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 220,
																			"src": "5755:34:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5755:41:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5745:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1712,
																"nodeType": "ExpressionStatement",
																"src": "5745:51:6"
															}
														]
													}
												},
												"id": 1752,
												"nodeType": "IfStatement",
												"src": "5374:680:6",
												"trueBody": {
													"id": 1681,
													"nodeType": "Block",
													"src": "5385:200:6",
													"statements": [
														{
															"assignments": [
																1652
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1652,
																	"mutability": "mutable",
																	"name": "total",
																	"nameLocation": "5407:5:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1681,
																	"src": "5399:13:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1651,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5399:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1662,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1659,
																			"name": "taxRates",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1252,
																			"src": "5443:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																				"typeString": "struct MemeCoin.TaxRates storage ref"
																			}
																		},
																		"id": 1660,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5452:6:6",
																		"memberName": "buyEco",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1244,
																		"src": "5443:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1655,
																					"name": "taxRates",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1252,
																					"src": "5423:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																						"typeString": "struct MemeCoin.TaxRates storage ref"
																					}
																				},
																				"id": 1656,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5432:5:6",
																				"memberName": "buyLp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1242,
																				"src": "5423:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			],
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5415:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1653,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5415:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5415:23:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5439:3:6",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 175,
																	"src": "5415:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5415:44:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5399:60:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1664,
																			"name": "total",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1652,
																			"src": "5481:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5489:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5481:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "42757920746178206e6f7420736574",
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5492:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_39f82e10faa0e3af80c3e100dfc7f5c499afc72a38d5e97ab509072a50a7371c",
																			"typeString": "literal_string \"Buy tax not set\""
																		},
																		"value": "Buy tax not set"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_39f82e10faa0e3af80c3e100dfc7f5c499afc72a38d5e97ab509072a50a7371c",
																			"typeString": "literal_string \"Buy tax not set\""
																		}
																	],
																	"id": 1663,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5473:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5473:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1669,
															"nodeType": "ExpressionStatement",
															"src": "5473:37:6"
														},
														{
															"expression": {
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1670,
																	"name": "lpShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1645,
																	"src": "5524:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1677,
																			"name": "total",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1652,
																			"src": "5568:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1673,
																						"name": "taxRates",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "5548:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																							"typeString": "struct MemeCoin.TaxRates storage ref"
																						}
																					},
																					"id": 1674,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5557:5:6",
																					"memberName": "buyLp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1242,
																					"src": "5548:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				],
																				"expression": {
																					"id": 1671,
																					"name": "taxAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1637,
																					"src": "5534:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1672,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5544:3:6",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 205,
																				"src": "5534:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5534:29:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5564:3:6",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 220,
																		"src": "5534:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5534:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5524:50:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1680,
															"nodeType": "ExpressionStatement",
															"src": "5524:50:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1753,
														"name": "ecoShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "6064:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1756,
																"name": "lpShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "6089:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1754,
																"name": "taxAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "6075:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6085:3:6",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "6075:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6075:22:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6064:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1759,
												"nodeType": "ExpressionStatement",
												"src": "6064:33:6"
											},
											{
												"expression": {
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1760,
														"name": "accumulatedLp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "6107:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1763,
																"name": "lpShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "6141:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1761,
																"name": "accumulatedLp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "6123:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6137:3:6",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "6123:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6123:26:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6107:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1766,
												"nodeType": "ExpressionStatement",
												"src": "6107:42:6"
											},
											{
												"expression": {
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1767,
														"name": "accumulatedEco",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "6159:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1770,
																"name": "ecoShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1648,
																"src": "6195:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1768,
																"name": "accumulatedEco",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "6176:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6191:3:6",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "6176:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6176:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6159:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1773,
												"nodeType": "ExpressionStatement",
												"src": "6159:45:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1775,
															"name": "lpShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "6235:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1776,
															"name": "ecoShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "6244:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1774,
														"name": "TaxesCollected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "6220:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6220:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1778,
												"nodeType": "EmitStatement",
												"src": "6215:38:6"
											}
										]
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributeTax",
									"nameLocation": "5245:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "taxAmount",
												"nameLocation": "5268:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "5260:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5260:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "isBuy",
												"nameLocation": "5284:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "5279:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1638,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5279:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "isSell",
												"nameLocation": "5296:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "5291:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1640,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5291:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5259:44:6"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5312:0:6"
									},
									"scope": 2486,
									"src": "5236:1024:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "6307:779:6",
										"statements": [
											{
												"assignments": [
													1784
												],
												"declarations": [
													{
														"constant": false,
														"id": 1784,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "6325:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1869,
														"src": "6317:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1783,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6317:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1787,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1785,
														"name": "pairPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2032,
														"src": "6340:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6340:11:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6317:34:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1788,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "6365:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6381:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6365:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1792,
												"nodeType": "IfStatement",
												"src": "6361:30:6",
												"trueBody": {
													"functionReturnParameters": 1782,
													"id": 1791,
													"nodeType": "Return",
													"src": "6384:7:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1793,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "6405:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1794,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "6420:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																"typeString": "struct MemeCoin.DiamondFloor storage ref"
															}
														},
														"id": 1795,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:8:6",
														"memberName": "athPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1284,
														"src": "6420:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6405:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1811,
												"nodeType": "IfStatement",
												"src": "6401:169:6",
												"trueBody": {
													"id": 1810,
													"nodeType": "Block",
													"src": "6443:127:6",
													"statements": [
														{
															"expression": {
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1797,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "6457:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6470:8:6",
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1284,
																	"src": "6457:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1800,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "6481:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6457:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1802,
															"nodeType": "ExpressionStatement",
															"src": "6457:36:6"
														},
														{
															"expression": {
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1803,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "6507:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6520:11:6",
																	"memberName": "sellStopped",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1286,
																	"src": "6507:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6534:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6507:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1808,
															"nodeType": "ExpressionStatement",
															"src": "6507:32:6"
														},
														{
															"functionReturnParameters": 1782,
															"id": 1809,
															"nodeType": "Return",
															"src": "6553:7:6"
														}
													]
												}
											},
											{
												"assignments": [
													1813
												],
												"declarations": [
													{
														"constant": false,
														"id": 1813,
														"mutability": "mutable",
														"name": "thresholdPrice",
														"nameLocation": "6588:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1869,
														"src": "6580:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1812,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6580:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1826,
												"initialValue": {
													"arguments": [
														{
															"id": 1824,
															"name": "BP_DIVISOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "6709:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 1819,
																				"name": "diamondFloor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1292,
																				"src": "6659:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																					"typeString": "struct MemeCoin.DiamondFloor storage ref"
																				}
																			},
																			"id": 1820,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6672:17:6",
																			"memberName": "triggerPercentage",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1282,
																			"src": "6659:30:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		],
																		"expression": {
																			"id": 1817,
																			"name": "BP_DIVISOR",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1240,
																			"src": "6644:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6655:3:6",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 190,
																		"src": "6644:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6644:46:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1814,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "6605:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1815,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6618:8:6",
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1284,
																	"src": "6605:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6640:3:6",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "6605:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6605:86:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6705:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "6605:103:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6605:115:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6580:140:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1827,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "6735:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1828,
														"name": "thresholdPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1813,
														"src": "6750:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6735:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1844,
												"nodeType": "IfStatement",
												"src": "6731:152:6",
												"trueBody": {
													"id": 1843,
													"nodeType": "Block",
													"src": "6766:117:6",
													"statements": [
														{
															"expression": {
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1830,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "6780:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6793:11:6",
																	"memberName": "sellStopped",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1286,
																	"src": "6780:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6807:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6780:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1835,
															"nodeType": "ExpressionStatement",
															"src": "6780:31:6"
														},
														{
															"expression": {
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1836,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "6825:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6838:10:6",
																	"memberName": "blockedAth",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1288,
																	"src": "6825:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1839,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "6851:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6864:8:6",
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1284,
																	"src": "6851:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6825:47:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1842,
															"nodeType": "ExpressionStatement",
															"src": "6825:47:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1845,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "6897:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																"typeString": "struct MemeCoin.DiamondFloor storage ref"
															}
														},
														"id": 1846,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6910:11:6",
														"memberName": "sellStopped",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1286,
														"src": "6897:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1847,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "6925:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "32",
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6969:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1848,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "6941:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6954:10:6",
																	"memberName": "blockedAth",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1288,
																	"src": "6941:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6965:3:6",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "6941:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6941:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6925:46:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6897:74:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1868,
												"nodeType": "IfStatement",
												"src": "6893:187:6",
												"trueBody": {
													"id": 1867,
													"nodeType": "Block",
													"src": "6973:107:6",
													"statements": [
														{
															"expression": {
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1855,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "6987:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1857,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7000:11:6",
																	"memberName": "sellStopped",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1286,
																	"src": "6987:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7014:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6987:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1860,
															"nodeType": "ExpressionStatement",
															"src": "6987:32:6"
														},
														{
															"expression": {
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1861,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "7033:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7046:8:6",
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1284,
																	"src": "7033:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1864,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "7057:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7033:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1866,
															"nodeType": "ExpressionStatement",
															"src": "7033:36:6"
														}
													]
												}
											}
										]
									},
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkPriceConditions",
									"nameLocation": "6275:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6296:2:6"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6307:0:6"
									},
									"scope": 2486,
									"src": "6266:820:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "7127:733:6",
										"statements": [
											{
												"assignments": [
													1874
												],
												"declarations": [
													{
														"constant": false,
														"id": 1874,
														"mutability": "mutable",
														"name": "totalTokens",
														"nameLocation": "7145:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1967,
														"src": "7137:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1873,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1879,
												"initialValue": {
													"arguments": [
														{
															"id": 1877,
															"name": "accumulatedEco",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "7177:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1875,
															"name": "accumulatedLp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "7159:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7173:3:6",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 175,
														"src": "7159:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7159:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7137:55:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1880,
														"name": "totalTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "7206:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1881,
														"name": "swapThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "7220:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7206:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1884,
												"nodeType": "IfStatement",
												"src": "7202:40:6",
												"trueBody": {
													"functionReturnParameters": 1872,
													"id": 1883,
													"nodeType": "Return",
													"src": "7235:7:6"
												}
											},
											{
												"expression": {
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1885,
														"name": "swapping",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "7252:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7263:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7252:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1888,
												"nodeType": "ExpressionStatement",
												"src": "7252:15:6"
											},
											{
												"assignments": [
													1890
												],
												"declarations": [
													{
														"constant": false,
														"id": 1890,
														"mutability": "mutable",
														"name": "initialBalance",
														"nameLocation": "7285:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1967,
														"src": "7277:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1889,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7277:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1896,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1893,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "7310:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MemeCoin_$2486",
																	"typeString": "contract MemeCoin"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MemeCoin_$2486",
																	"typeString": "contract MemeCoin"
																}
															],
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7302:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7302:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7302:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7316:7:6",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "7302:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7277:46:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1898,
															"name": "accumulatedEco",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "7385:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1897,
														"name": "_swapTokensForETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2382,
														"src": "7367:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7367:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1900,
												"nodeType": "ExpressionStatement",
												"src": "7367:33:6"
											},
											{
												"assignments": [
													1902
												],
												"declarations": [
													{
														"constant": false,
														"id": 1902,
														"mutability": "mutable",
														"name": "ecoETH",
														"nameLocation": "7418:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1967,
														"src": "7410:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1901,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7410:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1911,
												"initialValue": {
													"arguments": [
														{
															"id": 1909,
															"name": "initialBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "7453:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1905,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7435:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MemeCoin_$2486",
																			"typeString": "contract MemeCoin"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MemeCoin_$2486",
																			"typeString": "contract MemeCoin"
																		}
																	],
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7427:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1903,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7427:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7427:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7441:7:6",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "7427:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7449:3:6",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "7427:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7427:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7410:58:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1918,
															"name": "ecoETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "7504:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1914,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 352,
																		"src": "7486:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7486:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7478:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1912,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7478:8:6",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7478:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7495:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7478:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7478:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1920,
												"nodeType": "ExpressionStatement",
												"src": "7478:33:6"
											},
											{
												"assignments": [
													1922
												],
												"declarations": [
													{
														"constant": false,
														"id": 1922,
														"mutability": "mutable",
														"name": "lpTokens",
														"nameLocation": "7556:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1967,
														"src": "7548:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1921,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7548:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1924,
												"initialValue": {
													"id": 1923,
													"name": "accumulatedLp",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1262,
													"src": "7567:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7548:32:6"
											},
											{
												"assignments": [
													1926
												],
												"declarations": [
													{
														"constant": false,
														"id": 1926,
														"mutability": "mutable",
														"name": "half",
														"nameLocation": "7598:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1967,
														"src": "7590:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1925,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7590:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1931,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7618:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"expression": {
															"id": 1927,
															"name": "lpTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "7605:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7614:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "7605:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7590:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1933,
															"name": "half",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "7648:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1932,
														"name": "_swapTokensForETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2382,
														"src": "7630:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7630:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1935,
												"nodeType": "ExpressionStatement",
												"src": "7630:23:6"
											},
											{
												"assignments": [
													1937
												],
												"declarations": [
													{
														"constant": false,
														"id": 1937,
														"mutability": "mutable",
														"name": "lpETH",
														"nameLocation": "7680:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1967,
														"src": "7672:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1936,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7672:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1946,
												"initialValue": {
													"arguments": [
														{
															"id": 1944,
															"name": "ecoETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "7714:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1940,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7696:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MemeCoin_$2486",
																			"typeString": "contract MemeCoin"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MemeCoin_$2486",
																			"typeString": "contract MemeCoin"
																		}
																	],
																	"id": 1939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7688:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1938,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7688:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7688:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7702:7:6",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "7688:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7710:3:6",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "7688:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7688:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7672:49:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1950,
																	"name": "half",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1926,
																	"src": "7758:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1948,
																	"name": "lpTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1922,
																	"src": "7745:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7754:3:6",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "7745:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7745:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1952,
															"name": "lpETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "7765:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1947,
														"name": "_addLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2423,
														"src": "7731:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7731:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1954,
												"nodeType": "ExpressionStatement",
												"src": "7731:40:6"
											},
											{
												"expression": {
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1955,
														"name": "accumulatedLp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "7782:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7798:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7782:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "7782:17:6"
											},
											{
												"expression": {
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1959,
														"name": "accumulatedEco",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "7809:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7826:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7809:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1962,
												"nodeType": "ExpressionStatement",
												"src": "7809:18:6"
											},
											{
												"expression": {
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1963,
														"name": "swapping",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "7837:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7848:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7837:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1966,
												"nodeType": "ExpressionStatement",
												"src": "7837:16:6"
											}
										]
									},
									"id": 1968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_swapAndLiquify",
									"nameLocation": "7101:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7116:2:6"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7127:0:6"
									},
									"scope": 2486,
									"src": "7092:768:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "7917:361:6",
										"statements": [
											{
												"assignments": [
													1974,
													1976,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1974,
														"mutability": "mutable",
														"name": "reserve0",
														"nameLocation": "7936:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 2031,
														"src": "7928:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1973,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7928:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1976,
														"mutability": "mutable",
														"name": "reserve1",
														"nameLocation": "7954:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 2031,
														"src": "7946:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1975,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7946:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1982,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1978,
																	"name": "pairAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1296,
																	"src": "7982:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1977,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "7967:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1220_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7967:27:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1220",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7995:11:6",
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1209,
														"src": "7967:39:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7967:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7927:81:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1983,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "8022:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8034:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8022:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1986,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "8039:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8051:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8039:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8022:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1992,
												"nodeType": "IfStatement",
												"src": "8018:44:6",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8061:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1972,
													"id": 1991,
													"nodeType": "Return",
													"src": "8054:8:6"
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1994,
																			"name": "pairAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1296,
																			"src": "8103:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1993,
																		"name": "IUniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "8088:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1220_$",
																			"typeString": "type(contract IUniswapV2Pair)"
																		}
																	},
																	"id": 1995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8088:27:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Pair_$1220",
																		"typeString": "contract IUniswapV2Pair"
																	}
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8116:6:6",
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1214,
																"src": "8088:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8088:36:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 2000,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8136:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemeCoin_$2486",
																		"typeString": "contract MemeCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemeCoin_$2486",
																		"typeString": "contract MemeCoin"
																	}
																],
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8128:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1998,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8128:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8128:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "8088:53:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2026,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1976,
																		"src": "8261:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	],
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8253:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2024,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8253:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8253:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"hexValue": "31653138",
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8243:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2018,
																				"name": "reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1974,
																				"src": "8229:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			],
																			"id": 2017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8221:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2016,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "8221:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8221:17:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8239:3:6",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 205,
																	"src": "8221:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8221:27:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8249:3:6",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 220,
															"src": "8221:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8221:50:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8088:183:6",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2013,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1974,
																		"src": "8196:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	],
																	"id": 2012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8188:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2011,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8188:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8188:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"hexValue": "31653138",
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8178:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2005,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1976,
																				"src": "8164:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			],
																			"id": 2004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8156:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2003,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "8156:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8156:17:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8174:3:6",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 205,
																	"src": "8156:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8156:27:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8184:3:6",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 220,
															"src": "8156:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8156:50:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1972,
												"id": 2030,
												"nodeType": "Return",
												"src": "8081:190:6"
											}
										]
									},
									"functionSelector": "9491f94d",
									"id": 2032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pairPrice",
									"nameLocation": "7875:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7884:2:6"
									},
									"returnParameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "7908:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7908:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7907:9:6"
									},
									"scope": 2486,
									"src": "7866:412:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "8457:363:6",
										"statements": [
											{
												"assignments": [
													2046
												],
												"declarations": [
													{
														"constant": false,
														"id": 2046,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "8475:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 2100,
														"src": "8467:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2045,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8467:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2064,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"expression": {
																	"id": 2047,
																	"name": "cooldown",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "8487:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																		"typeString": "struct MemeCoin.CooldownConfig storage ref"
																	}
																},
																"id": 2048,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8496:9:6",
																"memberName": "cooldowns",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1274,
																"src": "8487:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2050,
															"indexExpression": {
																"id": 2049,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2034,
																"src": "8506:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8487:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 2051,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "8517:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8523:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "8517:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8487:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 2062,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8599:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8487:113:6",
													"trueExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 2059,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8580:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8586:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8580:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 2054,
																		"name": "cooldown",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1278,
																		"src": "8548:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																			"typeString": "struct MemeCoin.CooldownConfig storage ref"
																		}
																	},
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8557:9:6",
																	"memberName": "cooldowns",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1274,
																	"src": "8548:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2057,
																"indexExpression": {
																	"id": 2056,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2034,
																	"src": "8567:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8548:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8576:3:6",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "8548:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8548:48:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8467:133:6"
											},
											{
												"expression": {
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2065,
														"name": "days_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "8619:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3836343030",
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8641:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "86400"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"id": 2066,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "8627:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8637:3:6",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 220,
															"src": "8627:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8627:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8619:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2071,
												"nodeType": "ExpressionStatement",
												"src": "8619:28:6"
											},
											{
												"expression": {
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2072,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "8657:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "%=",
													"rightHandSide": {
														"hexValue": "3836343030",
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8670:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "86400"
													},
													"src": "8657:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2075,
												"nodeType": "ExpressionStatement",
												"src": "8657:18:6"
											},
											{
												"expression": {
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2076,
														"name": "hours_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2039,
														"src": "8685:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "33363030",
																"id": 2079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8708:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "3600"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																}
															],
															"expression": {
																"id": 2077,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "8694:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8704:3:6",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 220,
															"src": "8694:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8694:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8685:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2082,
												"nodeType": "ExpressionStatement",
												"src": "8685:28:6"
											},
											{
												"expression": {
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2083,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "8723:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "%=",
													"rightHandSide": {
														"hexValue": "33363030",
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8736:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "3600"
													},
													"src": "8723:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2086,
												"nodeType": "ExpressionStatement",
												"src": "8723:17:6"
											},
											{
												"expression": {
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2087,
														"name": "minutes_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "8750:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3630",
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																}
															],
															"expression": {
																"id": 2088,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "8761:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8771:3:6",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 220,
															"src": "8761:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8761:17:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8750:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2093,
												"nodeType": "ExpressionStatement",
												"src": "8750:28:6"
											},
											{
												"expression": {
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2094,
														"name": "seconds_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2043,
														"src": "8788:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2095,
															"name": "remaining",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "8799:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "3630",
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8811:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "60"
														},
														"src": "8799:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8788:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2099,
												"nodeType": "ExpressionStatement",
												"src": "8788:25:6"
											}
										]
									},
									"functionSelector": "9d82190f",
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cooldownRemaining",
									"nameLocation": "8293:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8319:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "8311:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8311:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8310:17:6"
									},
									"returnParameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "days_",
												"nameLocation": "8366:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "8358:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "hours_",
												"nameLocation": "8390:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "8382:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8382:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "minutes_",
												"nameLocation": "8415:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "8407:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8407:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "seconds_",
												"nameLocation": "8442:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "8434:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8434:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8348:108:6"
									},
									"scope": 2486,
									"src": "8284:536:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2155,
										"nodeType": "Block",
										"src": "8881:353:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2106,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "8895:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																"typeString": "struct MemeCoin.DiamondFloor storage ref"
															}
														},
														"id": 2107,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8908:8:6",
														"memberName": "athPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1284,
														"src": "8895:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8920:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8895:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2112,
												"nodeType": "IfStatement",
												"src": "8891:40:6",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8930:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 2105,
													"id": 2111,
													"nodeType": "Return",
													"src": "8923:8:6"
												}
											},
											{
												"assignments": [
													2114
												],
												"declarations": [
													{
														"constant": false,
														"id": 2114,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "8949:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 2155,
														"src": "8941:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8941:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2115,
														"name": "pairPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2032,
														"src": "8964:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8964:11:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8941:34:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2118,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2114,
															"src": "8992:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 2119,
																"name": "diamondFloor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "9007:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																	"typeString": "struct MemeCoin.DiamondFloor storage ref"
																}
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9020:8:6",
															"memberName": "athPrice",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1284,
															"src": "9007:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8992:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "9142:85:6",
														"subExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 2148,
																				"name": "diamondFloor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1292,
																				"src": "9204:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																					"typeString": "struct MemeCoin.DiamondFloor storage ref"
																				}
																			},
																			"id": 2149,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9217:8:6",
																			"memberName": "athPrice",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1284,
																			"src": "9204:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "31653138",
																					"id": 2145,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9194:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 2142,
																							"name": "currentPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2114,
																							"src": "9176:12:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 2139,
																								"name": "diamondFloor",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1292,
																								"src": "9150:12:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																									"typeString": "struct MemeCoin.DiamondFloor storage ref"
																								}
																							},
																							"id": 2140,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "9163:8:6",
																							"memberName": "athPrice",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1284,
																							"src": "9150:21:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2141,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "9172:3:6",
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 190,
																						"src": "9150:25:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2143,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9150:39:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9190:3:6",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 205,
																				"src": "9150:43:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9150:49:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9200:3:6",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 220,
																		"src": "9150:53:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9150:76:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9143:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 2137,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9143:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9143:84:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8992:235:6",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 2133,
																			"name": "diamondFloor",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "9104:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																				"typeString": "struct MemeCoin.DiamondFloor storage ref"
																			}
																		},
																		"id": 2134,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9117:8:6",
																		"memberName": "athPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1284,
																		"src": "9104:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653138",
																				"id": 2130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9094:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2126,
																							"name": "diamondFloor",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1292,
																							"src": "9067:12:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																								"typeString": "struct MemeCoin.DiamondFloor storage ref"
																							}
																						},
																						"id": 2127,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "9080:8:6",
																						"memberName": "athPrice",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1284,
																						"src": "9067:21:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2124,
																						"name": "currentPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2114,
																						"src": "9050:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9063:3:6",
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 190,
																					"src": "9050:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9050:39:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9090:3:6",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 205,
																			"src": "9050:43:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9050:49:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9100:3:6",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 220,
																	"src": "9050:53:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9050:76:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 2122,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "9043:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 2136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:84:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2105,
												"id": 2154,
												"nodeType": "Return",
												"src": "8985:242:6"
											}
										]
									},
									"functionSelector": "7773168f",
									"id": 2156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "priceDeviation",
									"nameLocation": "8835:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8849:2:6"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "8873:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2103,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8873:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8872:8:6"
									},
									"scope": 2486,
									"src": "8826:408:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2174,
										"nodeType": "Block",
										"src": "9297:103:6",
										"statements": [
											{
												"expression": {
													"id": 2165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2163,
														"name": "routerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "9307:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2164,
														"name": "newRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2158,
														"src": "9323:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9307:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2166,
												"nodeType": "ExpressionStatement",
												"src": "9307:25:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2167,
														"name": "_setupPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "9342:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9342:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2169,
												"nodeType": "ExpressionStatement",
												"src": "9342:12:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2171,
															"name": "newRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "9383:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2170,
														"name": "RouterUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "9369:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9369:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2173,
												"nodeType": "EmitStatement",
												"src": "9364:29:6"
											}
										]
									},
									"functionSelector": "c0d78655",
									"id": 2175,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2161,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2160,
												"name": "onlyOwner",
												"nameLocations": [
													"9287:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "9287:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9287:9:6"
										}
									],
									"name": "setRouter",
									"nameLocation": "9249:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "newRouter",
												"nameLocation": "9267:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "9259:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9259:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9258:19:6"
									},
									"returnParameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9297:0:6"
									},
									"scope": 2486,
									"src": "9240:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2215,
										"nodeType": "Block",
										"src": "9506:191:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 2191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2189,
																	"name": "buyLp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "9524:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2190,
																	"name": "buyEco",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2179,
																	"src": "9532:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "9524:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "32353030",
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9542:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2500_by_1",
																	"typeString": "int_const 2500"
																},
																"value": "2500"
															},
															"src": "9524:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178203235252062757920746178",
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9548:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f090d1c11271f3393ea5511251471fa61f5244fcb411caac2ee82afbeeb3c955",
																"typeString": "literal_string \"Max 25% buy tax\""
															},
															"value": "Max 25% buy tax"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f090d1c11271f3393ea5511251471fa61f5244fcb411caac2ee82afbeeb3c955",
																"typeString": "literal_string \"Max 25% buy tax\""
															}
														],
														"id": 2188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9516:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9516:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "9516:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2198,
																	"name": "sellLp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2181,
																	"src": "9584:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2199,
																	"name": "sellEco",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2183,
																	"src": "9593:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "9584:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "32353030",
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9604:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2500_by_1",
																	"typeString": "int_const 2500"
																},
																"value": "2500"
															},
															"src": "9584:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178203235252073656c6c20746178",
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9610:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5b3d2ddd2421ad686f304be3d3015a2ee589ad9c652c040c54c8fbfedd016ba",
																"typeString": "literal_string \"Max 25% sell tax\""
															},
															"value": "Max 25% sell tax"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5b3d2ddd2421ad686f304be3d3015a2ee589ad9c652c040c54c8fbfedd016ba",
																"typeString": "literal_string \"Max 25% sell tax\""
															}
														],
														"id": 2197,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9576:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9576:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2205,
												"nodeType": "ExpressionStatement",
												"src": "9576:53:6"
											},
											{
												"expression": {
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2206,
														"name": "taxRates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "9639:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
															"typeString": "struct MemeCoin.TaxRates storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2208,
																"name": "buyLp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2177,
																"src": "9659:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 2209,
																"name": "buyEco",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2179,
																"src": "9666:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 2210,
																"name": "sellLp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2181,
																"src": "9674:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 2211,
																"name": "sellEco",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2183,
																"src": "9682:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															],
															"id": 2207,
															"name": "TaxRates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "9650:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TaxRates_$1249_storage_ptr_$",
																"typeString": "type(struct MemeCoin.TaxRates storage pointer)"
															}
														},
														"id": 2212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9650:40:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TaxRates_$1249_memory_ptr",
															"typeString": "struct MemeCoin.TaxRates memory"
														}
													},
													"src": "9639:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
														"typeString": "struct MemeCoin.TaxRates storage ref"
													}
												},
												"id": 2214,
												"nodeType": "ExpressionStatement",
												"src": "9639:51:6"
											}
										]
									},
									"functionSelector": "1569d181",
									"id": 2216,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2185,
												"name": "onlyOwner",
												"nameLocations": [
													"9496:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "9496:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9496:9:6"
										}
									],
									"name": "setTaxRates",
									"nameLocation": "9415:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "buyLp",
												"nameLocation": "9434:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "9427:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2176,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9427:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "buyEco",
												"nameLocation": "9448:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "9441:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2178,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9441:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "sellLp",
												"nameLocation": "9463:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "9456:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2180,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9456:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "sellEco",
												"nameLocation": "9478:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "9471:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2182,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9471:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9426:60:6"
									},
									"returnParameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9506:0:6"
									},
									"scope": 2486,
									"src": "9406:291:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "9763:42:6",
										"statements": [
											{
												"expression": {
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2223,
														"name": "swapThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "9773:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2224,
														"name": "threshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2218,
														"src": "9789:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9773:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2226,
												"nodeType": "ExpressionStatement",
												"src": "9773:25:6"
											}
										]
									},
									"functionSelector": "960bfe04",
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2221,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2220,
												"name": "onlyOwner",
												"nameLocations": [
													"9753:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "9753:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9753:9:6"
										}
									],
									"name": "setThreshold",
									"nameLocation": "9712:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "threshold",
												"nameLocation": "9733:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "9725:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9725:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9724:19:6"
									},
									"returnParameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9763:0:6"
									},
									"scope": 2486,
									"src": "9703:102:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2251,
										"nodeType": "Block",
										"src": "9888:93:6",
										"statements": [
											{
												"expression": {
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2237,
															"name": "cooldown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "9898:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																"typeString": "struct MemeCoin.CooldownConfig storage ref"
															}
														},
														"id": 2239,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9907:7:6",
														"memberName": "enabled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1268,
														"src": "9898:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2240,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2230,
														"src": "9917:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9898:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2242,
												"nodeType": "ExpressionStatement",
												"src": "9898:26:6"
											},
											{
												"expression": {
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2243,
															"name": "cooldown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "9934:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																"typeString": "struct MemeCoin.CooldownConfig storage ref"
															}
														},
														"id": 2245,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9943:8:6",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1270,
														"src": "9934:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 2248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2246,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2232,
															"src": "9954:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9965:9:6",
															"subdenomination": "minutes",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "1"
														},
														"src": "9954:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "9934:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "9934:40:6"
											}
										]
									},
									"functionSelector": "fe6b751e",
									"id": 2252,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2235,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2234,
												"name": "onlyOwner",
												"nameLocations": [
													"9878:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "9878:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9878:9:6"
										}
									],
									"name": "configureCooldown",
									"nameLocation": "9820:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "9843:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "9838:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9838:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "9859:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "9852:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2231,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "9852:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9837:31:6"
									},
									"returnParameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9888:0:6"
									},
									"scope": 2486,
									"src": "9811:170:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2280,
										"nodeType": "Block",
										"src": "10074:173:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2262,
																"name": "triggerPercent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2256,
																"src": "10092:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2263,
																"name": "BP_DIVISOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1240,
																"src": "10110:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10092:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070657263656e74616765",
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10122:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04",
																"typeString": "literal_string \"Invalid percentage\""
															},
															"value": "Invalid percentage"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04",
																"typeString": "literal_string \"Invalid percentage\""
															}
														],
														"id": 2261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10084:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10084:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2267,
												"nodeType": "ExpressionStatement",
												"src": "10084:59:6"
											},
											{
												"expression": {
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2268,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "10153:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																"typeString": "struct MemeCoin.DiamondFloor storage ref"
															}
														},
														"id": 2270,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10166:7:6",
														"memberName": "enabled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1280,
														"src": "10153:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2271,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2254,
														"src": "10176:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10153:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2273,
												"nodeType": "ExpressionStatement",
												"src": "10153:30:6"
											},
											{
												"expression": {
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2274,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "10193:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																"typeString": "struct MemeCoin.DiamondFloor storage ref"
															}
														},
														"id": 2276,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10206:17:6",
														"memberName": "triggerPercentage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1282,
														"src": "10193:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2277,
														"name": "triggerPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2256,
														"src": "10226:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "10193:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2279,
												"nodeType": "ExpressionStatement",
												"src": "10193:47:6"
											}
										]
									},
									"functionSelector": "fe0bb982",
									"id": 2281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2259,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2258,
												"name": "onlyOwner",
												"nameLocations": [
													"10064:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "10064:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "10064:9:6"
										}
									],
									"name": "configureDiamondFloor",
									"nameLocation": "9996:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "10023:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "10018:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10018:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "triggerPercent",
												"nameLocation": "10039:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "10032:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2255,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "10032:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10017:37:6"
									},
									"returnParameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10074:0:6"
									},
									"scope": 2486,
									"src": "9987:260:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2296,
										"nodeType": "Block",
										"src": "10321:43:6",
										"statements": [
											{
												"expression": {
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2290,
															"name": "isExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "10331:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2292,
														"indexExpression": {
															"id": 2291,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "10340:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10331:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2293,
														"name": "exempt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2285,
														"src": "10351:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10331:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2295,
												"nodeType": "ExpressionStatement",
												"src": "10331:26:6"
											}
										]
									},
									"functionSelector": "9fde54f5",
									"id": 2297,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2287,
												"name": "onlyOwner",
												"nameLocations": [
													"10311:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "10311:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "10311:9:6"
										}
									],
									"name": "setExempt",
									"nameLocation": "10262:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10280:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "10272:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10272:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "exempt",
												"nameLocation": "10294:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "10289:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10289:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10271:30:6"
									},
									"returnParameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10321:0:6"
									},
									"scope": 2486,
									"src": "10253:111:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2321,
										"nodeType": "Block",
										"src": "10400:170:6",
										"statements": [
											{
												"expression": {
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2300,
														"name": "pairAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "10410:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2311,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "10517:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MemeCoin_$2486",
																			"typeString": "contract MemeCoin"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MemeCoin_$2486",
																			"typeString": "contract MemeCoin"
																		}
																	],
																	"id": 2310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10509:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2309,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10509:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10509:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2314,
																				"name": "routerAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1294,
																				"src": "10541:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2313,
																			"name": "IUniswapV2Router",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1190,
																			"src": "10524:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router_$1190_$",
																				"typeString": "type(contract IUniswapV2Router)"
																			}
																		},
																		"id": 2315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10524:31:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router_$1190",
																			"typeString": "contract IUniswapV2Router"
																		}
																	},
																	"id": 2316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10556:4:6",
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1151,
																	"src": "10524:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10524:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2303,
																						"name": "routerAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1294,
																						"src": "10459:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2302,
																					"name": "IUniswapV2Router",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1190,
																					"src": "10442:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router_$1190_$",
																						"typeString": "type(contract IUniswapV2Router)"
																					}
																				},
																				"id": 2304,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10442:31:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router_$1190",
																					"typeString": "contract IUniswapV2Router"
																				}
																			},
																			"id": 2305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10474:7:6",
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1146,
																			"src": "10442:39:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10442:41:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2301,
																	"name": "IUniswapV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "10424:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1200_$",
																		"typeString": "type(contract IUniswapV2Factory)"
																	}
																},
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10424:60:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Factory_$1200",
																	"typeString": "contract IUniswapV2Factory"
																}
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10498:10:6",
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1199,
															"src": "10424:84:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 2318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10424:139:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10410:153:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2320,
												"nodeType": "ExpressionStatement",
												"src": "10410:153:6"
											}
										]
									},
									"id": 2322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupPair",
									"nameLocation": "10379:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10389:2:6"
									},
									"returnParameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10400:0:6"
									},
									"scope": 2486,
									"src": "10370:200:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2381,
										"nodeType": "Block",
										"src": "10627:387:6",
										"statements": [
											{
												"assignments": [
													2331
												],
												"declarations": [
													{
														"constant": false,
														"id": 2331,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "10654:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2381,
														"src": "10637:21:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2329,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10637:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2330,
															"nodeType": "ArrayTypeName",
															"src": "10637:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2337,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10675:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10661:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2332,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10665:7:6",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2333,
															"nodeType": "ArrayTypeName",
															"src": "10665:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10661:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10637:40:6"
											},
											{
												"expression": {
													"id": 2345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2338,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2331,
															"src": "10687:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2340,
														"indexExpression": {
															"hexValue": "30",
															"id": 2339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10692:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10687:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2343,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "10705:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MemeCoin_$2486",
																	"typeString": "contract MemeCoin"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MemeCoin_$2486",
																	"typeString": "contract MemeCoin"
																}
															],
															"id": 2342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10697:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2341,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10697:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 2344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10697:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10687:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2346,
												"nodeType": "ExpressionStatement",
												"src": "10687:23:6"
											},
											{
												"expression": {
													"id": 2355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2347,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2331,
															"src": "10720:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2349,
														"indexExpression": {
															"hexValue": "31",
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10725:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10720:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 2351,
																		"name": "routerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "10747:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2350,
																	"name": "IUniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "10730:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router_$1190_$",
																		"typeString": "type(contract IUniswapV2Router)"
																	}
																},
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10730:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router_$1190",
																	"typeString": "contract IUniswapV2Router"
																}
															},
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10762:4:6",
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1151,
															"src": "10730:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 2354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10730:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10720:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2356,
												"nodeType": "ExpressionStatement",
												"src": "10720:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2360,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10796:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemeCoin_$2486",
																		"typeString": "contract MemeCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemeCoin_$2486",
																		"typeString": "contract MemeCoin"
																	}
																],
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10788:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2358,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10788:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10788:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2362,
															"name": "routerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "10803:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2363,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2324,
															"src": "10818:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2357,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "10779:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10779:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2365,
												"nodeType": "ExpressionStatement",
												"src": "10779:46:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2324,
															"src": "10902:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10922:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2372,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2331,
															"src": "10937:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 2375,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10963:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemeCoin_$2486",
																		"typeString": "contract MemeCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemeCoin_$2486",
																		"typeString": "contract MemeCoin"
																	}
																],
																"id": 2374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10955:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2373,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10955:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10955:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2377,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10982:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10988:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "10982:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2367,
																	"name": "routerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "10852:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2366,
																"name": "IUniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1190,
																"src": "10835:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router_$1190_$",
																	"typeString": "type(contract IUniswapV2Router)"
																}
															},
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10835:31:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router_$1190",
																"typeString": "contract IUniswapV2Router"
															}
														},
														"id": 2369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10867:21:6",
														"memberName": "swapExactTokensForETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1189,
														"src": "10835:53:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
														}
													},
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10835:172:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 2380,
												"nodeType": "ExpressionStatement",
												"src": "10835:172:6"
											}
										]
									},
									"id": 2382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_swapTokensForETH",
									"nameLocation": "10585:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10611:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "10603:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10603:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10602:16:6"
									},
									"returnParameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10627:0:6"
									},
									"scope": 2486,
									"src": "10576:438:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2422,
										"nodeType": "Block",
										"src": "11091:338:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2392,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11118:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemeCoin_$2486",
																		"typeString": "contract MemeCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemeCoin_$2486",
																		"typeString": "contract MemeCoin"
																	}
																],
																"id": 2391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11110:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2390,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11110:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11110:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2394,
															"name": "routerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "11125:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2395,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2384,
															"src": "11140:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2389,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "11101:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11101:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2397,
												"nodeType": "ExpressionStatement",
												"src": "11101:51:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2406,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11249:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemeCoin_$2486",
																		"typeString": "contract MemeCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemeCoin_$2486",
																		"typeString": "contract MemeCoin"
																	}
																],
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11241:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2404,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11241:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11241:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2408,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2384,
															"src": "11268:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 2409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11293:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11308:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2411,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "11323:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11323:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2413,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "11344:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11350:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "11344:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2399,
																		"name": "routerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "11179:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2398,
																	"name": "IUniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "11162:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router_$1190_$",
																		"typeString": "type(contract IUniswapV2Router)"
																	}
																},
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11162:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router_$1190",
																	"typeString": "contract IUniswapV2Router"
																}
															},
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11194:15:6",
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1172,
															"src": "11162:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 2403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2402,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2386,
																"src": "11217:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "11162:65:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 2415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11162:207:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 2416,
												"nodeType": "ExpressionStatement",
												"src": "11162:207:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2418,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2384,
															"src": "11399:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2419,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2386,
															"src": "11412:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2417,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "11384:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11384:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2421,
												"nodeType": "EmitStatement",
												"src": "11379:43:6"
											}
										]
									},
									"id": 2423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addLiquidity",
									"nameLocation": "11029:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "11051:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "11043:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11043:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "11072:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "11064:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11064:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11042:40:6"
									},
									"returnParameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11091:0:6"
									},
									"scope": 2486,
									"src": "11020:409:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2436,
										"nodeType": "Block",
										"src": "11491:77:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2433,
															"name": "BP_DIVISOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "11550:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2430,
																	"name": "maxWalletPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "11525:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2428,
																	"name": "TOTAL_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "11508:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11521:3:6",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "11508:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11508:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11546:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "11508:41:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11508:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2427,
												"id": 2435,
												"nodeType": "Return",
												"src": "11501:60:6"
											}
										]
									},
									"functionSelector": "8f9a55c0",
									"id": 2437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_maxWalletSize",
									"nameLocation": "11444:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11458:2:6"
									},
									"returnParameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "11482:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11482:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11481:9:6"
									},
									"scope": 2486,
									"src": "11435:133:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2457,
										"nodeType": "Block",
										"src": "11629:140:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11646:9:6",
															"subExpression": {
																"id": 2442,
																"name": "swapping",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "11647:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2446,
																		"name": "accumulatedEco",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1264,
																		"src": "11689:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2444,
																		"name": "accumulatedLp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1262,
																		"src": "11671:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11685:3:6",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 175,
																	"src": "11671:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11671:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2448,
																"name": "swapThreshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "11708:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11671:50:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "11646:75:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2451,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11737:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11741:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11737:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2453,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "11751:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "11737:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11646:116:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2441,
												"id": 2456,
												"nodeType": "Return",
												"src": "11639:123:6"
											}
										]
									},
									"id": 2458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_shouldSwapBack",
									"nameLocation": "11583:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11598:2:6"
									},
									"returnParameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "11623:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2439,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11623:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11622:6:6"
									},
									"scope": 2486,
									"src": "11574:195:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2480,
										"nodeType": "Block",
										"src": "11846:151:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2466,
																"name": "percentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2460,
																"src": "11864:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 2467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11878:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "11864:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61782031252077616c6c6574206c696d6974",
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11883:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16a37e5ef25bc279f87ddedf10d3060d884d4b4915de8aaf5d2288b066e1e24b",
																"typeString": "literal_string \"Max 1% wallet limit\""
															},
															"value": "Max 1% wallet limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16a37e5ef25bc279f87ddedf10d3060d884d4b4915de8aaf5d2288b066e1e24b",
																"typeString": "literal_string \"Max 1% wallet limit\""
															}
														],
														"id": 2465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11856:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11856:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2471,
												"nodeType": "ExpressionStatement",
												"src": "11856:49:6"
											},
											{
												"expression": {
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2472,
														"name": "maxWalletPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "11915:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2473,
														"name": "percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2460,
														"src": "11937:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11915:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2475,
												"nodeType": "ExpressionStatement",
												"src": "11915:32:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2477,
															"name": "percentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2460,
															"src": "11979:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2476,
														"name": "MaxWalletUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "11962:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11962:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2479,
												"nodeType": "EmitStatement",
												"src": "11957:33:6"
											}
										]
									},
									"functionSelector": "7a845ece",
									"id": 2481,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2463,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2462,
												"name": "onlyOwner",
												"nameLocations": [
													"11836:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "11836:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "11836:9:6"
										}
									],
									"name": "setMaxWalletPercentage",
									"nameLocation": "11784:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "percentage",
												"nameLocation": "11815:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2481,
												"src": "11807:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11807:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11806:20:6"
									},
									"returnParameters": {
										"id": 2464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11846:0:6"
									},
									"scope": 2486,
									"src": "11775:222:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2484,
										"nodeType": "Block",
										"src": "12030:2:6",
										"statements": []
									},
									"id": 2485,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12010:2:6"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12030:0:6"
									},
									"scope": 2486,
									"src": "12003:29:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2487,
							"src": "1203:10831:6",
							"usedErrors": [],
							"usedEvents": [
								325,
								1023,
								1032,
								1307,
								1313,
								1319,
								1323
							]
						}
					],
					"src": "32:12002:6"
				},
				"id": 6
			}
		}
	}
}